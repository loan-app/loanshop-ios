(function(global) {

global.__DEV__ = true;

global.__BUNDLE_START_TIME__ = global.nativePerformanceNow ? global.nativePerformanceNow() : Date.now();
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

'use strict';

function _toConsumableArray(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }return arr2;
  } else {
    return Array.from(arr);
  }
}

global.require = _require;
global.__d = define;

var modules = Object.create(null);
if (__DEV__) {
  var verboseNamesToModuleIds = Object.create(null);
}

function define(factory, moduleId, dependencyMap) {
  if (moduleId in modules) {
    return;
  }
  modules[moduleId] = {
    dependencyMap: dependencyMap,
    exports: undefined,
    factory: factory,
    hasError: false,
    isInitialized: false };

  if (__DEV__) {
    modules[moduleId].hot = createHotReloadingObject();

    var verboseName = arguments[3];
    if (verboseName) {
      modules[moduleId].verboseName = verboseName;
      verboseNamesToModuleIds[verboseName] = moduleId;
    }
  }
}

function _require(moduleId) {
  if (__DEV__ && typeof moduleId === 'string') {
    var verboseName = moduleId;
    moduleId = verboseNamesToModuleIds[verboseName];
    if (moduleId == null) {
      throw new Error('Unknown named module: \'' + verboseName + '\'');
    } else {
      console.warn('Requiring module \'' + verboseName + '\' by name is only supported for ' + 'debugging purposes and will BREAK IN PRODUCTION!');
    }
  }

  var moduleIdReallyIsNumber = moduleId;
  var module = modules[moduleIdReallyIsNumber];
  return module && module.isInitialized ? module.exports : guardedLoadModule(moduleIdReallyIsNumber, module);
}

_require.async = function (moduleId) {
  return Promise.resolve().then(function () {
    return _require(moduleId);
  });
};

var inGuard = false;
function guardedLoadModule(moduleId, module) {
  if (!inGuard && global.ErrorUtils) {
    inGuard = true;
    var returnValue = void 0;
    try {
      returnValue = loadModuleImplementation(moduleId, module);
    } catch (e) {
      global.ErrorUtils.reportFatalError(e);
    }
    inGuard = false;
    return returnValue;
  } else {
    return loadModuleImplementation(moduleId, module);
  }
}

var ID_MASK_SHIFT = 16;
var LOCAL_ID_MASK = ~0 >>> ID_MASK_SHIFT;

function loadModuleImplementation(moduleId, module) {
  var nativeRequire = global.nativeRequire;
  if (!module && nativeRequire) {
    var bundleId = moduleId >>> ID_MASK_SHIFT;
    var localId = moduleId & LOCAL_ID_MASK;
    nativeRequire(localId, bundleId);
    module = modules[moduleId];
  }

  if (!module) {
    throw unknownModuleError(moduleId);
  }

  if (module.hasError) {
    throw moduleThrewError(moduleId, module.error);
  }

  if (__DEV__) {
    var Systrace = _require.Systrace;
  }

  module.isInitialized = true;
  var exports = module.exports = {};var _module = module;var factory = _module.factory,
      dependencyMap = _module.dependencyMap;
  try {
    if (__DEV__) {
      Systrace.beginEvent('JS_require_' + (module.verboseName || moduleId));
    }

    var moduleObject = { exports: exports };
    if (__DEV__ && module.hot) {
      moduleObject.hot = module.hot;
    }

    factory(global, _require, moduleObject, exports, dependencyMap);

    if (!__DEV__) {
      module.factory = undefined;
      module.dependencyMap = undefined;
    }

    if (__DEV__) {
      Systrace.endEvent();
    }
    return module.exports = moduleObject.exports;
  } catch (e) {
    module.hasError = true;
    module.error = e;
    module.isInitialized = false;
    module.exports = undefined;
    throw e;
  }
}

function unknownModuleError(id) {
  var message = 'Requiring unknown module "' + id + '".';
  if (__DEV__) {
    message += 'If you are sure the module is there, try restarting Metro Bundler. ' + 'You may also want to run `yarn`, or `npm install` (depending on your environment).';
  }
  return Error(message);
}

function moduleThrewError(id, error) {
  var displayName = __DEV__ && modules[id] && modules[id].verboseName || id;
  return Error('Requiring module "' + displayName + '", which threw an exception: ' + error);
}

if (__DEV__) {
  _require.Systrace = { beginEvent: function beginEvent() {}, endEvent: function endEvent() {} };

  _require.getModules = function () {
    return modules;
  };

  var createHotReloadingObject = function createHotReloadingObject() {
    var hot = {
      acceptCallback: null,
      accept: function accept(callback) {
        hot.acceptCallback = callback;
      } };

    return hot;
  };

  var acceptAll = function acceptAll(dependentModules, inverseDependencies) {
    if (!dependentModules || dependentModules.length === 0) {
      return true;
    }

    var notAccepted = dependentModules.filter(function (module) {
      return !accept(module, undefined, inverseDependencies);
    });

    var parents = [];
    for (var i = 0; i < notAccepted.length; i++) {
      if (inverseDependencies[notAccepted[i]].length === 0) {
        return false;
      }

      parents.push.apply(parents, _toConsumableArray(inverseDependencies[notAccepted[i]]));
    }

    return acceptAll(parents, inverseDependencies);
  };

  var accept = function accept(id, factory, inverseDependencies) {
    var mod = modules[id];

    if (!mod && factory) {
      define(factory, id);
      return true;
    }var hot = mod.hot;
    if (!hot) {
      console.warn('Cannot accept module because Hot Module Replacement ' + 'API was not installed.');

      return false;
    }

    if (factory) {
      mod.factory = factory;
    }
    mod.hasError = false;
    mod.isInitialized = false;
    _require(id);

    if (hot.acceptCallback) {
      hot.acceptCallback();
      return true;
    } else {
      if (!inverseDependencies) {
        throw new Error('Undefined `inverseDependencies`');
      }

      return acceptAll(inverseDependencies[id], inverseDependencies);
    }
  };

  global.__accept = accept;
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

Object.assign = function (target, sources) {
  if (__DEV__) {
    if (target == null) {
      throw new TypeError('Object.assign target cannot be null or undefined');
    }
    if (typeof target !== 'object' && typeof target !== 'function') {
      throw new TypeError('In this environment the target of assign MUST be an object. ' + 'This error is a performance optimization and not spec compliant.');
    }
  }

  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
    var nextSource = arguments[nextIndex];
    if (nextSource == null) {
      continue;
    }

    if (__DEV__) {
      if (typeof nextSource !== 'object' && typeof nextSource !== 'function') {
        throw new TypeError('In this environment the sources for assign MUST be an object. ' + 'This error is a performance optimization and not spec compliant.');
      }
    }

    for (var key in nextSource) {
      if (__DEV__) {
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        if (!hasOwnProperty.call(nextSource, key)) {
          throw new TypeError('One of the sources for assign has an enumerable key on the ' + 'prototype chain. Are you trying to assign a prototype property? ' + 'We don\'t allow it, as this is an edge case that we do not support. ' + 'This error is a performance optimization and not spec compliant.');
        }
      }
      target[key] = nextSource[key];
    }
  }

  return target;
};
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {
var inspect = function () {

  function inspect(obj, opts) {
    var ctx = {
      seen: [],
      stylize: stylizeNoColor
    };
    return formatValue(ctx, obj, opts.depth);
  }

  function stylizeNoColor(str, styleType) {
    return str;
  }

  function arrayToHash(array) {
    var hash = {};

    array.forEach(function (val, idx) {
      hash[val] = true;
    });

    return hash;
  }

  function formatValue(ctx, value, recurseTimes) {
    var primitive = formatPrimitive(ctx, value);
    if (primitive) {
      return primitive;
    }

    var keys = Object.keys(value);
    var visibleKeys = arrayToHash(keys);

    if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
      return formatError(value);
    }

    if (keys.length === 0) {
      if (isFunction(value)) {
        var name = value.name ? ': ' + value.name : '';
        return ctx.stylize('[Function' + name + ']', 'special');
      }
      if (isRegExp(value)) {
        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
      }
      if (isDate(value)) {
        return ctx.stylize(Date.prototype.toString.call(value), 'date');
      }
      if (isError(value)) {
        return formatError(value);
      }
    }

    var base = '',
        array = false,
        braces = ['{', '}'];

    if (isArray(value)) {
      array = true;
      braces = ['[', ']'];
    }

    if (isFunction(value)) {
      var n = value.name ? ': ' + value.name : '';
      base = ' [Function' + n + ']';
    }

    if (isRegExp(value)) {
      base = ' ' + RegExp.prototype.toString.call(value);
    }

    if (isDate(value)) {
      base = ' ' + Date.prototype.toUTCString.call(value);
    }

    if (isError(value)) {
      base = ' ' + formatError(value);
    }

    if (keys.length === 0 && (!array || value.length == 0)) {
      return braces[0] + base + braces[1];
    }

    if (recurseTimes < 0) {
      if (isRegExp(value)) {
        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
      } else {
        return ctx.stylize('[Object]', 'special');
      }
    }

    ctx.seen.push(value);

    var output;
    if (array) {
      output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
    } else {
      output = keys.map(function (key) {
        return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
      });
    }

    ctx.seen.pop();

    return reduceToSingleString(output, base, braces);
  }

  function formatPrimitive(ctx, value) {
    if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');
    if (isString(value)) {
      var simple = "'" + JSON.stringify(value).replace(/^"|"$/g, '').replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
      return ctx.stylize(simple, 'string');
    }
    if (isNumber(value)) return ctx.stylize('' + value, 'number');
    if (isBoolean(value)) return ctx.stylize('' + value, 'boolean');

    if (isNull(value)) return ctx.stylize('null', 'null');
  }

  function formatError(value) {
    return '[' + Error.prototype.toString.call(value) + ']';
  }

  function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
    var output = [];
    for (var i = 0, l = value.length; i < l; ++i) {
      if (hasOwnProperty(value, String(i))) {
        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));
      } else {
        output.push('');
      }
    }
    keys.forEach(function (key) {
      if (!key.match(/^\d+$/)) {
        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));
      }
    });
    return output;
  }

  function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
    var name, str, desc;
    desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
    if (desc.get) {
      if (desc.set) {
        str = ctx.stylize('[Getter/Setter]', 'special');
      } else {
        str = ctx.stylize('[Getter]', 'special');
      }
    } else {
      if (desc.set) {
        str = ctx.stylize('[Setter]', 'special');
      }
    }
    if (!hasOwnProperty(visibleKeys, key)) {
      name = '[' + key + ']';
    }
    if (!str) {
      if (ctx.seen.indexOf(desc.value) < 0) {
        if (isNull(recurseTimes)) {
          str = formatValue(ctx, desc.value, null);
        } else {
          str = formatValue(ctx, desc.value, recurseTimes - 1);
        }
        if (str.indexOf('\n') > -1) {
          if (array) {
            str = str.split('\n').map(function (line) {
              return '  ' + line;
            }).join('\n').substr(2);
          } else {
            str = '\n' + str.split('\n').map(function (line) {
              return '   ' + line;
            }).join('\n');
          }
        }
      } else {
        str = ctx.stylize('[Circular]', 'special');
      }
    }
    if (isUndefined(name)) {
      if (array && key.match(/^\d+$/)) {
        return str;
      }
      name = JSON.stringify('' + key);
      if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
        name = name.substr(1, name.length - 2);
        name = ctx.stylize(name, 'name');
      } else {
        name = name.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
        name = ctx.stylize(name, 'string');
      }
    }

    return name + ': ' + str;
  }

  function reduceToSingleString(output, base, braces) {
    var numLinesEst = 0;
    var length = output.reduce(function (prev, cur) {
      numLinesEst++;
      if (cur.indexOf('\n') >= 0) numLinesEst++;
      return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
    }, 0);

    if (length > 60) {
      return braces[0] + (base === '' ? '' : base + '\n ') + ' ' + output.join(',\n  ') + ' ' + braces[1];
    }

    return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
  }

  function isArray(ar) {
    return Array.isArray(ar);
  }

  function isBoolean(arg) {
    return typeof arg === 'boolean';
  }

  function isNull(arg) {
    return arg === null;
  }

  function isNullOrUndefined(arg) {
    return arg == null;
  }

  function isNumber(arg) {
    return typeof arg === 'number';
  }

  function isString(arg) {
    return typeof arg === 'string';
  }

  function isSymbol(arg) {
    return typeof arg === 'symbol';
  }

  function isUndefined(arg) {
    return arg === void 0;
  }

  function isRegExp(re) {
    return isObject(re) && objectToString(re) === '[object RegExp]';
  }

  function isObject(arg) {
    return typeof arg === 'object' && arg !== null;
  }

  function isDate(d) {
    return isObject(d) && objectToString(d) === '[object Date]';
  }

  function isError(e) {
    return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);
  }

  function isFunction(arg) {
    return typeof arg === 'function';
  }

  function isPrimitive(arg) {
    return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || typeof arg === 'undefined';
  }

  function objectToString(o) {
    return Object.prototype.toString.call(o);
  }

  function hasOwnProperty(obj, prop) {
    return Object.prototype.hasOwnProperty.call(obj, prop);
  }

  return inspect;
}();

var OBJECT_COLUMN_NAME = '(index)';
var LOG_LEVELS = {
  trace: 0,
  info: 1,
  warn: 2,
  error: 3
};
var INSPECTOR_LEVELS = [];
INSPECTOR_LEVELS[LOG_LEVELS.trace] = 'debug';
INSPECTOR_LEVELS[LOG_LEVELS.info] = 'log';
INSPECTOR_LEVELS[LOG_LEVELS.warn] = 'warning';
INSPECTOR_LEVELS[LOG_LEVELS.error] = 'error';

var INSPECTOR_FRAMES_TO_SKIP = __DEV__ ? 2 : 1;

if (global.nativeLoggingHook) {
  function getNativeLogFunction(level) {
    return function () {
      var str = void 0;
      if (arguments.length === 1 && typeof arguments[0] === 'string') {
        str = arguments[0];
      } else {
        str = Array.prototype.map.call(arguments, function (arg) {
          return inspect(arg, { depth: 10 });
        }).join(', ');
      }

      var logLevel = level;
      if (str.slice(0, 9) === 'Warning: ' && logLevel >= LOG_LEVELS.error) {
        logLevel = LOG_LEVELS.warn;
      }
      if (global.__inspectorLog) {
        global.__inspectorLog(INSPECTOR_LEVELS[logLevel], str, [].slice.call(arguments), INSPECTOR_FRAMES_TO_SKIP);
      }
      global.nativeLoggingHook(str, logLevel);
    };
  }

  function repeat(element, n) {
    return Array.apply(null, Array(n)).map(function () {
      return element;
    });
  }

  function consoleTablePolyfill(rows) {
    if (!Array.isArray(rows)) {
      var data = rows;
      rows = [];
      for (var key in data) {
        if (data.hasOwnProperty(key)) {
          var row = data[key];
          row[OBJECT_COLUMN_NAME] = key;
          rows.push(row);
        }
      }
    }
    if (rows.length === 0) {
      global.nativeLoggingHook('', LOG_LEVELS.info);
      return;
    }

    var columns = Object.keys(rows[0]).sort();
    var stringRows = [];
    var columnWidths = [];

    columns.forEach(function (k, i) {
      columnWidths[i] = k.length;
      for (var j = 0; j < rows.length; j++) {
        var cellStr = (rows[j][k] || '?').toString();
        stringRows[j] = stringRows[j] || [];
        stringRows[j][i] = cellStr;
        columnWidths[i] = Math.max(columnWidths[i], cellStr.length);
      }
    });

    function joinRow(row, space) {
      var cells = row.map(function (cell, i) {
        var extraSpaces = repeat(' ', columnWidths[i] - cell.length).join('');
        return cell + extraSpaces;
      });
      space = space || ' ';
      return cells.join(space + '|' + space);
    }

    var separators = columnWidths.map(function (columnWidth) {
      return repeat('-', columnWidth).join('');
    });
    var separatorRow = joinRow(separators, '-');
    var header = joinRow(columns);
    var table = [header, separatorRow];

    for (var i = 0; i < rows.length; i++) {
      table.push(joinRow(stringRows[i]));
    }

    global.nativeLoggingHook('\n' + table.join('\n'), LOG_LEVELS.info);
  }

  var originalConsole = global.console;
  global.console = {
    error: getNativeLogFunction(LOG_LEVELS.error),
    info: getNativeLogFunction(LOG_LEVELS.info),
    log: getNativeLogFunction(LOG_LEVELS.info),
    warn: getNativeLogFunction(LOG_LEVELS.warn),
    trace: getNativeLogFunction(LOG_LEVELS.trace),
    debug: getNativeLogFunction(LOG_LEVELS.trace),
    table: consoleTablePolyfill
  };

  if (__DEV__ && originalConsole) {
    var descriptor = Object.getOwnPropertyDescriptor(global, 'console');
    if (descriptor) {
      Object.defineProperty(global, 'originalConsole', descriptor);
    }

    Object.keys(console).forEach(function (methodName) {
      var reactNativeMethod = console[methodName];
      if (originalConsole[methodName]) {
        console[methodName] = function () {
          originalConsole[methodName].apply(originalConsole, arguments);
          reactNativeMethod.apply(console, arguments);
        };
      }
    });
  }
} else if (!global.console) {
  var log = global.print || function consoleLoggingStub() {};
  global.console = {
    error: log,
    info: log,
    log: log,
    warn: log,
    trace: log,
    debug: log,
    table: log
  };
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

var _inGuard = 0;

var _globalHandler = function onError(e) {
  throw e;
};

var ErrorUtils = {
  setGlobalHandler: function setGlobalHandler(fun) {
    _globalHandler = fun;
  },
  getGlobalHandler: function getGlobalHandler() {
    return _globalHandler;
  },
  reportError: function reportError(error) {
    _globalHandler && _globalHandler(error);
  },
  reportFatalError: function reportFatalError(error) {
    _globalHandler && _globalHandler(error, true);
  },
  applyWithGuard: function applyWithGuard(fun, context, args) {
    try {
      _inGuard++;
      return fun.apply(context, args);
    } catch (e) {
      ErrorUtils.reportError(e);
    } finally {
      _inGuard--;
    }
    return null;
  },
  applyWithGuardIfNeeded: function applyWithGuardIfNeeded(fun, context, args) {
    if (ErrorUtils.inGuard()) {
      return fun.apply(context, args);
    } else {
      ErrorUtils.applyWithGuard(fun, context, args);
    }
    return null;
  },
  inGuard: function inGuard() {
    return _inGuard;
  },
  guard: function guard(fun, name, context) {
    if (typeof fun !== 'function') {
      console.warn('A function must be passed to ErrorUtils.guard, got ', fun);
      return null;
    }
    name = name || fun.name || '<generated guard>';
    function guarded() {
      return ErrorUtils.applyWithGuard(fun, context || this, arguments, null, name);
    }

    return guarded;
  }
};

global.ErrorUtils = ErrorUtils;
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

if (Number.EPSILON === undefined) {
  Object.defineProperty(Number, 'EPSILON', {
    value: Math.pow(2, -52)
  });
}
if (Number.MAX_SAFE_INTEGER === undefined) {
  Object.defineProperty(Number, 'MAX_SAFE_INTEGER', {
    value: Math.pow(2, 53) - 1
  });
}
if (Number.MIN_SAFE_INTEGER === undefined) {
  Object.defineProperty(Number, 'MIN_SAFE_INTEGER', {
    value: -(Math.pow(2, 53) - 1)
  });
}
if (!Number.isNaN) {
  var globalIsNaN = global.isNaN;
  Object.defineProperty(Number, 'isNaN', {
    configurable: true,
    enumerable: false,
    value: function isNaN(value) {
      return typeof value === 'number' && globalIsNaN(value);
    },
    writable: true
  });
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

if (!String.prototype.startsWith) {
  String.prototype.startsWith = function (search) {
    'use strict';

    if (this == null) {
      throw TypeError();
    }
    var string = String(this);
    var pos = arguments.length > 1 ? Number(arguments[1]) || 0 : 0;
    var start = Math.min(Math.max(pos, 0), string.length);
    return string.indexOf(String(search), pos) === start;
  };
}

if (!String.prototype.endsWith) {
  String.prototype.endsWith = function (search) {
    'use strict';

    if (this == null) {
      throw TypeError();
    }
    var string = String(this);
    var stringLength = string.length;
    var searchString = String(search);
    var pos = arguments.length > 1 ? Number(arguments[1]) || 0 : stringLength;
    var end = Math.min(Math.max(pos, 0), stringLength);
    var start = end - searchString.length;
    if (start < 0) {
      return false;
    }
    return string.lastIndexOf(searchString, start) === start;
  };
}

if (!String.prototype.repeat) {
  String.prototype.repeat = function (count) {
    'use strict';

    if (this == null) {
      throw TypeError();
    }
    var string = String(this);
    count = Number(count) || 0;
    if (count < 0 || count === Infinity) {
      throw RangeError();
    }
    if (count === 1) {
      return string;
    }
    var result = '';
    while (count) {
      if (count & 1) {
        result += string;
      }
      if (count >>= 1) {
        string += string;
      }
    }
    return result;
  };
}

if (!String.prototype.includes) {
  String.prototype.includes = function (search, start) {
    'use strict';

    if (typeof start !== 'number') {
      start = 0;
    }

    if (start + search.length > this.length) {
      return false;
    } else {
      return this.indexOf(search, start) !== -1;
    }
  };
}

if (!String.prototype.codePointAt) {
  String.prototype.codePointAt = function (position) {
    if (this == null) {
      throw TypeError();
    }
    var string = String(this);
    var size = string.length;

    var index = position ? Number(position) : 0;
    if (Number.isNaN(index)) {
      index = 0;
    }

    if (index < 0 || index >= size) {
      return undefined;
    }

    var first = string.charCodeAt(index);
    var second;
    if (first >= 0xd800 && first <= 0xdbff && size > index + 1) {
        second = string.charCodeAt(index + 1);
        if (second >= 0xdc00 && second <= 0xdfff) {
          return (first - 0xd800) * 0x400 + second - 0xdc00 + 0x10000;
        }
      }
    return first;
  };
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {
function findIndex(predicate, context) {
  if (this == null) {
    throw new TypeError('Array.prototype.findIndex called on null or undefined');
  }
  if (typeof predicate !== 'function') {
    throw new TypeError('predicate must be a function');
  }
  var list = Object(this);
  var length = list.length >>> 0;
  for (var i = 0; i < length; i++) {
    if (predicate.call(context, list[i], i, list)) {
      return i;
    }
  }
  return -1;
}

if (!Array.prototype.findIndex) {
  Object.defineProperty(Array.prototype, 'findIndex', {
    enumerable: false,
    writable: true,
    configurable: true,
    value: findIndex
  });
}

if (!Array.prototype.find) {
  Object.defineProperty(Array.prototype, 'find', {
    enumerable: false,
    writable: true,
    configurable: true,
    value: function value(predicate, context) {
      if (this == null) {
        throw new TypeError('Array.prototype.find called on null or undefined');
      }
      var index = findIndex.call(this, predicate, context);
      return index === -1 ? undefined : this[index];
    }
  });
}

if (!Array.prototype.includes) {
  Object.defineProperty(Array.prototype, 'includes', {
    enumerable: false,
    writable: true,
    configurable: true,
    value: function value(searchElement) {
      var O = Object(this);
      var len = parseInt(O.length) || 0;
      if (len === 0) {
        return false;
      }
      var n = parseInt(arguments[1]) || 0;
      var k;
      if (n >= 0) {
        k = n;
      } else {
        k = len + n;
        if (k < 0) {
          k = 0;
        }
      }
      var currentElement;
      while (k < len) {
        currentElement = O[k];
        if (searchElement === currentElement || searchElement !== searchElement && currentElement !== currentElement) {
          return true;
        }
        k++;
      }
      return false;
    }
  });
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {
if (!Array.from) {
  Array.from = function (arrayLike) {
    if (arrayLike == null) {
      throw new TypeError('Object is null or undefined');
    }

    var mapFn = arguments[1];
    var thisArg = arguments[2];

    var C = this;
    var items = Object(arrayLike);
    var symbolIterator = typeof Symbol === 'function' ? typeof Symbol === 'function' ? Symbol.iterator : '@@iterator' : '@@iterator';
    var mapping = typeof mapFn === 'function';
    var usingIterator = typeof items[symbolIterator] === 'function';
    var key = 0;
    var ret;
    var value;

    if (usingIterator) {
      ret = typeof C === 'function' ? new C() : [];
      var it = items[symbolIterator]();
      var next;

      while (!(next = it.next()).done) {
        value = next.value;

        if (mapping) {
          value = mapFn.call(thisArg, value, key);
        }

        ret[key] = value;
        key += 1;
      }

      ret.length = key;
      return ret;
    }

    var len = items.length;
    if (isNaN(len) || len < 0) {
      len = 0;
    }

    ret = typeof C === 'function' ? new C(len) : new Array(len);

    while (key < len) {
      value = items[key];

      if (mapping) {
        value = mapFn.call(thisArg, value, key);
      }

      ret[key] = value;

      key += 1;
    }

    ret.length = key;
    return ret;
  };
}
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

(function () {
  'use strict';

  var hasOwnProperty = Object.prototype.hasOwnProperty;

  if (typeof Object.entries !== 'function') {
    Object.entries = function (object) {
      if (object == null) {
        throw new TypeError('Object.entries called on non-object');
      }

      var entries = [];
      for (var key in object) {
        if (hasOwnProperty.call(object, key)) {
          entries.push([key, object[key]]);
        }
      }
      return entries;
    };
  }

  if (typeof Object.values !== 'function') {
    Object.values = function (object) {
      if (object == null) {
        throw new TypeError('Object.values called on non-object');
      }

      var values = [];
      for (var key in object) {
        if (hasOwnProperty.call(object, key)) {
          values.push(object[key]);
        }
      }
      return values;
    };
  }
})();
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
(function(global) {

var babelHelpers = global.babelHelpers = {};

babelHelpers.typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
};

babelHelpers.createRawReactElement = function () {
  var REACT_ELEMENT_TYPE = typeof Symbol === "function" && (typeof Symbol === "function" ? Symbol.for : "@@for") && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") || 0xeac7;
  return function createRawReactElement(type, key, props) {
    return {
      $$typeof: REACT_ELEMENT_TYPE,
      type: type,
      key: key,
      ref: null,
      props: props,
      _owner: null
    };
  };
}();

babelHelpers.classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

babelHelpers.createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

babelHelpers.defineEnumerableProperties = function (obj, descs) {
  for (var key in descs) {
    var desc = descs[key];
    desc.configurable = desc.enumerable = true;
    if ('value' in desc) desc.writable = true;
    Object.defineProperty(obj, key, desc);
  }
  return obj;
};

babelHelpers.defineProperty = function (obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

babelHelpers._extends = babelHelpers.extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

babelHelpers.get = function get(object, property, receiver) {
  if (object === null) object = Function.prototype;
  var desc = Object.getOwnPropertyDescriptor(object, property);

  if (desc === undefined) {
    var parent = Object.getPrototypeOf(object);

    if (parent === null) {
      return undefined;
    } else {
      return get(parent, property, receiver);
    }
  } else if ("value" in desc) {
    return desc.value;
  } else {
    var getter = desc.get;

    if (getter === undefined) {
      return undefined;
    }

    return getter.call(receiver);
  }
};

babelHelpers.inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};

babelHelpers.interopRequireDefault = function (obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
};

babelHelpers.interopRequireWildcard = function (obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};

    if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
      }
    }

    newObj.default = obj;
    return newObj;
  }
};

babelHelpers.objectWithoutProperties = function (obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};

babelHelpers.possibleConstructorReturn = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

babelHelpers.slicedToArray = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((typeof Symbol === "function" ? Symbol.iterator : "@@iterator") in Object(arr)) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

babelHelpers.taggedTemplateLiteral = function (strings, raw) {
  return Object.freeze(Object.defineProperties(strings, {
    raw: {
      value: Object.freeze(raw)
    }
  }));
};

babelHelpers.toArray = function (arr) {
  return Array.isArray(arr) ? arr : Array.from(arr);
};

babelHelpers.toConsumableArray = function (arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }return arr2;
  } else {
    return Array.from(arr);
  }
};
})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);
__d(/* YuanXC/index.js */function(global, require, module, exports) {var _reactNative = require(12            ); // 12 = react-native

var _src = require(332    ); // 332 = ./src

var _src2 = babelHelpers.interopRequireDefault(_src);

_reactNative.AppRegistry.registerComponent('YuanXC', function () {
  return _src2.default;
});
}, 0, null, "YuanXC/index.js");
__d(/* react-native-implementation */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var ReactNative = {
  get AccessibilityInfo() {
    return require(14                 ); // 14 = AccessibilityInfo
  },
  get ActivityIndicator() {
    return require(121                ); // 121 = ActivityIndicator
  },
  get ART() {
    return require(173             ); // 173 = ReactNativeART
  },
  get Button() {
    return require(179     ); // 179 = Button
  },
  get CheckBox() {
    return require(234       ); // 234 = CheckBox
  },
  get DatePickerIOS() {
    return require(235            ); // 235 = DatePickerIOS
  },
  get DrawerLayoutAndroid() {
    return require(236                  ); // 236 = DrawerLayoutAndroid
  },
  get FlatList() {
    return require(238       ); // 238 = FlatList
  },
  get Image() {
    return require(221    ); // 221 = Image
  },
  get ImageBackground() {
    return require(251              ); // 251 = ImageBackground
  },
  get ImageEditor() {
    return require(253          ); // 253 = ImageEditor
  },
  get ImageStore() {
    return require(254         ); // 254 = ImageStore
  },
  get KeyboardAvoidingView() {
    return require(255                   ); // 255 = KeyboardAvoidingView
  },
  get ListView() {
    return require(240       ); // 240 = ListView
  },
  get MaskedViewIOS() {
    return require(257            ); // 257 = MaskedViewIOS
  },
  get Modal() {
    return require(259    ); // 259 = Modal
  },
  get NavigatorIOS() {
    return require(281           ); // 281 = NavigatorIOS
  },
  get Picker() {
    return require(282     ); // 282 = Picker
  },
  get PickerIOS() {
    return require(283        ); // 283 = PickerIOS
  },
  get ProgressBarAndroid() {
    return require(125                 ); // 125 = ProgressBarAndroid
  },
  get ProgressViewIOS() {
    return require(285              ); // 285 = ProgressViewIOS
  },
  get SafeAreaView() {
    return require(279           ); // 279 = SafeAreaView
  },
  get ScrollView() {
    return require(223         ); // 223 = ScrollView
  },
  get SectionList() {
    return require(286          ); // 286 = SectionList
  },
  get SegmentedControlIOS() {
    return require(288                  ); // 288 = SegmentedControlIOS
  },
  get Slider() {
    return require(289     ); // 289 = Slider
  },
  get SnapshotViewIOS() {
    return require(290              ); // 290 = SnapshotViewIOS
  },
  get Switch() {
    return require(291     ); // 291 = Switch
  },
  get RefreshControl() {
    return require(245             ); // 245 = RefreshControl
  },
  get StatusBar() {
    return require(237        ); // 237 = StatusBar
  },
  get SwipeableFlatList() {
    return require(292                ); // 292 = SwipeableFlatList
  },
  get SwipeableListView() {
    return require(296                ); // 296 = SwipeableListView
  },
  get TabBarIOS() {
    return require(298        ); // 298 = TabBarIOS
  },
  get Text() {
    return require(180   ); // 180 = Text
  },
  get TextInput() {
    return require(300        ); // 300 = TextInput
  },
  get ToastAndroid() {
    return require(111           ); // 111 = ToastAndroid
  },
  get ToolbarAndroid() {
    return require(306             ); // 306 = ToolbarAndroid
  },
  get Touchable() {
    return require(181        ); // 181 = Touchable
  },
  get TouchableHighlight() {
    return require(270                 ); // 270 = TouchableHighlight
  },
  get TouchableNativeFeedback() {
    return require(188                      ); // 188 = TouchableNativeFeedback
  },
  get TouchableOpacity() {
    return require(192               ); // 192 = TouchableOpacity
  },
  get TouchableWithoutFeedback() {
    return require(189                       ); // 189 = TouchableWithoutFeedback
  },
  get View() {
    return require(169   ); // 169 = View
  },
  get ViewPagerAndroid() {
    return require(307               ); // 307 = ViewPagerAndroid
  },
  get VirtualizedList() {
    return require(246              ); // 246 = VirtualizedList
  },
  get WebView() {
    return require(308      ); // 308 = WebView
  },

  get ActionSheetIOS() {
    return require(309             ); // 309 = ActionSheetIOS
  },
  get Alert() {
    return require(98     ); // 98 = Alert
  },
  get AlertIOS() {
    return require(99        ); // 99 = AlertIOS
  },
  get Animated() {
    return require(193       ); // 193 = Animated
  },
  get AppRegistry() {
    return require(310          ); // 310 = AppRegistry
  },
  get AppState() {
    return require(113       ); // 113 = AppState
  },
  get AsyncStorage() {
    return require(316           ); // 316 = AsyncStorage
  },
  get BackAndroid() {
    return require(317          ); // 317 = BackAndroid
  },
  get BackHandler() {
    return require(315          ); // 315 = BackHandler
  },
  get CameraRoll() {
    return require(318         ); // 318 = CameraRoll
  },
  get Clipboard() {
    return require(319        ); // 319 = Clipboard
  },
  get DatePickerAndroid() {
    return require(320                ); // 320 = DatePickerAndroid
  },
  get DeviceInfo() {
    return require(164         ); // 164 = DeviceInfo
  },
  get Dimensions() {
    return require(163         ); // 163 = Dimensions
  },
  get Easing() {
    return require(218     ); // 218 = Easing
  },
  get findNodeHandle() {
    return require(21           ).findNodeHandle; // 21 = ReactNative
  },
  get I18nManager() {
    return require(280          ); // 280 = I18nManager
  },
  get ImagePickerIOS() {
    return require(321             ); // 321 = ImagePickerIOS
  },
  get InteractionManager() {
    return require(201                 ); // 201 = InteractionManager
  },
  get Keyboard() {
    return require(227       ); // 227 = Keyboard
  },
  get LayoutAnimation() {
    return require(256              ); // 256 = LayoutAnimation
  },
  get Linking() {
    return require(322      ); // 322 = Linking
  },
  get NativeEventEmitter() {
    return require(83                  ); // 83 = NativeEventEmitter
  },
  get NetInfo() {
    return require(323      ); // 323 = NetInfo
  },
  get PanResponder() {
    return require(294           ); // 294 = PanResponder
  },
  get PermissionsAndroid() {
    return require(102                 ); // 102 = PermissionsAndroid
  },
  get PixelRatio() {
    return require(162         ); // 162 = PixelRatio
  },
  get PushNotificationIOS() {
    return require(324                  ); // 324 = PushNotificationIOS
  },
  get Settings() {
    return require(325       ); // 325 = Settings
  },
  get Share() {
    return require(326    ); // 326 = Share
  },
  get StatusBarIOS() {
    return require(327           ); // 327 = StatusBarIOS
  },
  get StyleSheet() {
    return require(167         ); // 167 = StyleSheet
  },
  get Systrace() {
    return require(19        ); // 19 = Systrace
  },
  get TimePickerAndroid() {
    return require(328                ); // 328 = TimePickerAndroid
  },
  get TVEventHandler() {
    return require(185             ); // 185 = TVEventHandler
  },
  get UIManager() {
    return require(47         ); // 47 = UIManager
  },
  get unstable_batchedUpdates() {
    return require(21           ).unstable_batchedUpdates; // 21 = ReactNative
  },
  get Vibration() {
    return require(329        ); // 329 = Vibration
  },
  get VibrationIOS() {
    return require(330           ); // 330 = VibrationIOS
  },

  get DeviceEventEmitter() {
    return require(84                     ); // 84 = RCTDeviceEventEmitter
  },
  get NativeAppEventEmitter() {
    return require(106                       ); // 106 = RCTNativeAppEventEmitter
  },
  get NativeModules() {
    return require(15             ); // 15 = NativeModules
  },
  get Platform() {
    return require(46        ); // 46 = Platform
  },
  get processColor() {
    return require(151           ); // 151 = processColor
  },
  get requireNativeComponent() {
    return require(144                     ); // 144 = requireNativeComponent
  },
  get takeSnapshot() {
    return require(331           ); // 331 = takeSnapshot
  },

  get ColorPropType() {
    return require(122            ); // 122 = ColorPropType
  },
  get EdgeInsetsPropType() {
    return require(131                 ); // 131 = EdgeInsetsPropType
  },
  get PointPropType() {
    return require(224            ); // 224 = PointPropType
  },
  get ViewPropTypes() {
    return require(130            ); // 130 = ViewPropTypes
  },

  get Navigator() {
    invariant(false, 'Navigator is deprecated and has been removed from this package. It can now be installed ' + 'and imported from `react-native-deprecated-custom-components` instead of `react-native`. ' + 'Learn about alternative navigation solutions at http://facebook.github.io/react-native/docs/navigation.html');
  }
};

module.exports = ReactNative;
}, 12, null, "react-native-implementation");
__d(/* fbjs/lib/invariant.js */function(global, require, module, exports) {

'use strict';

var validateFormat = function validateFormat(format) {};

if (process.env.NODE_ENV !== 'production') {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1;
    throw error;
  }
}

module.exports = invariant;
}, 13, null, "fbjs/lib/invariant.js");
__d(/* AccessibilityInfo */function(global, require, module, exports) {
'use strict';

var NativeModules = require(15             ); // 15 = NativeModules
var RCTDeviceEventEmitter = require(84                     ); // 84 = RCTDeviceEventEmitter

var RCTAccessibilityInfo = NativeModules.AccessibilityInfo;

var TOUCH_EXPLORATION_EVENT = 'touchExplorationDidChange';

var _subscriptions = new Map();

var AccessibilityInfo = {

  fetch: function fetch() {
    return new Promise(function (resolve, reject) {
      RCTAccessibilityInfo.isTouchExplorationEnabled(function (resp) {
        resolve(resp);
      });
    });
  },

  addEventListener: function addEventListener(eventName, handler) {
    var listener = RCTDeviceEventEmitter.addListener(TOUCH_EXPLORATION_EVENT, function (enabled) {
      handler(enabled);
    });
    _subscriptions.set(handler, listener);
  },

  removeEventListener: function removeEventListener(eventName, handler) {
    var listener = _subscriptions.get(handler);
    if (!listener) {
      return;
    }
    listener.remove();
    _subscriptions.delete(handler);
  }

};

module.exports = AccessibilityInfo;
}, 14, null, "AccessibilityInfo");
__d(/* NativeModules */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(16             ); // 16 = BatchedBridge

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

function genModule(config, moduleID) {
  if (!config) {
    return null;
  }

  var _config = babelHelpers.slicedToArray(config, 5),
      moduleName = _config[0],
      constants = _config[1],
      methods = _config[2],
      promiseMethods = _config[3],
      syncMethods = _config[4];

  invariant(!moduleName.startsWith('RCT') && !moduleName.startsWith('RK'), 'Module name prefixes should\'ve been stripped by the native side ' + 'but wasn\'t for ' + moduleName);

  if (!constants && !methods) {
    return { name: moduleName };
  }

  var module = {};
  methods && methods.forEach(function (methodName, methodID) {
    var isPromise = promiseMethods && arrayContains(promiseMethods, methodID);
    var isSync = syncMethods && arrayContains(syncMethods, methodID);
    invariant(!isPromise || !isSync, 'Cannot have a method that is both async and a sync hook');
    var methodType = isPromise ? 'promise' : isSync ? 'sync' : 'async';
    module[methodName] = genMethod(moduleID, methodID, methodType);
  });
  babelHelpers.extends(module, constants);

  if (__DEV__) {
    BatchedBridge.createDebugLookup(moduleID, moduleName, methods);
  }

  return { name: moduleName, module: module };
}

global.__fbGenNativeModule = genModule;

function loadModule(name, moduleID) {
  invariant(global.nativeRequireModuleConfig, 'Can\'t lazily create module without nativeRequireModuleConfig');
  var config = global.nativeRequireModuleConfig(name);
  var info = genModule(config, moduleID);
  return info && info.module;
}

function genMethod(moduleID, methodID, type) {
  var fn = null;
  if (type === 'promise') {
    fn = function fn() {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return new Promise(function (resolve, reject) {
        BatchedBridge.enqueueNativeCall(moduleID, methodID, args, function (data) {
          return resolve(data);
        }, function (errorData) {
          return reject(createErrorFromErrorData(errorData));
        });
      });
    };
  } else if (type === 'sync') {
    fn = function fn() {
      if (__DEV__) {
        invariant(global.nativeCallSyncHook, 'Calling synchronous methods on native ' + 'modules is not supported in Chrome.\n\n Consider providing alternative ' + 'methods to expose this method in debug mode, e.g. by exposing constants ' + 'ahead-of-time.');
      }

      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return global.nativeCallSyncHook(moduleID, methodID, args);
    };
  } else {
    fn = function fn() {
      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      var lastArg = args.length > 0 ? args[args.length - 1] : null;
      var secondLastArg = args.length > 1 ? args[args.length - 2] : null;
      var hasSuccessCallback = typeof lastArg === 'function';
      var hasErrorCallback = typeof secondLastArg === 'function';
      hasErrorCallback && invariant(hasSuccessCallback, 'Cannot have a non-function arg after a function arg.');
      var onSuccess = hasSuccessCallback ? lastArg : null;
      var onFail = hasErrorCallback ? secondLastArg : null;
      var callbackCount = hasSuccessCallback + hasErrorCallback;
      args = args.slice(0, args.length - callbackCount);
      BatchedBridge.enqueueNativeCall(moduleID, methodID, args, onFail, onSuccess);
    };
  }
  fn.type = type;
  return fn;
}

function arrayContains(array, value) {
  return array.indexOf(value) !== -1;
}

function createErrorFromErrorData(errorData) {
  var _ref = errorData || {},
      message = _ref.message,
      extraErrorInfo = babelHelpers.objectWithoutProperties(_ref, ['message']);

  var error = new Error(message);
  error.framesToPop = 1;
  return babelHelpers.extends(error, extraErrorInfo);
}

var NativeModules = {};
if (global.nativeModuleProxy) {
  NativeModules = global.nativeModuleProxy;
} else {
  var bridgeConfig = global.__fbBatchedBridgeConfig;
  invariant(bridgeConfig, '__fbBatchedBridgeConfig is not set, cannot invoke native modules');

  var defineLazyObjectProperty = require(48                        ); // 48 = defineLazyObjectProperty
  (bridgeConfig.remoteModuleConfig || []).forEach(function (config, moduleID) {
    var info = genModule(config, moduleID);
    if (!info) {
      return;
    }

    if (info.module) {
      NativeModules[info.name] = info.module;
    } else {
        defineLazyObjectProperty(NativeModules, info.name, {
          get: function get() {
            return loadModule(info.name, moduleID);
          }
        });
      }
  });
}

module.exports = NativeModules;
}, 15, null, "NativeModules");
__d(/* BatchedBridge */function(global, require, module, exports) {
'use strict';

var MessageQueue = require(17            ); // 17 = MessageQueue
var BatchedBridge = new MessageQueue();

Object.defineProperty(global, '__fbBatchedBridge', {
  configurable: true,
  value: BatchedBridge
});

module.exports = BatchedBridge;
}, 16, null, "BatchedBridge");
__d(/* MessageQueue */function(global, require, module, exports) {

'use strict';

var ErrorUtils = require(18          ); // 18 = ErrorUtils
var Systrace = require(19        ); // 19 = Systrace

var deepFreezeAndThrowOnMutationInDev = require(49                                 ); // 49 = deepFreezeAndThrowOnMutationInDev
var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var stringifySafe = require(33             ); // 33 = stringifySafe

var TO_JS = 0;
var TO_NATIVE = 1;

var MODULE_IDS = 0;
var METHOD_IDS = 1;
var PARAMS = 2;
var MIN_TIME_BETWEEN_FLUSHES_MS = 5;

var TRACE_TAG_REACT_APPS = 1 << 17;

var DEBUG_INFO_LIMIT = 32;

var JSTimers = null;

var MessageQueue = function () {
  function MessageQueue() {
    babelHelpers.classCallCheck(this, MessageQueue);

    this._lazyCallableModules = {};
    this._queue = [[], [], [], 0];
    this._successCallbacks = [];
    this._failureCallbacks = [];
    this._callID = 0;
    this._lastFlush = 0;
    this._eventLoopStartTime = new Date().getTime();

    if (__DEV__) {
      this._debugInfo = {};
      this._remoteModuleTable = {};
      this._remoteMethodTable = {};
    }

    this.callFunctionReturnFlushedQueue = this.callFunctionReturnFlushedQueue.bind(this);
    this.callFunctionReturnResultAndFlushedQueue = this.callFunctionReturnResultAndFlushedQueue.bind(this);
    this.flushedQueue = this.flushedQueue.bind(this);
    this.invokeCallbackAndReturnFlushedQueue = this.invokeCallbackAndReturnFlushedQueue.bind(this);
  }

  babelHelpers.createClass(MessageQueue, [{
    key: 'callFunctionReturnFlushedQueue',
    value: function callFunctionReturnFlushedQueue(module, method, args) {
      var _this = this;

      this.__guard(function () {
        _this.__callFunction(module, method, args);
      });

      return this.flushedQueue();
    }
  }, {
    key: 'callFunctionReturnResultAndFlushedQueue',
    value: function callFunctionReturnResultAndFlushedQueue(module, method, args) {
      var _this2 = this;

      var result = void 0;
      this.__guard(function () {
        result = _this2.__callFunction(module, method, args);
      });

      return [result, this.flushedQueue()];
    }
  }, {
    key: 'invokeCallbackAndReturnFlushedQueue',
    value: function invokeCallbackAndReturnFlushedQueue(cbID, args) {
      var _this3 = this;

      this.__guard(function () {
        _this3.__invokeCallback(cbID, args);
      });

      return this.flushedQueue();
    }
  }, {
    key: 'flushedQueue',
    value: function flushedQueue() {
      var _this4 = this;

      this.__guard(function () {
        _this4.__callImmediates();
      });

      var queue = this._queue;
      this._queue = [[], [], [], this._callID];
      return queue[0].length ? queue : null;
    }
  }, {
    key: 'getEventLoopRunningTime',
    value: function getEventLoopRunningTime() {
      return new Date().getTime() - this._eventLoopStartTime;
    }
  }, {
    key: 'registerCallableModule',
    value: function registerCallableModule(name, module) {
      this._lazyCallableModules[name] = function () {
        return module;
      };
    }
  }, {
    key: 'registerLazyCallableModule',
    value: function registerLazyCallableModule(name, factory) {
      var module = void 0;
      var getValue = factory;
      this._lazyCallableModules[name] = function () {
        if (getValue) {
          module = getValue();
          getValue = null;
        }
        return module;
      };
    }
  }, {
    key: 'getCallableModule',
    value: function getCallableModule(name) {
      var getValue = this._lazyCallableModules[name];
      return getValue ? getValue() : null;
    }
  }, {
    key: 'enqueueNativeCall',
    value: function enqueueNativeCall(moduleID, methodID, params, onFail, onSucc) {
      if (onFail || onSucc) {
        if (__DEV__) {
          this._debugInfo[this._callID] = [moduleID, methodID];
          if (this._callID > DEBUG_INFO_LIMIT) {
            delete this._debugInfo[this._callID - DEBUG_INFO_LIMIT];
          }
        }

        onFail && params.push(this._callID << 1);
        onSucc && params.push(this._callID << 1 | 1);
        this._successCallbacks[this._callID] = onSucc;
        this._failureCallbacks[this._callID] = onFail;
      }

      if (__DEV__) {
        global.nativeTraceBeginAsyncFlow && global.nativeTraceBeginAsyncFlow(TRACE_TAG_REACT_APPS, 'native', this._callID);
      }
      this._callID++;

      this._queue[MODULE_IDS].push(moduleID);
      this._queue[METHOD_IDS].push(methodID);

      if (__DEV__) {
        JSON.stringify(params);

        deepFreezeAndThrowOnMutationInDev(params);
      }
      this._queue[PARAMS].push(params);

      var now = new Date().getTime();
      if (global.nativeFlushQueueImmediate && (now - this._lastFlush >= MIN_TIME_BETWEEN_FLUSHES_MS || this._inCall === 0)) {
        var queue = this._queue;
        this._queue = [[], [], [], this._callID];
        this._lastFlush = now;
        global.nativeFlushQueueImmediate(queue);
      }
      Systrace.counterEvent('pending_js_to_native_queue', this._queue[0].length);
      if (__DEV__ && this.__spy && isFinite(moduleID)) {
        this.__spy({
          type: TO_NATIVE,
          module: this._remoteModuleTable[moduleID],
          method: this._remoteMethodTable[moduleID][methodID],
          args: params
        });
      } else if (this.__spy) {
        this.__spy({
          type: TO_NATIVE,
          module: moduleID + '',
          method: methodID,
          args: params
        });
      }
    }
  }, {
    key: 'createDebugLookup',
    value: function createDebugLookup(moduleID, name, methods) {
      if (__DEV__) {
        this._remoteModuleTable[moduleID] = name;
        this._remoteMethodTable[moduleID] = methods;
      }
    }
  }, {
    key: '__guard',
    value: function __guard(fn) {
      this._inCall++;
      try {
        fn();
      } catch (error) {
        ErrorUtils.reportFatalError(error);
      } finally {
        this._inCall--;
      }
    }
  }, {
    key: '__callImmediates',
    value: function __callImmediates() {
      Systrace.beginEvent('JSTimers.callImmediates()');
      if (!JSTimers) {
        JSTimers = require(68        ); // 68 = JSTimers
      }
      JSTimers.callImmediates();
      Systrace.endEvent();
    }
  }, {
    key: '__callFunction',
    value: function __callFunction(module, method, args) {
      this._lastFlush = new Date().getTime();
      this._eventLoopStartTime = this._lastFlush;
      Systrace.beginEvent(module + '.' + method + '()');
      if (this.__spy) {
        this.__spy({ type: TO_JS, module: module, method: method, args: args });
      }
      var moduleMethods = this.getCallableModule(module);
      invariant(!!moduleMethods, 'Module %s is not a registered callable module (calling %s)', module, method);
      invariant(!!moduleMethods[method], 'Method %s does not exist on module %s', method, module);
      var result = moduleMethods[method].apply(moduleMethods, args);
      Systrace.endEvent();
      return result;
    }
  }, {
    key: '__invokeCallback',
    value: function __invokeCallback(cbID, args) {
      this._lastFlush = new Date().getTime();
      this._eventLoopStartTime = this._lastFlush;

      var callID = cbID >>> 1;
      var callback = cbID & 1 ? this._successCallbacks[callID] : this._failureCallbacks[callID];

      if (__DEV__) {
        var debug = this._debugInfo[callID];
        var _module = debug && this._remoteModuleTable[debug[0]];
        var _method = debug && this._remoteMethodTable[debug[0]][debug[1]];
        if (!callback) {
          var errorMessage = 'Callback with id ' + cbID + ': ' + _module + '.' + _method + '() not found';
          if (_method) {
            errorMessage = 'The callback ' + _method + '() exists in module ' + _module + ', ' + 'but only one callback may be registered to a function in a native module.';
          }
          invariant(callback, errorMessage);
        }
        var profileName = debug ? '<callback for ' + _module + '.' + _method + '>' : cbID;
        if (callback && this.__spy) {
          this.__spy({ type: TO_JS, module: null, method: profileName, args: args });
        }
        Systrace.beginEvent('MessageQueue.invokeCallback(' + profileName + ', ' + stringifySafe(args) + ')');
      }

      if (!callback) {
        return;
      }

      this._successCallbacks[callID] = this._failureCallbacks[callID] = null;
      callback.apply(null, args);

      if (__DEV__) {
        Systrace.endEvent();
      }
    }
  }], [{
    key: 'spy',
    value: function spy(spyOrToggle) {
      if (spyOrToggle === true) {
        MessageQueue.prototype.__spy = function (info) {
          console.log((info.type === TO_JS ? 'N->JS' : 'JS->N') + ' : ' + ('' + (info.module ? info.module + '.' : '') + info.method) + ('(' + JSON.stringify(info.args) + ')'));
        };
      } else if (spyOrToggle === false) {
        MessageQueue.prototype.__spy = null;
      } else {
        MessageQueue.prototype.__spy = spyOrToggle;
      }
    }
  }]);
  return MessageQueue;
}();

module.exports = MessageQueue;
}, 17, null, "MessageQueue");
__d(/* ErrorUtils */function(global, require, module, exports) {
module.exports = global.ErrorUtils;
}, 18, null, "ErrorUtils");
__d(/* Systrace */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var TRACE_TAG_REACT_APPS = 1 << 17;
var TRACE_TAG_JSC_CALLS = 1 << 27;

var _enabled = false;
var _asyncCookie = 0;
var _markStack = [];
var _markStackIndex = -1;
var _canInstallReactHook = false;
var _useFiber = false;

var REACT_MARKER = '\u269B';
var userTimingPolyfill = __DEV__ ? {
  mark: function mark(markName) {
    if (_enabled) {
      _markStackIndex++;
      _markStack[_markStackIndex] = markName;
      var systraceLabel = markName;

      if (markName[0] === REACT_MARKER) {
        var indexOfId = markName.lastIndexOf(' (#');
        var cutoffIndex = indexOfId !== -1 ? indexOfId : markName.length;

        systraceLabel = markName.slice(2, cutoffIndex);
      }
      Systrace.beginEvent(systraceLabel);
    }
  },
  measure: function measure(measureName, startMark, endMark) {
    if (_enabled) {
      invariant(typeof measureName === 'string' && typeof startMark === 'string' && typeof endMark === 'undefined', 'Only performance.measure(string, string) overload is supported.');
      var topMark = _markStack[_markStackIndex];
      invariant(startMark === topMark, 'There was a mismatching performance.measure() call. ' + 'Expected "%s" but got "%s."', topMark, startMark);
      _markStackIndex--;

      Systrace.endEvent();
    }
  },
  clearMarks: function clearMarks(markName) {
    if (_enabled) {
      if (_markStackIndex === -1) {
        return;
      }
      if (markName === _markStack[_markStackIndex]) {
        if (userTimingPolyfill != null) {
          userTimingPolyfill.measure(markName, markName);
        }
      }
    }
  },
  clearMeasures: function clearMeasures() {}
} : null;

var reactDebugToolHook = __DEV__ ? {
  onBeforeMountComponent: function onBeforeMountComponent(debugID) {
    var ReactComponentTreeHook = require(20                      ).ReactComponentTreeHook; // 20 = ReactGlobalSharedState
    var displayName = ReactComponentTreeHook.getDisplayName(debugID);
    Systrace.beginEvent('ReactReconciler.mountComponent(' + displayName + ')');
  },
  onMountComponent: function onMountComponent(debugID) {
    Systrace.endEvent();
  },
  onBeforeUpdateComponent: function onBeforeUpdateComponent(debugID) {
    var ReactComponentTreeHook = require(20                      ).ReactComponentTreeHook; // 20 = ReactGlobalSharedState
    var displayName = ReactComponentTreeHook.getDisplayName(debugID);
    Systrace.beginEvent('ReactReconciler.updateComponent(' + displayName + ')');
  },
  onUpdateComponent: function onUpdateComponent(debugID) {
    Systrace.endEvent();
  },
  onBeforeUnmountComponent: function onBeforeUnmountComponent(debugID) {
    var ReactComponentTreeHook = require(20                      ).ReactComponentTreeHook; // 20 = ReactGlobalSharedState
    var displayName = ReactComponentTreeHook.getDisplayName(debugID);
    Systrace.beginEvent('ReactReconciler.unmountComponent(' + displayName + ')');
  },
  onUnmountComponent: function onUnmountComponent(debugID) {
    Systrace.endEvent();
  },
  onBeginLifeCycleTimer: function onBeginLifeCycleTimer(debugID, timerType) {
    var ReactComponentTreeHook = require(20                      ).ReactComponentTreeHook; // 20 = ReactGlobalSharedState
    var displayName = ReactComponentTreeHook.getDisplayName(debugID);
    Systrace.beginEvent(displayName + '.' + timerType + '()');
  },
  onEndLifeCycleTimer: function onEndLifeCycleTimer(debugID, timerType) {
    Systrace.endEvent();
  }
} : null;

var Systrace = {
  installReactHook: function installReactHook(useFiber) {
    if (_enabled) {
      if (__DEV__) {
        if (useFiber) {
          global.performance = userTimingPolyfill;
        } else {
          require(120             ).addHook(reactDebugToolHook); // 120 = ReactDebugTool
        }
      }
    }
    _useFiber = useFiber;
    _canInstallReactHook = true;
  },
  setEnabled: function setEnabled(enabled) {
    if (_enabled !== enabled) {
      if (__DEV__) {
        if (enabled) {
          global.nativeTraceBeginLegacy && global.nativeTraceBeginLegacy(TRACE_TAG_JSC_CALLS);
        } else {
          global.nativeTraceEndLegacy && global.nativeTraceEndLegacy(TRACE_TAG_JSC_CALLS);
        }
        if (_canInstallReactHook) {
          if (_useFiber) {
            global.performance = enabled ? userTimingPolyfill : undefined;
          } else {
            var ReactDebugTool = require(120             ); // 120 = ReactDebugTool
            if (enabled) {
              ReactDebugTool.addHook(reactDebugToolHook);
            } else {
              ReactDebugTool.removeHook(reactDebugToolHook);
            }
          }
        }
      }
      _enabled = enabled;
    }
  },
  isEnabled: function isEnabled() {
    return _enabled;
  },
  beginEvent: function beginEvent(profileName, args) {
    if (_enabled) {
      profileName = typeof profileName === 'function' ? profileName() : profileName;
      global.nativeTraceBeginSection(TRACE_TAG_REACT_APPS, profileName, args);
    }
  },
  endEvent: function endEvent() {
    if (_enabled) {
      global.nativeTraceEndSection(TRACE_TAG_REACT_APPS);
    }
  },
  beginAsyncEvent: function beginAsyncEvent(profileName) {
    var cookie = _asyncCookie;
    if (_enabled) {
      _asyncCookie++;
      profileName = typeof profileName === 'function' ? profileName() : profileName;
      global.nativeTraceBeginAsyncSection(TRACE_TAG_REACT_APPS, profileName, cookie, 0);
    }
    return cookie;
  },
  endAsyncEvent: function endAsyncEvent(profileName, cookie) {
    if (_enabled) {
      profileName = typeof profileName === 'function' ? profileName() : profileName;
      global.nativeTraceEndAsyncSection(TRACE_TAG_REACT_APPS, profileName, cookie, 0);
    }
  },
  counterEvent: function counterEvent(profileName, value) {
    if (_enabled) {
      profileName = typeof profileName === 'function' ? profileName() : profileName;
      global.nativeTraceCounter && global.nativeTraceCounter(TRACE_TAG_REACT_APPS, profileName, value);
    }
  },
  attachToRelayProfiler: function attachToRelayProfiler(relayProfiler) {
    relayProfiler.attachProfileHandler('*', function (name) {
      var cookie = Systrace.beginAsyncEvent(name);
      return function () {
        Systrace.endAsyncEvent(name, cookie);
      };
    });

    relayProfiler.attachAggregateHandler('*', function (name, callback) {
      Systrace.beginEvent(name);
      callback();
      Systrace.endEvent();
    });
  },
  swizzleJSON: function swizzleJSON() {
    Systrace.measureMethods(JSON, 'JSON', ['parse', 'stringify']);
  },
  measureMethods: function measureMethods(object, objectName, methodNames) {
    if (!__DEV__) {
      return;
    }

    methodNames.forEach(function (methodName) {
      object[methodName] = Systrace.measure(objectName, methodName, object[methodName]);
    });
  },
  measure: function measure(objName, fnName, func) {
    if (!__DEV__) {
      return func;
    }

    var profileName = objName + '.' + fnName;
    return function () {
      if (!_enabled) {
        return func.apply(this, arguments);
      }

      Systrace.beginEvent(profileName);
      var ret = func.apply(this, arguments);
      Systrace.endEvent();
      return ret;
    };
  }
};

if (__DEV__) {
  require.Systrace = Systrace;
}

module.exports = Systrace;
}, 19, null, "Systrace");
__d(/* ReactGlobalSharedState */function(global, require, module, exports) {

'use strict';

var _require = require(21           ), // 21 = ReactNative
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = _require.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

module.exports = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactGlobalSharedState;
}, 20, null, "ReactGlobalSharedState");
__d(/* ReactNative */function(global, require, module, exports) {
'use strict';

var ReactNative = void 0;

if (__DEV__) {
  ReactNative = require(22                    ); // 22 = ReactNativeFiber-dev
} else {
  ReactNative = require(119                    ); // 119 = ReactNativeFiber-prod
}

module.exports = ReactNative;
}, 21, null, "ReactNative");
__d(/* ReactNativeFiber-dev */function(global, require, module, exports) {
"use strict";

__DEV__ && function () {
    var invariant = require(13                  ), // 13 = fbjs/lib/invariant
        require$$0 = require(23                ), // 23 = fbjs/lib/warning
        ExceptionsManager = require(25                 ), // 25 = ExceptionsManager
        emptyObject = require(34                    ), // 34 = fbjs/lib/emptyObject
        react = require(35     ), // 35 = react
        checkPropTypes = require(39                         ), // 39 = prop-types/checkPropTypes
        shallowEqual = require(41                     ), // 41 = fbjs/lib/shallowEqual
        deepDiffer = require(42          ), // 42 = deepDiffer
        flattenStyle = require(43            ), // 43 = flattenStyle
        TextInputState = require(45              ), // 45 = TextInputState
        UIManager = require(47         ), // 47 = UIManager
        deepFreezeAndThrowOnMutationInDev = require(49                                 ); // 49 = deepFreezeAndThrowOnMutationInDev
    require(50              ); // 50 = InitializeCore
    var RCTEventEmitter = require(118              ), // 118 = RCTEventEmitter
        emptyFunction = require(24                      ), // 24 = fbjs/lib/emptyFunction
        defaultShowDialog = function defaultShowDialog(capturedError) {
        return !0;
    },
        showDialog = defaultShowDialog;
    function logCapturedError(capturedError) {
        if (!1 !== showDialog(capturedError)) {
            var componentName = (capturedError.error, capturedError.componentName),
                componentStack = capturedError.componentStack,
                errorBoundaryName = capturedError.errorBoundaryName,
                errorBoundaryFound = capturedError.errorBoundaryFound,
                willRetry = capturedError.willRetry,
                componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : "The above error occurred in one of your React components:",
                errorBoundaryMessage = void 0;
            errorBoundaryMessage = errorBoundaryFound && errorBoundaryName ? willRetry ? "React will try to recreate this component tree from scratch " + "using the error boundary you provided, " + errorBoundaryName + "." : "This error was initially handled by the error boundary " + errorBoundaryName + ".\n" + "Recreating the tree from scratch failed so React will unmount the tree." : "Consider adding an error boundary to your tree to customize error handling behavior.\n" + "You can learn more about error boundaries at https://fb.me/react-error-boundaries.";
            var combinedMessage = "" + componentNameMessage + componentStack + "\n\n" + errorBoundaryMessage;
            console.error(combinedMessage);
        }
    }
    var injection = {
        injectDialog: function injectDialog(fn) {
            invariant(showDialog === defaultShowDialog, "The custom dialog was already injected."), invariant("function" == typeof fn, "Injected showDialog() must be a function."), showDialog = fn;
        }
    },
        logCapturedError_1 = logCapturedError,
        ReactFiberErrorLogger = {
        injection: injection,
        logCapturedError: logCapturedError_1
    },
        ReactErrorUtils = {
        _caughtError: null,
        _hasCaughtError: !1,
        _rethrowError: null,
        _hasRethrowError: !1,
        injection: {
            injectErrorUtils: function injectErrorUtils(injectedErrorUtils) {
                invariant("function" == typeof injectedErrorUtils.invokeGuardedCallback, "Injected invokeGuardedCallback() must be a function."), _invokeGuardedCallback = injectedErrorUtils.invokeGuardedCallback;
            }
        },
        invokeGuardedCallback: function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
            _invokeGuardedCallback.apply(ReactErrorUtils, arguments);
        },
        invokeGuardedCallbackAndCatchFirstError: function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
            if (ReactErrorUtils.invokeGuardedCallback.apply(this, arguments), ReactErrorUtils.hasCaughtError()) {
                var error = ReactErrorUtils.clearCaughtError();
                ReactErrorUtils._hasRethrowError || (ReactErrorUtils._hasRethrowError = !0, ReactErrorUtils._rethrowError = error);
            }
        },
        rethrowCaughtError: function rethrowCaughtError() {
            return _rethrowCaughtError.apply(ReactErrorUtils, arguments);
        },
        hasCaughtError: function hasCaughtError() {
            return ReactErrorUtils._hasCaughtError;
        },
        clearCaughtError: function clearCaughtError() {
            if (ReactErrorUtils._hasCaughtError) {
                var error = ReactErrorUtils._caughtError;
                return ReactErrorUtils._caughtError = null, ReactErrorUtils._hasCaughtError = !1, error;
            }
            invariant(!1, "clearCaughtError was called but no error was captured. This error " + "is likely caused by a bug in React. Please file an issue.");
        }
    },
        _invokeGuardedCallback = function _invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
        ReactErrorUtils._hasCaughtError = !1, ReactErrorUtils._caughtError = null;
        var funcArgs = Array.prototype.slice.call(arguments, 3);
        try {
            func.apply(context, funcArgs);
        } catch (error) {
            ReactErrorUtils._caughtError = error, ReactErrorUtils._hasCaughtError = !0;
        }
    };
    if ("undefined" != typeof window && "function" == typeof window.dispatchEvent && "undefined" != typeof document && "function" == typeof document.createEvent) {
        var fakeNode = document.createElement("react");
        _invokeGuardedCallback = function _invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
            var didError = !0,
                funcArgs = Array.prototype.slice.call(arguments, 3);
            function callCallback() {
                fakeNode.removeEventListener(evtType, callCallback, !1), func.apply(context, funcArgs), didError = !1;
            }
            var error = void 0,
                didSetError = !1,
                isCrossOriginError = !1;
            function onError(event) {
                error = event.error, didSetError = !0, null === error && 0 === event.colno && 0 === event.lineno && (isCrossOriginError = !0);
            }
            var evtType = "react-" + (name || "invokeguardedcallback");
            window.addEventListener("error", onError), fakeNode.addEventListener(evtType, callCallback, !1);
            var evt = document.createEvent("Event");
            evt.initEvent(evtType, !1, !1), fakeNode.dispatchEvent(evt), didError ? (didSetError ? isCrossOriginError && (error = new Error("A cross-origin error was thrown. React doesn't have access to " + "the actual error object in development. " + "See https://fb.me/react-crossorigin-error for more information.")) : error = new Error("An error was thrown inside one of your components, but React " + "doesn't know what it was. This is likely due to browser " + 'flakiness. React does its best to preserve the "Pause on ' + 'exceptions" behavior of the DevTools, which requires some ' + "DEV-mode only tricks. It's possible that these don't work in " + "your browser. Try triggering the error in production mode, " + "or switching to a modern browser. If you suspect that this is " + "actually an issue with React, please file an issue."), ReactErrorUtils._hasCaughtError = !0, ReactErrorUtils._caughtError = error) : (ReactErrorUtils._hasCaughtError = !1, ReactErrorUtils._caughtError = null), window.removeEventListener("error", onError);
        };
    }
    var ComponentTree,
        _rethrowCaughtError = function _rethrowCaughtError() {
        if (ReactErrorUtils._hasRethrowError) {
            var error = ReactErrorUtils._rethrowError;
            throw ReactErrorUtils._rethrowError = null, ReactErrorUtils._hasRethrowError = !1, error;
        }
    },
        ReactErrorUtils_1 = ReactErrorUtils,
        warning = require$$0,
        injection$1 = {
        injectComponentTree: function injectComponentTree(Injected) {
            ComponentTree = Injected, warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, "EventPluginUtils.injection.injectComponentTree(...): Injected " + "module is missing getNodeFromInstance or getInstanceFromNode.");
        }
    };
    function isEndish(topLevelType) {
        return "topMouseUp" === topLevelType || "topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType;
    }
    function isMoveish(topLevelType) {
        return "topMouseMove" === topLevelType || "topTouchMove" === topLevelType;
    }
    function isStartish(topLevelType) {
        return "topMouseDown" === topLevelType || "topTouchStart" === topLevelType;
    }
    var validateEventDispatches;
    validateEventDispatches = function validateEventDispatches(event) {
        var dispatchListeners = event._dispatchListeners,
            dispatchInstances = event._dispatchInstances,
            listenersIsArr = Array.isArray(dispatchListeners),
            listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0,
            instancesIsArr = Array.isArray(dispatchInstances),
            instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
        warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, "EventPluginUtils: Invalid `event`.");
    };
    function executeDispatch(event, simulated, listener, inst) {
        var type = event.type || "unknown-event";
        event.currentTarget = EventPluginUtils.getNodeFromInstance(inst), ReactErrorUtils_1.invokeGuardedCallbackAndCatchFirstError(type, listener, void 0, event), event.currentTarget = null;
    }
    function executeDispatchesInOrder(event, simulated) {
        var dispatchListeners = event._dispatchListeners,
            dispatchInstances = event._dispatchInstances;
        if (validateEventDispatches(event), Array.isArray(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !event.isPropagationStopped(); i++) {
            executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
        } else dispatchListeners && executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
        event._dispatchListeners = null, event._dispatchInstances = null;
    }
    function executeDispatchesInOrderStopAtTrueImpl(event) {
        var dispatchListeners = event._dispatchListeners,
            dispatchInstances = event._dispatchInstances;
        if (validateEventDispatches(event), Array.isArray(dispatchListeners)) {
            for (var i = 0; i < dispatchListeners.length && !event.isPropagationStopped(); i++) {
                if (dispatchListeners[i](event, dispatchInstances[i])) return dispatchInstances[i];
            }
        } else if (dispatchListeners && dispatchListeners(event, dispatchInstances)) return dispatchInstances;
        return null;
    }
    function executeDispatchesInOrderStopAtTrue(event) {
        var ret = executeDispatchesInOrderStopAtTrueImpl(event);
        return event._dispatchInstances = null, event._dispatchListeners = null, ret;
    }
    function executeDirectDispatch(event) {
        validateEventDispatches(event);
        var dispatchListener = event._dispatchListeners,
            dispatchInstance = event._dispatchInstances;
        invariant(!Array.isArray(dispatchListener), "executeDirectDispatch(...): Invalid `event`."), event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
        var res = dispatchListener ? dispatchListener(event) : null;
        return event.currentTarget = null, event._dispatchListeners = null, event._dispatchInstances = null, res;
    }
    function hasDispatches(event) {
        return !!event._dispatchListeners;
    }
    var EventPluginUtils = {
        isEndish: isEndish,
        isMoveish: isMoveish,
        isStartish: isStartish,
        executeDirectDispatch: executeDirectDispatch,
        executeDispatchesInOrder: executeDispatchesInOrder,
        executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
        hasDispatches: hasDispatches,
        getFiberCurrentPropsFromNode: function getFiberCurrentPropsFromNode(node) {
            return ComponentTree.getFiberCurrentPropsFromNode(node);
        },
        getInstanceFromNode: function getInstanceFromNode(node) {
            return ComponentTree.getInstanceFromNode(node);
        },
        getNodeFromInstance: function getNodeFromInstance(node) {
            return ComponentTree.getNodeFromInstance(node);
        },
        injection: injection$1
    },
        EventPluginUtils_1 = EventPluginUtils,
        fiberHostComponent = null,
        ReactControlledComponentInjection = {
        injectFiberControlledHostComponent: function injectFiberControlledHostComponent(hostComponentImpl) {
            fiberHostComponent = hostComponentImpl;
        }
    },
        restoreTarget = null,
        restoreQueue = null;
    function restoreStateOfTarget(target) {
        var internalInstance = EventPluginUtils_1.getInstanceFromNode(target);
        if (internalInstance) {
            invariant(fiberHostComponent && "function" == typeof fiberHostComponent.restoreControlledState, "Fiber needs to be injected to handle a fiber target for controlled " + "events. This error is likely caused by a bug in React. Please file an issue.");
            var props = EventPluginUtils_1.getFiberCurrentPropsFromNode(internalInstance.stateNode);
            fiberHostComponent.restoreControlledState(internalInstance.stateNode, internalInstance.type, props);
        }
    }
    var ReactControlledComponent = {
        injection: ReactControlledComponentInjection,
        enqueueStateRestore: function enqueueStateRestore(target) {
            restoreTarget ? restoreQueue ? restoreQueue.push(target) : restoreQueue = [target] : restoreTarget = target;
        },
        restoreStateIfNeeded: function restoreStateIfNeeded() {
            if (restoreTarget) {
                var target = restoreTarget,
                    queuedTargets = restoreQueue;
                if (restoreTarget = null, restoreQueue = null, restoreStateOfTarget(target), queuedTargets) for (var i = 0; i < queuedTargets.length; i++) {
                    restoreStateOfTarget(queuedTargets[i]);
                }
            }
        }
    },
        ReactControlledComponent_1 = ReactControlledComponent,
        fiberBatchedUpdates = function fiberBatchedUpdates(fn, bookkeeping) {
        return fn(bookkeeping);
    };
    function batchedUpdates(fn, bookkeeping) {
        return fiberBatchedUpdates(fn, bookkeeping);
    }
    var isNestingBatched = !1;
    function batchedUpdatesWithControlledComponents(fn, bookkeeping) {
        if (isNestingBatched) return batchedUpdates(fn, bookkeeping);
        isNestingBatched = !0;
        try {
            return batchedUpdates(fn, bookkeeping);
        } finally {
            isNestingBatched = !1, ReactControlledComponent_1.restoreStateIfNeeded();
        }
    }
    var ReactGenericBatchingInjection = {
        injectFiberBatchedUpdates: function injectFiberBatchedUpdates(_batchedUpdates) {
            fiberBatchedUpdates = _batchedUpdates;
        }
    },
        ReactGenericBatching = {
        batchedUpdates: batchedUpdatesWithControlledComponents,
        injection: ReactGenericBatchingInjection
    },
        ReactGenericBatching_1 = ReactGenericBatching;
    function ReactNativeFiberErrorDialog(capturedError) {
        var componentStack = capturedError.componentStack,
            error = capturedError.error,
            errorToHandle = void 0;
        if (error instanceof Error) {
            var message = error.message,
                name = error.name,
                summary = message ? name + ": " + message : name;
            errorToHandle = error;
            try {
                errorToHandle.message = summary + "\n\nThis error is located at:" + componentStack;
            } catch (e) {}
        } else errorToHandle = "string" == typeof error ? new Error(error + "\n\nThis error is located at:" + componentStack) : new Error("Unspecified error at:" + componentStack);
        return ExceptionsManager.handleException(errorToHandle, !1), !1;
    }
    var showDialog$1 = ReactNativeFiberErrorDialog,
        ReactNativeFiberErrorDialog_1 = {
        showDialog: showDialog$1
    },
        REACT_PORTAL_TYPE = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for") && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") || 60106,
        createPortal = function createPortal(children, containerInfo, implementation) {
        var key = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
        return {
            $$typeof: REACT_PORTAL_TYPE,
            key: null == key ? null : "" + key,
            children: children,
            containerInfo: containerInfo,
            implementation: implementation
        };
    },
        isPortal = function isPortal(object) {
        return "object" == typeof object && null !== object && object.$$typeof === REACT_PORTAL_TYPE;
    },
        REACT_PORTAL_TYPE_1 = REACT_PORTAL_TYPE,
        ReactPortal = {
        createPortal: createPortal,
        isPortal: isPortal,
        REACT_PORTAL_TYPE: REACT_PORTAL_TYPE_1
    },
        instanceCache = {},
        instanceProps = {};
    function precacheFiberNode(hostInst, tag) {
        instanceCache[tag] = hostInst;
    }
    function uncacheFiberNode(tag) {
        delete instanceCache[tag], delete instanceProps[tag];
    }
    function getInstanceFromTag(tag) {
        return instanceCache[tag] || null;
    }
    function getTagFromInstance(inst) {
        var tag = inst.stateNode._nativeTag;
        return invariant(tag, "All native instances should have a tag."), tag;
    }
    function getFiberCurrentPropsFromNode(stateNode) {
        return instanceProps[stateNode._nativeTag] || null;
    }
    function updateFiberProps(tag, props) {
        instanceProps[tag] = props;
    }
    var ReactNativeComponentTree = {
        getClosestInstanceFromNode: getInstanceFromTag,
        getInstanceFromNode: getInstanceFromTag,
        getNodeFromInstance: getTagFromInstance,
        precacheFiberNode: precacheFiberNode,
        uncacheFiberNode: uncacheFiberNode,
        getFiberCurrentPropsFromNode: getFiberCurrentPropsFromNode,
        updateFiberProps: updateFiberProps
    },
        ReactNativeComponentTree_1 = ReactNativeComponentTree,
        commonjsGlobal = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {},
        ReactFeatureFlags = {
        enableAsyncSubtreeAPI: !0
    },
        ReactFeatureFlags_1 = ReactFeatureFlags,
        ReactTypeOfSideEffect = {
        NoEffect: 0,
        PerformedWork: 1,
        Placement: 2,
        Update: 4,
        PlacementAndUpdate: 6,
        Deletion: 8,
        ContentReset: 16,
        Callback: 32,
        Err: 64,
        Ref: 128
    },
        ReactPriorityLevel = {
        NoWork: 0,
        SynchronousPriority: 1,
        TaskPriority: 2,
        HighPriority: 3,
        LowPriority: 4,
        OffscreenPriority: 5
    },
        ReactTypeOfWork = {
        IndeterminateComponent: 0,
        FunctionalComponent: 1,
        ClassComponent: 2,
        HostRoot: 3,
        HostPortal: 4,
        HostComponent: 5,
        HostText: 6,
        CoroutineComponent: 7,
        CoroutineHandlerPhase: 8,
        YieldComponent: 9,
        Fragment: 10
    },
        CallbackEffect = ReactTypeOfSideEffect.Callback,
        NoWork = ReactPriorityLevel.NoWork,
        SynchronousPriority = ReactPriorityLevel.SynchronousPriority,
        TaskPriority = ReactPriorityLevel.TaskPriority,
        ClassComponent = ReactTypeOfWork.ClassComponent,
        HostRoot = ReactTypeOfWork.HostRoot,
        warning$2 = require$$0,
        _queue1 = void 0,
        _queue2 = void 0;
    function comparePriority(a, b) {
        return a !== TaskPriority && a !== SynchronousPriority || b !== TaskPriority && b !== SynchronousPriority ? a === NoWork && b !== NoWork ? -255 : a !== NoWork && b === NoWork ? 255 : a - b : 0;
    }
    function createUpdateQueue() {
        var queue = {
            first: null,
            last: null,
            hasForceUpdate: !1,
            callbackList: null
        };
        return queue.isProcessing = !1, queue;
    }
    function cloneUpdate(update) {
        return {
            priorityLevel: update.priorityLevel,
            partialState: update.partialState,
            callback: update.callback,
            isReplace: update.isReplace,
            isForced: update.isForced,
            isTopLevelUnmount: update.isTopLevelUnmount,
            next: null
        };
    }
    function insertUpdateIntoQueue(queue, update, insertAfter, insertBefore) {
        null !== insertAfter ? insertAfter.next = update : (update.next = queue.first, queue.first = update), null !== insertBefore ? update.next = insertBefore : queue.last = update;
    }
    function findInsertionPosition(queue, update) {
        var priorityLevel = update.priorityLevel,
            insertAfter = null,
            insertBefore = null;
        if (null !== queue.last && comparePriority(queue.last.priorityLevel, priorityLevel) <= 0) insertAfter = queue.last;else for (insertBefore = queue.first; null !== insertBefore && comparePriority(insertBefore.priorityLevel, priorityLevel) <= 0;) {
            insertAfter = insertBefore, insertBefore = insertBefore.next;
        }return insertAfter;
    }
    function ensureUpdateQueues(fiber) {
        var alternateFiber = fiber.alternate,
            queue1 = fiber.updateQueue;
        null === queue1 && (queue1 = fiber.updateQueue = createUpdateQueue());
        var queue2 = void 0;
        null !== alternateFiber ? null === (queue2 = alternateFiber.updateQueue) && (queue2 = alternateFiber.updateQueue = createUpdateQueue()) : queue2 = null, _queue1 = queue1, _queue2 = queue2 !== queue1 ? queue2 : null;
    }
    function insertUpdate(fiber, update) {
        ensureUpdateQueues(fiber);
        var queue1 = _queue1,
            queue2 = _queue2;
        (queue1.isProcessing || null !== queue2 && queue2.isProcessing) && warning$2(!1, "An update (setState, replaceState, or forceUpdate) was scheduled " + "from inside an update function. Update functions should be pure, " + "with zero side-effects. Consider using componentDidUpdate or a " + "callback.");
        var insertAfter1 = findInsertionPosition(queue1, update),
            insertBefore1 = null !== insertAfter1 ? insertAfter1.next : queue1.first;
        if (null === queue2) return insertUpdateIntoQueue(queue1, update, insertAfter1, insertBefore1), null;
        var insertAfter2 = findInsertionPosition(queue2, update),
            insertBefore2 = null !== insertAfter2 ? insertAfter2.next : queue2.first;
        if (insertUpdateIntoQueue(queue1, update, insertAfter1, insertBefore1), insertBefore1 === insertBefore2 && null !== insertBefore1 || insertAfter1 === insertAfter2 && null !== insertAfter1) return null === insertAfter2 && (queue2.first = update), null === insertBefore2 && (queue2.last = null), null;
        var update2 = cloneUpdate(update);
        return insertUpdateIntoQueue(queue2, update2, insertAfter2, insertBefore2), update2;
    }
    function addUpdate(fiber, partialState, callback, priorityLevel) {
        insertUpdate(fiber, {
            priorityLevel: priorityLevel,
            partialState: partialState,
            callback: callback,
            isReplace: !1,
            isForced: !1,
            isTopLevelUnmount: !1,
            next: null
        });
    }
    var addUpdate_1 = addUpdate;
    function addReplaceUpdate(fiber, state, callback, priorityLevel) {
        insertUpdate(fiber, {
            priorityLevel: priorityLevel,
            partialState: state,
            callback: callback,
            isReplace: !0,
            isForced: !1,
            isTopLevelUnmount: !1,
            next: null
        });
    }
    var addReplaceUpdate_1 = addReplaceUpdate;
    function addForceUpdate(fiber, callback, priorityLevel) {
        insertUpdate(fiber, {
            priorityLevel: priorityLevel,
            partialState: null,
            callback: callback,
            isReplace: !1,
            isForced: !0,
            isTopLevelUnmount: !1,
            next: null
        });
    }
    var addForceUpdate_1 = addForceUpdate;
    function getUpdatePriority(fiber) {
        var updateQueue = fiber.updateQueue;
        return null === updateQueue ? NoWork : fiber.tag !== ClassComponent && fiber.tag !== HostRoot ? NoWork : null !== updateQueue.first ? updateQueue.first.priorityLevel : NoWork;
    }
    var getUpdatePriority_1 = getUpdatePriority;
    function addTopLevelUpdate$1(fiber, partialState, callback, priorityLevel) {
        var isTopLevelUnmount = null === partialState.element,
            update = {
            priorityLevel: priorityLevel,
            partialState: partialState,
            callback: callback,
            isReplace: !1,
            isForced: !1,
            isTopLevelUnmount: isTopLevelUnmount,
            next: null
        },
            update2 = insertUpdate(fiber, update);
        if (isTopLevelUnmount) {
            var queue1 = _queue1,
                queue2 = _queue2;
            null !== queue1 && null !== update.next && (update.next = null, queue1.last = update), null !== queue2 && null !== update2 && null !== update2.next && (update2.next = null, queue2.last = update);
        }
    }
    var addTopLevelUpdate_1 = addTopLevelUpdate$1;
    function getStateFromUpdate(update, instance, prevState, props) {
        var partialState = update.partialState;
        if ("function" == typeof partialState) {
            return partialState.call(instance, prevState, props);
        }
        return partialState;
    }
    function beginUpdateQueue(current, workInProgress, queue, instance, prevState, props, priorityLevel) {
        if (null !== current && current.updateQueue === queue) {
            var currentQueue = queue;
            queue = workInProgress.updateQueue = {
                first: currentQueue.first,
                last: currentQueue.last,
                callbackList: null,
                hasForceUpdate: !1
            };
        }
        queue.isProcessing = !0;
        for (var callbackList = queue.callbackList, hasForceUpdate = queue.hasForceUpdate, state = prevState, dontMutatePrevState = !0, update = queue.first; null !== update && comparePriority(update.priorityLevel, priorityLevel) <= 0;) {
            queue.first = update.next, null === queue.first && (queue.last = null);
            var _partialState = void 0;
            update.isReplace ? (state = getStateFromUpdate(update, instance, state, props), dontMutatePrevState = !0) : (_partialState = getStateFromUpdate(update, instance, state, props)) && (state = dontMutatePrevState ? babelHelpers.extends({}, state, _partialState) : babelHelpers.extends(state, _partialState), dontMutatePrevState = !1), update.isForced && (hasForceUpdate = !0), null === update.callback || update.isTopLevelUnmount && null !== update.next || (callbackList = null !== callbackList ? callbackList : [], callbackList.push(update.callback), workInProgress.effectTag |= CallbackEffect), update = update.next;
        }
        return queue.callbackList = callbackList, queue.hasForceUpdate = hasForceUpdate, null !== queue.first || null !== callbackList || hasForceUpdate || (workInProgress.updateQueue = null), queue.isProcessing = !1, state;
    }
    var beginUpdateQueue_1 = beginUpdateQueue;
    function commitCallbacks(finishedWork, queue, context) {
        var callbackList = queue.callbackList;
        if (null !== callbackList) {
            queue.callbackList = null;
            for (var i = 0; i < callbackList.length; i++) {
                var _callback = callbackList[i];
                invariant("function" == typeof _callback, "Invalid argument passed as callback. Expected a function. Instead " + "received: %s", _callback), _callback.call(context);
            }
        }
    }
    var commitCallbacks_1 = commitCallbacks,
        ReactFiberUpdateQueue = {
        addUpdate: addUpdate_1,
        addReplaceUpdate: addReplaceUpdate_1,
        addForceUpdate: addForceUpdate_1,
        getUpdatePriority: getUpdatePriority_1,
        addTopLevelUpdate: addTopLevelUpdate_1,
        beginUpdateQueue: beginUpdateQueue_1,
        commitCallbacks: commitCallbacks_1
    };
    function getComponentName$1(fiber) {
        var type = fiber.type;
        return "string" == typeof type ? type : "function" == typeof type ? type.displayName || type.name : null;
    }
    var getComponentName_1 = getComponentName$1,
        ReactInstanceMap = {
        remove: function remove(key) {
            key._reactInternalFiber = void 0;
        },
        get: function get(key) {
            return key._reactInternalFiber;
        },
        has: function has(key) {
            return void 0 !== key._reactInternalFiber;
        },
        set: function set(key, value) {
            key._reactInternalFiber = value;
        }
    },
        ReactInstanceMap_1 = ReactInstanceMap,
        ReactInternals = react.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
        ReactGlobalSharedState = {
        ReactCurrentOwner: ReactInternals.ReactCurrentOwner
    };
    babelHelpers.extends(ReactGlobalSharedState, {
        ReactDebugCurrentFrame: ReactInternals.ReactDebugCurrentFrame
    });
    var ReactGlobalSharedState_1 = ReactGlobalSharedState,
        ReactCurrentOwner = ReactGlobalSharedState_1.ReactCurrentOwner,
        warning$4 = require$$0,
        ClassComponent$2 = ReactTypeOfWork.ClassComponent,
        HostComponent$1 = ReactTypeOfWork.HostComponent,
        HostRoot$2 = ReactTypeOfWork.HostRoot,
        HostPortal = ReactTypeOfWork.HostPortal,
        HostText = ReactTypeOfWork.HostText,
        NoEffect = ReactTypeOfSideEffect.NoEffect,
        Placement = ReactTypeOfSideEffect.Placement,
        MOUNTING = 1,
        MOUNTED = 2,
        UNMOUNTED = 3;
    function isFiberMountedImpl(fiber) {
        var node = fiber;
        if (fiber.alternate) for (; node.return;) {
            node = node.return;
        } else {
            if ((node.effectTag & Placement) !== NoEffect) return MOUNTING;
            for (; node.return;) {
                if (node = node.return, (node.effectTag & Placement) !== NoEffect) return MOUNTING;
            }
        }
        return node.tag === HostRoot$2 ? MOUNTED : UNMOUNTED;
    }
    var isFiberMounted$1 = function isFiberMounted$1(fiber) {
        return isFiberMountedImpl(fiber) === MOUNTED;
    },
        isMounted = function isMounted(component) {
        var owner = ReactCurrentOwner.current;
        if (null !== owner && owner.tag === ClassComponent$2) {
            var ownerFiber = owner,
                instance = ownerFiber.stateNode;
            warning$4(instance._warnedAboutRefsInRender, "%s is accessing isMounted inside its render() function. " + "render() should be a pure function of props and state. It should " + "never access something that requires stale data from the previous " + "render, such as refs. Move this logic to componentDidMount and " + "componentDidUpdate instead.", getComponentName_1(ownerFiber) || "A component"), instance._warnedAboutRefsInRender = !0;
        }
        var fiber = ReactInstanceMap_1.get(component);
        return !!fiber && isFiberMountedImpl(fiber) === MOUNTED;
    };
    function assertIsMounted(fiber) {
        invariant(isFiberMountedImpl(fiber) === MOUNTED, "Unable to find node on an unmounted component.");
    }
    function findCurrentFiberUsingSlowPath(fiber) {
        var alternate = fiber.alternate;
        if (!alternate) {
            var state = isFiberMountedImpl(fiber);
            return invariant(state !== UNMOUNTED, "Unable to find node on an unmounted component."), state === MOUNTING ? null : fiber;
        }
        for (var a = fiber, b = alternate; !0;) {
            var parentA = a.return,
                parentB = parentA ? parentA.alternate : null;
            if (!parentA || !parentB) break;
            if (parentA.child === parentB.child) {
                for (var child = parentA.child; child;) {
                    if (child === a) return assertIsMounted(parentA), fiber;
                    if (child === b) return assertIsMounted(parentA), alternate;
                    child = child.sibling;
                }
                invariant(!1, "Unable to find node on an unmounted component.");
            }
            if (a.return !== b.return) a = parentA, b = parentB;else {
                for (var didFindChild = !1, _child = parentA.child; _child;) {
                    if (_child === a) {
                        didFindChild = !0, a = parentA, b = parentB;
                        break;
                    }
                    if (_child === b) {
                        didFindChild = !0, b = parentA, a = parentB;
                        break;
                    }
                    _child = _child.sibling;
                }
                if (!didFindChild) {
                    for (_child = parentB.child; _child;) {
                        if (_child === a) {
                            didFindChild = !0, a = parentB, b = parentA;
                            break;
                        }
                        if (_child === b) {
                            didFindChild = !0, b = parentB, a = parentA;
                            break;
                        }
                        _child = _child.sibling;
                    }
                    invariant(didFindChild, "Child was not found in either parent set. This indicates a bug " + "in React related to the return pointer. Please file an issue.");
                }
            }
            invariant(a.alternate === b, "Return fibers should always be each others' alternates. " + "This error is likely caused by a bug in React. Please file an issue.");
        }
        return invariant(a.tag === HostRoot$2, "Unable to find node on an unmounted component."), a.stateNode.current === a ? fiber : alternate;
    }
    var findCurrentFiberUsingSlowPath_1 = findCurrentFiberUsingSlowPath,
        findCurrentHostFiber$1 = function findCurrentHostFiber$1(parent) {
        var currentParent = findCurrentFiberUsingSlowPath(parent);
        if (!currentParent) return null;
        for (var node = currentParent; !0;) {
            if (node.tag === HostComponent$1 || node.tag === HostText) return node;
            if (node.child) node.child.return = node, node = node.child;else {
                if (node === currentParent) return null;
                for (; !node.sibling;) {
                    if (!node.return || node.return === currentParent) return null;
                    node = node.return;
                }
                node.sibling.return = node.return, node = node.sibling;
            }
        }
        return null;
    },
        findCurrentHostFiberWithNoPortals$1 = function findCurrentHostFiberWithNoPortals$1(parent) {
        var currentParent = findCurrentFiberUsingSlowPath(parent);
        if (!currentParent) return null;
        for (var node = currentParent; !0;) {
            if (node.tag === HostComponent$1 || node.tag === HostText) return node;
            if (node.child && node.tag !== HostPortal) node.child.return = node, node = node.child;else {
                if (node === currentParent) return null;
                for (; !node.sibling;) {
                    if (!node.return || node.return === currentParent) return null;
                    node = node.return;
                }
                node.sibling.return = node.return, node = node.sibling;
            }
        }
        return null;
    },
        ReactFiberTreeReflection = {
        isFiberMounted: isFiberMounted$1,
        isMounted: isMounted,
        findCurrentFiberUsingSlowPath: findCurrentFiberUsingSlowPath_1,
        findCurrentHostFiber: findCurrentHostFiber$1,
        findCurrentHostFiberWithNoPortals: findCurrentHostFiberWithNoPortals$1
    },
        warning$5 = require$$0,
        valueStack = [],
        fiberStack = [],
        index = -1,
        createCursor$1 = function createCursor$1(defaultValue) {
        return {
            current: defaultValue
        };
    },
        isEmpty = function isEmpty() {
        return -1 === index;
    },
        pop$1 = function pop$1(cursor, fiber) {
        if (index < 0) return void warning$5(!1, "Unexpected pop.");
        fiber !== fiberStack[index] && warning$5(!1, "Unexpected Fiber popped."), cursor.current = valueStack[index], valueStack[index] = null, fiberStack[index] = null, index--;
    },
        push$1 = function push$1(cursor, value, fiber) {
        index++, valueStack[index] = cursor.current, fiberStack[index] = fiber, cursor.current = value;
    },
        reset = function reset() {
        for (; index > -1;) {
            valueStack[index] = null, fiberStack[index] = null, index--;
        }
    },
        ReactFiberStack = {
        createCursor: createCursor$1,
        isEmpty: isEmpty,
        pop: pop$1,
        push: push$1,
        reset: reset
    },
        describeComponentFrame = function describeComponentFrame(name, source, ownerName) {
        return "\n    in " + (name || "Unknown") + (source ? " (at " + source.fileName.replace(/^.*[\\\/]/, "") + ":" + source.lineNumber + ")" : ownerName ? " (created by " + ownerName + ")" : "");
    },
        IndeterminateComponent = ReactTypeOfWork.IndeterminateComponent,
        FunctionalComponent = ReactTypeOfWork.FunctionalComponent,
        ClassComponent$3 = ReactTypeOfWork.ClassComponent,
        HostComponent$2 = ReactTypeOfWork.HostComponent;
    function describeFiber(fiber) {
        switch (fiber.tag) {
            case IndeterminateComponent:
            case FunctionalComponent:
            case ClassComponent$3:
            case HostComponent$2:
                var owner = fiber._debugOwner,
                    source = fiber._debugSource,
                    name = getComponentName_1(fiber),
                    ownerName = null;
                return owner && (ownerName = getComponentName_1(owner)), describeComponentFrame(name, source, ownerName);

            default:
                return "";
        }
    }
    function getStackAddendumByWorkInProgressFiber$1(workInProgress) {
        var info = "",
            node = workInProgress;
        do {
            info += describeFiber(node), node = node.return;
        } while (node);
        return info;
    }
    var ReactFiberComponentTreeHook = {
        getStackAddendumByWorkInProgressFiber: getStackAddendumByWorkInProgressFiber$1
    },
        ReactDebugCurrentFrame = ReactGlobalSharedState_1.ReactDebugCurrentFrame,
        getComponentName$3 = getComponentName_1,
        _require2$1 = ReactFiberComponentTreeHook,
        getStackAddendumByWorkInProgressFiber = _require2$1.getStackAddendumByWorkInProgressFiber;
    function getCurrentFiberOwnerName() {
        var fiber = ReactDebugCurrentFiber$2.current;
        if (null === fiber) return null;
        var owner = fiber._debugOwner;
        return null !== owner && void 0 !== owner ? getComponentName$3(owner) : null;
    }
    function getCurrentFiberStackAddendum() {
        var fiber = ReactDebugCurrentFiber$2.current;
        return null === fiber ? null : getStackAddendumByWorkInProgressFiber(fiber);
    }
    function resetCurrentFiber() {
        ReactDebugCurrentFrame.getCurrentStack = null, ReactDebugCurrentFiber$2.current = null, ReactDebugCurrentFiber$2.phase = null;
    }
    function setCurrentFiber(fiber) {
        ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackAddendum, ReactDebugCurrentFiber$2.current = fiber, ReactDebugCurrentFiber$2.phase = null;
    }
    function setCurrentPhase(phase) {
        ReactDebugCurrentFiber$2.phase = phase;
    }
    var ReactDebugCurrentFiber$2 = {
        current: null,
        phase: null,
        resetCurrentFiber: resetCurrentFiber,
        setCurrentFiber: setCurrentFiber,
        setCurrentPhase: setCurrentPhase,
        getCurrentFiberOwnerName: getCurrentFiberOwnerName,
        getCurrentFiberStackAddendum: getCurrentFiberStackAddendum
    },
        ReactDebugCurrentFiber_1 = ReactDebugCurrentFiber$2,
        ReactDebugFiberPerf = null,
        _require$2 = ReactTypeOfWork,
        HostRoot$3 = _require$2.HostRoot,
        HostComponent$3 = _require$2.HostComponent,
        HostText$1 = _require$2.HostText,
        HostPortal$1 = _require$2.HostPortal,
        YieldComponent = _require$2.YieldComponent,
        Fragment = _require$2.Fragment,
        getComponentName$4 = getComponentName_1,
        reactEmoji = "⚛",
        warningEmoji = "⛔",
        supportsUserTiming = "undefined" != typeof performance && "function" == typeof performance.mark && "function" == typeof performance.clearMarks && "function" == typeof performance.measure && "function" == typeof performance.clearMeasures,
        currentFiber = null,
        currentPhase = null,
        currentPhaseFiber = null,
        isCommitting = !1,
        hasScheduledUpdateInCurrentCommit = !1,
        hasScheduledUpdateInCurrentPhase = !1,
        commitCountInCurrentWorkLoop = 0,
        effectCountInCurrentCommit = 0,
        labelsInCurrentCommit = new Set(),
        formatMarkName = function formatMarkName(markName) {
        return reactEmoji + " " + markName;
    },
        formatLabel = function formatLabel(label, warning) {
        return (warning ? warningEmoji + " " : reactEmoji + " ") + label + (warning ? " Warning: " + warning : "");
    },
        beginMark = function beginMark(markName) {
        performance.mark(formatMarkName(markName));
    },
        clearMark = function clearMark(markName) {
        performance.clearMarks(formatMarkName(markName));
    },
        endMark = function endMark(label, markName, warning) {
        var formattedMarkName = formatMarkName(markName),
            formattedLabel = formatLabel(label, warning);
        try {
            performance.measure(formattedLabel, formattedMarkName);
        } catch (err) {}
        performance.clearMarks(formattedMarkName), performance.clearMeasures(formattedLabel);
    },
        getFiberMarkName = function getFiberMarkName(label, debugID) {
        return label + " (#" + debugID + ")";
    },
        getFiberLabel = function getFiberLabel(componentName, isMounted, phase) {
        return null === phase ? componentName + " [" + (isMounted ? "update" : "mount") + "]" : componentName + "." + phase;
    },
        beginFiberMark = function beginFiberMark(fiber, phase) {
        var componentName = getComponentName$4(fiber) || "Unknown",
            debugID = fiber._debugID,
            isMounted = null !== fiber.alternate,
            label = getFiberLabel(componentName, isMounted, phase);
        if (isCommitting && labelsInCurrentCommit.has(label)) return !1;
        labelsInCurrentCommit.add(label);
        var markName = getFiberMarkName(label, debugID);
        return beginMark(markName), !0;
    },
        clearFiberMark = function clearFiberMark(fiber, phase) {
        var componentName = getComponentName$4(fiber) || "Unknown",
            debugID = fiber._debugID,
            isMounted = null !== fiber.alternate,
            label = getFiberLabel(componentName, isMounted, phase),
            markName = getFiberMarkName(label, debugID);
        clearMark(markName);
    },
        endFiberMark = function endFiberMark(fiber, phase, warning) {
        var componentName = getComponentName$4(fiber) || "Unknown",
            debugID = fiber._debugID,
            isMounted = null !== fiber.alternate,
            label = getFiberLabel(componentName, isMounted, phase),
            markName = getFiberMarkName(label, debugID);
        endMark(label, markName, warning);
    },
        shouldIgnoreFiber = function shouldIgnoreFiber(fiber) {
        switch (fiber.tag) {
            case HostRoot$3:
            case HostComponent$3:
            case HostText$1:
            case HostPortal$1:
            case YieldComponent:
            case Fragment:
                return !0;

            default:
                return !1;
        }
    },
        clearPendingPhaseMeasurement = function clearPendingPhaseMeasurement() {
        null !== currentPhase && null !== currentPhaseFiber && clearFiberMark(currentPhaseFiber, currentPhase), currentPhaseFiber = null, currentPhase = null, hasScheduledUpdateInCurrentPhase = !1;
    },
        pauseTimers = function pauseTimers() {
        for (var fiber = currentFiber; fiber;) {
            fiber._debugIsCurrentlyTiming && endFiberMark(fiber, null, null), fiber = fiber.return;
        }
    },
        resumeTimersRecursively = function resumeTimersRecursively(fiber) {
        null !== fiber.return && resumeTimersRecursively(fiber.return), fiber._debugIsCurrentlyTiming && beginFiberMark(fiber, null);
    },
        resumeTimers = function resumeTimers() {
        null !== currentFiber && resumeTimersRecursively(currentFiber);
    };
    ReactDebugFiberPerf = {
        recordEffect: function recordEffect() {
            effectCountInCurrentCommit++;
        },
        recordScheduleUpdate: function recordScheduleUpdate() {
            isCommitting && (hasScheduledUpdateInCurrentCommit = !0), null !== currentPhase && "componentWillMount" !== currentPhase && "componentWillReceiveProps" !== currentPhase && (hasScheduledUpdateInCurrentPhase = !0);
        },
        startWorkTimer: function startWorkTimer(fiber) {
            supportsUserTiming && !shouldIgnoreFiber(fiber) && (currentFiber = fiber, beginFiberMark(fiber, null) && (fiber._debugIsCurrentlyTiming = !0));
        },
        cancelWorkTimer: function cancelWorkTimer(fiber) {
            supportsUserTiming && !shouldIgnoreFiber(fiber) && (fiber._debugIsCurrentlyTiming = !1, clearFiberMark(fiber, null));
        },
        stopWorkTimer: function stopWorkTimer(fiber) {
            supportsUserTiming && !shouldIgnoreFiber(fiber) && (currentFiber = fiber.return, fiber._debugIsCurrentlyTiming && (fiber._debugIsCurrentlyTiming = !1, endFiberMark(fiber, null, null)));
        },
        stopFailedWorkTimer: function stopFailedWorkTimer(fiber) {
            if (supportsUserTiming && !shouldIgnoreFiber(fiber) && (currentFiber = fiber.return, fiber._debugIsCurrentlyTiming)) {
                fiber._debugIsCurrentlyTiming = !1;
                endFiberMark(fiber, null, "An error was thrown inside this error boundary");
            }
        },
        startPhaseTimer: function startPhaseTimer(fiber, phase) {
            supportsUserTiming && (clearPendingPhaseMeasurement(), beginFiberMark(fiber, phase) && (currentPhaseFiber = fiber, currentPhase = phase));
        },
        stopPhaseTimer: function stopPhaseTimer() {
            if (supportsUserTiming) {
                if (null !== currentPhase && null !== currentPhaseFiber) {
                    endFiberMark(currentPhaseFiber, currentPhase, hasScheduledUpdateInCurrentPhase ? "Scheduled a cascading update" : null);
                }
                currentPhase = null, currentPhaseFiber = null;
            }
        },
        startWorkLoopTimer: function startWorkLoopTimer() {
            supportsUserTiming && (commitCountInCurrentWorkLoop = 0, beginMark("(React Tree Reconciliation)"), resumeTimers());
        },
        stopWorkLoopTimer: function stopWorkLoopTimer() {
            if (supportsUserTiming) {
                var warning = commitCountInCurrentWorkLoop > 1 ? "There were cascading updates" : null;
                commitCountInCurrentWorkLoop = 0, pauseTimers(), endMark("(React Tree Reconciliation)", "(React Tree Reconciliation)", warning);
            }
        },
        startCommitTimer: function startCommitTimer() {
            supportsUserTiming && (isCommitting = !0, hasScheduledUpdateInCurrentCommit = !1, labelsInCurrentCommit.clear(), beginMark("(Committing Changes)"));
        },
        stopCommitTimer: function stopCommitTimer() {
            if (supportsUserTiming) {
                var warning = null;
                hasScheduledUpdateInCurrentCommit ? warning = "Lifecycle hook scheduled a cascading update" : commitCountInCurrentWorkLoop > 0 && (warning = "Caused by a cascading update in earlier commit"), hasScheduledUpdateInCurrentCommit = !1, commitCountInCurrentWorkLoop++, isCommitting = !1, labelsInCurrentCommit.clear(), endMark("(Committing Changes)", "(Committing Changes)", warning);
            }
        },
        startCommitHostEffectsTimer: function startCommitHostEffectsTimer() {
            supportsUserTiming && (effectCountInCurrentCommit = 0, beginMark("(Committing Host Effects)"));
        },
        stopCommitHostEffectsTimer: function stopCommitHostEffectsTimer() {
            if (supportsUserTiming) {
                var count = effectCountInCurrentCommit;
                effectCountInCurrentCommit = 0, endMark("(Committing Host Effects: " + count + " Total)", "(Committing Host Effects)", null);
            }
        },
        startCommitLifeCyclesTimer: function startCommitLifeCyclesTimer() {
            supportsUserTiming && (effectCountInCurrentCommit = 0, beginMark("(Calling Lifecycle Methods)"));
        },
        stopCommitLifeCyclesTimer: function stopCommitLifeCyclesTimer() {
            if (supportsUserTiming) {
                var count = effectCountInCurrentCommit;
                effectCountInCurrentCommit = 0, endMark("(Calling Lifecycle Methods: " + count + " Total)", "(Calling Lifecycle Methods)", null);
            }
        }
    };
    var ReactDebugFiberPerf_1 = ReactDebugFiberPerf,
        isFiberMounted = ReactFiberTreeReflection.isFiberMounted,
        ClassComponent$1 = ReactTypeOfWork.ClassComponent,
        HostRoot$1 = ReactTypeOfWork.HostRoot,
        createCursor = ReactFiberStack.createCursor,
        pop = ReactFiberStack.pop,
        push = ReactFiberStack.push,
        warning$3 = require$$0,
        checkPropTypes$1 = checkPropTypes,
        ReactDebugCurrentFiber$1 = ReactDebugCurrentFiber_1,
        _require4 = ReactDebugFiberPerf_1,
        startPhaseTimer = _require4.startPhaseTimer,
        stopPhaseTimer = _require4.stopPhaseTimer,
        warnedAboutMissingGetChildContext = {},
        contextStackCursor = createCursor(emptyObject),
        didPerformWorkStackCursor = createCursor(!1),
        previousContext = emptyObject;
    function getUnmaskedContext(workInProgress) {
        return isContextProvider$1(workInProgress) ? previousContext : contextStackCursor.current;
    }
    var getUnmaskedContext_1 = getUnmaskedContext;
    function cacheContext(workInProgress, unmaskedContext, maskedContext) {
        var instance = workInProgress.stateNode;
        instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
    }
    var cacheContext_1 = cacheContext,
        getMaskedContext = function getMaskedContext(workInProgress, unmaskedContext) {
        var type = workInProgress.type,
            contextTypes = type.contextTypes;
        if (!contextTypes) return emptyObject;
        var instance = workInProgress.stateNode;
        if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
        var context = {};
        for (var key in contextTypes) {
            context[key] = unmaskedContext[key];
        }var name = getComponentName_1(workInProgress) || "Unknown";
        return checkPropTypes$1(contextTypes, context, "context", name, ReactDebugCurrentFiber$1.getCurrentFiberStackAddendum), instance && cacheContext(workInProgress, unmaskedContext, context), context;
    },
        hasContextChanged = function hasContextChanged() {
        return didPerformWorkStackCursor.current;
    };
    function isContextConsumer(fiber) {
        return fiber.tag === ClassComponent$1 && null != fiber.type.contextTypes;
    }
    var isContextConsumer_1 = isContextConsumer;
    function isContextProvider$1(fiber) {
        return fiber.tag === ClassComponent$1 && null != fiber.type.childContextTypes;
    }
    var isContextProvider_1 = isContextProvider$1;
    function popContextProvider(fiber) {
        isContextProvider$1(fiber) && (pop(didPerformWorkStackCursor, fiber), pop(contextStackCursor, fiber));
    }
    var popContextProvider_1 = popContextProvider,
        popTopLevelContextObject = function popTopLevelContextObject(fiber) {
        pop(didPerformWorkStackCursor, fiber), pop(contextStackCursor, fiber);
    },
        pushTopLevelContextObject = function pushTopLevelContextObject(fiber, context, didChange) {
        invariant(null == contextStackCursor.cursor, "Unexpected context found on stack. " + "This error is likely caused by a bug in React. Please file an issue."), push(contextStackCursor, context, fiber), push(didPerformWorkStackCursor, didChange, fiber);
    };
    function processChildContext$1(fiber, parentContext) {
        var instance = fiber.stateNode,
            childContextTypes = fiber.type.childContextTypes;
        if ("function" != typeof instance.getChildContext) {
            var componentName = getComponentName_1(fiber) || "Unknown";
            return warnedAboutMissingGetChildContext[componentName] || (warnedAboutMissingGetChildContext[componentName] = !0, warning$3(!1, "%s.childContextTypes is specified but there is no getChildContext() method " + "on the instance. You can either define getChildContext() on %s or remove " + "childContextTypes from it.", componentName, componentName)), parentContext;
        }
        var childContext = void 0;
        ReactDebugCurrentFiber$1.setCurrentPhase("getChildContext"), startPhaseTimer(fiber, "getChildContext"), childContext = instance.getChildContext(), stopPhaseTimer(), ReactDebugCurrentFiber$1.setCurrentPhase(null);
        for (var contextKey in childContext) {
            invariant(contextKey in childContextTypes, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', getComponentName_1(fiber) || "Unknown", contextKey);
        }var name = getComponentName_1(fiber) || "Unknown";
        return checkPropTypes$1(childContextTypes, childContext, "child context", name, ReactDebugCurrentFiber$1.getCurrentFiberStackAddendum), babelHelpers.extends({}, parentContext, childContext);
    }
    var processChildContext_1 = processChildContext$1,
        pushContextProvider = function pushContextProvider(workInProgress) {
        if (!isContextProvider$1(workInProgress)) return !1;
        var instance = workInProgress.stateNode,
            memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyObject;
        return previousContext = contextStackCursor.current, push(contextStackCursor, memoizedMergedChildContext, workInProgress), push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress), !0;
    },
        invalidateContextProvider = function invalidateContextProvider(workInProgress, didChange) {
        var instance = workInProgress.stateNode;
        if (invariant(instance, "Expected to have an instance by this point. " + "This error is likely caused by a bug in React. Please file an issue."), didChange) {
            var mergedContext = processChildContext$1(workInProgress, previousContext);
            instance.__reactInternalMemoizedMergedChildContext = mergedContext, pop(didPerformWorkStackCursor, workInProgress), pop(contextStackCursor, workInProgress), push(contextStackCursor, mergedContext, workInProgress), push(didPerformWorkStackCursor, didChange, workInProgress);
        } else pop(didPerformWorkStackCursor, workInProgress), push(didPerformWorkStackCursor, didChange, workInProgress);
    },
        resetContext = function resetContext() {
        previousContext = emptyObject, contextStackCursor.current = emptyObject, didPerformWorkStackCursor.current = !1;
    },
        findCurrentUnmaskedContext$1 = function findCurrentUnmaskedContext$1(fiber) {
        invariant(isFiberMounted(fiber) && fiber.tag === ClassComponent$1, "Expected subtree parent to be a mounted class component. " + "This error is likely caused by a bug in React. Please file an issue.");
        for (var node = fiber; node.tag !== HostRoot$1;) {
            if (isContextProvider$1(node)) return node.stateNode.__reactInternalMemoizedMergedChildContext;
            var parent = node.return;
            invariant(parent, "Found unexpected detached subtree parent. " + "This error is likely caused by a bug in React. Please file an issue."), node = parent;
        }
        return node.stateNode.context;
    },
        ReactFiberContext = {
        getUnmaskedContext: getUnmaskedContext_1,
        cacheContext: cacheContext_1,
        getMaskedContext: getMaskedContext,
        hasContextChanged: hasContextChanged,
        isContextConsumer: isContextConsumer_1,
        isContextProvider: isContextProvider_1,
        popContextProvider: popContextProvider_1,
        popTopLevelContextObject: popTopLevelContextObject,
        pushTopLevelContextObject: pushTopLevelContextObject,
        processChildContext: processChildContext_1,
        pushContextProvider: pushContextProvider,
        invalidateContextProvider: invalidateContextProvider,
        resetContext: resetContext,
        findCurrentUnmaskedContext: findCurrentUnmaskedContext$1
    },
        ReactTypeOfInternalContext = {
        NoContext: 0,
        AsyncUpdates: 1
    },
        IndeterminateComponent$1 = ReactTypeOfWork.IndeterminateComponent,
        ClassComponent$4 = ReactTypeOfWork.ClassComponent,
        HostRoot$4 = ReactTypeOfWork.HostRoot,
        HostComponent$4 = ReactTypeOfWork.HostComponent,
        HostText$2 = ReactTypeOfWork.HostText,
        HostPortal$2 = ReactTypeOfWork.HostPortal,
        CoroutineComponent = ReactTypeOfWork.CoroutineComponent,
        YieldComponent$1 = ReactTypeOfWork.YieldComponent,
        Fragment$1 = ReactTypeOfWork.Fragment,
        NoWork$1 = ReactPriorityLevel.NoWork,
        NoContext = ReactTypeOfInternalContext.NoContext,
        NoEffect$1 = ReactTypeOfSideEffect.NoEffect,
        getComponentName$5 = getComponentName_1,
        hasBadMapPolyfill = !1;
    try {
        var nonExtensibleObject = Object.preventExtensions({});
        new Map([[nonExtensibleObject, null]]), new Set([nonExtensibleObject]);
    } catch (e) {
        hasBadMapPolyfill = !0;
    }
    var debugCounter = 1;
    function FiberNode(tag, key, internalContextTag) {
        this.tag = tag, this.key = key, this.type = null, this.stateNode = null, this.return = null, this.child = null, this.sibling = null, this.index = 0, this.ref = null, this.pendingProps = null, this.memoizedProps = null, this.updateQueue = null, this.memoizedState = null, this.internalContextTag = internalContextTag, this.effectTag = NoEffect$1, this.nextEffect = null, this.firstEffect = null, this.lastEffect = null, this.pendingWorkPriority = NoWork$1, this.alternate = null, this._debugID = debugCounter++, this._debugSource = null, this._debugOwner = null, this._debugIsCurrentlyTiming = !1, hasBadMapPolyfill || "function" != typeof Object.preventExtensions || Object.preventExtensions(this);
    }
    var createFiber = function createFiber(tag, key, internalContextTag) {
        return new FiberNode(tag, key, internalContextTag);
    };
    function shouldConstruct(Component) {
        return !(!Component.prototype || !Component.prototype.isReactComponent);
    }
    var createWorkInProgress = function createWorkInProgress(current, renderPriority) {
        var workInProgress = current.alternate;
        return null === workInProgress ? (workInProgress = createFiber(current.tag, current.key, current.internalContextTag), workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress._debugID = current._debugID, workInProgress._debugSource = current._debugSource, workInProgress._debugOwner = current._debugOwner, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.effectTag = NoEffect$1, workInProgress.nextEffect = null, workInProgress.firstEffect = null, workInProgress.lastEffect = null), workInProgress.pendingWorkPriority = renderPriority, workInProgress.child = current.child, workInProgress.memoizedProps = current.memoizedProps, workInProgress.memoizedState = current.memoizedState, workInProgress.updateQueue = current.updateQueue, workInProgress.sibling = current.sibling, workInProgress.index = current.index, workInProgress.ref = current.ref, workInProgress;
    },
        createHostRootFiber$1 = function createHostRootFiber$1() {
        return createFiber(HostRoot$4, null, NoContext);
    },
        createFiberFromElement = function createFiberFromElement(element, internalContextTag, priorityLevel) {
        var owner = null;
        owner = element._owner;
        var fiber = createFiberFromElementType(element.type, element.key, internalContextTag, owner);
        return fiber.pendingProps = element.props, fiber.pendingWorkPriority = priorityLevel, fiber._debugSource = element._source, fiber._debugOwner = element._owner, fiber;
    },
        createFiberFromFragment = function createFiberFromFragment(elements, internalContextTag, priorityLevel) {
        var fiber = createFiber(Fragment$1, null, internalContextTag);
        return fiber.pendingProps = elements, fiber.pendingWorkPriority = priorityLevel, fiber;
    },
        createFiberFromText = function createFiberFromText(content, internalContextTag, priorityLevel) {
        var fiber = createFiber(HostText$2, null, internalContextTag);
        return fiber.pendingProps = content, fiber.pendingWorkPriority = priorityLevel, fiber;
    };
    function createFiberFromElementType(type, key, internalContextTag, debugOwner) {
        var fiber = void 0;
        if ("function" == typeof type) fiber = shouldConstruct(type) ? createFiber(ClassComponent$4, key, internalContextTag) : createFiber(IndeterminateComponent$1, key, internalContextTag), fiber.type = type;else if ("string" == typeof type) fiber = createFiber(HostComponent$4, key, internalContextTag), fiber.type = type;else if ("object" == typeof type && null !== type && "number" == typeof type.tag) fiber = type;else {
            var info = "";
            (void 0 === type || "object" == typeof type && null !== type && 0 === Object.keys(type).length) && (info += " You likely forgot to export your component from the file " + "it's defined in.");
            var ownerName = debugOwner ? getComponentName$5(debugOwner) : null;
            ownerName && (info += "\n\nCheck the render method of `" + ownerName + "`."), invariant(!1, "Element type is invalid: expected a string (for built-in components) " + "or a class/function (for composite components) but got: %s.%s", null == type ? type : typeof type, info);
        }
        return fiber;
    }
    var REACT_COROUTINE_TYPE$1,
        REACT_YIELD_TYPE$1,
        createFiberFromElementType_1 = createFiberFromElementType,
        createFiberFromHostInstanceForDeletion = function createFiberFromHostInstanceForDeletion() {
        var fiber = createFiber(HostComponent$4, null, NoContext);
        return fiber.type = "DELETED", fiber;
    },
        createFiberFromCoroutine = function createFiberFromCoroutine(coroutine, internalContextTag, priorityLevel) {
        var fiber = createFiber(CoroutineComponent, coroutine.key, internalContextTag);
        return fiber.type = coroutine.handler, fiber.pendingProps = coroutine, fiber.pendingWorkPriority = priorityLevel, fiber;
    },
        createFiberFromYield = function createFiberFromYield(yieldNode, internalContextTag, priorityLevel) {
        return createFiber(YieldComponent$1, null, internalContextTag);
    },
        createFiberFromPortal = function createFiberFromPortal(portal, internalContextTag, priorityLevel) {
        var fiber = createFiber(HostPortal$2, portal.key, internalContextTag);
        return fiber.pendingProps = portal.children || [], fiber.pendingWorkPriority = priorityLevel, fiber.stateNode = {
            containerInfo: portal.containerInfo,
            implementation: portal.implementation
        }, fiber;
    },
        largerPriority = function largerPriority(p1, p2) {
        return p1 !== NoWork$1 && (p2 === NoWork$1 || p2 > p1) ? p1 : p2;
    },
        ReactFiber = {
        createWorkInProgress: createWorkInProgress,
        createHostRootFiber: createHostRootFiber$1,
        createFiberFromElement: createFiberFromElement,
        createFiberFromFragment: createFiberFromFragment,
        createFiberFromText: createFiberFromText,
        createFiberFromElementType: createFiberFromElementType_1,
        createFiberFromHostInstanceForDeletion: createFiberFromHostInstanceForDeletion,
        createFiberFromCoroutine: createFiberFromCoroutine,
        createFiberFromYield: createFiberFromYield,
        createFiberFromPortal: createFiberFromPortal,
        largerPriority: largerPriority
    },
        createHostRootFiber = ReactFiber.createHostRootFiber,
        createFiberRoot$1 = function createFiberRoot$1(containerInfo) {
        var uninitializedFiber = createHostRootFiber(),
            root = {
            current: uninitializedFiber,
            containerInfo: containerInfo,
            isScheduled: !1,
            nextScheduledRoot: null,
            context: null,
            pendingContext: null
        };
        return uninitializedFiber.stateNode = root, root;
    },
        ReactFiberRoot = {
        createFiberRoot: createFiberRoot$1
    };
    "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for") ? (REACT_COROUTINE_TYPE$1 = (typeof Symbol === "function" ? Symbol.for : "@@for")("react.coroutine"), REACT_YIELD_TYPE$1 = (typeof Symbol === "function" ? Symbol.for : "@@for")("react.yield")) : (REACT_COROUTINE_TYPE$1 = 60104, REACT_YIELD_TYPE$1 = 60105);
    var createCoroutine = function createCoroutine(children, handler, props) {
        var key = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null,
            coroutine = {
            $$typeof: REACT_COROUTINE_TYPE$1,
            key: null == key ? null : "" + key,
            children: children,
            handler: handler,
            props: props
        };
        return Object.freeze && (Object.freeze(coroutine.props), Object.freeze(coroutine)), coroutine;
    },
        createYield = function createYield(value) {
        var yieldNode = {
            $$typeof: REACT_YIELD_TYPE$1,
            value: value
        };
        return Object.freeze && Object.freeze(yieldNode), yieldNode;
    },
        isCoroutine = function isCoroutine(object) {
        return "object" == typeof object && null !== object && object.$$typeof === REACT_COROUTINE_TYPE$1;
    },
        isYield = function isYield(object) {
        return "object" == typeof object && null !== object && object.$$typeof === REACT_YIELD_TYPE$1;
    },
        REACT_YIELD_TYPE_1 = REACT_YIELD_TYPE$1,
        REACT_COROUTINE_TYPE_1 = REACT_COROUTINE_TYPE$1,
        ReactCoroutine = {
        createCoroutine: createCoroutine,
        createYield: createYield,
        isCoroutine: isCoroutine,
        isYield: isYield,
        REACT_YIELD_TYPE: REACT_YIELD_TYPE_1,
        REACT_COROUTINE_TYPE: REACT_COROUTINE_TYPE_1
    },
        REACT_COROUTINE_TYPE = ReactCoroutine.REACT_COROUTINE_TYPE,
        REACT_YIELD_TYPE = ReactCoroutine.REACT_YIELD_TYPE,
        REACT_PORTAL_TYPE$1 = ReactPortal.REACT_PORTAL_TYPE,
        _require3$2 = ReactDebugCurrentFiber_1,
        getCurrentFiberStackAddendum$1 = _require3$2.getCurrentFiberStackAddendum,
        warning$8 = require$$0,
        didWarnAboutMaps = !1,
        ownerHasKeyUseWarning = {},
        warnForMissingKey = function warnForMissingKey(child) {
        if (null !== child && "object" == typeof child && child._store && !child._store.validated && null == child.key) {
            invariant("object" == typeof child._store, "React Component in warnForMissingKey should have a _store. " + "This error is likely caused by a bug in React. Please file an issue."), child._store.validated = !0;
            var currentComponentErrorInfo = "Each child in an array or iterator should have a unique " + '"key" prop. See https://fb.me/react-warning-keys for ' + "more information." + (getCurrentFiberStackAddendum$1() || "");
            ownerHasKeyUseWarning[currentComponentErrorInfo] || (ownerHasKeyUseWarning[currentComponentErrorInfo] = !0, warning$8(!1, "Each child in an array or iterator should have a unique " + '"key" prop. See https://fb.me/react-warning-keys for ' + "more information.%s", getCurrentFiberStackAddendum$1()));
        }
    },
        createWorkInProgress$2 = ReactFiber.createWorkInProgress,
        createFiberFromElement$1 = ReactFiber.createFiberFromElement,
        createFiberFromFragment$1 = ReactFiber.createFiberFromFragment,
        createFiberFromText$1 = ReactFiber.createFiberFromText,
        createFiberFromCoroutine$1 = ReactFiber.createFiberFromCoroutine,
        createFiberFromYield$1 = ReactFiber.createFiberFromYield,
        createFiberFromPortal$1 = ReactFiber.createFiberFromPortal,
        isArray = Array.isArray,
        FunctionalComponent$2 = ReactTypeOfWork.FunctionalComponent,
        ClassComponent$7 = ReactTypeOfWork.ClassComponent,
        HostText$4 = ReactTypeOfWork.HostText,
        HostPortal$5 = ReactTypeOfWork.HostPortal,
        CoroutineComponent$2 = ReactTypeOfWork.CoroutineComponent,
        YieldComponent$3 = ReactTypeOfWork.YieldComponent,
        Fragment$3 = ReactTypeOfWork.Fragment,
        NoEffect$2 = ReactTypeOfSideEffect.NoEffect,
        Placement$3 = ReactTypeOfSideEffect.Placement,
        Deletion$1 = ReactTypeOfSideEffect.Deletion,
        ITERATOR_SYMBOL = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator"),
        REACT_ELEMENT_TYPE = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for") && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") || 60103;
    function getIteratorFn(maybeIterable) {
        if (null === maybeIterable || void 0 === maybeIterable) return null;
        var iteratorFn = ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
        return "function" == typeof iteratorFn ? iteratorFn : null;
    }
    function coerceRef(current, element) {
        var mixedRef = element.ref;
        if (null !== mixedRef && "function" != typeof mixedRef) {
            if (element._owner) {
                var owner = element._owner,
                    inst = void 0;
                if (owner) {
                    var ownerFiber = owner;
                    invariant(ownerFiber.tag === ClassComponent$7, "Stateless function components cannot have refs."), inst = ownerFiber.stateNode;
                }
                invariant(inst, "Missing owner for string ref %s. This error is likely caused by a " + "bug in React. Please file an issue.", mixedRef);
                var stringRef = "" + mixedRef;
                if (null !== current && null !== current.ref && current.ref._stringRef === stringRef) return current.ref;
                var ref = function ref(value) {
                    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
                    null === value ? delete refs[stringRef] : refs[stringRef] = value;
                };
                return ref._stringRef = stringRef, ref;
            }
            invariant("string" == typeof mixedRef, "Expected ref to be a function or a string."), invariant(element._owner, "Element ref was specified as a string (%s) but no owner was " + "set. You may have multiple copies of React loaded. " + "(details: https://fb.me/react-refs-must-have-owner).", mixedRef);
        }
        return mixedRef;
    }
    function throwOnInvalidObjectType(returnFiber, newChild) {
        if ("textarea" !== returnFiber.type) {
            var addendum = "";
            addendum = " If you meant to render a collection of children, use an array " + "instead." + (getCurrentFiberStackAddendum$1() || ""), invariant(!1, "Objects are not valid as a React child (found: %s).%s", "[object Object]" === Object.prototype.toString.call(newChild) ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild, addendum);
        }
    }
    function warnOnFunctionType() {
        warning$8(!1, "Functions are not valid as a React child. This may happen if " + "you return a Component instead of <Component /> from render. " + "Or maybe you meant to call this function rather than return it.%s", getCurrentFiberStackAddendum$1() || "");
    }
    function ChildReconciler(shouldClone, shouldTrackSideEffects) {
        function deleteChild(returnFiber, childToDelete) {
            if (shouldTrackSideEffects) {
                if (!shouldClone) {
                    if (null === childToDelete.alternate) return;
                    childToDelete = childToDelete.alternate;
                }
                var last = returnFiber.lastEffect;
                null !== last ? (last.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete, childToDelete.nextEffect = null, childToDelete.effectTag = Deletion$1;
            }
        }
        function deleteRemainingChildren(returnFiber, currentFirstChild) {
            if (!shouldTrackSideEffects) return null;
            for (var childToDelete = currentFirstChild; null !== childToDelete;) {
                deleteChild(returnFiber, childToDelete), childToDelete = childToDelete.sibling;
            }return null;
        }
        function mapRemainingChildren(returnFiber, currentFirstChild) {
            for (var existingChildren = new Map(), existingChild = currentFirstChild; null !== existingChild;) {
                null !== existingChild.key ? existingChildren.set(existingChild.key, existingChild) : existingChildren.set(existingChild.index, existingChild), existingChild = existingChild.sibling;
            }return existingChildren;
        }
        function useFiber(fiber, priority) {
            if (shouldClone) {
                var clone = createWorkInProgress$2(fiber, priority);
                return clone.index = 0, clone.sibling = null, clone;
            }
            return fiber.pendingWorkPriority = priority, fiber.effectTag = NoEffect$2, fiber.index = 0, fiber.sibling = null, fiber;
        }
        function placeChild(newFiber, lastPlacedIndex, newIndex) {
            if (newFiber.index = newIndex, !shouldTrackSideEffects) return lastPlacedIndex;
            var current = newFiber.alternate;
            if (null !== current) {
                var oldIndex = current.index;
                return oldIndex < lastPlacedIndex ? (newFiber.effectTag = Placement$3, lastPlacedIndex) : oldIndex;
            }
            return newFiber.effectTag = Placement$3, lastPlacedIndex;
        }
        function placeSingleChild(newFiber) {
            return shouldTrackSideEffects && null === newFiber.alternate && (newFiber.effectTag = Placement$3), newFiber;
        }
        function updateTextNode(returnFiber, current, textContent, priority) {
            if (null === current || current.tag !== HostText$4) {
                var created = createFiberFromText$1(textContent, returnFiber.internalContextTag, priority);
                return created.return = returnFiber, created;
            }
            var existing = useFiber(current, priority);
            return existing.pendingProps = textContent, existing.return = returnFiber, existing;
        }
        function updateElement(returnFiber, current, element, priority) {
            if (null === current || current.type !== element.type) {
                var created = createFiberFromElement$1(element, returnFiber.internalContextTag, priority);
                return created.ref = coerceRef(current, element), created.return = returnFiber, created;
            }
            var existing = useFiber(current, priority);
            return existing.ref = coerceRef(current, element), existing.pendingProps = element.props, existing.return = returnFiber, existing._debugSource = element._source, existing._debugOwner = element._owner, existing;
        }
        function updateCoroutine(returnFiber, current, coroutine, priority) {
            if (null === current || current.tag !== CoroutineComponent$2) {
                var created = createFiberFromCoroutine$1(coroutine, returnFiber.internalContextTag, priority);
                return created.return = returnFiber, created;
            }
            var existing = useFiber(current, priority);
            return existing.pendingProps = coroutine, existing.return = returnFiber, existing;
        }
        function updateYield(returnFiber, current, yieldNode, priority) {
            if (null === current || current.tag !== YieldComponent$3) {
                var created = createFiberFromYield$1(yieldNode, returnFiber.internalContextTag, priority);
                return created.type = yieldNode.value, created.return = returnFiber, created;
            }
            var existing = useFiber(current, priority);
            return existing.type = yieldNode.value, existing.return = returnFiber, existing;
        }
        function updatePortal(returnFiber, current, portal, priority) {
            if (null === current || current.tag !== HostPortal$5 || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
                var created = createFiberFromPortal$1(portal, returnFiber.internalContextTag, priority);
                return created.return = returnFiber, created;
            }
            var existing = useFiber(current, priority);
            return existing.pendingProps = portal.children || [], existing.return = returnFiber, existing;
        }
        function updateFragment(returnFiber, current, fragment, priority) {
            if (null === current || current.tag !== Fragment$3) {
                var created = createFiberFromFragment$1(fragment, returnFiber.internalContextTag, priority);
                return created.return = returnFiber, created;
            }
            var existing = useFiber(current, priority);
            return existing.pendingProps = fragment, existing.return = returnFiber, existing;
        }
        function createChild(returnFiber, newChild, priority) {
            if ("string" == typeof newChild || "number" == typeof newChild) {
                var created = createFiberFromText$1("" + newChild, returnFiber.internalContextTag, priority);
                return created.return = returnFiber, created;
            }
            if ("object" == typeof newChild && null !== newChild) {
                switch (newChild.$$typeof) {
                    case REACT_ELEMENT_TYPE:
                        var _created = createFiberFromElement$1(newChild, returnFiber.internalContextTag, priority);
                        return _created.ref = coerceRef(null, newChild), _created.return = returnFiber, _created;

                    case REACT_COROUTINE_TYPE:
                        var _created2 = createFiberFromCoroutine$1(newChild, returnFiber.internalContextTag, priority);
                        return _created2.return = returnFiber, _created2;

                    case REACT_YIELD_TYPE:
                        var _created3 = createFiberFromYield$1(newChild, returnFiber.internalContextTag, priority);
                        return _created3.type = newChild.value, _created3.return = returnFiber, _created3;

                    case REACT_PORTAL_TYPE$1:
                        var _created4 = createFiberFromPortal$1(newChild, returnFiber.internalContextTag, priority);
                        return _created4.return = returnFiber, _created4;
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                    var _created5 = createFiberFromFragment$1(newChild, returnFiber.internalContextTag, priority);
                    return _created5.return = returnFiber, _created5;
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            return "function" == typeof newChild && warnOnFunctionType(), null;
        }
        function updateSlot(returnFiber, oldFiber, newChild, priority) {
            var key = null !== oldFiber ? oldFiber.key : null;
            if ("string" == typeof newChild || "number" == typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, priority);
            if ("object" == typeof newChild && null !== newChild) {
                switch (newChild.$$typeof) {
                    case REACT_ELEMENT_TYPE:
                        return newChild.key === key ? updateElement(returnFiber, oldFiber, newChild, priority) : null;

                    case REACT_COROUTINE_TYPE:
                        return newChild.key === key ? updateCoroutine(returnFiber, oldFiber, newChild, priority) : null;

                    case REACT_YIELD_TYPE:
                        return null === key ? updateYield(returnFiber, oldFiber, newChild, priority) : null;

                    case REACT_PORTAL_TYPE$1:
                        return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, priority) : null;
                }
                if (isArray(newChild) || getIteratorFn(newChild)) return null !== key ? null : updateFragment(returnFiber, oldFiber, newChild, priority);
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            return "function" == typeof newChild && warnOnFunctionType(), null;
        }
        function updateFromMap(existingChildren, returnFiber, newIdx, newChild, priority) {
            if ("string" == typeof newChild || "number" == typeof newChild) {
                return updateTextNode(returnFiber, existingChildren.get(newIdx) || null, "" + newChild, priority);
            }
            if ("object" == typeof newChild && null !== newChild) {
                switch (newChild.$$typeof) {
                    case REACT_ELEMENT_TYPE:
                        return updateElement(returnFiber, existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild, priority);

                    case REACT_COROUTINE_TYPE:
                        return updateCoroutine(returnFiber, existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild, priority);

                    case REACT_YIELD_TYPE:
                        return updateYield(returnFiber, existingChildren.get(newIdx) || null, newChild, priority);

                    case REACT_PORTAL_TYPE$1:
                        return updatePortal(returnFiber, existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild, priority);
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                    return updateFragment(returnFiber, existingChildren.get(newIdx) || null, newChild, priority);
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            return "function" == typeof newChild && warnOnFunctionType(), null;
        }
        function warnOnInvalidKey(child, knownKeys) {
            if ("object" != typeof child || null === child) return knownKeys;
            switch (child.$$typeof) {
                case REACT_ELEMENT_TYPE:
                case REACT_COROUTINE_TYPE:
                case REACT_PORTAL_TYPE$1:
                    warnForMissingKey(child);
                    var key = child.key;
                    if ("string" != typeof key) break;
                    if (null === knownKeys) {
                        knownKeys = new Set(), knownKeys.add(key);
                        break;
                    }
                    if (!knownKeys.has(key)) {
                        knownKeys.add(key);
                        break;
                    }
                    warning$8(!1, "Encountered two children with the same key, `%s`. " + "Keys should be unique so that components maintain their identity " + "across updates. Non-unique keys may cause children to be " + "duplicated and/or omitted — the behavior is unsupported and " + "could change in a future version.%s", key, getCurrentFiberStackAddendum$1());
            }
            return knownKeys;
        }
        function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, priority) {
            for (var knownKeys = null, i = 0; i < newChildren.length; i++) {
                knownKeys = warnOnInvalidKey(newChildren[i], knownKeys);
            }
            for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, lastPlacedIndex = 0, newIdx = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++) {
                oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], priority);
                if (null === newFiber) {
                    null === oldFiber && (oldFiber = nextOldFiber);
                    break;
                }
                shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber), lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber, previousNewFiber = newFiber, oldFiber = nextOldFiber;
            }
            if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;
            if (null === oldFiber) {
                for (; newIdx < newChildren.length; newIdx++) {
                    var _newFiber = createChild(returnFiber, newChildren[newIdx], priority);
                    _newFiber && (lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = _newFiber : previousNewFiber.sibling = _newFiber, previousNewFiber = _newFiber);
                }
                return resultingFirstChild;
            }
            for (var existingChildren = mapRemainingChildren(returnFiber, oldFiber); newIdx < newChildren.length; newIdx++) {
                var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], priority);
                _newFiber2 && (shouldTrackSideEffects && null !== _newFiber2.alternate && existingChildren.delete(null === _newFiber2.key ? newIdx : _newFiber2.key), lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = _newFiber2 : previousNewFiber.sibling = _newFiber2, previousNewFiber = _newFiber2);
            }
            return shouldTrackSideEffects && existingChildren.forEach(function (child) {
                return deleteChild(returnFiber, child);
            }), resultingFirstChild;
        }
        function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, priority) {
            var iteratorFn = getIteratorFn(newChildrenIterable);
            if (invariant("function" == typeof iteratorFn, "An object is not an iterable. This error is likely caused by a bug in " + "React. Please file an issue."), "function" == typeof newChildrenIterable.entries) {
                newChildrenIterable.entries === iteratorFn && (warning$8(didWarnAboutMaps, "Using Maps as children is unsupported and will likely yield " + "unexpected results. Convert it to a sequence/iterable of keyed " + "ReactElements instead.%s", getCurrentFiberStackAddendum$1()), didWarnAboutMaps = !0);
            }
            var _newChildren = iteratorFn.call(newChildrenIterable);
            if (_newChildren) for (var knownKeys = null, _step = _newChildren.next(); !_step.done; _step = _newChildren.next()) {
                var child = _step.value;
                knownKeys = warnOnInvalidKey(child, knownKeys);
            }
            var newChildren = iteratorFn.call(newChildrenIterable);
            invariant(null != newChildren, "An iterable object provided no iterator.");
            for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, lastPlacedIndex = 0, newIdx = 0, nextOldFiber = null, step = newChildren.next(); null !== oldFiber && !step.done; newIdx++, step = newChildren.next()) {
                oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, step.value, priority);
                if (null === newFiber) {
                    oldFiber || (oldFiber = nextOldFiber);
                    break;
                }
                shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber), lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber, previousNewFiber = newFiber, oldFiber = nextOldFiber;
            }
            if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;
            if (null === oldFiber) {
                for (; !step.done; newIdx++, step = newChildren.next()) {
                    var _newFiber3 = createChild(returnFiber, step.value, priority);
                    null !== _newFiber3 && (lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = _newFiber3 : previousNewFiber.sibling = _newFiber3, previousNewFiber = _newFiber3);
                }
                return resultingFirstChild;
            }
            for (var existingChildren = mapRemainingChildren(returnFiber, oldFiber); !step.done; newIdx++, step = newChildren.next()) {
                var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, priority);
                null !== _newFiber4 && (shouldTrackSideEffects && null !== _newFiber4.alternate && existingChildren.delete(null === _newFiber4.key ? newIdx : _newFiber4.key), lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = _newFiber4 : previousNewFiber.sibling = _newFiber4, previousNewFiber = _newFiber4);
            }
            return shouldTrackSideEffects && existingChildren.forEach(function (child) {
                return deleteChild(returnFiber, child);
            }), resultingFirstChild;
        }
        function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, priority) {
            if (null !== currentFirstChild && currentFirstChild.tag === HostText$4) {
                deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                var existing = useFiber(currentFirstChild, priority);
                return existing.pendingProps = textContent, existing.return = returnFiber, existing;
            }
            deleteRemainingChildren(returnFiber, currentFirstChild);
            var created = createFiberFromText$1(textContent, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        function reconcileSingleElement(returnFiber, currentFirstChild, element, priority) {
            for (var key = element.key, child = currentFirstChild; null !== child;) {
                if (child.key === key) {
                    if (child.type === element.type) {
                        deleteRemainingChildren(returnFiber, child.sibling);
                        var existing = useFiber(child, priority);
                        return existing.ref = coerceRef(child, element), existing.pendingProps = element.props, existing.return = returnFiber, existing._debugSource = element._source, existing._debugOwner = element._owner, existing;
                    }
                    deleteRemainingChildren(returnFiber, child);
                    break;
                }
                deleteChild(returnFiber, child), child = child.sibling;
            }
            var created = createFiberFromElement$1(element, returnFiber.internalContextTag, priority);
            return created.ref = coerceRef(currentFirstChild, element), created.return = returnFiber, created;
        }
        function reconcileSingleCoroutine(returnFiber, currentFirstChild, coroutine, priority) {
            for (var key = coroutine.key, child = currentFirstChild; null !== child;) {
                if (child.key === key) {
                    if (child.tag === CoroutineComponent$2) {
                        deleteRemainingChildren(returnFiber, child.sibling);
                        var existing = useFiber(child, priority);
                        return existing.pendingProps = coroutine, existing.return = returnFiber, existing;
                    }
                    deleteRemainingChildren(returnFiber, child);
                    break;
                }
                deleteChild(returnFiber, child), child = child.sibling;
            }
            var created = createFiberFromCoroutine$1(coroutine, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        function reconcileSingleYield(returnFiber, currentFirstChild, yieldNode, priority) {
            var child = currentFirstChild;
            if (null !== child) {
                if (child.tag === YieldComponent$3) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(child, priority);
                    return existing.type = yieldNode.value, existing.return = returnFiber, existing;
                }
                deleteRemainingChildren(returnFiber, child);
            }
            var created = createFiberFromYield$1(yieldNode, returnFiber.internalContextTag, priority);
            return created.type = yieldNode.value, created.return = returnFiber, created;
        }
        function reconcileSinglePortal(returnFiber, currentFirstChild, portal, priority) {
            for (var key = portal.key, child = currentFirstChild; null !== child;) {
                if (child.key === key) {
                    if (child.tag === HostPortal$5 && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                        deleteRemainingChildren(returnFiber, child.sibling);
                        var existing = useFiber(child, priority);
                        return existing.pendingProps = portal.children || [], existing.return = returnFiber, existing;
                    }
                    deleteRemainingChildren(returnFiber, child);
                    break;
                }
                deleteChild(returnFiber, child), child = child.sibling;
            }
            var created = createFiberFromPortal$1(portal, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        function reconcileChildFibers(returnFiber, currentFirstChild, newChild, priority) {
            var isObject = "object" == typeof newChild && null !== newChild;
            if (isObject) switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                    return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, priority));

                case REACT_COROUTINE_TYPE:
                    return placeSingleChild(reconcileSingleCoroutine(returnFiber, currentFirstChild, newChild, priority));

                case REACT_YIELD_TYPE:
                    return placeSingleChild(reconcileSingleYield(returnFiber, currentFirstChild, newChild, priority));

                case REACT_PORTAL_TYPE$1:
                    return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, priority));
            }
            if ("string" == typeof newChild || "number" == typeof newChild) return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, "" + newChild, priority));
            if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, priority);
            if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, priority);
            if (isObject && throwOnInvalidObjectType(returnFiber, newChild), "function" == typeof newChild && warnOnFunctionType(), void 0 === newChild) switch (returnFiber.tag) {
                case ClassComponent$7:
                    if (returnFiber.stateNode.render._isMockFunction) break;

                case FunctionalComponent$2:
                    var Component = returnFiber.type;
                    invariant(!1, "%s(...): Nothing was returned from render. This usually means a " + "return statement is missing. Or, to render nothing, " + "return null.", Component.displayName || Component.name || "Component");
            }
            return deleteRemainingChildren(returnFiber, currentFirstChild);
        }
        return reconcileChildFibers;
    }
    var reconcileChildFibers$1 = ChildReconciler(!0, !0),
        reconcileChildFibersInPlace$1 = ChildReconciler(!1, !0),
        mountChildFibersInPlace$1 = ChildReconciler(!1, !1),
        cloneChildFibers$1 = function cloneChildFibers$1(current, workInProgress) {
        if (invariant(null === current || workInProgress.child === current.child, "Resuming work not yet implemented."), null !== workInProgress.child) {
            var currentChild = workInProgress.child,
                newChild = createWorkInProgress$2(currentChild, currentChild.pendingWorkPriority);
            for (newChild.pendingProps = currentChild.pendingProps, workInProgress.child = newChild, newChild.return = workInProgress; null !== currentChild.sibling;) {
                currentChild = currentChild.sibling, newChild = newChild.sibling = createWorkInProgress$2(currentChild, currentChild.pendingWorkPriority), newChild.pendingProps = currentChild.pendingProps, newChild.return = workInProgress;
            }newChild.sibling = null;
        }
    },
        ReactChildFiber = {
        reconcileChildFibers: reconcileChildFibers$1,
        reconcileChildFibersInPlace: reconcileChildFibersInPlace$1,
        mountChildFibersInPlace: mountChildFibersInPlace$1,
        cloneChildFibers: cloneChildFibers$1
    },
        Update$1 = ReactTypeOfSideEffect.Update,
        AsyncUpdates$1 = ReactTypeOfInternalContext.AsyncUpdates,
        cacheContext$1 = ReactFiberContext.cacheContext,
        getMaskedContext$2 = ReactFiberContext.getMaskedContext,
        getUnmaskedContext$2 = ReactFiberContext.getUnmaskedContext,
        isContextConsumer$1 = ReactFiberContext.isContextConsumer,
        addUpdate$1 = ReactFiberUpdateQueue.addUpdate,
        addReplaceUpdate$1 = ReactFiberUpdateQueue.addReplaceUpdate,
        addForceUpdate$1 = ReactFiberUpdateQueue.addForceUpdate,
        beginUpdateQueue$2 = ReactFiberUpdateQueue.beginUpdateQueue,
        _require5 = ReactFiberContext,
        hasContextChanged$2 = _require5.hasContextChanged,
        isMounted$1 = ReactFiberTreeReflection.isMounted,
        fakeInternalInstance = {},
        isArray$1 = Array.isArray,
        _require7$1 = ReactDebugFiberPerf_1,
        startPhaseTimer$1 = _require7$1.startPhaseTimer,
        stopPhaseTimer$1 = _require7$1.stopPhaseTimer,
        warning$9 = require$$0,
        warnOnInvalidCallback = function warnOnInvalidCallback(callback, callerName) {
        warning$9(null === callback || "function" == typeof callback, "%s(...): Expected the last optional `callback` argument to be a " + "function. Instead received: %s.", callerName, callback);
    };
    Object.defineProperty(fakeInternalInstance, "_processChildContext", {
        enumerable: !1,
        value: function value() {
            invariant(!1, "_processChildContext is not available in React 16+. This likely " + "means you have multiple copies of React and are attempting to nest " + "a React 15 tree inside a React 16 tree using " + "unstable_renderSubtreeIntoContainer, which isn't supported. Try " + "to make sure you have only one copy of React (and ideally, switch " + "to ReactDOM.createPortal).");
        }
    }), Object.freeze(fakeInternalInstance);
    var ReactFiberClassComponent = function ReactFiberClassComponent(scheduleUpdate, getPriorityContext, memoizeProps, memoizeState) {
        var updater = {
            isMounted: isMounted$1,
            enqueueSetState: function enqueueSetState(instance, partialState, callback) {
                var fiber = ReactInstanceMap_1.get(instance),
                    priorityLevel = getPriorityContext(fiber, !1);
                callback = void 0 === callback ? null : callback, warnOnInvalidCallback(callback, "setState"), addUpdate$1(fiber, partialState, callback, priorityLevel), scheduleUpdate(fiber, priorityLevel);
            },
            enqueueReplaceState: function enqueueReplaceState(instance, state, callback) {
                var fiber = ReactInstanceMap_1.get(instance),
                    priorityLevel = getPriorityContext(fiber, !1);
                callback = void 0 === callback ? null : callback, warnOnInvalidCallback(callback, "replaceState"), addReplaceUpdate$1(fiber, state, callback, priorityLevel), scheduleUpdate(fiber, priorityLevel);
            },
            enqueueForceUpdate: function enqueueForceUpdate(instance, callback) {
                var fiber = ReactInstanceMap_1.get(instance),
                    priorityLevel = getPriorityContext(fiber, !1);
                callback = void 0 === callback ? null : callback, warnOnInvalidCallback(callback, "forceUpdate"), addForceUpdate$1(fiber, callback, priorityLevel), scheduleUpdate(fiber, priorityLevel);
            }
        };
        function checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext) {
            if (null === oldProps || null !== workInProgress.updateQueue && workInProgress.updateQueue.hasForceUpdate) return !0;
            var instance = workInProgress.stateNode,
                type = workInProgress.type;
            if ("function" == typeof instance.shouldComponentUpdate) {
                startPhaseTimer$1(workInProgress, "shouldComponentUpdate");
                var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, newContext);
                return stopPhaseTimer$1(), warning$9(void 0 !== shouldUpdate, "%s.shouldComponentUpdate(): Returned undefined instead of a " + "boolean value. Make sure to return true or false.", getComponentName_1(workInProgress) || "Unknown"), shouldUpdate;
            }
            return !type.prototype || !type.prototype.isPureReactComponent || !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
        }
        function checkClassInstance(workInProgress) {
            var instance = workInProgress.stateNode,
                type = workInProgress.type,
                name = getComponentName_1(workInProgress),
                renderPresent = instance.render;
            warning$9(renderPresent, "%s(...): No `render` method found on the returned component " + "instance: you may have forgotten to define `render`.", name);
            var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;
            warning$9(noGetInitialStateOnES6, "getInitialState was defined on %s, a plain JavaScript class. " + "This is only supported for classes created using React.createClass. " + "Did you mean to define a state property instead?", name);
            var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;
            warning$9(noGetDefaultPropsOnES6, "getDefaultProps was defined on %s, a plain JavaScript class. " + "This is only supported for classes created using React.createClass. " + "Use a static property to define defaultProps instead.", name);
            var noInstancePropTypes = !instance.propTypes;
            warning$9(noInstancePropTypes, "propTypes was defined as an instance property on %s. Use a static " + "property to define propTypes instead.", name);
            var noInstanceContextTypes = !instance.contextTypes;
            warning$9(noInstanceContextTypes, "contextTypes was defined as an instance property on %s. Use a static " + "property to define contextTypes instead.", name);
            var noComponentShouldUpdate = "function" != typeof instance.componentShouldUpdate;
            warning$9(noComponentShouldUpdate, "%s has a method called " + "componentShouldUpdate(). Did you mean shouldComponentUpdate()? " + "The name is phrased as a question because the function is " + "expected to return a value.", name), type.prototype && type.prototype.isPureReactComponent && void 0 !== instance.shouldComponentUpdate && warning$9(!1, "%s has a method called shouldComponentUpdate(). " + "shouldComponentUpdate should not be used when extending React.PureComponent. " + "Please extend React.Component if shouldComponentUpdate is used.", getComponentName_1(workInProgress) || "A pure component");
            var noComponentDidUnmount = "function" != typeof instance.componentDidUnmount;
            warning$9(noComponentDidUnmount, "%s has a method called " + "componentDidUnmount(). But there is no such lifecycle method. " + "Did you mean componentWillUnmount()?", name);
            var noComponentWillRecieveProps = "function" != typeof instance.componentWillRecieveProps;
            warning$9(noComponentWillRecieveProps, "%s has a method called " + "componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name);
            var hasMutatedProps = instance.props !== workInProgress.pendingProps;
            warning$9(void 0 === instance.props || !hasMutatedProps, "%s(...): When calling super() in `%s`, make sure to pass " + "up the same props that your component's constructor was passed.", name, name);
            var noInstanceDefaultProps = !instance.defaultProps;
            warning$9(noInstanceDefaultProps, "Setting defaultProps as an instance property on %s is not supported and will be ignored." + " Instead, define defaultProps as a static property on %s.", name, name);
            var state = instance.state;
            state && ("object" != typeof state || isArray$1(state)) && invariant(!1, "%s.state: must be set to an object or null", getComponentName_1(workInProgress)), "function" == typeof instance.getChildContext && invariant("object" == typeof workInProgress.type.childContextTypes, "%s.getChildContext(): childContextTypes must be defined in order to " + "use getChildContext().", getComponentName_1(workInProgress));
        }
        function resetInputPointers(workInProgress, instance) {
            instance.props = workInProgress.memoizedProps, instance.state = workInProgress.memoizedState;
        }
        function adoptClassInstance(workInProgress, instance) {
            instance.updater = updater, workInProgress.stateNode = instance, ReactInstanceMap_1.set(instance, workInProgress), instance._reactInternalInstance = fakeInternalInstance;
        }
        function constructClassInstance(workInProgress, props) {
            var ctor = workInProgress.type,
                unmaskedContext = getUnmaskedContext$2(workInProgress),
                needsContext = isContextConsumer$1(workInProgress),
                context = needsContext ? getMaskedContext$2(workInProgress, unmaskedContext) : emptyObject,
                instance = new ctor(props, context);
            return adoptClassInstance(workInProgress, instance), needsContext && cacheContext$1(workInProgress, unmaskedContext, context), instance;
        }
        function callComponentWillMount(workInProgress, instance) {
            startPhaseTimer$1(workInProgress, "componentWillMount");
            var oldState = instance.state;
            instance.componentWillMount(), stopPhaseTimer$1(), oldState !== instance.state && (warning$9(!1, "%s.componentWillMount(): Assigning directly to this.state is " + "deprecated (except inside a component's " + "constructor). Use setState instead.", getComponentName_1(workInProgress)), updater.enqueueReplaceState(instance, instance.state, null));
        }
        function callComponentWillReceiveProps(workInProgress, instance, newProps, newContext) {
            startPhaseTimer$1(workInProgress, "componentWillReceiveProps");
            var oldState = instance.state;
            instance.componentWillReceiveProps(newProps, newContext), stopPhaseTimer$1(), instance.state !== oldState && (warning$9(!1, "%s.componentWillReceiveProps(): Assigning directly to " + "this.state is deprecated (except inside a component's " + "constructor). Use setState instead.", getComponentName_1(workInProgress)), updater.enqueueReplaceState(instance, instance.state, null));
        }
        function mountClassInstance(workInProgress, priorityLevel) {
            var current = workInProgress.alternate;
            checkClassInstance(workInProgress);
            var instance = workInProgress.stateNode,
                state = instance.state || null,
                props = workInProgress.pendingProps;
            invariant(props, "There must be pending props for an initial mount. This error is " + "likely caused by a bug in React. Please file an issue.");
            var unmaskedContext = getUnmaskedContext$2(workInProgress);
            if (instance.props = props, instance.state = state, instance.refs = emptyObject, instance.context = getMaskedContext$2(workInProgress, unmaskedContext), ReactFeatureFlags_1.enableAsyncSubtreeAPI && null != workInProgress.type && null != workInProgress.type.prototype && !0 === workInProgress.type.prototype.unstable_isAsyncReactComponent && (workInProgress.internalContextTag |= AsyncUpdates$1), "function" == typeof instance.componentWillMount) {
                callComponentWillMount(workInProgress, instance);
                var updateQueue = workInProgress.updateQueue;
                null !== updateQueue && (instance.state = beginUpdateQueue$2(current, workInProgress, updateQueue, instance, state, props, priorityLevel));
            }
            "function" == typeof instance.componentDidMount && (workInProgress.effectTag |= Update$1);
        }
        function updateClassInstance(current, workInProgress, priorityLevel) {
            var instance = workInProgress.stateNode;
            resetInputPointers(workInProgress, instance);
            var oldProps = workInProgress.memoizedProps,
                newProps = workInProgress.pendingProps;
            newProps || (newProps = oldProps, invariant(null != newProps, "There should always be pending or memoized props. This error is " + "likely caused by a bug in React. Please file an issue."));
            var oldContext = instance.context,
                newUnmaskedContext = getUnmaskedContext$2(workInProgress),
                newContext = getMaskedContext$2(workInProgress, newUnmaskedContext);
            "function" != typeof instance.componentWillReceiveProps || oldProps === newProps && oldContext === newContext || callComponentWillReceiveProps(workInProgress, instance, newProps, newContext);
            var oldState = workInProgress.memoizedState,
                newState = void 0;
            if (newState = null !== workInProgress.updateQueue ? beginUpdateQueue$2(current, workInProgress, workInProgress.updateQueue, instance, oldState, newProps, priorityLevel) : oldState, !(oldProps !== newProps || oldState !== newState || hasContextChanged$2() || null !== workInProgress.updateQueue && workInProgress.updateQueue.hasForceUpdate)) return "function" == typeof instance.componentDidUpdate && (oldProps === current.memoizedProps && oldState === current.memoizedState || (workInProgress.effectTag |= Update$1)), !1;
            var shouldUpdate = checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext);
            return shouldUpdate ? ("function" == typeof instance.componentWillUpdate && (startPhaseTimer$1(workInProgress, "componentWillUpdate"), instance.componentWillUpdate(newProps, newState, newContext), stopPhaseTimer$1()), "function" == typeof instance.componentDidUpdate && (workInProgress.effectTag |= Update$1)) : ("function" == typeof instance.componentDidUpdate && (oldProps === current.memoizedProps && oldState === current.memoizedState || (workInProgress.effectTag |= Update$1)), memoizeProps(workInProgress, newProps), memoizeState(workInProgress, newState)), instance.props = newProps, instance.state = newState, instance.context = newContext, shouldUpdate;
        }
        return {
            adoptClassInstance: adoptClassInstance,
            constructClassInstance: constructClassInstance,
            mountClassInstance: mountClassInstance,
            updateClassInstance: updateClassInstance
        };
    },
        mountChildFibersInPlace = ReactChildFiber.mountChildFibersInPlace,
        reconcileChildFibers = ReactChildFiber.reconcileChildFibers,
        reconcileChildFibersInPlace = ReactChildFiber.reconcileChildFibersInPlace,
        cloneChildFibers = ReactChildFiber.cloneChildFibers,
        beginUpdateQueue$1 = ReactFiberUpdateQueue.beginUpdateQueue,
        getMaskedContext$1 = ReactFiberContext.getMaskedContext,
        getUnmaskedContext$1 = ReactFiberContext.getUnmaskedContext,
        hasContextChanged$1 = ReactFiberContext.hasContextChanged,
        pushContextProvider$1 = ReactFiberContext.pushContextProvider,
        pushTopLevelContextObject$1 = ReactFiberContext.pushTopLevelContextObject,
        invalidateContextProvider$1 = ReactFiberContext.invalidateContextProvider,
        IndeterminateComponent$2 = ReactTypeOfWork.IndeterminateComponent,
        FunctionalComponent$1 = ReactTypeOfWork.FunctionalComponent,
        ClassComponent$6 = ReactTypeOfWork.ClassComponent,
        HostRoot$6 = ReactTypeOfWork.HostRoot,
        HostComponent$6 = ReactTypeOfWork.HostComponent,
        HostText$3 = ReactTypeOfWork.HostText,
        HostPortal$4 = ReactTypeOfWork.HostPortal,
        CoroutineComponent$1 = ReactTypeOfWork.CoroutineComponent,
        CoroutineHandlerPhase = ReactTypeOfWork.CoroutineHandlerPhase,
        YieldComponent$2 = ReactTypeOfWork.YieldComponent,
        Fragment$2 = ReactTypeOfWork.Fragment,
        NoWork$3 = ReactPriorityLevel.NoWork,
        OffscreenPriority$1 = ReactPriorityLevel.OffscreenPriority,
        PerformedWork$1 = ReactTypeOfSideEffect.PerformedWork,
        Placement$2 = ReactTypeOfSideEffect.Placement,
        ContentReset$1 = ReactTypeOfSideEffect.ContentReset,
        Err$1 = ReactTypeOfSideEffect.Err,
        Ref$1 = ReactTypeOfSideEffect.Ref,
        ReactCurrentOwner$2 = ReactGlobalSharedState_1.ReactCurrentOwner,
        ReactDebugCurrentFiber$4 = ReactDebugCurrentFiber_1,
        _require7 = ReactDebugFiberPerf_1,
        cancelWorkTimer = _require7.cancelWorkTimer,
        warning$7 = require$$0,
        warnedAboutStatelessRefs = {},
        ReactFiberBeginWork = function ReactFiberBeginWork(config, hostContext, hydrationContext, scheduleUpdate, getPriorityContext) {
        var shouldSetTextContent = config.shouldSetTextContent,
            useSyncScheduling = config.useSyncScheduling,
            shouldDeprioritizeSubtree = config.shouldDeprioritizeSubtree,
            pushHostContext = hostContext.pushHostContext,
            pushHostContainer = hostContext.pushHostContainer,
            enterHydrationState = hydrationContext.enterHydrationState,
            resetHydrationState = hydrationContext.resetHydrationState,
            tryToClaimNextHydratableInstance = hydrationContext.tryToClaimNextHydratableInstance,
            _ReactFiberClassCompo = ReactFiberClassComponent(scheduleUpdate, getPriorityContext, memoizeProps, memoizeState),
            adoptClassInstance = _ReactFiberClassCompo.adoptClassInstance,
            constructClassInstance = _ReactFiberClassCompo.constructClassInstance,
            mountClassInstance = _ReactFiberClassCompo.mountClassInstance,
            updateClassInstance = _ReactFiberClassCompo.updateClassInstance;
        function reconcileChildren(current, workInProgress, nextChildren) {
            reconcileChildrenAtPriority(current, workInProgress, nextChildren, workInProgress.pendingWorkPriority);
        }
        function reconcileChildrenAtPriority(current, workInProgress, nextChildren, priorityLevel) {
            null === current ? workInProgress.child = mountChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, priorityLevel) : current.child === workInProgress.child ? workInProgress.child = reconcileChildFibers(workInProgress, workInProgress.child, nextChildren, priorityLevel) : workInProgress.child = reconcileChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, priorityLevel);
        }
        function updateFragment(current, workInProgress) {
            var nextChildren = workInProgress.pendingProps;
            if (hasContextChanged$1()) null === nextChildren && (nextChildren = workInProgress.memoizedProps);else if (null === nextChildren || workInProgress.memoizedProps === nextChildren) return bailoutOnAlreadyFinishedWork(current, workInProgress);
            return reconcileChildren(current, workInProgress, nextChildren), memoizeProps(workInProgress, nextChildren), workInProgress.child;
        }
        function markRef(current, workInProgress) {
            var ref = workInProgress.ref;
            null === ref || current && current.ref === ref || (workInProgress.effectTag |= Ref$1);
        }
        function updateFunctionalComponent(current, workInProgress) {
            var fn = workInProgress.type,
                nextProps = workInProgress.pendingProps,
                memoizedProps = workInProgress.memoizedProps;
            if (hasContextChanged$1()) null === nextProps && (nextProps = memoizedProps);else if (null === nextProps || memoizedProps === nextProps) return bailoutOnAlreadyFinishedWork(current, workInProgress);
            var nextChildren,
                unmaskedContext = getUnmaskedContext$1(workInProgress),
                context = getMaskedContext$1(workInProgress, unmaskedContext);
            return ReactCurrentOwner$2.current = workInProgress, ReactDebugCurrentFiber$4.setCurrentPhase("render"), nextChildren = fn(nextProps, context), ReactDebugCurrentFiber$4.setCurrentPhase(null), workInProgress.effectTag |= PerformedWork$1, reconcileChildren(current, workInProgress, nextChildren), memoizeProps(workInProgress, nextProps), workInProgress.child;
        }
        function updateClassComponent(current, workInProgress, priorityLevel) {
            var hasContext = pushContextProvider$1(workInProgress),
                shouldUpdate = void 0;
            return null === current ? workInProgress.stateNode ? invariant(!1, "Resuming work not yet implemented.") : (constructClassInstance(workInProgress, workInProgress.pendingProps), mountClassInstance(workInProgress, priorityLevel), shouldUpdate = !0) : shouldUpdate = updateClassInstance(current, workInProgress, priorityLevel), finishClassComponent(current, workInProgress, shouldUpdate, hasContext);
        }
        function finishClassComponent(current, workInProgress, shouldUpdate, hasContext) {
            if (markRef(current, workInProgress), !shouldUpdate) return hasContext && invalidateContextProvider$1(workInProgress, !1), bailoutOnAlreadyFinishedWork(current, workInProgress);
            var instance = workInProgress.stateNode;
            ReactCurrentOwner$2.current = workInProgress;
            var nextChildren = void 0;
            return ReactDebugCurrentFiber$4.setCurrentPhase("render"), nextChildren = instance.render(), ReactDebugCurrentFiber$4.setCurrentPhase(null), workInProgress.effectTag |= PerformedWork$1, reconcileChildren(current, workInProgress, nextChildren), memoizeState(workInProgress, instance.state), memoizeProps(workInProgress, instance.props), hasContext && invalidateContextProvider$1(workInProgress, !0), workInProgress.child;
        }
        function pushHostRootContext(workInProgress) {
            var root = workInProgress.stateNode;
            root.pendingContext ? pushTopLevelContextObject$1(workInProgress, root.pendingContext, root.pendingContext !== root.context) : root.context && pushTopLevelContextObject$1(workInProgress, root.context, !1), pushHostContainer(workInProgress, root.containerInfo);
        }
        function updateHostRoot(current, workInProgress, priorityLevel) {
            pushHostRootContext(workInProgress);
            var updateQueue = workInProgress.updateQueue;
            if (null !== updateQueue) {
                var prevState = workInProgress.memoizedState,
                    state = beginUpdateQueue$1(current, workInProgress, updateQueue, null, prevState, null, priorityLevel);
                if (prevState === state) return resetHydrationState(), bailoutOnAlreadyFinishedWork(current, workInProgress);
                var element = state.element;
                return null !== current && null !== current.child || !enterHydrationState(workInProgress) ? (resetHydrationState(), reconcileChildren(current, workInProgress, element)) : (workInProgress.effectTag |= Placement$2, workInProgress.child = mountChildFibersInPlace(workInProgress, workInProgress.child, element, priorityLevel)), memoizeState(workInProgress, state), workInProgress.child;
            }
            return resetHydrationState(), bailoutOnAlreadyFinishedWork(current, workInProgress);
        }
        function updateHostComponent(current, workInProgress, renderPriority) {
            pushHostContext(workInProgress), null === current && tryToClaimNextHydratableInstance(workInProgress);
            var type = workInProgress.type,
                memoizedProps = workInProgress.memoizedProps,
                nextProps = workInProgress.pendingProps;
            null === nextProps && (nextProps = memoizedProps, invariant(null !== nextProps, "We should always have pending or current props. This error is " + "likely caused by a bug in React. Please file an issue."));
            var prevProps = null !== current ? current.memoizedProps : null;
            if (hasContextChanged$1()) ;else if (null === nextProps || memoizedProps === nextProps) return bailoutOnAlreadyFinishedWork(current, workInProgress);
            var nextChildren = nextProps.children;
            return shouldSetTextContent(type, nextProps) ? nextChildren = null : prevProps && shouldSetTextContent(type, prevProps) && (workInProgress.effectTag |= ContentReset$1), markRef(current, workInProgress), renderPriority !== OffscreenPriority$1 && !useSyncScheduling && shouldDeprioritizeSubtree(type, nextProps) ? (workInProgress.pendingWorkPriority = OffscreenPriority$1, null) : (reconcileChildren(current, workInProgress, nextChildren), memoizeProps(workInProgress, nextProps), workInProgress.child);
        }
        function updateHostText(current, workInProgress) {
            null === current && tryToClaimNextHydratableInstance(workInProgress);
            var nextProps = workInProgress.pendingProps;
            return null === nextProps && (nextProps = workInProgress.memoizedProps), memoizeProps(workInProgress, nextProps), null;
        }
        function mountIndeterminateComponent(current, workInProgress, priorityLevel) {
            invariant(null === current, "An indeterminate component should never have mounted. This error is " + "likely caused by a bug in React. Please file an issue.");
            var value,
                fn = workInProgress.type,
                props = workInProgress.pendingProps,
                unmaskedContext = getUnmaskedContext$1(workInProgress),
                context = getMaskedContext$1(workInProgress, unmaskedContext);
            if (ReactCurrentOwner$2.current = workInProgress, value = fn(props, context), workInProgress.effectTag |= PerformedWork$1, "object" == typeof value && null !== value && "function" == typeof value.render) {
                workInProgress.tag = ClassComponent$6;
                var hasContext = pushContextProvider$1(workInProgress);
                return adoptClassInstance(workInProgress, value), mountClassInstance(workInProgress, priorityLevel), finishClassComponent(current, workInProgress, !0, hasContext);
            }
            workInProgress.tag = FunctionalComponent$1;
            var Component = workInProgress.type;
            if (Component && warning$7(!Component.childContextTypes, "%s(...): childContextTypes cannot be defined on a functional component.", Component.displayName || Component.name || "Component"), null !== workInProgress.ref) {
                var info = "",
                    ownerName = ReactDebugCurrentFiber$4.getCurrentFiberOwnerName();
                ownerName && (info += "\n\nCheck the render method of `" + ownerName + "`.");
                var warningKey = ownerName || workInProgress._debugID || "",
                    debugSource = workInProgress._debugSource;
                debugSource && (warningKey = debugSource.fileName + ":" + debugSource.lineNumber), warnedAboutStatelessRefs[warningKey] || (warnedAboutStatelessRefs[warningKey] = !0, warning$7(!1, "Stateless function components cannot be given refs. " + "Attempts to access this ref will fail.%s%s", info, ReactDebugCurrentFiber$4.getCurrentFiberStackAddendum()));
            }
            return reconcileChildren(current, workInProgress, value), memoizeProps(workInProgress, props), workInProgress.child;
        }
        function updateCoroutineComponent(current, workInProgress) {
            var nextCoroutine = workInProgress.pendingProps;
            hasContextChanged$1() ? null === nextCoroutine && (nextCoroutine = current && current.memoizedProps, invariant(null !== nextCoroutine, "We should always have pending or current props. This error is " + "likely caused by a bug in React. Please file an issue.")) : null !== nextCoroutine && workInProgress.memoizedProps !== nextCoroutine || (nextCoroutine = workInProgress.memoizedProps);
            var nextChildren = nextCoroutine.children,
                priorityLevel = workInProgress.pendingWorkPriority;
            return null === current ? workInProgress.stateNode = mountChildFibersInPlace(workInProgress, workInProgress.stateNode, nextChildren, priorityLevel) : current.child === workInProgress.child ? workInProgress.stateNode = reconcileChildFibers(workInProgress, workInProgress.stateNode, nextChildren, priorityLevel) : workInProgress.stateNode = reconcileChildFibersInPlace(workInProgress, workInProgress.stateNode, nextChildren, priorityLevel), memoizeProps(workInProgress, nextCoroutine), workInProgress.stateNode;
        }
        function updatePortalComponent(current, workInProgress) {
            pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
            var priorityLevel = workInProgress.pendingWorkPriority,
                nextChildren = workInProgress.pendingProps;
            if (hasContextChanged$1()) null === nextChildren && (nextChildren = current && current.memoizedProps, invariant(null != nextChildren, "We should always have pending or current props. This error is " + "likely caused by a bug in React. Please file an issue."));else if (null === nextChildren || workInProgress.memoizedProps === nextChildren) return bailoutOnAlreadyFinishedWork(current, workInProgress);
            return null === current ? (workInProgress.child = reconcileChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, priorityLevel), memoizeProps(workInProgress, nextChildren)) : (reconcileChildren(current, workInProgress, nextChildren), memoizeProps(workInProgress, nextChildren)), workInProgress.child;
        }
        function bailoutOnAlreadyFinishedWork(current, workInProgress) {
            return cancelWorkTimer(workInProgress), cloneChildFibers(current, workInProgress), workInProgress.child;
        }
        function bailoutOnLowPriority(current, workInProgress) {
            switch (cancelWorkTimer(workInProgress), workInProgress.tag) {
                case HostRoot$6:
                    pushHostRootContext(workInProgress);
                    break;

                case ClassComponent$6:
                    pushContextProvider$1(workInProgress);
                    break;

                case HostPortal$4:
                    pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
            }
            return null;
        }
        function memoizeProps(workInProgress, nextProps) {
            workInProgress.memoizedProps = nextProps;
        }
        function memoizeState(workInProgress, nextState) {
            workInProgress.memoizedState = nextState;
        }
        function beginWork(current, workInProgress, priorityLevel) {
            if (workInProgress.pendingWorkPriority === NoWork$3 || workInProgress.pendingWorkPriority > priorityLevel) return bailoutOnLowPriority(current, workInProgress);
            switch (workInProgress.tag) {
                case IndeterminateComponent$2:
                    return mountIndeterminateComponent(current, workInProgress, priorityLevel);

                case FunctionalComponent$1:
                    return updateFunctionalComponent(current, workInProgress);

                case ClassComponent$6:
                    return updateClassComponent(current, workInProgress, priorityLevel);

                case HostRoot$6:
                    return updateHostRoot(current, workInProgress, priorityLevel);

                case HostComponent$6:
                    return updateHostComponent(current, workInProgress, priorityLevel);

                case HostText$3:
                    return updateHostText(current, workInProgress);

                case CoroutineHandlerPhase:
                    workInProgress.tag = CoroutineComponent$1;

                case CoroutineComponent$1:
                    return updateCoroutineComponent(current, workInProgress);

                case YieldComponent$2:
                    return null;

                case HostPortal$4:
                    return updatePortalComponent(current, workInProgress);

                case Fragment$2:
                    return updateFragment(current, workInProgress);

                default:
                    invariant(!1, "Unknown unit of work tag. This error is likely caused by a bug in " + "React. Please file an issue.");
            }
        }
        function beginFailedWork(current, workInProgress, priorityLevel) {
            switch (workInProgress.tag) {
                case ClassComponent$6:
                    pushContextProvider$1(workInProgress);
                    break;

                case HostRoot$6:
                    pushHostRootContext(workInProgress);
                    break;

                default:
                    invariant(!1, "Invalid type of work. This error is likely caused by a bug in React. " + "Please file an issue.");
            }
            if (workInProgress.effectTag |= Err$1, null === current ? workInProgress.child = null : workInProgress.child !== current.child && (workInProgress.child = current.child), workInProgress.pendingWorkPriority === NoWork$3 || workInProgress.pendingWorkPriority > priorityLevel) return bailoutOnLowPriority(current, workInProgress);
            if (workInProgress.firstEffect = null, workInProgress.lastEffect = null, reconcileChildrenAtPriority(current, workInProgress, null, priorityLevel), workInProgress.tag === ClassComponent$6) {
                var instance = workInProgress.stateNode;
                workInProgress.memoizedProps = instance.props, workInProgress.memoizedState = instance.state;
            }
            return workInProgress.child;
        }
        return {
            beginWork: beginWork,
            beginFailedWork: beginFailedWork
        };
    },
        reconcileChildFibers$2 = ReactChildFiber.reconcileChildFibers,
        popContextProvider$2 = ReactFiberContext.popContextProvider,
        popTopLevelContextObject$1 = ReactFiberContext.popTopLevelContextObject,
        IndeterminateComponent$3 = ReactTypeOfWork.IndeterminateComponent,
        FunctionalComponent$3 = ReactTypeOfWork.FunctionalComponent,
        ClassComponent$8 = ReactTypeOfWork.ClassComponent,
        HostRoot$7 = ReactTypeOfWork.HostRoot,
        HostComponent$7 = ReactTypeOfWork.HostComponent,
        HostText$5 = ReactTypeOfWork.HostText,
        HostPortal$6 = ReactTypeOfWork.HostPortal,
        CoroutineComponent$3 = ReactTypeOfWork.CoroutineComponent,
        CoroutineHandlerPhase$1 = ReactTypeOfWork.CoroutineHandlerPhase,
        YieldComponent$4 = ReactTypeOfWork.YieldComponent,
        Fragment$4 = ReactTypeOfWork.Fragment,
        Placement$4 = ReactTypeOfSideEffect.Placement,
        Ref$2 = ReactTypeOfSideEffect.Ref,
        Update$2 = ReactTypeOfSideEffect.Update,
        OffscreenPriority$2 = ReactPriorityLevel.OffscreenPriority,
        ReactFiberCompleteWork = function ReactFiberCompleteWork(config, hostContext, hydrationContext) {
        var createInstance = config.createInstance,
            createTextInstance = config.createTextInstance,
            appendInitialChild = config.appendInitialChild,
            finalizeInitialChildren = config.finalizeInitialChildren,
            prepareUpdate = config.prepareUpdate,
            getRootHostContainer = hostContext.getRootHostContainer,
            popHostContext = hostContext.popHostContext,
            getHostContext = hostContext.getHostContext,
            popHostContainer = hostContext.popHostContainer,
            prepareToHydrateHostInstance = hydrationContext.prepareToHydrateHostInstance,
            prepareToHydrateHostTextInstance = hydrationContext.prepareToHydrateHostTextInstance,
            popHydrationState = hydrationContext.popHydrationState;
        function markUpdate(workInProgress) {
            workInProgress.effectTag |= Update$2;
        }
        function markRef(workInProgress) {
            workInProgress.effectTag |= Ref$2;
        }
        function appendAllYields(yields, workInProgress) {
            var node = workInProgress.stateNode;
            for (node && (node.return = workInProgress); null !== node;) {
                if (node.tag === HostComponent$7 || node.tag === HostText$5 || node.tag === HostPortal$6) invariant(!1, "A coroutine cannot have host component children.");else if (node.tag === YieldComponent$4) yields.push(node.type);else if (null !== node.child) {
                    node.child.return = node, node = node.child;
                    continue;
                }
                for (; null === node.sibling;) {
                    if (null === node.return || node.return === workInProgress) return;
                    node = node.return;
                }
                node.sibling.return = node.return, node = node.sibling;
            }
        }
        function moveCoroutineToHandlerPhase(current, workInProgress) {
            var coroutine = workInProgress.memoizedProps;
            invariant(coroutine, "Should be resolved by now. This error is likely caused by a bug in " + "React. Please file an issue."), workInProgress.tag = CoroutineHandlerPhase$1;
            var yields = [];
            appendAllYields(yields, workInProgress);
            var fn = coroutine.handler,
                props = coroutine.props,
                nextChildren = fn(props, yields),
                currentFirstChild = null !== current ? current.child : null,
                priority = workInProgress.pendingWorkPriority;
            return workInProgress.child = reconcileChildFibers$2(workInProgress, currentFirstChild, nextChildren, priority), workInProgress.child;
        }
        function appendAllChildren(parent, workInProgress) {
            for (var node = workInProgress.child; null !== node;) {
                if (node.tag === HostComponent$7 || node.tag === HostText$5) appendInitialChild(parent, node.stateNode);else if (node.tag === HostPortal$6) ;else if (null !== node.child) {
                    node = node.child;
                    continue;
                }
                if (node === workInProgress) return;
                for (; null === node.sibling;) {
                    if (null === node.return || node.return === workInProgress) return;
                    node = node.return;
                }
                node = node.sibling;
            }
        }
        function completeWork(current, workInProgress, renderPriority) {
            var newProps = workInProgress.pendingProps;
            switch (null === newProps ? newProps = workInProgress.memoizedProps : workInProgress.pendingWorkPriority === OffscreenPriority$2 && renderPriority !== OffscreenPriority$2 || (workInProgress.pendingProps = null), workInProgress.tag) {
                case FunctionalComponent$3:
                    return null;

                case ClassComponent$8:
                    return popContextProvider$2(workInProgress), null;

                case HostRoot$7:
                    popHostContainer(workInProgress), popTopLevelContextObject$1(workInProgress);
                    var fiberRoot = workInProgress.stateNode;
                    return fiberRoot.pendingContext && (fiberRoot.context = fiberRoot.pendingContext, fiberRoot.pendingContext = null), null !== current && null !== current.child || (popHydrationState(workInProgress), workInProgress.effectTag &= ~Placement$4), null;

                case HostComponent$7:
                    popHostContext(workInProgress);
                    var rootContainerInstance = getRootHostContainer(),
                        type = workInProgress.type;
                    if (null !== current && null != workInProgress.stateNode) {
                        var oldProps = current.memoizedProps,
                            instance = workInProgress.stateNode,
                            currentHostContext = getHostContext(),
                            updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);
                        workInProgress.updateQueue = updatePayload, updatePayload && markUpdate(workInProgress), current.ref !== workInProgress.ref && markRef(workInProgress);
                    } else {
                        if (!newProps) return invariant(null !== workInProgress.stateNode, "We must have new props for new mounts. This error is likely " + "caused by a bug in React. Please file an issue."), null;
                        var _currentHostContext = getHostContext();
                        if (popHydrationState(workInProgress)) prepareToHydrateHostInstance(workInProgress, rootContainerInstance, _currentHostContext) && markUpdate(workInProgress);else {
                            var _instance = createInstance(type, newProps, rootContainerInstance, _currentHostContext, workInProgress);
                            appendAllChildren(_instance, workInProgress), finalizeInitialChildren(_instance, type, newProps, rootContainerInstance) && markUpdate(workInProgress), workInProgress.stateNode = _instance;
                        }
                        null !== workInProgress.ref && markRef(workInProgress);
                    }
                    return null;

                case HostText$5:
                    var newText = newProps;
                    if (current && null != workInProgress.stateNode) {
                        current.memoizedProps !== newText && markUpdate(workInProgress);
                    } else {
                        if ("string" != typeof newText) return invariant(null !== workInProgress.stateNode, "We must have new props for new mounts. This error is likely " + "caused by a bug in React. Please file an issue."), null;
                        var _rootContainerInstance = getRootHostContainer(),
                            _currentHostContext2 = getHostContext();
                        popHydrationState(workInProgress) ? prepareToHydrateHostTextInstance(workInProgress) && markUpdate(workInProgress) : workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext2, workInProgress);
                    }
                    return null;

                case CoroutineComponent$3:
                    return moveCoroutineToHandlerPhase(current, workInProgress);

                case CoroutineHandlerPhase$1:
                    return workInProgress.tag = CoroutineComponent$3, null;

                case YieldComponent$4:
                case Fragment$4:
                    return null;

                case HostPortal$6:
                    return markUpdate(workInProgress), popHostContainer(workInProgress), null;

                case IndeterminateComponent$3:
                    invariant(!1, "An indeterminate component should have become determinate before " + "completing. This error is likely caused by a bug in React. Please " + "file an issue.");

                default:
                    invariant(!1, "Unknown unit of work tag. This error is likely caused by a bug in " + "React. Please file an issue.");
            }
        }
        return {
            completeWork: completeWork
        };
    },
        warning$10 = require$$0,
        onCommitFiberRoot = null,
        onCommitFiberUnmount = null,
        hasLoggedError = !1;
    function catchErrors(fn) {
        return function (arg) {
            try {
                return fn(arg);
            } catch (err) {
                0 || hasLoggedError || (hasLoggedError = !0, warning$10(!1, "React DevTools encountered an error: %s", err));
            }
        };
    }
    function injectInternals$1(internals) {
        if ("undefined" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;
        var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (!hook.supportsFiber) return warning$10(!1, "The installed version of React DevTools is too old and will not work " + "with the current version of React. Please update React DevTools. " + "https://fb.me/react-devtools"), !0;
        try {
            var rendererID = hook.inject(internals);
            onCommitFiberRoot = catchErrors(function (root) {
                return hook.onCommitFiberRoot(rendererID, root);
            }), onCommitFiberUnmount = catchErrors(function (fiber) {
                return hook.onCommitFiberUnmount(rendererID, fiber);
            });
        } catch (err) {
            warning$10(!1, "React DevTools encountered an error: %s.", err);
        }
        return !0;
    }
    function onCommitRoot$1(root) {
        "function" == typeof onCommitFiberRoot && onCommitFiberRoot(root);
    }
    function onCommitUnmount$1(fiber) {
        "function" == typeof onCommitFiberUnmount && onCommitFiberUnmount(fiber);
    }
    var injectInternals_1 = injectInternals$1,
        onCommitRoot_1 = onCommitRoot$1,
        onCommitUnmount_1 = onCommitUnmount$1,
        ReactFiberDevToolsHook = {
        injectInternals: injectInternals_1,
        onCommitRoot: onCommitRoot_1,
        onCommitUnmount: onCommitUnmount_1
    },
        ClassComponent$9 = ReactTypeOfWork.ClassComponent,
        HostRoot$8 = ReactTypeOfWork.HostRoot,
        HostComponent$8 = ReactTypeOfWork.HostComponent,
        HostText$6 = ReactTypeOfWork.HostText,
        HostPortal$7 = ReactTypeOfWork.HostPortal,
        CoroutineComponent$4 = ReactTypeOfWork.CoroutineComponent,
        commitCallbacks$1 = ReactFiberUpdateQueue.commitCallbacks,
        onCommitUnmount = ReactFiberDevToolsHook.onCommitUnmount,
        invokeGuardedCallback$2 = ReactErrorUtils_1.invokeGuardedCallback,
        hasCaughtError$1 = ReactErrorUtils_1.hasCaughtError,
        clearCaughtError$1 = ReactErrorUtils_1.clearCaughtError,
        Placement$5 = ReactTypeOfSideEffect.Placement,
        Update$3 = ReactTypeOfSideEffect.Update,
        Callback$1 = ReactTypeOfSideEffect.Callback,
        ContentReset$2 = ReactTypeOfSideEffect.ContentReset,
        _require5$1 = ReactDebugFiberPerf_1,
        startPhaseTimer$2 = _require5$1.startPhaseTimer,
        stopPhaseTimer$2 = _require5$1.stopPhaseTimer,
        ReactFiberCommitWork = function ReactFiberCommitWork(config, captureError) {
        var commitMount = config.commitMount,
            commitUpdate = config.commitUpdate,
            resetTextContent = config.resetTextContent,
            commitTextUpdate = config.commitTextUpdate,
            appendChild = config.appendChild,
            appendChildToContainer = config.appendChildToContainer,
            insertBefore = config.insertBefore,
            insertInContainerBefore = config.insertInContainerBefore,
            removeChild = config.removeChild,
            removeChildFromContainer = config.removeChildFromContainer,
            getPublicInstance = config.getPublicInstance,
            callComponentWillUnmountWithTimerInDev = function callComponentWillUnmountWithTimerInDev(current, instance) {
            startPhaseTimer$2(current, "componentWillUnmount"), instance.props = current.memoizedProps, instance.state = current.memoizedState, instance.componentWillUnmount(), stopPhaseTimer$2();
        };
        function safelyCallComponentWillUnmount(current, instance) {
            if (invokeGuardedCallback$2(null, callComponentWillUnmountWithTimerInDev, null, current, instance), hasCaughtError$1()) {
                var unmountError = clearCaughtError$1();
                captureError(current, unmountError);
            }
        }
        function safelyDetachRef(current) {
            var ref = current.ref;
            if (null !== ref && (invokeGuardedCallback$2(null, ref, null, null), hasCaughtError$1())) {
                var refError = clearCaughtError$1();
                captureError(current, refError);
            }
        }
        function getHostParentFiber(fiber) {
            for (var parent = fiber.return; null !== parent;) {
                if (isHostParent(parent)) return parent;
                parent = parent.return;
            }
            invariant(!1, "Expected to find a host parent. This error is likely caused by a bug " + "in React. Please file an issue.");
        }
        function isHostParent(fiber) {
            return fiber.tag === HostComponent$8 || fiber.tag === HostRoot$8 || fiber.tag === HostPortal$7;
        }
        function getHostSibling(fiber) {
            var node = fiber;
            siblings: for (; !0;) {
                for (; null === node.sibling;) {
                    if (null === node.return || isHostParent(node.return)) return null;
                    node = node.return;
                }
                for (node.sibling.return = node.return, node = node.sibling; node.tag !== HostComponent$8 && node.tag !== HostText$6;) {
                    if (node.effectTag & Placement$5) continue siblings;
                    if (null === node.child || node.tag === HostPortal$7) continue siblings;
                    node.child.return = node, node = node.child;
                }
                if (!(node.effectTag & Placement$5)) return node.stateNode;
            }
        }
        function commitPlacement(finishedWork) {
            var parentFiber = getHostParentFiber(finishedWork),
                parent = void 0,
                isContainer = void 0;
            switch (parentFiber.tag) {
                case HostComponent$8:
                    parent = parentFiber.stateNode, isContainer = !1;
                    break;

                case HostRoot$8:
                case HostPortal$7:
                    parent = parentFiber.stateNode.containerInfo, isContainer = !0;
                    break;

                default:
                    invariant(!1, "Invalid host parent fiber. This error is likely caused by a bug " + "in React. Please file an issue.");
            }
            parentFiber.effectTag & ContentReset$2 && (resetTextContent(parent), parentFiber.effectTag &= ~ContentReset$2);
            for (var before = getHostSibling(finishedWork), node = finishedWork; !0;) {
                if (node.tag === HostComponent$8 || node.tag === HostText$6) before ? isContainer ? insertInContainerBefore(parent, node.stateNode, before) : insertBefore(parent, node.stateNode, before) : isContainer ? appendChildToContainer(parent, node.stateNode) : appendChild(parent, node.stateNode);else if (node.tag === HostPortal$7) ;else if (null !== node.child) {
                    node.child.return = node, node = node.child;
                    continue;
                }
                if (node === finishedWork) return;
                for (; null === node.sibling;) {
                    if (null === node.return || node.return === finishedWork) return;
                    node = node.return;
                }
                node.sibling.return = node.return, node = node.sibling;
            }
        }
        function commitNestedUnmounts(root) {
            for (var node = root; !0;) {
                if (commitUnmount(node), null === node.child || node.tag === HostPortal$7) {
                    if (node === root) return;
                    for (; null === node.sibling;) {
                        if (null === node.return || node.return === root) return;
                        node = node.return;
                    }
                    node.sibling.return = node.return, node = node.sibling;
                } else node.child.return = node, node = node.child;
            }
        }
        function unmountHostComponents(current) {
            for (var node = current, currentParentIsValid = !1, currentParent = void 0, currentParentIsContainer = void 0; !0;) {
                if (!currentParentIsValid) {
                    var parent = node.return;
                    findParent: for (; !0;) {
                        switch (invariant(null !== parent, "Expected to find a host parent. This error is likely caused by " + "a bug in React. Please file an issue."), parent.tag) {
                            case HostComponent$8:
                                currentParent = parent.stateNode, currentParentIsContainer = !1;
                                break findParent;

                            case HostRoot$8:
                            case HostPortal$7:
                                currentParent = parent.stateNode.containerInfo, currentParentIsContainer = !0;
                                break findParent;
                        }
                        parent = parent.return;
                    }
                    currentParentIsValid = !0;
                }
                if (node.tag === HostComponent$8 || node.tag === HostText$6) commitNestedUnmounts(node), currentParentIsContainer ? removeChildFromContainer(currentParent, node.stateNode) : removeChild(currentParent, node.stateNode);else if (node.tag === HostPortal$7) {
                    if (currentParent = node.stateNode.containerInfo, null !== node.child) {
                        node.child.return = node, node = node.child;
                        continue;
                    }
                } else if (commitUnmount(node), null !== node.child) {
                    node.child.return = node, node = node.child;
                    continue;
                }
                if (node === current) return;
                for (; null === node.sibling;) {
                    if (null === node.return || node.return === current) return;
                    node = node.return, node.tag === HostPortal$7 && (currentParentIsValid = !1);
                }
                node.sibling.return = node.return, node = node.sibling;
            }
        }
        function commitDeletion(current) {
            unmountHostComponents(current), current.return = null, current.child = null, current.alternate && (current.alternate.child = null, current.alternate.return = null);
        }
        function commitUnmount(current) {
            switch ("function" == typeof onCommitUnmount && onCommitUnmount(current), current.tag) {
                case ClassComponent$9:
                    safelyDetachRef(current);
                    var instance = current.stateNode;
                    return void ("function" == typeof instance.componentWillUnmount && safelyCallComponentWillUnmount(current, instance));

                case HostComponent$8:
                    return void safelyDetachRef(current);

                case CoroutineComponent$4:
                    return void commitNestedUnmounts(current.stateNode);

                case HostPortal$7:
                    return void unmountHostComponents(current);
            }
        }
        function commitWork(current, finishedWork) {
            switch (finishedWork.tag) {
                case ClassComponent$9:
                    return;

                case HostComponent$8:
                    var instance = finishedWork.stateNode;
                    if (null != instance) {
                        var newProps = finishedWork.memoizedProps,
                            oldProps = null !== current ? current.memoizedProps : newProps,
                            type = finishedWork.type,
                            updatePayload = finishedWork.updateQueue;
                        finishedWork.updateQueue = null, null !== updatePayload && commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);
                    }
                    return;

                case HostText$6:
                    invariant(null !== finishedWork.stateNode, "This should have a text node initialized. This error is likely " + "caused by a bug in React. Please file an issue.");
                    var textInstance = finishedWork.stateNode,
                        newText = finishedWork.memoizedProps,
                        oldText = null !== current ? current.memoizedProps : newText;
                    return void commitTextUpdate(textInstance, oldText, newText);

                case HostRoot$8:
                case HostPortal$7:
                    return;

                default:
                    invariant(!1, "This unit of work tag should not have side-effects. This error is " + "likely caused by a bug in React. Please file an issue.");
            }
        }
        function commitLifeCycles(current, finishedWork) {
            switch (finishedWork.tag) {
                case ClassComponent$9:
                    var instance = finishedWork.stateNode;
                    if (finishedWork.effectTag & Update$3) if (null === current) startPhaseTimer$2(finishedWork, "componentDidMount"), instance.props = finishedWork.memoizedProps, instance.state = finishedWork.memoizedState, instance.componentDidMount(), stopPhaseTimer$2();else {
                        var prevProps = current.memoizedProps,
                            prevState = current.memoizedState;
                        startPhaseTimer$2(finishedWork, "componentDidUpdate"), instance.props = finishedWork.memoizedProps, instance.state = finishedWork.memoizedState, instance.componentDidUpdate(prevProps, prevState), stopPhaseTimer$2();
                    }
                    return void (finishedWork.effectTag & Callback$1 && null !== finishedWork.updateQueue && commitCallbacks$1(finishedWork, finishedWork.updateQueue, instance));

                case HostRoot$8:
                    var updateQueue = finishedWork.updateQueue;
                    if (null !== updateQueue) {
                        var _instance = finishedWork.child && finishedWork.child.stateNode;
                        commitCallbacks$1(finishedWork, updateQueue, _instance);
                    }
                    return;

                case HostComponent$8:
                    var _instance2 = finishedWork.stateNode;
                    if (null === current && finishedWork.effectTag & Update$3) {
                        var type = finishedWork.type,
                            props = finishedWork.memoizedProps;
                        commitMount(_instance2, type, props, finishedWork);
                    }
                    return;

                case HostText$6:
                case HostPortal$7:
                    return;

                default:
                    invariant(!1, "This unit of work tag should not have side-effects. This error is " + "likely caused by a bug in React. Please file an issue.");
            }
        }
        function commitAttachRef(finishedWork) {
            var ref = finishedWork.ref;
            if (null !== ref) {
                var instance = finishedWork.stateNode;
                switch (finishedWork.tag) {
                    case HostComponent$8:
                        ref(getPublicInstance(instance));
                        break;

                    default:
                        ref(instance);
                }
            }
        }
        function commitDetachRef(current) {
            var currentRef = current.ref;
            null !== currentRef && currentRef(null);
        }
        return {
            commitPlacement: commitPlacement,
            commitDeletion: commitDeletion,
            commitWork: commitWork,
            commitLifeCycles: commitLifeCycles,
            commitAttachRef: commitAttachRef,
            commitDetachRef: commitDetachRef
        };
    },
        createCursor$2 = ReactFiberStack.createCursor,
        pop$2 = ReactFiberStack.pop,
        push$2 = ReactFiberStack.push,
        NO_CONTEXT = {},
        ReactFiberHostContext = function ReactFiberHostContext(config) {
        var getChildHostContext = config.getChildHostContext,
            getRootHostContext = config.getRootHostContext,
            contextStackCursor = createCursor$2(NO_CONTEXT),
            contextFiberStackCursor = createCursor$2(NO_CONTEXT),
            rootInstanceStackCursor = createCursor$2(NO_CONTEXT);
        function requiredContext(c) {
            return invariant(c !== NO_CONTEXT, "Expected host context to exist. This error is likely caused by a bug " + "in React. Please file an issue."), c;
        }
        function getRootHostContainer() {
            return requiredContext(rootInstanceStackCursor.current);
        }
        function pushHostContainer(fiber, nextRootInstance) {
            push$2(rootInstanceStackCursor, nextRootInstance, fiber);
            var nextRootContext = getRootHostContext(nextRootInstance);
            push$2(contextFiberStackCursor, fiber, fiber), push$2(contextStackCursor, nextRootContext, fiber);
        }
        function popHostContainer(fiber) {
            pop$2(contextStackCursor, fiber), pop$2(contextFiberStackCursor, fiber), pop$2(rootInstanceStackCursor, fiber);
        }
        function getHostContext() {
            return requiredContext(contextStackCursor.current);
        }
        function pushHostContext(fiber) {
            var rootInstance = requiredContext(rootInstanceStackCursor.current),
                context = requiredContext(contextStackCursor.current),
                nextContext = getChildHostContext(context, fiber.type, rootInstance);
            context !== nextContext && (push$2(contextFiberStackCursor, fiber, fiber), push$2(contextStackCursor, nextContext, fiber));
        }
        function popHostContext(fiber) {
            contextFiberStackCursor.current === fiber && (pop$2(contextStackCursor, fiber), pop$2(contextFiberStackCursor, fiber));
        }
        function resetHostContainer() {
            contextStackCursor.current = NO_CONTEXT, rootInstanceStackCursor.current = NO_CONTEXT;
        }
        return {
            getHostContext: getHostContext,
            getRootHostContainer: getRootHostContainer,
            popHostContainer: popHostContainer,
            popHostContext: popHostContext,
            pushHostContainer: pushHostContainer,
            pushHostContext: pushHostContext,
            resetHostContainer: resetHostContainer
        };
    },
        HostComponent$9 = ReactTypeOfWork.HostComponent,
        HostText$7 = ReactTypeOfWork.HostText,
        HostRoot$9 = ReactTypeOfWork.HostRoot,
        Deletion$2 = ReactTypeOfSideEffect.Deletion,
        Placement$6 = ReactTypeOfSideEffect.Placement,
        createFiberFromHostInstanceForDeletion$1 = ReactFiber.createFiberFromHostInstanceForDeletion,
        ReactFiberHydrationContext = function ReactFiberHydrationContext(config) {
        var shouldSetTextContent = config.shouldSetTextContent,
            canHydrateInstance = config.canHydrateInstance,
            canHydrateTextInstance = config.canHydrateTextInstance,
            getNextHydratableSibling = config.getNextHydratableSibling,
            getFirstHydratableChild = config.getFirstHydratableChild,
            hydrateInstance = config.hydrateInstance,
            hydrateTextInstance = config.hydrateTextInstance,
            didNotHydrateInstance = config.didNotHydrateInstance,
            didNotFindHydratableInstance = config.didNotFindHydratableInstance,
            didNotFindHydratableTextInstance = config.didNotFindHydratableTextInstance;
        if (!(canHydrateInstance && canHydrateTextInstance && getNextHydratableSibling && getFirstHydratableChild && hydrateInstance && hydrateTextInstance && didNotHydrateInstance && didNotFindHydratableInstance && didNotFindHydratableTextInstance)) return {
            enterHydrationState: function enterHydrationState() {
                return !1;
            },
            resetHydrationState: function resetHydrationState() {},
            tryToClaimNextHydratableInstance: function tryToClaimNextHydratableInstance() {},
            prepareToHydrateHostInstance: function prepareToHydrateHostInstance() {
                invariant(!1, "Expected prepareToHydrateHostInstance() to never be called. " + "This error is likely caused by a bug in React. Please file an issue.");
            },
            prepareToHydrateHostTextInstance: function prepareToHydrateHostTextInstance() {
                invariant(!1, "Expected prepareToHydrateHostTextInstance() to never be called. " + "This error is likely caused by a bug in React. Please file an issue.");
            },
            popHydrationState: function popHydrationState(fiber) {
                return !1;
            }
        };
        var hydrationParentFiber = null,
            nextHydratableInstance = null,
            isHydrating = !1;
        function enterHydrationState(fiber) {
            var parentInstance = fiber.stateNode.containerInfo;
            return nextHydratableInstance = getFirstHydratableChild(parentInstance), hydrationParentFiber = fiber, isHydrating = !0, !0;
        }
        function deleteHydratableInstance(returnFiber, instance) {
            switch (returnFiber.tag) {
                case HostRoot$9:
                    didNotHydrateInstance(returnFiber.stateNode.containerInfo, instance);
                    break;

                case HostComponent$9:
                    didNotHydrateInstance(returnFiber.stateNode, instance);
            }
            var childToDelete = createFiberFromHostInstanceForDeletion$1();
            childToDelete.stateNode = instance, childToDelete.return = returnFiber, childToDelete.effectTag = Deletion$2, null !== returnFiber.lastEffect ? (returnFiber.lastEffect.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
        }
        function insertNonHydratedInstance(returnFiber, fiber) {
            fiber.effectTag |= Placement$6;
            var parentInstance;
            switch (returnFiber.tag) {
                case HostComponent$9:
                    parentInstance = returnFiber.stateNode;
                    break;

                default:
                    return;
            }
            switch (fiber.tag) {
                case HostComponent$9:
                    var type = fiber.type,
                        props = fiber.pendingProps;
                    didNotFindHydratableInstance(parentInstance, type, props);
                    break;

                case HostText$7:
                    var text = fiber.pendingProps;
                    didNotFindHydratableTextInstance(parentInstance, text);
            }
        }
        function canHydrate(fiber, nextInstance) {
            switch (fiber.tag) {
                case HostComponent$9:
                    var type = fiber.type,
                        props = fiber.pendingProps;
                    return canHydrateInstance(nextInstance, type, props);

                case HostText$7:
                    var text = fiber.pendingProps;
                    return canHydrateTextInstance(nextInstance, text);

                default:
                    return !1;
            }
        }
        function tryToClaimNextHydratableInstance(fiber) {
            if (isHydrating) {
                var nextInstance = nextHydratableInstance;
                if (!nextInstance) return insertNonHydratedInstance(hydrationParentFiber, fiber), isHydrating = !1, void (hydrationParentFiber = fiber);
                if (!canHydrate(fiber, nextInstance)) {
                    if (!(nextInstance = getNextHydratableSibling(nextInstance)) || !canHydrate(fiber, nextInstance)) return insertNonHydratedInstance(hydrationParentFiber, fiber), isHydrating = !1, void (hydrationParentFiber = fiber);
                    deleteHydratableInstance(hydrationParentFiber, nextHydratableInstance);
                }
                fiber.stateNode = nextInstance, hydrationParentFiber = fiber, nextHydratableInstance = getFirstHydratableChild(nextInstance);
            }
        }
        function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
            var instance = fiber.stateNode,
                updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber);
            return fiber.updateQueue = updatePayload, null !== updatePayload;
        }
        function prepareToHydrateHostTextInstance(fiber) {
            var textInstance = fiber.stateNode;
            return hydrateTextInstance(textInstance, fiber.memoizedProps, fiber);
        }
        function popToNextHostParent(fiber) {
            for (var parent = fiber.return; null !== parent && parent.tag !== HostComponent$9 && parent.tag !== HostRoot$9;) {
                parent = parent.return;
            }hydrationParentFiber = parent;
        }
        function popHydrationState(fiber) {
            if (fiber !== hydrationParentFiber) return !1;
            if (!isHydrating) return popToNextHostParent(fiber), isHydrating = !0, !1;
            var type = fiber.type;
            if (fiber.tag !== HostComponent$9 || "head" !== type && "body" !== type && !shouldSetTextContent(type, fiber.memoizedProps)) for (var nextInstance = nextHydratableInstance; nextInstance;) {
                deleteHydratableInstance(fiber, nextInstance), nextInstance = getNextHydratableSibling(nextInstance);
            }return popToNextHostParent(fiber), nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null, !0;
        }
        function resetHydrationState() {
            hydrationParentFiber = null, nextHydratableInstance = null, isHydrating = !1;
        }
        return {
            enterHydrationState: enterHydrationState,
            resetHydrationState: resetHydrationState,
            tryToClaimNextHydratableInstance: tryToClaimNextHydratableInstance,
            prepareToHydrateHostInstance: prepareToHydrateHostInstance,
            prepareToHydrateHostTextInstance: prepareToHydrateHostTextInstance,
            popHydrationState: popHydrationState
        };
    },
        ReactFiberInstrumentation$2 = {
        debugTool: null
    },
        ReactFiberInstrumentation_1 = ReactFiberInstrumentation$2,
        popContextProvider$1 = ReactFiberContext.popContextProvider,
        reset$1 = ReactFiberStack.reset,
        getStackAddendumByWorkInProgressFiber$2 = ReactFiberComponentTreeHook.getStackAddendumByWorkInProgressFiber,
        logCapturedError$1 = ReactFiberErrorLogger.logCapturedError,
        invokeGuardedCallback$1 = ReactErrorUtils_1.invokeGuardedCallback,
        hasCaughtError = ReactErrorUtils_1.hasCaughtError,
        clearCaughtError = ReactErrorUtils_1.clearCaughtError,
        ReactCurrentOwner$1 = ReactGlobalSharedState_1.ReactCurrentOwner,
        createWorkInProgress$1 = ReactFiber.createWorkInProgress,
        largerPriority$1 = ReactFiber.largerPriority,
        onCommitRoot = ReactFiberDevToolsHook.onCommitRoot,
        NoWork$2 = ReactPriorityLevel.NoWork,
        SynchronousPriority$1 = ReactPriorityLevel.SynchronousPriority,
        TaskPriority$1 = ReactPriorityLevel.TaskPriority,
        HighPriority = ReactPriorityLevel.HighPriority,
        LowPriority = ReactPriorityLevel.LowPriority,
        OffscreenPriority = ReactPriorityLevel.OffscreenPriority,
        AsyncUpdates = ReactTypeOfInternalContext.AsyncUpdates,
        PerformedWork = ReactTypeOfSideEffect.PerformedWork,
        Placement$1 = ReactTypeOfSideEffect.Placement,
        Update = ReactTypeOfSideEffect.Update,
        PlacementAndUpdate = ReactTypeOfSideEffect.PlacementAndUpdate,
        Deletion = ReactTypeOfSideEffect.Deletion,
        ContentReset = ReactTypeOfSideEffect.ContentReset,
        Callback = ReactTypeOfSideEffect.Callback,
        Err = ReactTypeOfSideEffect.Err,
        Ref = ReactTypeOfSideEffect.Ref,
        HostRoot$5 = ReactTypeOfWork.HostRoot,
        HostComponent$5 = ReactTypeOfWork.HostComponent,
        HostPortal$3 = ReactTypeOfWork.HostPortal,
        ClassComponent$5 = ReactTypeOfWork.ClassComponent,
        getUpdatePriority$1 = ReactFiberUpdateQueue.getUpdatePriority,
        _require14 = ReactFiberContext,
        resetContext$1 = _require14.resetContext,
        warning$6 = require$$0,
        ReactFiberInstrumentation$1 = ReactFiberInstrumentation_1,
        ReactDebugCurrentFiber$3 = ReactDebugCurrentFiber_1,
        _require15 = ReactDebugFiberPerf_1,
        recordEffect = _require15.recordEffect,
        recordScheduleUpdate = _require15.recordScheduleUpdate,
        startWorkTimer = _require15.startWorkTimer,
        stopWorkTimer = _require15.stopWorkTimer,
        stopFailedWorkTimer = _require15.stopFailedWorkTimer,
        startWorkLoopTimer = _require15.startWorkLoopTimer,
        stopWorkLoopTimer = _require15.stopWorkLoopTimer,
        startCommitTimer = _require15.startCommitTimer,
        stopCommitTimer = _require15.stopCommitTimer,
        startCommitHostEffectsTimer = _require15.startCommitHostEffectsTimer,
        stopCommitHostEffectsTimer = _require15.stopCommitHostEffectsTimer,
        startCommitLifeCyclesTimer = _require15.startCommitLifeCyclesTimer,
        stopCommitLifeCyclesTimer = _require15.stopCommitLifeCyclesTimer,
        warnAboutUpdateOnUnmounted = function warnAboutUpdateOnUnmounted(instance) {
        var ctor = instance.constructor;
        warning$6(!1, "Can only update a mounted or mounting component. This usually means " + "you called setState, replaceState, or forceUpdate on an unmounted " + "component. This is a no-op.\n\nPlease check the code for the " + "%s component.", ctor && (ctor.displayName || ctor.name) || "ReactClass");
    },
        warnAboutInvalidUpdates = function warnAboutInvalidUpdates(instance) {
        switch (ReactDebugCurrentFiber$3.phase) {
            case "getChildContext":
                warning$6(!1, "setState(...): Cannot call setState() inside getChildContext()");
                break;

            case "render":
                warning$6(!1, "Cannot update during an existing state transition (such as within " + "`render` or another component's constructor). Render methods should " + "be a pure function of props and state; constructor side-effects are " + "an anti-pattern, but can be moved to `componentWillMount`.");
        }
    },
        timeHeuristicForUnitOfWork = 1,
        ReactFiberScheduler = function ReactFiberScheduler(config) {
        var hostContext = ReactFiberHostContext(config),
            hydrationContext = ReactFiberHydrationContext(config),
            popHostContainer = hostContext.popHostContainer,
            popHostContext = hostContext.popHostContext,
            resetHostContainer = hostContext.resetHostContainer,
            _ReactFiberBeginWork = ReactFiberBeginWork(config, hostContext, hydrationContext, scheduleUpdate, getPriorityContext),
            beginWork = _ReactFiberBeginWork.beginWork,
            beginFailedWork = _ReactFiberBeginWork.beginFailedWork,
            _ReactFiberCompleteWo = ReactFiberCompleteWork(config, hostContext, hydrationContext),
            completeWork = _ReactFiberCompleteWo.completeWork,
            _ReactFiberCommitWork = ReactFiberCommitWork(config, captureError),
            commitPlacement = _ReactFiberCommitWork.commitPlacement,
            commitDeletion = _ReactFiberCommitWork.commitDeletion,
            commitWork = _ReactFiberCommitWork.commitWork,
            commitLifeCycles = _ReactFiberCommitWork.commitLifeCycles,
            commitAttachRef = _ReactFiberCommitWork.commitAttachRef,
            commitDetachRef = _ReactFiberCommitWork.commitDetachRef,
            scheduleDeferredCallback = config.scheduleDeferredCallback,
            useSyncScheduling = config.useSyncScheduling,
            prepareForCommit = config.prepareForCommit,
            resetAfterCommit = config.resetAfterCommit,
            priorityContext = NoWork$2,
            isPerformingWork = !1,
            deadlineHasExpired = !1,
            isBatchingUpdates = !1,
            isUnbatchingUpdates = !1,
            nextUnitOfWork = null,
            nextPriorityLevel = NoWork$2,
            nextEffect = null,
            pendingCommit = null,
            nextScheduledRoot = null,
            lastScheduledRoot = null,
            isCallbackScheduled = !1,
            capturedErrors = null,
            failedBoundaries = null,
            commitPhaseBoundaries = null,
            firstUncaughtError = null,
            didFatal = !1,
            isCommitting = !1,
            isUnmounting = !1,
            NESTED_UPDATE_LIMIT = 1e3,
            nestedUpdateCount = 0,
            nextRenderedTree = null;
        function resetContextStack() {
            reset$1(), resetContext$1(), resetHostContainer();
        }
        function resetNextUnitOfWork() {
            for (; null !== nextScheduledRoot && nextScheduledRoot.current.pendingWorkPriority === NoWork$2;) {
                nextScheduledRoot.isScheduled = !1;
                var next = nextScheduledRoot.nextScheduledRoot;
                if (nextScheduledRoot.nextScheduledRoot = null, nextScheduledRoot === lastScheduledRoot) return nextScheduledRoot = null, lastScheduledRoot = null, nextPriorityLevel = NoWork$2, null;
                nextScheduledRoot = next;
            }
            for (var root = nextScheduledRoot, highestPriorityRoot = null, highestPriorityLevel = NoWork$2; null !== root;) {
                root.current.pendingWorkPriority !== NoWork$2 && (highestPriorityLevel === NoWork$2 || highestPriorityLevel > root.current.pendingWorkPriority) && (highestPriorityLevel = root.current.pendingWorkPriority, highestPriorityRoot = root), root = root.nextScheduledRoot;
            }if (null !== highestPriorityRoot) return nextPriorityLevel = highestPriorityLevel, resetContextStack(), nextUnitOfWork = createWorkInProgress$1(highestPriorityRoot.current, highestPriorityLevel), void (highestPriorityRoot !== nextRenderedTree && (nestedUpdateCount = 0, nextRenderedTree = highestPriorityRoot));
            nextPriorityLevel = NoWork$2, nextUnitOfWork = null, nextRenderedTree = null;
        }
        function commitAllHostEffects() {
            for (; null !== nextEffect;) {
                ReactDebugCurrentFiber$3.setCurrentFiber(nextEffect), recordEffect();
                var effectTag = nextEffect.effectTag;
                if (effectTag & ContentReset && config.resetTextContent(nextEffect.stateNode), effectTag & Ref) {
                    var current = nextEffect.alternate;
                    null !== current && commitDetachRef(current);
                }
                switch (effectTag & ~(Callback | Err | ContentReset | Ref | PerformedWork)) {
                    case Placement$1:
                        commitPlacement(nextEffect), nextEffect.effectTag &= ~Placement$1;
                        break;

                    case PlacementAndUpdate:
                        commitPlacement(nextEffect), nextEffect.effectTag &= ~Placement$1;
                        var _current = nextEffect.alternate;
                        commitWork(_current, nextEffect);
                        break;

                    case Update:
                        var _current2 = nextEffect.alternate;
                        commitWork(_current2, nextEffect);
                        break;

                    case Deletion:
                        isUnmounting = !0, commitDeletion(nextEffect), isUnmounting = !1;
                }
                nextEffect = nextEffect.nextEffect;
            }
            ReactDebugCurrentFiber$3.resetCurrentFiber();
        }
        function commitAllLifeCycles() {
            for (; null !== nextEffect;) {
                var effectTag = nextEffect.effectTag;
                if (effectTag & (Update | Callback)) {
                    recordEffect();
                    var current = nextEffect.alternate;
                    commitLifeCycles(current, nextEffect);
                }
                effectTag & Ref && (recordEffect(), commitAttachRef(nextEffect)), effectTag & Err && (recordEffect(), commitErrorHandling(nextEffect));
                var next = nextEffect.nextEffect;
                nextEffect.nextEffect = null, nextEffect = next;
            }
        }
        function commitAllWork(finishedWork) {
            isCommitting = !0, startCommitTimer(), pendingCommit = null;
            var root = finishedWork.stateNode;
            invariant(root.current !== finishedWork, "Cannot commit the same tree as before. This is probably a bug " + "related to the return field. This error is likely caused by a bug " + "in React. Please file an issue."), nextPriorityLevel !== SynchronousPriority$1 && nextPriorityLevel !== TaskPriority$1 || nestedUpdateCount++, ReactCurrentOwner$1.current = null;
            var firstEffect = void 0;
            for (finishedWork.effectTag > PerformedWork ? null !== finishedWork.lastEffect ? (finishedWork.lastEffect.nextEffect = finishedWork, firstEffect = finishedWork.firstEffect) : firstEffect = finishedWork : firstEffect = finishedWork.firstEffect, prepareForCommit(), nextEffect = firstEffect, startCommitHostEffectsTimer(); null !== nextEffect;) {
                var didError = !1,
                    _error = void 0;
                invokeGuardedCallback$1(null, commitAllHostEffects, null), hasCaughtError() && (didError = !0, _error = clearCaughtError()), didError && (invariant(null !== nextEffect, "Should have next effect. This error is likely caused by a bug " + "in React. Please file an issue."), captureError(nextEffect, _error), null !== nextEffect && (nextEffect = nextEffect.nextEffect));
            }
            for (stopCommitHostEffectsTimer(), resetAfterCommit(), root.current = finishedWork, nextEffect = firstEffect, startCommitLifeCyclesTimer(); null !== nextEffect;) {
                var _didError = !1,
                    _error2 = void 0;
                invokeGuardedCallback$1(null, commitAllLifeCycles, null), hasCaughtError() && (_didError = !0, _error2 = clearCaughtError()), _didError && (invariant(null !== nextEffect, "Should have next effect. This error is likely caused by a bug " + "in React. Please file an issue."), captureError(nextEffect, _error2), null !== nextEffect && (nextEffect = nextEffect.nextEffect));
            }
            isCommitting = !1, stopCommitLifeCyclesTimer(), stopCommitTimer(), "function" == typeof onCommitRoot && onCommitRoot(finishedWork.stateNode), !0 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onCommitWork(finishedWork), commitPhaseBoundaries && (commitPhaseBoundaries.forEach(scheduleErrorRecovery), commitPhaseBoundaries = null), resetNextUnitOfWork();
        }
        function resetWorkPriority(workInProgress, renderPriority) {
            if (!(workInProgress.pendingWorkPriority !== NoWork$2 && workInProgress.pendingWorkPriority > renderPriority)) {
                for (var newPriority = getUpdatePriority$1(workInProgress), child = workInProgress.child; null !== child;) {
                    newPriority = largerPriority$1(newPriority, child.pendingWorkPriority), child = child.sibling;
                }workInProgress.pendingWorkPriority = newPriority;
            }
        }
        function completeUnitOfWork(workInProgress) {
            for (; !0;) {
                var current = workInProgress.alternate;
                ReactDebugCurrentFiber$3.setCurrentFiber(workInProgress);
                var next = completeWork(current, workInProgress, nextPriorityLevel);
                ReactDebugCurrentFiber$3.resetCurrentFiber();
                var returnFiber = workInProgress.return,
                    siblingFiber = workInProgress.sibling;
                if (resetWorkPriority(workInProgress, nextPriorityLevel), null !== next) return stopWorkTimer(workInProgress), !0 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onCompleteWork(workInProgress), next;
                if (null !== returnFiber) {
                    null === returnFiber.firstEffect && (returnFiber.firstEffect = workInProgress.firstEffect), null !== workInProgress.lastEffect && (null !== returnFiber.lastEffect && (returnFiber.lastEffect.nextEffect = workInProgress.firstEffect), returnFiber.lastEffect = workInProgress.lastEffect);
                    workInProgress.effectTag > PerformedWork && (null !== returnFiber.lastEffect ? returnFiber.lastEffect.nextEffect = workInProgress : returnFiber.firstEffect = workInProgress, returnFiber.lastEffect = workInProgress);
                }
                if (stopWorkTimer(workInProgress), !0 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onCompleteWork(workInProgress), null !== siblingFiber) return siblingFiber;
                if (null === returnFiber) return pendingCommit = workInProgress, null;
                workInProgress = returnFiber;
            }
            return null;
        }
        function performUnitOfWork(workInProgress) {
            var current = workInProgress.alternate;
            startWorkTimer(workInProgress), ReactDebugCurrentFiber$3.setCurrentFiber(workInProgress);
            var next = beginWork(current, workInProgress, nextPriorityLevel);
            return ReactDebugCurrentFiber$3.resetCurrentFiber(), !0 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onBeginWork(workInProgress), null === next && (next = completeUnitOfWork(workInProgress)), ReactCurrentOwner$1.current = null, next;
        }
        function performFailedUnitOfWork(workInProgress) {
            var current = workInProgress.alternate;
            startWorkTimer(workInProgress), ReactDebugCurrentFiber$3.setCurrentFiber(workInProgress);
            var next = beginFailedWork(current, workInProgress, nextPriorityLevel);
            return ReactDebugCurrentFiber$3.resetCurrentFiber(), !0 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onBeginWork(workInProgress), null === next && (next = completeUnitOfWork(workInProgress)), ReactCurrentOwner$1.current = null, next;
        }
        function performDeferredWork(deadline) {
            performWork(OffscreenPriority, deadline);
        }
        function handleCommitPhaseErrors() {
            if (null !== capturedErrors && capturedErrors.size > 0 && nextPriorityLevel === TaskPriority$1) for (; null !== nextUnitOfWork && (null !== (nextUnitOfWork = hasCapturedError(nextUnitOfWork) ? performFailedUnitOfWork(nextUnitOfWork) : performUnitOfWork(nextUnitOfWork)) || (invariant(null !== pendingCommit, "Should have a pending commit. This error is likely caused by " + "a bug in React. Please file an issue."), priorityContext = TaskPriority$1, commitAllWork(pendingCommit), priorityContext = nextPriorityLevel, null !== capturedErrors && 0 !== capturedErrors.size && nextPriorityLevel === TaskPriority$1));) {}
        }
        function workLoop(minPriorityLevel, deadline) {
            if (null !== pendingCommit ? (priorityContext = TaskPriority$1, commitAllWork(pendingCommit), handleCommitPhaseErrors()) : null === nextUnitOfWork && resetNextUnitOfWork(), !(nextPriorityLevel === NoWork$2 || nextPriorityLevel > minPriorityLevel)) {
                priorityContext = nextPriorityLevel;
                loop: do {
                    if (nextPriorityLevel <= TaskPriority$1) for (; null !== nextUnitOfWork && !(null === (nextUnitOfWork = performUnitOfWork(nextUnitOfWork)) && (invariant(null !== pendingCommit, "Should have a pending commit. This error is likely caused by " + "a bug in React. Please file an issue."), priorityContext = TaskPriority$1, commitAllWork(pendingCommit), priorityContext = nextPriorityLevel, handleCommitPhaseErrors(), nextPriorityLevel === NoWork$2 || nextPriorityLevel > minPriorityLevel || nextPriorityLevel > TaskPriority$1));) {} else if (null !== deadline) for (; null !== nextUnitOfWork && !deadlineHasExpired;) {
                        if (deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
                            if (null === (nextUnitOfWork = performUnitOfWork(nextUnitOfWork))) if (invariant(null !== pendingCommit, "Should have a pending commit. This error is likely caused by " + "a bug in React. Please file an issue."), deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
                                if (priorityContext = TaskPriority$1, commitAllWork(pendingCommit), priorityContext = nextPriorityLevel, handleCommitPhaseErrors(), nextPriorityLevel === NoWork$2 || nextPriorityLevel > minPriorityLevel || nextPriorityLevel < HighPriority) break;
                            } else deadlineHasExpired = !0;
                        } else deadlineHasExpired = !0;
                    }switch (nextPriorityLevel) {
                        case SynchronousPriority$1:
                        case TaskPriority$1:
                            if (nextPriorityLevel <= minPriorityLevel) continue loop;
                            break loop;

                        case HighPriority:
                        case LowPriority:
                        case OffscreenPriority:
                            if (null === deadline) break loop;
                            if (!deadlineHasExpired && nextPriorityLevel <= minPriorityLevel) continue loop;
                            break loop;

                        case NoWork$2:
                            break loop;

                        default:
                            invariant(!1, "Switch statement should be exhuastive. " + "This error is likely caused by a bug in React. Please file an issue.");
                    }
                } while (!0);
            }
        }
        function performWorkCatchBlock(failedWork, boundary, minPriorityLevel, deadline) {
            unwindContexts(failedWork, boundary), nextUnitOfWork = performFailedUnitOfWork(boundary), workLoop(minPriorityLevel, deadline);
        }
        function performWork(minPriorityLevel, deadline) {
            startWorkLoopTimer(), invariant(!isPerformingWork, "performWork was called recursively. This error is likely caused " + "by a bug in React. Please file an issue."), isPerformingWork = !0;
            var previousPriorityContext = priorityContext,
                didError = !1,
                error = null;
            for (invokeGuardedCallback$1(null, workLoop, null, minPriorityLevel, deadline), hasCaughtError() && (didError = !0, error = clearCaughtError()); didError;) {
                if (didFatal) {
                    firstUncaughtError = error;
                    break;
                }
                var failedWork = nextUnitOfWork;
                if (null !== failedWork) {
                    var boundary = captureError(failedWork, error);
                    if (invariant(null !== boundary, "Should have found an error boundary. This error is likely " + "caused by a bug in React. Please file an issue."), !didFatal) {
                        if (didError = !1, error = null, invokeGuardedCallback$1(null, performWorkCatchBlock, null, failedWork, boundary, minPriorityLevel, deadline), !hasCaughtError()) break;
                        didError = !0, error = clearCaughtError();
                    }
                } else didFatal = !0;
            }
            priorityContext = previousPriorityContext, null !== deadline && (isCallbackScheduled = !1), nextPriorityLevel > TaskPriority$1 && !isCallbackScheduled && (scheduleDeferredCallback(performDeferredWork), isCallbackScheduled = !0);
            var errorToThrow = firstUncaughtError;
            if (isPerformingWork = !1, deadlineHasExpired = !1, didFatal = !1, firstUncaughtError = null, capturedErrors = null, failedBoundaries = null, nextRenderedTree = null, nestedUpdateCount = 0, stopWorkLoopTimer(), null !== errorToThrow) throw errorToThrow;
        }
        function captureError(failedWork, error) {
            ReactCurrentOwner$1.current = null, ReactDebugCurrentFiber$3.resetCurrentFiber();
            var boundary = null,
                errorBoundaryFound = !1,
                willRetry = !1,
                errorBoundaryName = null;
            if (failedWork.tag === HostRoot$5) boundary = failedWork, isFailedBoundary(failedWork) && (didFatal = !0);else for (var node = failedWork.return; null !== node && null === boundary;) {
                if (node.tag === ClassComponent$5) {
                    var instance = node.stateNode;
                    "function" == typeof instance.componentDidCatch && (errorBoundaryFound = !0, errorBoundaryName = getComponentName_1(node), boundary = node, willRetry = !0);
                } else node.tag === HostRoot$5 && (boundary = node);
                if (isFailedBoundary(node)) {
                    if (isUnmounting) return null;
                    if (null !== commitPhaseBoundaries && (commitPhaseBoundaries.has(node) || null !== node.alternate && commitPhaseBoundaries.has(node.alternate))) return null;
                    boundary = null, willRetry = !1;
                }
                node = node.return;
            }
            if (null !== boundary) {
                null === failedBoundaries && (failedBoundaries = new Set()), failedBoundaries.add(boundary);
                var _componentStack = getStackAddendumByWorkInProgressFiber$2(failedWork),
                    _componentName = getComponentName_1(failedWork);
                null === capturedErrors && (capturedErrors = new Map());
                var capturedError = {
                    componentName: _componentName,
                    componentStack: _componentStack,
                    error: error,
                    errorBoundary: errorBoundaryFound ? boundary.stateNode : null,
                    errorBoundaryFound: errorBoundaryFound,
                    errorBoundaryName: errorBoundaryName,
                    willRetry: willRetry
                };
                capturedErrors.set(boundary, capturedError);
                try {
                    logCapturedError$1(capturedError);
                } catch (e) {
                    console.error(e);
                }
                return isCommitting ? (null === commitPhaseBoundaries && (commitPhaseBoundaries = new Set()), commitPhaseBoundaries.add(boundary)) : scheduleErrorRecovery(boundary), boundary;
            }
            return null === firstUncaughtError && (firstUncaughtError = error), null;
        }
        function hasCapturedError(fiber) {
            return null !== capturedErrors && (capturedErrors.has(fiber) || null !== fiber.alternate && capturedErrors.has(fiber.alternate));
        }
        function isFailedBoundary(fiber) {
            return null !== failedBoundaries && (failedBoundaries.has(fiber) || null !== fiber.alternate && failedBoundaries.has(fiber.alternate));
        }
        function commitErrorHandling(effectfulFiber) {
            var capturedError = void 0;
            switch (null !== capturedErrors && (capturedError = capturedErrors.get(effectfulFiber), capturedErrors.delete(effectfulFiber), null == capturedError && null !== effectfulFiber.alternate && (effectfulFiber = effectfulFiber.alternate, capturedError = capturedErrors.get(effectfulFiber), capturedErrors.delete(effectfulFiber))), invariant(null != capturedError, "No error for given unit of work. This error is likely caused by a " + "bug in React. Please file an issue."), effectfulFiber.tag) {
                case ClassComponent$5:
                    var instance = effectfulFiber.stateNode,
                        info = {
                        componentStack: capturedError.componentStack
                    };
                    return void instance.componentDidCatch(capturedError.error, info);

                case HostRoot$5:
                    return void (null === firstUncaughtError && (firstUncaughtError = capturedError.error));

                default:
                    invariant(!1, "Invalid type of work. This error is likely caused by a bug in " + "React. Please file an issue.");
            }
        }
        function unwindContexts(from, to) {
            for (var node = from; null !== node;) {
                switch (node.tag) {
                    case ClassComponent$5:
                        popContextProvider$1(node);
                        break;

                    case HostComponent$5:
                        popHostContext(node);
                        break;

                    case HostRoot$5:
                    case HostPortal$3:
                        popHostContainer(node);
                }
                if (node === to || node.alternate === to) {
                    stopFailedWorkTimer(node);
                    break;
                }
                stopWorkTimer(node), node = node.return;
            }
        }
        function scheduleRoot(root, priorityLevel) {
            priorityLevel !== NoWork$2 && (root.isScheduled || (root.isScheduled = !0, lastScheduledRoot ? (lastScheduledRoot.nextScheduledRoot = root, lastScheduledRoot = root) : (nextScheduledRoot = root, lastScheduledRoot = root)));
        }
        function scheduleUpdate(fiber, priorityLevel) {
            return scheduleUpdateImpl(fiber, priorityLevel, !1);
        }
        function scheduleUpdateImpl(fiber, priorityLevel, isErrorRecovery) {
            if (recordScheduleUpdate(), nestedUpdateCount > NESTED_UPDATE_LIMIT && (didFatal = !0, invariant(!1, "Maximum update depth exceeded. This can happen when a " + "component repeatedly calls setState inside componentWillUpdate or " + "componentDidUpdate. React limits the number of nested updates to " + "prevent infinite loops.")), !isPerformingWork && priorityLevel <= nextPriorityLevel && (nextUnitOfWork = null), !isErrorRecovery && fiber.tag === ClassComponent$5) {
                var instance = fiber.stateNode;
                warnAboutInvalidUpdates(instance);
            }
            for (var node = fiber, shouldContinue = !0; null !== node && shouldContinue;) {
                if (shouldContinue = !1, (node.pendingWorkPriority === NoWork$2 || node.pendingWorkPriority > priorityLevel) && (shouldContinue = !0, node.pendingWorkPriority = priorityLevel), null !== node.alternate && (node.alternate.pendingWorkPriority === NoWork$2 || node.alternate.pendingWorkPriority > priorityLevel) && (shouldContinue = !0, node.alternate.pendingWorkPriority = priorityLevel), null === node.return) {
                    if (node.tag !== HostRoot$5) return void (isErrorRecovery || fiber.tag !== ClassComponent$5 || warnAboutUpdateOnUnmounted(fiber.stateNode));
                    if (scheduleRoot(node.stateNode, priorityLevel), !isPerformingWork) switch (priorityLevel) {
                        case SynchronousPriority$1:
                            isUnbatchingUpdates ? performWork(SynchronousPriority$1, null) : performWork(TaskPriority$1, null);
                            break;

                        case TaskPriority$1:
                            invariant(isBatchingUpdates, "Task updates can only be scheduled as a nested update or " + "inside batchedUpdates.");
                            break;

                        default:
                            isCallbackScheduled || (scheduleDeferredCallback(performDeferredWork), isCallbackScheduled = !0);
                    }
                }
                node = node.return;
            }
        }
        function getPriorityContext(fiber, forceAsync) {
            var priorityLevel = priorityContext;
            return priorityLevel === NoWork$2 && (priorityLevel = !useSyncScheduling || fiber.internalContextTag & AsyncUpdates || forceAsync ? LowPriority : SynchronousPriority$1), priorityLevel === SynchronousPriority$1 && (isPerformingWork || isBatchingUpdates) ? TaskPriority$1 : priorityLevel;
        }
        function scheduleErrorRecovery(fiber) {
            scheduleUpdateImpl(fiber, TaskPriority$1, !0);
        }
        function batchedUpdates(fn, a) {
            var previousIsBatchingUpdates = isBatchingUpdates;
            isBatchingUpdates = !0;
            try {
                return fn(a);
            } finally {
                isBatchingUpdates = previousIsBatchingUpdates, isPerformingWork || isBatchingUpdates || performWork(TaskPriority$1, null);
            }
        }
        function unbatchedUpdates(fn) {
            var previousIsUnbatchingUpdates = isUnbatchingUpdates,
                previousIsBatchingUpdates = isBatchingUpdates;
            isUnbatchingUpdates = isBatchingUpdates, isBatchingUpdates = !1;
            try {
                return fn();
            } finally {
                isBatchingUpdates = previousIsBatchingUpdates, isUnbatchingUpdates = previousIsUnbatchingUpdates;
            }
        }
        function flushSync(batch) {
            var previousIsBatchingUpdates = isBatchingUpdates,
                previousPriorityContext = priorityContext;
            isBatchingUpdates = !0, priorityContext = SynchronousPriority$1;
            try {
                return batch();
            } finally {
                isBatchingUpdates = previousIsBatchingUpdates, priorityContext = previousPriorityContext, invariant(!isPerformingWork, "flushSync was called from inside a lifecycle method. It cannot be " + "called when React is already rendering."), performWork(TaskPriority$1, null);
            }
        }
        function deferredUpdates(fn) {
            var previousPriorityContext = priorityContext;
            priorityContext = LowPriority;
            try {
                return fn();
            } finally {
                priorityContext = previousPriorityContext;
            }
        }
        return {
            scheduleUpdate: scheduleUpdate,
            getPriorityContext: getPriorityContext,
            batchedUpdates: batchedUpdates,
            unbatchedUpdates: unbatchedUpdates,
            flushSync: flushSync,
            deferredUpdates: deferredUpdates
        };
    },
        addTopLevelUpdate = ReactFiberUpdateQueue.addTopLevelUpdate,
        findCurrentUnmaskedContext = ReactFiberContext.findCurrentUnmaskedContext,
        isContextProvider = ReactFiberContext.isContextProvider,
        processChildContext = ReactFiberContext.processChildContext,
        createFiberRoot = ReactFiberRoot.createFiberRoot,
        HostComponent = ReactTypeOfWork.HostComponent,
        warning$1 = require$$0,
        ReactFiberInstrumentation = ReactFiberInstrumentation_1,
        ReactDebugCurrentFiber = ReactDebugCurrentFiber_1,
        getComponentName = getComponentName_1,
        findCurrentHostFiber = ReactFiberTreeReflection.findCurrentHostFiber,
        findCurrentHostFiberWithNoPortals = ReactFiberTreeReflection.findCurrentHostFiberWithNoPortals;
    function getContextForSubtree(parentComponent) {
        if (!parentComponent) return emptyObject;
        var fiber = ReactInstanceMap_1.get(parentComponent),
            parentContext = findCurrentUnmaskedContext(fiber);
        return isContextProvider(fiber) ? processChildContext(fiber, parentContext) : parentContext;
    }
    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
    }
    var objects = {},
        uniqueID = 1,
        emptyObject$3 = {},
        ReactNativePropRegistry = function () {
        function ReactNativePropRegistry() {
            _classCallCheck(this, ReactNativePropRegistry);
        }
        return ReactNativePropRegistry.register = function (object) {
            var id = ++uniqueID;
            return Object.freeze(object), objects[id] = object, id;
        }, ReactNativePropRegistry.getByID = function (id) {
            if (!id) return emptyObject$3;
            var object = objects[id];
            return object || (console.warn("Invalid style with id `" + id + "`. Skipping ..."), emptyObject$3);
        }, ReactNativePropRegistry;
    }(),
        ReactNativePropRegistry_1 = ReactNativePropRegistry,
        emptyObject$2 = {},
        removedKeys = null,
        removedKeyCount = 0;
    function defaultDiffer(prevProp, nextProp) {
        return "object" != typeof nextProp || null === nextProp || deepDiffer(prevProp, nextProp);
    }
    function resolveObject(idOrObject) {
        return "number" == typeof idOrObject ? ReactNativePropRegistry_1.getByID(idOrObject) : idOrObject;
    }
    function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
        if (Array.isArray(node)) for (var i = node.length; i-- && removedKeyCount > 0;) {
            restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
        } else if (node && removedKeyCount > 0) {
            var obj = resolveObject(node);
            for (var propKey in removedKeys) {
                if (removedKeys[propKey]) {
                    var nextProp = obj[propKey];
                    if (void 0 !== nextProp) {
                        var attributeConfig = validAttributes[propKey];
                        if (attributeConfig) {
                            if ("function" == typeof nextProp && (nextProp = !0), void 0 === nextProp && (nextProp = null), "object" != typeof attributeConfig) updatePayload[propKey] = nextProp;else if ("function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process) {
                                var nextValue = "function" == typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp;
                                updatePayload[propKey] = nextValue;
                            }
                            removedKeys[propKey] = !1, removedKeyCount--;
                        }
                    }
                }
            }
        }
    }
    function diffNestedArrayProperty(updatePayload, prevArray, nextArray, validAttributes) {
        var i,
            minLength = prevArray.length < nextArray.length ? prevArray.length : nextArray.length;
        for (i = 0; i < minLength; i++) {
            updatePayload = diffNestedProperty(updatePayload, prevArray[i], nextArray[i], validAttributes);
        }for (; i < prevArray.length; i++) {
            updatePayload = clearNestedProperty(updatePayload, prevArray[i], validAttributes);
        }for (; i < nextArray.length; i++) {
            updatePayload = addNestedProperty(updatePayload, nextArray[i], validAttributes);
        }return updatePayload;
    }
    function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
        return updatePayload || prevProp !== nextProp ? prevProp && nextProp ? Array.isArray(prevProp) || Array.isArray(nextProp) ? Array.isArray(prevProp) && Array.isArray(nextProp) ? diffNestedArrayProperty(updatePayload, prevProp, nextProp, validAttributes) : Array.isArray(prevProp) ? diffProperties(updatePayload, flattenStyle(prevProp), resolveObject(nextProp), validAttributes) : diffProperties(updatePayload, resolveObject(prevProp), flattenStyle(nextProp), validAttributes) : diffProperties(updatePayload, resolveObject(prevProp), resolveObject(nextProp), validAttributes) : nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload : updatePayload;
    }
    function addNestedProperty(updatePayload, nextProp, validAttributes) {
        if (!nextProp) return updatePayload;
        if (!Array.isArray(nextProp)) return addProperties(updatePayload, resolveObject(nextProp), validAttributes);
        for (var i = 0; i < nextProp.length; i++) {
            updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
        }return updatePayload;
    }
    function clearNestedProperty(updatePayload, prevProp, validAttributes) {
        if (!prevProp) return updatePayload;
        if (!Array.isArray(prevProp)) return clearProperties(updatePayload, resolveObject(prevProp), validAttributes);
        for (var i = 0; i < prevProp.length; i++) {
            updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
        }return updatePayload;
    }
    function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
        var attributeConfig, nextProp, prevProp;
        for (var propKey in nextProps) {
            if (attributeConfig = validAttributes[propKey]) if (prevProp = prevProps[propKey], nextProp = nextProps[propKey], "function" == typeof nextProp && (nextProp = !0, "function" == typeof prevProp && (prevProp = !0)), void 0 === nextProp && (nextProp = null, void 0 === prevProp && (prevProp = null)), removedKeys && (removedKeys[propKey] = !1), updatePayload && void 0 !== updatePayload[propKey]) {
                if ("object" != typeof attributeConfig) updatePayload[propKey] = nextProp;else if ("function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process) {
                    var nextValue = "function" == typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp;
                    updatePayload[propKey] = nextValue;
                }
            } else if (prevProp !== nextProp) if ("object" != typeof attributeConfig) defaultDiffer(prevProp, nextProp) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp);else if ("function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process) {
                var shouldUpdate = void 0 === prevProp || ("function" == typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : defaultDiffer(prevProp, nextProp));
                shouldUpdate && (nextValue = "function" == typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = nextValue);
            } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), removedKeyCount > 0 && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
        }for (propKey in prevProps) {
            void 0 === nextProps[propKey] && (attributeConfig = validAttributes[propKey]) && (updatePayload && void 0 !== updatePayload[propKey] || void 0 !== (prevProp = prevProps[propKey]) && ("object" != typeof attributeConfig || "function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[propKey] = null, removedKeys || (removedKeys = {}), removedKeys[propKey] || (removedKeys[propKey] = !0, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig)));
        }return updatePayload;
    }
    function addProperties(updatePayload, props, validAttributes) {
        return diffProperties(updatePayload, emptyObject$2, props, validAttributes);
    }
    function clearProperties(updatePayload, prevProps, validAttributes) {
        return diffProperties(updatePayload, prevProps, emptyObject$2, validAttributes);
    }
    var ReactNativeAttributePayload = {
        create: function create(props, validAttributes) {
            return addProperties(null, props, validAttributes);
        },
        diff: function diff(prevProps, nextProps, validAttributes) {
            return diffProperties(null, prevProps, nextProps, validAttributes);
        }
    },
        ReactNativeAttributePayload_1 = ReactNativeAttributePayload;
    function mountSafeCallback$1(context, callback) {
        return function () {
            if (callback) {
                if ("boolean" == typeof context.__isMounted) {
                    if (!context.__isMounted) return;
                } else if ("function" == typeof context.isMounted && !context.isMounted()) return;
                return callback.apply(context, arguments);
            }
        };
    }
    function throwOnStylesProp(component, props) {
        if (void 0 !== props.styles) {
            var owner = component._owner || null,
                name = component.constructor.displayName,
                msg = "`styles` is not a supported property of `" + name + "`, did " + "you mean `style` (singular)?";
            throw owner && owner.constructor && owner.constructor.displayName && (msg += "\n\nCheck the `" + owner.constructor.displayName + "` parent " + " component."), new Error(msg);
        }
    }
    function warnForStyleProps$1(props, validAttributes) {
        for (var key in validAttributes.style) {
            validAttributes[key] || void 0 === props[key] || console.error("You are setting the style `{ " + key + ": ... }` as a prop. You " + "should nest it in a style object. " + "E.g. `{ style: { " + key + ": ... } }`");
        }
    }
    var NativeMethodsMixinUtils = {
        mountSafeCallback: mountSafeCallback$1,
        throwOnStylesProp: throwOnStylesProp,
        warnForStyleProps: warnForStyleProps$1
    };
    function _classCallCheck$1(instance, Constructor) {
        if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
    }
    var mountSafeCallback = NativeMethodsMixinUtils.mountSafeCallback,
        warnForStyleProps = NativeMethodsMixinUtils.warnForStyleProps,
        ReactNativeFiberHostComponent = function () {
        function ReactNativeFiberHostComponent(tag, viewConfig) {
            _classCallCheck$1(this, ReactNativeFiberHostComponent), this._nativeTag = tag, this._children = [], this.viewConfig = viewConfig;
        }
        return ReactNativeFiberHostComponent.prototype.blur = function () {
            TextInputState.blurTextInput(this._nativeTag);
        }, ReactNativeFiberHostComponent.prototype.focus = function () {
            TextInputState.focusTextInput(this._nativeTag);
        }, ReactNativeFiberHostComponent.prototype.measure = function (callback) {
            UIManager.measure(this._nativeTag, mountSafeCallback(this, callback));
        }, ReactNativeFiberHostComponent.prototype.measureInWindow = function (callback) {
            UIManager.measureInWindow(this._nativeTag, mountSafeCallback(this, callback));
        }, ReactNativeFiberHostComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
            UIManager.measureLayout(this._nativeTag, relativeToNativeNode, mountSafeCallback(this, onFail), mountSafeCallback(this, onSuccess));
        }, ReactNativeFiberHostComponent.prototype.setNativeProps = function (nativeProps) {
            warnForStyleProps(nativeProps, this.viewConfig.validAttributes);
            var updatePayload = ReactNativeAttributePayload_1.create(nativeProps, this.viewConfig.validAttributes);
            null != updatePayload && UIManager.updateView(this._nativeTag, this.viewConfig.uiViewClassName, updatePayload);
        }, ReactNativeFiberHostComponent;
    }(),
        ReactNativeFiberHostComponent_1 = ReactNativeFiberHostComponent,
        INITIAL_TAG_COUNT = 1,
        ReactNativeTagHandles = {
        tagsStartAt: INITIAL_TAG_COUNT,
        tagCount: INITIAL_TAG_COUNT,
        allocateTag: function allocateTag() {
            for (; this.reactTagIsNativeTopRootID(ReactNativeTagHandles.tagCount);) {
                ReactNativeTagHandles.tagCount++;
            }var tag = ReactNativeTagHandles.tagCount;
            return ReactNativeTagHandles.tagCount++, tag;
        },
        assertRootTag: function assertRootTag(tag) {
            invariant(this.reactTagIsNativeTopRootID(tag), "Expect a native root tag, instead got %s", tag);
        },
        reactTagIsNativeTopRootID: function reactTagIsNativeTopRootID(reactTag) {
            return reactTag % 10 == 1;
        }
    },
        ReactNativeTagHandles_1 = ReactNativeTagHandles,
        viewConfigCallbacks = new Map(),
        viewConfigs = new Map(),
        ReactNativeViewConfigRegistry = {
        register: function register(name, callback) {
            return invariant(!viewConfigCallbacks.has(name), "Tried to register two views with the same name %s", name), viewConfigCallbacks.set(name, callback), name;
        },
        get: function get(name) {
            var viewConfig = void 0;
            if (viewConfigs.has(name)) viewConfig = viewConfigs.get(name);else {
                var callback = viewConfigCallbacks.get(name);
                invariant("function" == typeof callback, "View config not found for name %s", name), viewConfigCallbacks.set(name, null), viewConfig = callback(), viewConfigs.set(name, viewConfig);
            }
            return invariant(viewConfig, "View config not found for name %s", name), viewConfig;
        }
    },
        ReactNativeViewConfigRegistry_1 = ReactNativeViewConfigRegistry,
        precacheFiberNode$1 = ReactNativeComponentTree_1.precacheFiberNode,
        uncacheFiberNode$1 = ReactNativeComponentTree_1.uncacheFiberNode,
        updateFiberProps$1 = ReactNativeComponentTree_1.updateFiberProps;
    function recursivelyUncacheFiberNode(node) {
        "number" == typeof node ? uncacheFiberNode$1(node) : (uncacheFiberNode$1(node._nativeTag), node._children.forEach(recursivelyUncacheFiberNode));
    }
    var NativeRenderer = function (config) {
        var getPublicInstance = config.getPublicInstance,
            _ReactFiberScheduler = ReactFiberScheduler(config),
            scheduleUpdate = _ReactFiberScheduler.scheduleUpdate,
            getPriorityContext = _ReactFiberScheduler.getPriorityContext,
            batchedUpdates = _ReactFiberScheduler.batchedUpdates,
            unbatchedUpdates = _ReactFiberScheduler.unbatchedUpdates,
            flushSync = _ReactFiberScheduler.flushSync,
            deferredUpdates = _ReactFiberScheduler.deferredUpdates;
        function scheduleTopLevelUpdate(current, element, callback) {
            "render" === ReactDebugCurrentFiber.phase && null !== ReactDebugCurrentFiber.current && warning$1(!1, "Render methods should be a pure function of props and state; " + "triggering nested component updates from render is not allowed. " + "If necessary, trigger nested updates in componentDidUpdate.\n\n" + "Check the render method of %s.", getComponentName(ReactDebugCurrentFiber.current) || "Unknown");
            var forceAsync = ReactFeatureFlags_1.enableAsyncSubtreeAPI && null != element && null != element.type && null != element.type.prototype && !0 === element.type.prototype.unstable_isAsyncReactComponent,
                priorityLevel = getPriorityContext(current, forceAsync),
                nextState = {
                element: element
            };
            callback = void 0 === callback ? null : callback, warning$1(null === callback || "function" == typeof callback, "render(...): Expected the last optional `callback` argument to be a " + "function. Instead received: %s.", callback), addTopLevelUpdate(current, nextState, callback, priorityLevel), scheduleUpdate(current, priorityLevel);
        }
        return {
            createContainer: function createContainer(containerInfo) {
                return createFiberRoot(containerInfo);
            },
            updateContainer: function updateContainer(element, container, parentComponent, callback) {
                var current = container.current;
                ReactFiberInstrumentation.debugTool && (null === current.alternate ? ReactFiberInstrumentation.debugTool.onMountContainer(container) : null === element ? ReactFiberInstrumentation.debugTool.onUnmountContainer(container) : ReactFiberInstrumentation.debugTool.onUpdateContainer(container));
                var context = getContextForSubtree(parentComponent);
                null === container.context ? container.context = context : container.pendingContext = context, scheduleTopLevelUpdate(current, element, callback);
            },
            batchedUpdates: batchedUpdates,
            unbatchedUpdates: unbatchedUpdates,
            deferredUpdates: deferredUpdates,
            flushSync: flushSync,
            getPublicRootInstance: function getPublicRootInstance(container) {
                var containerFiber = container.current;
                if (!containerFiber.child) return null;
                switch (containerFiber.child.tag) {
                    case HostComponent:
                        return getPublicInstance(containerFiber.child.stateNode);

                    default:
                        return containerFiber.child.stateNode;
                }
            },
            findHostInstance: function findHostInstance(fiber) {
                var hostFiber = findCurrentHostFiber(fiber);
                return null === hostFiber ? null : hostFiber.stateNode;
            },
            findHostInstanceWithNoPortals: function findHostInstanceWithNoPortals(fiber) {
                var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
                return null === hostFiber ? null : hostFiber.stateNode;
            }
        };
    }({
        appendChild: function appendChild(parentInstance, child) {
            var childTag = "number" == typeof child ? child : child._nativeTag,
                children = parentInstance._children,
                index = children.indexOf(child);
            index >= 0 ? (children.splice(index, 1), children.push(child), UIManager.manageChildren(parentInstance._nativeTag, [index], [children.length - 1], [], [], [])) : (children.push(child), UIManager.manageChildren(parentInstance._nativeTag, [], [], [childTag], [children.length - 1], []));
        },
        appendChildToContainer: function appendChildToContainer(parentInstance, child) {
            var childTag = "number" == typeof child ? child : child._nativeTag;
            UIManager.setChildren(parentInstance, [childTag]);
        },
        appendInitialChild: function appendInitialChild(parentInstance, child) {
            parentInstance._children.push(child);
        },
        commitTextUpdate: function commitTextUpdate(textInstance, oldText, newText) {
            UIManager.updateView(textInstance, "RCTRawText", {
                text: newText
            });
        },
        commitMount: function commitMount(instance, type, newProps, internalInstanceHandle) {},
        commitUpdate: function commitUpdate(instance, updatePayloadTODO, type, oldProps, newProps, internalInstanceHandle) {
            var viewConfig = instance.viewConfig;
            updateFiberProps$1(instance._nativeTag, newProps);
            var updatePayload = ReactNativeAttributePayload_1.diff(oldProps, newProps, viewConfig.validAttributes);
            null != updatePayload && UIManager.updateView(instance._nativeTag, viewConfig.uiViewClassName, updatePayload);
        },
        createInstance: function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
            var tag = ReactNativeTagHandles_1.allocateTag(),
                viewConfig = ReactNativeViewConfigRegistry_1.get(type);
            for (var key in viewConfig.validAttributes) {
                props.hasOwnProperty(key) && deepFreezeAndThrowOnMutationInDev(props[key]);
            }var updatePayload = ReactNativeAttributePayload_1.create(props, viewConfig.validAttributes);
            UIManager.createView(tag, viewConfig.uiViewClassName, rootContainerInstance, updatePayload);
            var component = new ReactNativeFiberHostComponent_1(tag, viewConfig);
            return precacheFiberNode$1(internalInstanceHandle, tag), updateFiberProps$1(tag, props), component;
        },
        createTextInstance: function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
            var tag = ReactNativeTagHandles_1.allocateTag();
            return UIManager.createView(tag, "RCTRawText", rootContainerInstance, {
                text: text
            }), precacheFiberNode$1(internalInstanceHandle, tag), tag;
        },
        finalizeInitialChildren: function finalizeInitialChildren(parentInstance, type, props, rootContainerInstance) {
            if (0 === parentInstance._children.length) return !1;
            var nativeTags = parentInstance._children.map(function (child) {
                return "number" == typeof child ? child : child._nativeTag;
            });
            return UIManager.setChildren(parentInstance._nativeTag, nativeTags), !1;
        },
        getRootHostContext: function getRootHostContext() {
            return emptyObject;
        },
        getChildHostContext: function getChildHostContext() {
            return emptyObject;
        },
        getPublicInstance: function getPublicInstance(instance) {
            return instance;
        },
        insertBefore: function insertBefore(parentInstance, child, beforeChild) {
            var children = parentInstance._children,
                index = children.indexOf(child);
            if (index >= 0) {
                children.splice(index, 1);
                var beforeChildIndex = children.indexOf(beforeChild);
                children.splice(beforeChildIndex, 0, child), UIManager.manageChildren(parentInstance._nativeTag, [index], [beforeChildIndex], [], [], []);
            } else {
                var _beforeChildIndex = children.indexOf(beforeChild);
                children.splice(_beforeChildIndex, 0, child);
                var childTag = "number" == typeof child ? child : child._nativeTag;
                UIManager.manageChildren(parentInstance._nativeTag, [], [], [childTag], [_beforeChildIndex], []);
            }
        },
        insertInContainerBefore: function insertInContainerBefore(parentInstance, child, beforeChild) {
            invariant("number" != typeof parentInstance, "Container does not support insertBefore operation");
        },
        prepareForCommit: function prepareForCommit() {},
        prepareUpdate: function prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, hostContext) {
            return emptyObject;
        },
        removeChild: function removeChild(parentInstance, child) {
            recursivelyUncacheFiberNode(child);
            var children = parentInstance._children,
                index = children.indexOf(child);
            children.splice(index, 1), UIManager.manageChildren(parentInstance._nativeTag, [], [], [], [], [index]);
        },
        removeChildFromContainer: function removeChildFromContainer(parentInstance, child) {
            recursivelyUncacheFiberNode(child), UIManager.manageChildren(parentInstance, [], [], [], [], [0]);
        },
        resetAfterCommit: function resetAfterCommit() {},
        resetTextContent: function resetTextContent(instance) {},
        shouldDeprioritizeSubtree: function shouldDeprioritizeSubtree(type, props) {
            return !1;
        },
        scheduleDeferredCallback: commonjsGlobal.requestIdleCallback,
        shouldSetTextContent: function shouldSetTextContent(type, props) {
            return !1;
        },
        useSyncScheduling: !0
    }),
        ReactNativeFiberRenderer = NativeRenderer,
        getClosestInstanceFromNode = ReactNativeComponentTree_1.getClosestInstanceFromNode,
        findCurrentFiberUsingSlowPath$1 = ReactFiberTreeReflection.findCurrentFiberUsingSlowPath,
        HostComponent$10 = ReactTypeOfWork.HostComponent,
        getInspectorDataForViewTag = void 0,
        traverseOwnerTreeUp = function traverseOwnerTreeUp(hierarchy, instance) {
        instance && (hierarchy.unshift(instance), traverseOwnerTreeUp(hierarchy, instance._debugOwner));
    },
        getOwnerHierarchy = function getOwnerHierarchy(instance) {
        var hierarchy = [];
        return traverseOwnerTreeUp(hierarchy, instance), hierarchy;
    },
        lastNonHostInstance = function lastNonHostInstance(hierarchy) {
        for (var i = hierarchy.length - 1; i > 1; i--) {
            var instance = hierarchy[i];
            if (instance.tag !== HostComponent$10) return instance;
        }
        return hierarchy[0];
    },
        getHostProps = function getHostProps(fiber) {
        var host = ReactFiberTreeReflection.findCurrentHostFiber(fiber);
        return host ? host.memoizedProps || emptyObject : emptyObject;
    },
        getHostNode = function getHostNode(fiber, findNodeHandle) {
        for (var hostNode = void 0; fiber;) {
            if (null !== fiber.stateNode && fiber.tag === HostComponent$10 && (hostNode = findNodeHandle(fiber.stateNode)), hostNode) return hostNode;
            fiber = fiber.child;
        }
        return null;
    },
        createHierarchy = function createHierarchy(fiberHierarchy) {
        return fiberHierarchy.map(function (fiber) {
            return {
                name: getComponentName_1(fiber),
                getInspectorData: function getInspectorData(findNodeHandle) {
                    return {
                        measure: function measure(callback) {
                            return UIManager.measure(getHostNode(fiber, findNodeHandle), callback);
                        },
                        props: getHostProps(fiber),
                        source: fiber._debugSource
                    };
                }
            };
        });
    };
    getInspectorDataForViewTag = function getInspectorDataForViewTag(viewTag) {
        var closestInstance = getClosestInstanceFromNode(viewTag);
        if (!closestInstance) return {
            hierarchy: [],
            props: emptyObject,
            selection: null,
            source: null
        };
        var fiber = findCurrentFiberUsingSlowPath$1(closestInstance),
            fiberHierarchy = getOwnerHierarchy(fiber),
            instance = lastNonHostInstance(fiberHierarchy),
            hierarchy = createHierarchy(fiberHierarchy),
            props = getHostProps(instance),
            source = instance._debugSource;
        return {
            hierarchy: hierarchy,
            props: props,
            selection: fiberHierarchy.indexOf(instance),
            source: source
        };
    };
    var ReactNativeFiberInspector = {
        getInspectorDataForViewTag: getInspectorDataForViewTag
    },
        ReactVersion = "16.0.0",
        ReactCurrentOwner$3 = ReactGlobalSharedState_1.ReactCurrentOwner,
        warning$11 = require$$0;
    function findNodeHandle(componentOrHandle) {
        var owner = ReactCurrentOwner$3.current;
        if (null !== owner && null !== owner.stateNode && (warning$11(owner.stateNode._warnedAboutRefsInRender, "%s is accessing findNodeHandle inside its render(). " + "render() should be a pure function of props and state. It should " + "never access something that requires stale data from the previous " + "render, such as refs. Move this logic to componentDidMount and " + "componentDidUpdate instead.", getComponentName_1(owner) || "A component"), owner.stateNode._warnedAboutRefsInRender = !0), null == componentOrHandle) return null;
        if ("number" == typeof componentOrHandle) return componentOrHandle;
        var component = componentOrHandle,
            internalInstance = ReactInstanceMap_1.get(component);
        return internalInstance ? ReactNativeFiberRenderer.findHostInstance(internalInstance) : component || (invariant("object" == typeof component && "_nativeTag" in component || null != component.render && "function" == typeof component.render, "findNodeHandle(...): Argument is not a component " + "(type: %s, keys: %s)", typeof component, Object.keys(component)), void invariant(!1, "findNodeHandle(...): Unable to find node handle for unmounted " + "component."));
    }
    var findNodeHandle_1 = findNodeHandle,
        findNumericNodeHandle = function findNumericNodeHandle(componentOrHandle) {
        var instance = findNodeHandle_1(componentOrHandle);
        return null == instance || "number" == typeof instance ? instance : instance._nativeTag;
    },
        eventPluginOrder = null,
        namesToPlugins = {};
    function recomputePluginOrdering() {
        if (eventPluginOrder) for (var pluginName in namesToPlugins) {
            var pluginModule = namesToPlugins[pluginName],
                pluginIndex = eventPluginOrder.indexOf(pluginName);
            if (invariant(pluginIndex > -1, "EventPluginRegistry: Cannot inject event plugins that do not exist in " + "the plugin ordering, `%s`.", pluginName), !EventPluginRegistry.plugins[pluginIndex]) {
                invariant(pluginModule.extractEvents, "EventPluginRegistry: Event plugins must implement an `extractEvents` " + "method, but `%s` does not.", pluginName), EventPluginRegistry.plugins[pluginIndex] = pluginModule;
                var publishedEvents = pluginModule.eventTypes;
                for (var eventName in publishedEvents) {
                    invariant(publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName), "EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.", eventName, pluginName);
                }
            }
        }
    }
    function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
        invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName), "EventPluginHub: More than one plugin attempted to publish the same " + "event name, `%s`.", eventName), EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
        var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
        if (phasedRegistrationNames) {
            for (var phaseName in phasedRegistrationNames) {
                if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
                    var phasedRegistrationName = phasedRegistrationNames[phaseName];
                    publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
                }
            }return !0;
        }
        return !!dispatchConfig.registrationName && (publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName), !0);
    }
    function publishRegistrationName(registrationName, pluginModule, eventName) {
        invariant(!EventPluginRegistry.registrationNameModules[registrationName], "EventPluginHub: More than one plugin attempted to publish the same " + "registration name, `%s`.", registrationName), EventPluginRegistry.registrationNameModules[registrationName] = pluginModule, EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;
        var lowerCasedName = registrationName.toLowerCase();
        EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName, "onDoubleClick" === registrationName && (EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName);
    }
    var EventPluginRegistry = {
        plugins: [],
        eventNameDispatchConfigs: {},
        registrationNameModules: {},
        registrationNameDependencies: {},
        possibleRegistrationNames: {},
        injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
            invariant(!eventPluginOrder, "EventPluginRegistry: Cannot inject event plugin ordering more than " + "once. You are likely trying to load more than one copy of React."), eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder), recomputePluginOrdering();
        },
        injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
            var isOrderingDirty = !1;
            for (var pluginName in injectedNamesToPlugins) {
                if (injectedNamesToPlugins.hasOwnProperty(pluginName)) {
                    var pluginModule = injectedNamesToPlugins[pluginName];
                    namesToPlugins.hasOwnProperty(pluginName) && namesToPlugins[pluginName] === pluginModule || (invariant(!namesToPlugins[pluginName], "EventPluginRegistry: Cannot inject two different event plugins " + "using the same name, `%s`.", pluginName), namesToPlugins[pluginName] = pluginModule, isOrderingDirty = !0);
                }
            }isOrderingDirty && recomputePluginOrdering();
        }
    },
        EventPluginRegistry_1 = EventPluginRegistry;
    function accumulateInto(current, next) {
        return invariant(null != next, "accumulateInto(...): Accumulated items must not be null or undefined."), null == current ? next : Array.isArray(current) ? Array.isArray(next) ? (current.push.apply(current, next), current) : (current.push(next), current) : Array.isArray(next) ? [current].concat(next) : [current, next];
    }
    var accumulateInto_1 = accumulateInto;
    function forEachAccumulated(arr, cb, scope) {
        Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
    }
    var forEachAccumulated_1 = forEachAccumulated,
        eventQueue = null,
        executeDispatchesAndRelease = function executeDispatchesAndRelease(event, simulated) {
        event && (EventPluginUtils_1.executeDispatchesInOrder(event, simulated), event.isPersistent() || event.constructor.release(event));
    },
        executeDispatchesAndReleaseSimulated = function executeDispatchesAndReleaseSimulated(e) {
        return executeDispatchesAndRelease(e, !0);
    },
        executeDispatchesAndReleaseTopLevel = function executeDispatchesAndReleaseTopLevel(e) {
        return executeDispatchesAndRelease(e, !1);
    };
    function isInteractive(tag) {
        return "button" === tag || "input" === tag || "select" === tag || "textarea" === tag;
    }
    function shouldPreventMouseEvent(name, type, props) {
        switch (name) {
            case "onClick":
            case "onClickCapture":
            case "onDoubleClick":
            case "onDoubleClickCapture":
            case "onMouseDown":
            case "onMouseDownCapture":
            case "onMouseMove":
            case "onMouseMoveCapture":
            case "onMouseUp":
            case "onMouseUpCapture":
                return !(!props.disabled || !isInteractive(type));

            default:
                return !1;
        }
    }
    var EventPluginHub = {
        injection: {
            injectEventPluginOrder: EventPluginRegistry_1.injectEventPluginOrder,
            injectEventPluginsByName: EventPluginRegistry_1.injectEventPluginsByName
        },
        getListener: function getListener(inst, registrationName) {
            var listener,
                stateNode = inst.stateNode;
            if (!stateNode) return null;
            var props = EventPluginUtils_1.getFiberCurrentPropsFromNode(stateNode);
            return props ? (listener = props[registrationName], shouldPreventMouseEvent(registrationName, inst.type, props) ? null : (invariant(!listener || "function" == typeof listener, "Expected `%s` listener to be a function, instead got a value of `%s` type.", registrationName, typeof listener), listener)) : null;
        },
        extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
            for (var events, plugins = EventPluginRegistry_1.plugins, i = 0; i < plugins.length; i++) {
                var possiblePlugin = plugins[i];
                if (possiblePlugin) {
                    var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
                    extractedEvents && (events = accumulateInto_1(events, extractedEvents));
                }
            }
            return events;
        },
        enqueueEvents: function enqueueEvents(events) {
            events && (eventQueue = accumulateInto_1(eventQueue, events));
        },
        processEventQueue: function processEventQueue(simulated) {
            var processingEventQueue = eventQueue;
            eventQueue = null, simulated ? forEachAccumulated_1(processingEventQueue, executeDispatchesAndReleaseSimulated) : forEachAccumulated_1(processingEventQueue, executeDispatchesAndReleaseTopLevel), invariant(!eventQueue, "processEventQueue(): Additional events were enqueued while processing " + "an event queue. Support for this has not yet been implemented."), ReactErrorUtils_1.rethrowCaughtError();
        }
    },
        EventPluginHub_1 = EventPluginHub,
        HostComponent$11 = ReactTypeOfWork.HostComponent;
    function getParent(inst) {
        do {
            inst = inst.return;
        } while (inst && inst.tag !== HostComponent$11);
        return inst || null;
    }
    function getLowestCommonAncestor(instA, instB) {
        for (var depthA = 0, tempA = instA; tempA; tempA = getParent(tempA)) {
            depthA++;
        }for (var depthB = 0, tempB = instB; tempB; tempB = getParent(tempB)) {
            depthB++;
        }for (; depthA - depthB > 0;) {
            instA = getParent(instA), depthA--;
        }for (; depthB - depthA > 0;) {
            instB = getParent(instB), depthB--;
        }for (var depth = depthA; depth--;) {
            if (instA === instB || instA === instB.alternate) return instA;
            instA = getParent(instA), instB = getParent(instB);
        }
        return null;
    }
    function isAncestor(instA, instB) {
        for (; instB;) {
            if (instA === instB || instA === instB.alternate) return !0;
            instB = getParent(instB);
        }
        return !1;
    }
    function getParentInstance(inst) {
        return getParent(inst);
    }
    function traverseTwoPhase(inst, fn, arg) {
        for (var path = []; inst;) {
            path.push(inst), inst = getParent(inst);
        }var i;
        for (i = path.length; i-- > 0;) {
            fn(path[i], "captured", arg);
        }for (i = 0; i < path.length; i++) {
            fn(path[i], "bubbled", arg);
        }
    }
    function traverseEnterLeave(from, to, fn, argFrom, argTo) {
        for (var common = from && to ? getLowestCommonAncestor(from, to) : null, pathFrom = []; from && from !== common;) {
            pathFrom.push(from), from = getParent(from);
        }for (var pathTo = []; to && to !== common;) {
            pathTo.push(to), to = getParent(to);
        }var i;
        for (i = 0; i < pathFrom.length; i++) {
            fn(pathFrom[i], "bubbled", argFrom);
        }for (i = pathTo.length; i-- > 0;) {
            fn(pathTo[i], "captured", argTo);
        }
    }
    var ReactTreeTraversal = {
        isAncestor: isAncestor,
        getLowestCommonAncestor: getLowestCommonAncestor,
        getParentInstance: getParentInstance,
        traverseTwoPhase: traverseTwoPhase,
        traverseEnterLeave: traverseEnterLeave
    },
        getListener = EventPluginHub_1.getListener,
        warning$12 = require$$0;
    function listenerAtPhase(inst, event, propagationPhase) {
        var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
        return getListener(inst, registrationName);
    }
    function accumulateDirectionalDispatches(inst, phase, event) {
        warning$12(inst, "Dispatching inst must not be null");
        var listener = listenerAtPhase(inst, event, phase);
        listener && (event._dispatchListeners = accumulateInto_1(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto_1(event._dispatchInstances, inst));
    }
    function accumulateTwoPhaseDispatchesSingle(event) {
        event && event.dispatchConfig.phasedRegistrationNames && ReactTreeTraversal.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
    }
    function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
        if (event && event.dispatchConfig.phasedRegistrationNames) {
            var targetInst = event._targetInst,
                parentInst = targetInst ? ReactTreeTraversal.getParentInstance(targetInst) : null;
            ReactTreeTraversal.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
        }
    }
    function accumulateDispatches(inst, ignoredDirection, event) {
        if (inst && event && event.dispatchConfig.registrationName) {
            var registrationName = event.dispatchConfig.registrationName,
                listener = getListener(inst, registrationName);
            listener && (event._dispatchListeners = accumulateInto_1(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto_1(event._dispatchInstances, inst));
        }
    }
    function accumulateDirectDispatchesSingle(event) {
        event && event.dispatchConfig.registrationName && accumulateDispatches(event._targetInst, null, event);
    }
    function accumulateTwoPhaseDispatches(events) {
        forEachAccumulated_1(events, accumulateTwoPhaseDispatchesSingle);
    }
    function accumulateTwoPhaseDispatchesSkipTarget(events) {
        forEachAccumulated_1(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
    }
    function accumulateEnterLeaveDispatches(leave, enter, from, to) {
        ReactTreeTraversal.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
    }
    function accumulateDirectDispatches(events) {
        forEachAccumulated_1(events, accumulateDirectDispatchesSingle);
    }
    var EventPropagators = {
        accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
        accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
        accumulateDirectDispatches: accumulateDirectDispatches,
        accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
    },
        EventPropagators_1 = EventPropagators,
        didWarnForAddedNewProperty = !1,
        isProxySupported = "function" == typeof Proxy,
        EVENT_POOL_SIZE = 10,
        warning$13 = require$$0,
        shouldBeReleasedProperties = ["dispatchConfig", "_targetInst", "nativeEvent", "isDefaultPrevented", "isPropagationStopped", "_dispatchListeners", "_dispatchInstances"],
        EventInterface = {
        type: null,
        target: null,
        currentTarget: emptyFunction.thatReturnsNull,
        eventPhase: null,
        bubbles: null,
        cancelable: null,
        timeStamp: function timeStamp(event) {
            return event.timeStamp || Date.now();
        },
        defaultPrevented: null,
        isTrusted: null
    };
    function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
        delete this.nativeEvent, delete this.preventDefault, delete this.stopPropagation, this.dispatchConfig = dispatchConfig, this._targetInst = targetInst, this.nativeEvent = nativeEvent;
        var Interface = this.constructor.Interface;
        for (var propName in Interface) {
            if (Interface.hasOwnProperty(propName)) {
                delete this[propName];
                var normalize = Interface[propName];
                normalize ? this[propName] = normalize(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName];
            }
        }var defaultPrevented = null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : !1 === nativeEvent.returnValue;
        return this.isDefaultPrevented = defaultPrevented ? emptyFunction.thatReturnsTrue : emptyFunction.thatReturnsFalse, this.isPropagationStopped = emptyFunction.thatReturnsFalse, this;
    }
    babelHelpers.extends(SyntheticEvent.prototype, {
        preventDefault: function preventDefault() {
            this.defaultPrevented = !0;
            var event = this.nativeEvent;
            event && (event.preventDefault ? event.preventDefault() : "unknown" != typeof event.returnValue && (event.returnValue = !1), this.isDefaultPrevented = emptyFunction.thatReturnsTrue);
        },
        stopPropagation: function stopPropagation() {
            var event = this.nativeEvent;
            event && (event.stopPropagation ? event.stopPropagation() : "unknown" != typeof event.cancelBubble && (event.cancelBubble = !0), this.isPropagationStopped = emptyFunction.thatReturnsTrue);
        },
        persist: function persist() {
            this.isPersistent = emptyFunction.thatReturnsTrue;
        },
        isPersistent: emptyFunction.thatReturnsFalse,
        destructor: function destructor() {
            var Interface = this.constructor.Interface;
            for (var propName in Interface) {
                Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
            }for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
                this[shouldBeReleasedProperties[i]] = null;
            }Object.defineProperty(this, "nativeEvent", getPooledWarningPropertyDefinition("nativeEvent", null)), Object.defineProperty(this, "preventDefault", getPooledWarningPropertyDefinition("preventDefault", emptyFunction)), Object.defineProperty(this, "stopPropagation", getPooledWarningPropertyDefinition("stopPropagation", emptyFunction));
        }
    }), SyntheticEvent.Interface = EventInterface, SyntheticEvent.augmentClass = function (Class, Interface) {
        var Super = this,
            E = function E() {};
        E.prototype = Super.prototype;
        var prototype = new E();
        babelHelpers.extends(prototype, Class.prototype), Class.prototype = prototype, Class.prototype.constructor = Class, Class.Interface = babelHelpers.extends({}, Super.Interface, Interface), Class.augmentClass = Super.augmentClass, addEventPoolingTo(Class);
    }, isProxySupported && (SyntheticEvent = new Proxy(SyntheticEvent, {
        construct: function construct(target, args) {
            return this.apply(target, Object.create(target.prototype), args);
        },
        apply: function apply(constructor, that, args) {
            return new Proxy(constructor.apply(that, args), {
                set: function set(target, prop, value) {
                    return "isPersistent" === prop || target.constructor.Interface.hasOwnProperty(prop) || -1 !== shouldBeReleasedProperties.indexOf(prop) || (warning$13(didWarnForAddedNewProperty || target.isPersistent(), "This synthetic event is reused for performance reasons. If you're " + "seeing this, you're adding a new property in the synthetic event object. " + "The property is never released. See " + "https://fb.me/react-event-pooling for more information."), didWarnForAddedNewProperty = !0), target[prop] = value, !0;
                }
            });
        }
    })), addEventPoolingTo(SyntheticEvent);
    var SyntheticEvent_1 = SyntheticEvent;
    function getPooledWarningPropertyDefinition(propName, getVal) {
        var isFunction = "function" == typeof getVal;
        return {
            configurable: !0,
            set: set,
            get: get
        };
        function set(val) {
            return warn(isFunction ? "setting the method" : "setting the property", "This is effectively a no-op"), val;
        }
        function get() {
            return warn(isFunction ? "accessing the method" : "accessing the property", isFunction ? "This is a no-op function" : "This is set to null"), getVal;
        }
        function warn(action, result) {
            warning$13(!1, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + "If you must keep the original synthetic event around, use event.persist(). " + "See https://fb.me/react-event-pooling for more information.", action, propName, result);
        }
    }
    function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
        var EventConstructor = this;
        if (EventConstructor.eventPool.length) {
            var instance = EventConstructor.eventPool.pop();
            return EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst), instance;
        }
        return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);
    }
    function releasePooledEvent(event) {
        var EventConstructor = this;
        invariant(event instanceof EventConstructor, "Trying to release an event instance  into a pool of a different type."), event.destructor(), EventConstructor.eventPool.length < EVENT_POOL_SIZE && EventConstructor.eventPool.push(event);
    }
    function addEventPoolingTo(EventConstructor) {
        EventConstructor.eventPool = [], EventConstructor.getPooled = getPooledEvent, EventConstructor.release = releasePooledEvent;
    }
    var customBubblingEventTypes = {},
        customDirectEventTypes = {},
        ReactNativeBridgeEventPlugin = {
        eventTypes: {},
        extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
            var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
                directDispatchConfig = customDirectEventTypes[topLevelType];
            invariant(bubbleDispatchConfig || directDispatchConfig, 'Unsupported top level event type "%s" dispatched', topLevelType);
            var event = SyntheticEvent_1.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
            if (bubbleDispatchConfig) EventPropagators_1.accumulateTwoPhaseDispatches(event);else {
                if (!directDispatchConfig) return null;
                EventPropagators_1.accumulateDirectDispatches(event);
            }
            return event;
        },
        processEventTypes: function processEventTypes(viewConfig) {
            var bubblingEventTypes = viewConfig.bubblingEventTypes,
                directEventTypes = viewConfig.directEventTypes;
            if (null != bubblingEventTypes && null != directEventTypes) for (var topLevelType in directEventTypes) {
                invariant(null == bubblingEventTypes[topLevelType], "Event cannot be both direct and bubbling: %s", topLevelType);
            }if (null != bubblingEventTypes) for (var _topLevelType in bubblingEventTypes) {
                null == customBubblingEventTypes[_topLevelType] && (ReactNativeBridgeEventPlugin.eventTypes[_topLevelType] = customBubblingEventTypes[_topLevelType] = bubblingEventTypes[_topLevelType]);
            }if (null != directEventTypes) for (var _topLevelType2 in directEventTypes) {
                null == customDirectEventTypes[_topLevelType2] && (ReactNativeBridgeEventPlugin.eventTypes[_topLevelType2] = customDirectEventTypes[_topLevelType2] = directEventTypes[_topLevelType2]);
            }
        }
    },
        ReactNativeBridgeEventPlugin_1 = ReactNativeBridgeEventPlugin;
    function runEventQueueInBatch(events) {
        EventPluginHub_1.enqueueEvents(events), EventPluginHub_1.processEventQueue(!1);
    }
    var ReactEventEmitterMixin = {
        handleTopLevel: function handleTopLevel(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
            runEventQueueInBatch(EventPluginHub_1.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget));
        }
    },
        ReactEventEmitterMixin_1 = ReactEventEmitterMixin,
        warning$14 = require$$0,
        EMPTY_NATIVE_EVENT = {},
        touchSubsequence = function touchSubsequence(touches, indices) {
        for (var ret = [], i = 0; i < indices.length; i++) {
            ret.push(touches[indices[i]]);
        }return ret;
    },
        removeTouchesAtIndices = function removeTouchesAtIndices(touches, indices) {
        for (var rippedOut = [], temp = touches, i = 0; i < indices.length; i++) {
            var index = indices[i];
            rippedOut.push(touches[index]), temp[index] = null;
        }
        for (var fillAt = 0, j = 0; j < temp.length; j++) {
            var cur = temp[j];
            null !== cur && (temp[fillAt++] = cur);
        }
        return temp.length = fillAt, rippedOut;
    },
        ReactNativeEventEmitter = babelHelpers.extends({}, ReactEventEmitterMixin_1, {
        registrationNames: EventPluginRegistry_1.registrationNameModules,
        getListener: EventPluginHub_1.getListener,
        _receiveRootNodeIDEvent: function _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {
            var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT,
                inst = ReactNativeComponentTree_1.getInstanceFromNode(rootNodeID);
            ReactGenericBatching_1.batchedUpdates(function () {
                ReactNativeEventEmitter.handleTopLevel(topLevelType, inst, nativeEvent, nativeEvent.target);
            });
        },
        receiveEvent: function receiveEvent(rootNodeID, topLevelType, nativeEventParam) {
            ReactNativeEventEmitter._receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);
        },
        receiveTouches: function receiveTouches(eventTopLevelType, touches, changedIndices) {
            for (var changedTouches = "topTouchEnd" === eventTopLevelType || "topTouchCancel" === eventTopLevelType ? removeTouchesAtIndices(touches, changedIndices) : touchSubsequence(touches, changedIndices), jj = 0; jj < changedTouches.length; jj++) {
                var touch = changedTouches[jj];
                touch.changedTouches = changedTouches, touch.touches = touches;
                var nativeEvent = touch,
                    rootNodeID = null,
                    target = nativeEvent.target;
                null !== target && void 0 !== target && (target < ReactNativeTagHandles_1.tagsStartAt ? warning$14(!1, "A view is reporting that a touch occurred on tag zero.") : rootNodeID = target), ReactNativeEventEmitter._receiveRootNodeIDEvent(rootNodeID, eventTopLevelType, nativeEvent);
            }
        }
    }),
        ReactNativeEventEmitter_1 = ReactNativeEventEmitter,
        ReactNativeEventPluginOrder = ["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"],
        ReactNativeEventPluginOrder_1 = ReactNativeEventPluginOrder,
        ReactNativeGlobalResponderHandler = {
        onChange: function onChange(from, to, blockNativeResponder) {
            if (null !== to) {
                var tag = to.stateNode._nativeTag;
                UIManager.setJSResponder(tag, blockNativeResponder);
            } else UIManager.clearJSResponder();
        }
    },
        ReactNativeGlobalResponderHandler_1 = ReactNativeGlobalResponderHandler,
        ResponderEventInterface = {
        touchHistory: function touchHistory(nativeEvent) {
            return null;
        }
    };
    function ResponderSyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
        return SyntheticEvent_1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
    }
    SyntheticEvent_1.augmentClass(ResponderSyntheticEvent, ResponderEventInterface);
    var ResponderSyntheticEvent_1 = ResponderSyntheticEvent,
        isEndish$2 = EventPluginUtils_1.isEndish,
        isMoveish$2 = EventPluginUtils_1.isMoveish,
        isStartish$2 = EventPluginUtils_1.isStartish,
        warning$15 = require$$0,
        MAX_TOUCH_BANK = 20,
        touchBank = [],
        touchHistory = {
        touchBank: touchBank,
        numberActiveTouches: 0,
        indexOfSingleActiveTouch: -1,
        mostRecentTimeStamp: 0
    };
    function timestampForTouch(touch) {
        return touch.timeStamp || touch.timestamp;
    }
    function createTouchRecord(touch) {
        return {
            touchActive: !0,
            startPageX: touch.pageX,
            startPageY: touch.pageY,
            startTimeStamp: timestampForTouch(touch),
            currentPageX: touch.pageX,
            currentPageY: touch.pageY,
            currentTimeStamp: timestampForTouch(touch),
            previousPageX: touch.pageX,
            previousPageY: touch.pageY,
            previousTimeStamp: timestampForTouch(touch)
        };
    }
    function resetTouchRecord(touchRecord, touch) {
        touchRecord.touchActive = !0, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch);
    }
    function getTouchIdentifier(_ref) {
        var identifier = _ref.identifier;
        return invariant(null != identifier, "Touch object is missing identifier."), warning$15(identifier <= MAX_TOUCH_BANK, "Touch identifier %s is greater than maximum supported %s which causes " + "performance issues backfilling array locations for all of the indices.", identifier, MAX_TOUCH_BANK), identifier;
    }
    function recordTouchStart(touch) {
        var identifier = getTouchIdentifier(touch),
            touchRecord = touchBank[identifier];
        touchRecord ? resetTouchRecord(touchRecord, touch) : touchBank[identifier] = createTouchRecord(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
    }
    function recordTouchMove(touch) {
        var touchRecord = touchBank[getTouchIdentifier(touch)];
        touchRecord ? (touchRecord.touchActive = !0, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : console.error("Cannot record touch move without a touch start.\n" + "Touch Move: %s\n", "Touch Bank: %s", printTouch(touch), printTouchBank());
    }
    function recordTouchEnd(touch) {
        var touchRecord = touchBank[getTouchIdentifier(touch)];
        touchRecord ? (touchRecord.touchActive = !1, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : console.error("Cannot record touch end without a touch start.\n" + "Touch End: %s\n", "Touch Bank: %s", printTouch(touch), printTouchBank());
    }
    function printTouch(touch) {
        return JSON.stringify({
            identifier: touch.identifier,
            pageX: touch.pageX,
            pageY: touch.pageY,
            timestamp: timestampForTouch(touch)
        });
    }
    function printTouchBank() {
        var printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));
        return touchBank.length > MAX_TOUCH_BANK && (printed += " (original size: " + touchBank.length + ")"), printed;
    }
    var ResponderTouchHistoryStore = {
        recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
            if (isMoveish$2(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove);else if (isStartish$2(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier);else if (isEndish$2(topLevelType) && (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches)) {
                for (var i = 0; i < touchBank.length; i++) {
                    var touchTrackToCheck = touchBank[i];
                    if (null != touchTrackToCheck && touchTrackToCheck.touchActive) {
                        touchHistory.indexOfSingleActiveTouch = i;
                        break;
                    }
                }
                var activeRecord = touchBank[touchHistory.indexOfSingleActiveTouch];
                warning$15(null != activeRecord && activeRecord.touchActive, "Cannot find single active touch.");
            }
        },
        touchHistory: touchHistory
    },
        ResponderTouchHistoryStore_1 = ResponderTouchHistoryStore;
    function accumulate(current, next) {
        return invariant(null != next, "accumulate(...): Accumulated items must be not be null or undefined."), null == current ? next : Array.isArray(current) ? current.concat(next) : Array.isArray(next) ? [current].concat(next) : [current, next];
    }
    var accumulate_1 = accumulate,
        isStartish$1 = EventPluginUtils_1.isStartish,
        isMoveish$1 = EventPluginUtils_1.isMoveish,
        isEndish$1 = EventPluginUtils_1.isEndish,
        executeDirectDispatch$1 = EventPluginUtils_1.executeDirectDispatch,
        hasDispatches$1 = EventPluginUtils_1.hasDispatches,
        executeDispatchesInOrderStopAtTrue$1 = EventPluginUtils_1.executeDispatchesInOrderStopAtTrue,
        responderInst = null,
        trackedTouchCount = 0,
        previousActiveTouches = 0,
        changeResponder = function changeResponder(nextResponderInst, blockHostResponder) {
        var oldResponderInst = responderInst;
        responderInst = nextResponderInst, null !== ResponderEventPlugin.GlobalResponderHandler && ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
    },
        eventTypes = {
        startShouldSetResponder: {
            phasedRegistrationNames: {
                bubbled: "onStartShouldSetResponder",
                captured: "onStartShouldSetResponderCapture"
            }
        },
        scrollShouldSetResponder: {
            phasedRegistrationNames: {
                bubbled: "onScrollShouldSetResponder",
                captured: "onScrollShouldSetResponderCapture"
            }
        },
        selectionChangeShouldSetResponder: {
            phasedRegistrationNames: {
                bubbled: "onSelectionChangeShouldSetResponder",
                captured: "onSelectionChangeShouldSetResponderCapture"
            }
        },
        moveShouldSetResponder: {
            phasedRegistrationNames: {
                bubbled: "onMoveShouldSetResponder",
                captured: "onMoveShouldSetResponderCapture"
            }
        },
        responderStart: {
            registrationName: "onResponderStart"
        },
        responderMove: {
            registrationName: "onResponderMove"
        },
        responderEnd: {
            registrationName: "onResponderEnd"
        },
        responderRelease: {
            registrationName: "onResponderRelease"
        },
        responderTerminationRequest: {
            registrationName: "onResponderTerminationRequest"
        },
        responderGrant: {
            registrationName: "onResponderGrant"
        },
        responderReject: {
            registrationName: "onResponderReject"
        },
        responderTerminate: {
            registrationName: "onResponderTerminate"
        }
    };
    function setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        var shouldSetEventType = isStartish$1(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish$1(topLevelType) ? eventTypes.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder,
            bubbleShouldSetFrom = responderInst ? ReactTreeTraversal.getLowestCommonAncestor(responderInst, targetInst) : targetInst,
            skipOverBubbleShouldSetFrom = bubbleShouldSetFrom === responderInst,
            shouldSetEvent = ResponderSyntheticEvent_1.getPooled(shouldSetEventType, bubbleShouldSetFrom, nativeEvent, nativeEventTarget);
        shouldSetEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, skipOverBubbleShouldSetFrom ? EventPropagators_1.accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent) : EventPropagators_1.accumulateTwoPhaseDispatches(shouldSetEvent);
        var wantsResponderInst = executeDispatchesInOrderStopAtTrue$1(shouldSetEvent);
        if (shouldSetEvent.isPersistent() || shouldSetEvent.constructor.release(shouldSetEvent), !wantsResponderInst || wantsResponderInst === responderInst) return null;
        var extracted,
            grantEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderGrant, wantsResponderInst, nativeEvent, nativeEventTarget);
        grantEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(grantEvent);
        var blockHostResponder = !0 === executeDirectDispatch$1(grantEvent);
        if (responderInst) {
            var terminationRequestEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget);
            terminationRequestEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(terminationRequestEvent);
            var shouldSwitch = !hasDispatches$1(terminationRequestEvent) || executeDirectDispatch$1(terminationRequestEvent);
            if (terminationRequestEvent.isPersistent() || terminationRequestEvent.constructor.release(terminationRequestEvent), shouldSwitch) {
                var terminateEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget);
                terminateEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(terminateEvent), extracted = accumulate_1(extracted, [grantEvent, terminateEvent]), changeResponder(wantsResponderInst, blockHostResponder);
            } else {
                var rejectEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderReject, wantsResponderInst, nativeEvent, nativeEventTarget);
                rejectEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(rejectEvent), extracted = accumulate_1(extracted, rejectEvent);
            }
        } else extracted = accumulate_1(extracted, grantEvent), changeResponder(wantsResponderInst, blockHostResponder);
        return extracted;
    }
    function canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {
        return topLevelInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || trackedTouchCount > 0 && "topSelectionChange" === topLevelType || isStartish$1(topLevelType) || isMoveish$1(topLevelType));
    }
    function noResponderTouches(nativeEvent) {
        var touches = nativeEvent.touches;
        if (!touches || 0 === touches.length) return !0;
        for (var i = 0; i < touches.length; i++) {
            var activeTouch = touches[i],
                target = activeTouch.target;
            if (null !== target && void 0 !== target && 0 !== target) {
                var targetInst = EventPluginUtils_1.getInstanceFromNode(target);
                if (ReactTreeTraversal.isAncestor(responderInst, targetInst)) return !1;
            }
        }
        return !0;
    }
    var ResponderEventPlugin = {
        _getResponder: function _getResponder() {
            return responderInst;
        },
        eventTypes: eventTypes,
        extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
            if (isStartish$1(topLevelType)) trackedTouchCount += 1;else if (isEndish$1(topLevelType)) {
                if (!(trackedTouchCount >= 0)) return console.error("Ended a touch event which was not counted in `trackedTouchCount`."), null;
                trackedTouchCount -= 1;
            }
            ResponderTouchHistoryStore_1.recordTouchTrack(topLevelType, nativeEvent);
            var extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent) ? setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) : null,
                isResponderTouchStart = responderInst && isStartish$1(topLevelType),
                isResponderTouchMove = responderInst && isMoveish$1(topLevelType),
                isResponderTouchEnd = responderInst && isEndish$1(topLevelType),
                incrementalTouch = isResponderTouchStart ? eventTypes.responderStart : isResponderTouchMove ? eventTypes.responderMove : isResponderTouchEnd ? eventTypes.responderEnd : null;
            if (incrementalTouch) {
                var gesture = ResponderSyntheticEvent_1.getPooled(incrementalTouch, responderInst, nativeEvent, nativeEventTarget);
                gesture.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(gesture), extracted = accumulate_1(extracted, gesture);
            }
            var isResponderTerminate = responderInst && "topTouchCancel" === topLevelType,
                isResponderRelease = responderInst && !isResponderTerminate && isEndish$1(topLevelType) && noResponderTouches(nativeEvent),
                finalTouch = isResponderTerminate ? eventTypes.responderTerminate : isResponderRelease ? eventTypes.responderRelease : null;
            if (finalTouch) {
                var finalEvent = ResponderSyntheticEvent_1.getPooled(finalTouch, responderInst, nativeEvent, nativeEventTarget);
                finalEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(finalEvent), extracted = accumulate_1(extracted, finalEvent), changeResponder(null);
            }
            var numberActiveTouches = ResponderTouchHistoryStore_1.touchHistory.numberActiveTouches;
            return ResponderEventPlugin.GlobalInteractionHandler && numberActiveTouches !== previousActiveTouches && ResponderEventPlugin.GlobalInteractionHandler.onChange(numberActiveTouches), previousActiveTouches = numberActiveTouches, extracted;
        },
        GlobalResponderHandler: null,
        GlobalInteractionHandler: null,
        injection: {
            injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
                ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
            },
            injectGlobalInteractionHandler: function injectGlobalInteractionHandler(GlobalInteractionHandler) {
                ResponderEventPlugin.GlobalInteractionHandler = GlobalInteractionHandler;
            }
        }
    },
        ResponderEventPlugin_1 = ResponderEventPlugin;
    RCTEventEmitter.register(ReactNativeEventEmitter_1), EventPluginHub_1.injection.injectEventPluginOrder(ReactNativeEventPluginOrder_1), EventPluginUtils_1.injection.injectComponentTree(ReactNativeComponentTree_1), ResponderEventPlugin_1.injection.injectGlobalResponderHandler(ReactNativeGlobalResponderHandler_1), EventPluginHub_1.injection.injectEventPluginsByName({
        ResponderEventPlugin: ResponderEventPlugin_1,
        ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin_1
    });
    function _classCallCheck$2(instance, Constructor) {
        if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
    }
    function _possibleConstructorReturn(self, call) {
        if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return !call || "object" != typeof call && "function" != typeof call ? self : call;
    }
    function _inherits(subClass, superClass) {
        if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
                value: subClass,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }), superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
    }
    var mountSafeCallback$2 = NativeMethodsMixinUtils.mountSafeCallback,
        ReactNativeComponent = function (_React$Component) {
        _inherits(ReactNativeComponent, _React$Component);
        function ReactNativeComponent() {
            return _classCallCheck$2(this, ReactNativeComponent), _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
        }
        return ReactNativeComponent.prototype.blur = function () {
            TextInputState.blurTextInput(findNumericNodeHandle(this));
        }, ReactNativeComponent.prototype.focus = function () {
            TextInputState.focusTextInput(findNumericNodeHandle(this));
        }, ReactNativeComponent.prototype.measure = function (callback) {
            UIManager.measure(findNumericNodeHandle(this), mountSafeCallback$2(this, callback));
        }, ReactNativeComponent.prototype.measureInWindow = function (callback) {
            UIManager.measureInWindow(findNumericNodeHandle(this), mountSafeCallback$2(this, callback));
        }, ReactNativeComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
            UIManager.measureLayout(findNumericNodeHandle(this), relativeToNativeNode, mountSafeCallback$2(this, onFail), mountSafeCallback$2(this, onSuccess));
        }, ReactNativeComponent.prototype.setNativeProps = function (nativeProps) {
            var maybeInstance = void 0;
            try {
                maybeInstance = findNodeHandle_1(this);
            } catch (error) {}
            if (null != maybeInstance) {
                var viewConfig = maybeInstance.viewConfig,
                    updatePayload = ReactNativeAttributePayload_1.create(nativeProps, viewConfig.validAttributes);
                null != updatePayload && UIManager.updateView(maybeInstance._nativeTag, viewConfig.uiViewClassName, updatePayload);
            }
        }, ReactNativeComponent;
    }(react.Component),
        ReactNativeComponent_1 = ReactNativeComponent,
        mountSafeCallback$3 = NativeMethodsMixinUtils.mountSafeCallback,
        throwOnStylesProp$1 = NativeMethodsMixinUtils.throwOnStylesProp,
        warnForStyleProps$2 = NativeMethodsMixinUtils.warnForStyleProps,
        NativeMethodsMixin = {
        measure: function measure(callback) {
            UIManager.measure(findNumericNodeHandle(this), mountSafeCallback$3(this, callback));
        },
        measureInWindow: function measureInWindow(callback) {
            UIManager.measureInWindow(findNumericNodeHandle(this), mountSafeCallback$3(this, callback));
        },
        measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
            UIManager.measureLayout(findNumericNodeHandle(this), relativeToNativeNode, mountSafeCallback$3(this, onFail), mountSafeCallback$3(this, onSuccess));
        },
        setNativeProps: function setNativeProps(nativeProps) {
            var maybeInstance = void 0;
            try {
                maybeInstance = findNodeHandle_1(this);
            } catch (error) {}
            if (null != maybeInstance) {
                var viewConfig = maybeInstance.viewConfig;
                warnForStyleProps$2(nativeProps, viewConfig.validAttributes);
                var updatePayload = ReactNativeAttributePayload_1.create(nativeProps, viewConfig.validAttributes);
                null != updatePayload && UIManager.updateView(maybeInstance._nativeTag, viewConfig.uiViewClassName, updatePayload);
            }
        },
        focus: function focus() {
            TextInputState.focusTextInput(findNumericNodeHandle(this));
        },
        blur: function blur() {
            TextInputState.blurTextInput(findNumericNodeHandle(this));
        }
    },
        NativeMethodsMixin_DEV = NativeMethodsMixin;
    invariant(!NativeMethodsMixin_DEV.componentWillMount && !NativeMethodsMixin_DEV.componentWillReceiveProps, "Do not override existing functions."), NativeMethodsMixin_DEV.componentWillMount = function () {
        throwOnStylesProp$1(this, this.props);
    }, NativeMethodsMixin_DEV.componentWillReceiveProps = function (newProps) {
        throwOnStylesProp$1(this, newProps);
    };
    var NativeMethodsMixin_1 = NativeMethodsMixin,
        TouchHistoryMath = {
        centroidDimension: function centroidDimension(touchHistory, touchesChangedAfter, isXAxis, ofCurrent) {
            var touchBank = touchHistory.touchBank,
                total = 0,
                count = 0,
                oneTouchData = 1 === touchHistory.numberActiveTouches ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch] : null;
            if (null !== oneTouchData) oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter && (total += ofCurrent && isXAxis ? oneTouchData.currentPageX : ofCurrent && !isXAxis ? oneTouchData.currentPageY : !ofCurrent && isXAxis ? oneTouchData.previousPageX : oneTouchData.previousPageY, count = 1);else for (var i = 0; i < touchBank.length; i++) {
                var touchTrack = touchBank[i];
                if (null !== touchTrack && void 0 !== touchTrack && touchTrack.touchActive && touchTrack.currentTimeStamp >= touchesChangedAfter) {
                    var toAdd;
                    toAdd = ofCurrent && isXAxis ? touchTrack.currentPageX : ofCurrent && !isXAxis ? touchTrack.currentPageY : !ofCurrent && isXAxis ? touchTrack.previousPageX : touchTrack.previousPageY, total += toAdd, count++;
                }
            }
            return count > 0 ? total / count : TouchHistoryMath.noCentroid;
        },
        currentCentroidXOfTouchesChangedAfter: function currentCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
            return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !0, !0);
        },
        currentCentroidYOfTouchesChangedAfter: function currentCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
            return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !1, !0);
        },
        previousCentroidXOfTouchesChangedAfter: function previousCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
            return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !0, !1);
        },
        previousCentroidYOfTouchesChangedAfter: function previousCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
            return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !1, !1);
        },
        currentCentroidX: function currentCentroidX(touchHistory) {
            return TouchHistoryMath.centroidDimension(touchHistory, 0, !0, !0);
        },
        currentCentroidY: function currentCentroidY(touchHistory) {
            return TouchHistoryMath.centroidDimension(touchHistory, 0, !1, !0);
        },
        noCentroid: -1
    },
        TouchHistoryMath_1 = TouchHistoryMath,
        createReactNativeComponentClass = function createReactNativeComponentClass(name, callback) {
        return ReactNativeViewConfigRegistry_1.register(name, callback);
    },
        createReactNativeComponentClass_1 = createReactNativeComponentClass;
    function takeSnapshot(view, options) {
        return "number" != typeof view && "window" !== view && (view = findNumericNodeHandle(view) || "window"), UIManager.__takeSnapshot(view, options);
    }
    var takeSnapshot_1 = takeSnapshot,
        injectInternals = ReactFiberDevToolsHook.injectInternals;
    ReactGenericBatching_1.injection.injectFiberBatchedUpdates(ReactNativeFiberRenderer.batchedUpdates);
    var roots = new Map();
    ReactFiberErrorLogger.injection.injectDialog(ReactNativeFiberErrorDialog_1.showDialog);
    var ReactNativeFiber = {
        NativeComponent: ReactNativeComponent_1,
        findNodeHandle: findNumericNodeHandle,
        render: function render(element, containerTag, callback) {
            var root = roots.get(containerTag);
            return root || (root = ReactNativeFiberRenderer.createContainer(containerTag), roots.set(containerTag, root)), ReactNativeFiberRenderer.updateContainer(element, root, null, callback), ReactNativeFiberRenderer.getPublicRootInstance(root);
        },
        unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
            var root = roots.get(containerTag);
            root && ReactNativeFiberRenderer.updateContainer(null, root, null, function () {
                roots.delete(containerTag);
            });
        },
        unmountComponentAtNodeAndRemoveContainer: function unmountComponentAtNodeAndRemoveContainer(containerTag) {
            ReactNativeFiber.unmountComponentAtNode(containerTag), UIManager.removeRootView(containerTag);
        },
        createPortal: function createPortal(children, containerTag) {
            var key = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
            return ReactPortal.createPortal(children, containerTag, null, key);
        },
        unstable_batchedUpdates: ReactGenericBatching_1.batchedUpdates,
        flushSync: ReactNativeFiberRenderer.flushSync,
        __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
            NativeMethodsMixin: NativeMethodsMixin_1,
            ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin_1,
            ReactGlobalSharedState: ReactGlobalSharedState_1,
            ReactNativeComponentTree: ReactNativeComponentTree_1,
            ReactNativePropRegistry: ReactNativePropRegistry_1,
            TouchHistoryMath: TouchHistoryMath_1,
            createReactNativeComponentClass: createReactNativeComponentClass_1,
            takeSnapshot: takeSnapshot_1
        }
    };
    babelHelpers.extends(ReactNativeFiber.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {
        ReactDebugTool: {
            addHook: function addHook() {},
            removeHook: function removeHook() {}
        },
        ReactPerf: {
            start: function start() {},
            stop: function stop() {},
            printInclusive: function printInclusive() {},
            printWasted: function printWasted() {}
        }
    }), injectInternals({
        findFiberByHostInstance: ReactNativeComponentTree_1.getClosestInstanceFromNode,
        findHostInstanceByFiber: ReactNativeFiberRenderer.findHostInstance,
        getInspectorDataForViewTag: ReactNativeFiberInspector.getInspectorDataForViewTag,
        bundleType: 1,
        version: ReactVersion,
        rendererPackageName: "react-native"
    });
    var ReactNativeFiberEntry = ReactNativeFiber;
    module.exports = ReactNativeFiberEntry;
}();
}, 22, null, "ReactNativeFiber-dev");
__d(/* fbjs/lib/warning.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(24               ); // 24 = ./emptyFunction

var warning = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  var printWarning = function printWarning(format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      throw new Error(message);
    } catch (x) {}
  };

  warning = function warning(condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return;
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

module.exports = warning;
}, 23, null, "fbjs/lib/warning.js");
__d(/* fbjs/lib/emptyFunction.js */function(global, require, module, exports) {"use strict";

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;
}, 24, null, "fbjs/lib/emptyFunction.js");
__d(/* ExceptionsManager */function(global, require, module, exports) {
'use strict';

var exceptionID = 0;
function reportException(e, isFatal) {
  var _require = require(15             ), // 15 = NativeModules
      ExceptionsManager = _require.ExceptionsManager;

  if (ExceptionsManager) {
    var parseErrorStack = require(26               ); // 26 = parseErrorStack
    var stack = parseErrorStack(e);
    var currentExceptionID = ++exceptionID;
    if (isFatal) {
      ExceptionsManager.reportFatalException(e.message, stack, currentExceptionID);
    } else {
      ExceptionsManager.reportSoftException(e.message, stack, currentExceptionID);
    }
    if (__DEV__) {
      var symbolicateStackTrace = require(29                     ); // 29 = symbolicateStackTrace
      symbolicateStackTrace(stack).then(function (prettyStack) {
        if (prettyStack) {
          ExceptionsManager.updateExceptionMessage(e.message, prettyStack, currentExceptionID);
        } else {
          throw new Error('The stack is null');
        }
      }).catch(function (error) {
        return console.warn('Unable to symbolicate stack trace: ' + error.message);
      });
    }
  }
}

function handleException(e, isFatal) {
  if (!e.message) {
    e = new Error(e);
  }
  if (console._errorOriginal) {
    console._errorOriginal(e.message);
  } else {
    console.error(e.message);
  }
  reportException(e, isFatal);
}

function reactConsoleErrorHandler() {
  console._errorOriginal.apply(console, arguments);
  if (!console.reportErrorsAsExceptions) {
    return;
  }

  if (arguments[0] && arguments[0].stack) {
    reportException(arguments[0], false);
  } else {
    var stringifySafe = require(33             ); // 33 = stringifySafe
    var str = Array.prototype.map.call(arguments, stringifySafe).join(', ');
    if (str.slice(0, 10) === '"Warning: ') {
      return;
    }
    var error = new Error('console.error: ' + str);
    error.framesToPop = 1;
    reportException(error, false);
  }
}

function installConsoleErrorReporter() {
  if (console._errorOriginal) {
    return;
  }

  console._errorOriginal = console.error.bind(console);
  console.error = reactConsoleErrorHandler;
  if (console.reportErrorsAsExceptions === undefined) {
    console.reportErrorsAsExceptions = true;
  }
}

module.exports = { handleException: handleException, installConsoleErrorReporter: installConsoleErrorReporter };
}, 25, null, "ExceptionsManager");
__d(/* parseErrorStack */function(global, require, module, exports) {
'use strict';

function parseErrorStack(e) {
  if (!e || !e.stack) {
    return [];
  }

  var stacktraceParser = require(27                 ); // 27 = stacktrace-parser
  var stack = Array.isArray(e.stack) ? e.stack : stacktraceParser.parse(e.stack);

  var framesToPop = typeof e.framesToPop === 'number' ? e.framesToPop : 0;
  while (framesToPop--) {
    stack.shift();
  }
  return stack;
}

module.exports = parseErrorStack;
}, 26, null, "parseErrorStack");
__d(/* stacktrace-parser/index.js */function(global, require, module, exports) {module.exports = require(28                          ); // 28 = ./lib/stacktrace-parser.js
}, 27, null, "stacktrace-parser/index.js");
__d(/* stacktrace-parser/lib/stacktrace-parser.js */function(global, require, module, exports) {

var UNKNOWN_FUNCTION = '<unknown>';

var StackTraceParser = {
    parse: function parse(stackString) {
        var chrome = /^\s*at (?:(?:(?:Anonymous function)?|((?:\[object object\])?\S+(?: \[as \S+\])?)) )?\(?((?:file|http|https):.*?):(\d+)(?::(\d+))?\)?\s*$/i,
            gecko = /^(?:\s*([^@]*)(?:\((.*?)\))?@)?(\S.*?):(\d+)(?::(\d+))?\s*$/i,
            node = /^\s*at (?:((?:\[object object\])?\S+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i,
            lines = stackString.split('\n'),
            stack = [],
            parts,
            element;

        for (var i = 0, j = lines.length; i < j; ++i) {
            if (parts = gecko.exec(lines[i])) {
                element = {
                    'file': parts[3],
                    'methodName': parts[1] || UNKNOWN_FUNCTION,
                    'lineNumber': +parts[4],
                    'column': parts[5] ? +parts[5] : null
                };
            } else if (parts = chrome.exec(lines[i])) {
                element = {
                    'file': parts[2],
                    'methodName': parts[1] || UNKNOWN_FUNCTION,
                    'lineNumber': +parts[3],
                    'column': parts[4] ? +parts[4] : null
                };
            } else if (parts = node.exec(lines[i])) {
                element = {
                    'file': parts[2],
                    'methodName': parts[1] || UNKNOWN_FUNCTION,
                    'lineNumber': +parts[3],
                    'column': parts[4] ? +parts[4] : null
                };
            } else {
                continue;
            }

            stack.push(element);
        }

        return stack;
    }
};

module.exports = StackTraceParser;
}, 28, null, "stacktrace-parser/lib/stacktrace-parser.js");
__d(/* symbolicateStackTrace */function(global, require, module, exports) {
'use strict';

var getDevServer = require(30            ); // 30 = getDevServer

var _require = require(15             ), // 15 = NativeModules
    SourceCode = _require.SourceCode;

var fetch = void 0;

function isSourcedFromDisk(sourcePath) {
  return !/^http/.test(sourcePath) && /[\\/]/.test(sourcePath);
}

function symbolicateStackTrace(stack) {
  var devServer, stackCopy, foundInternalSource, response, json;
  return regeneratorRuntime.async(function symbolicateStackTrace$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          if (!fetch) {
            fetch = global.fetch || require(31     ).fetch; // 31 = fetch
          }

          devServer = getDevServer();

          if (devServer.bundleLoadedFromServer) {
            _context.next = 4;
            break;
          }

          throw new Error('Bundle was not loaded from the packager');

        case 4:
          stackCopy = stack;


          if (SourceCode.scriptURL) {
            foundInternalSource = false;

            stackCopy = stack.map(function (frame) {
              if (!foundInternalSource && isSourcedFromDisk(frame.file)) {
                return babelHelpers.extends({}, frame, { file: SourceCode.scriptURL });
              }

              foundInternalSource = true;
              return frame;
            });
          }

          _context.next = 8;
          return regeneratorRuntime.awrap(fetch(devServer.url + 'symbolicate', {
            method: 'POST',
            body: JSON.stringify({ stack: stackCopy })
          }));

        case 8:
          response = _context.sent;
          _context.next = 11;
          return regeneratorRuntime.awrap(response.json());

        case 11:
          json = _context.sent;
          return _context.abrupt('return', json.stack);

        case 13:
        case 'end':
          return _context.stop();
      }
    }
  }, null, this);
}

module.exports = symbolicateStackTrace;
}, 29, null, "symbolicateStackTrace");
__d(/* getDevServer */function(global, require, module, exports) {
'use strict';

var _require = require(15             ), // 15 = NativeModules
    SourceCode = _require.SourceCode;

var _cachedDevServerURL = void 0;
var FALLBACK = 'http://localhost:8081/';

function getDevServer() {
  if (_cachedDevServerURL === undefined) {
    var match = SourceCode.scriptURL && SourceCode.scriptURL.match(/^https?:\/\/.*?\//);
    _cachedDevServerURL = match ? match[0] : null;
  }

  return {
    url: _cachedDevServerURL || FALLBACK,
    bundleLoadedFromServer: _cachedDevServerURL !== null
  };
}

module.exports = getDevServer;
}, 30, null, "getDevServer");
__d(/* fetch */function(global, require, module, exports) {

'use strict';

var _whatwgFetch = require(32            ); // 32 = whatwg-fetch

var _whatwgFetch2 = babelHelpers.interopRequireDefault(_whatwgFetch);

if (_whatwgFetch2.default && _whatwgFetch2.default.fetch) {
  module.exports = _whatwgFetch2.default;
} else {
  module.exports = { fetch: fetch, Headers: Headers, Request: Request, Response: Response };
}
}, 31, null, "fetch");
__d(/* whatwg-fetch/fetch.js */function(global, require, module, exports) {(function (self) {
  'use strict';

  if (self.fetch) {
    return;
  }

  var support = {
    searchParams: 'URLSearchParams' in self,
    iterable: 'Symbol' in self && 'iterator' in Symbol,
    blob: 'FileReader' in self && 'Blob' in self && function () {
      try {
        new Blob();
        return true;
      } catch (e) {
        return false;
      }
    }(),
    formData: 'FormData' in self,
    arrayBuffer: 'ArrayBuffer' in self
  };

  if (support.arrayBuffer) {
    var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];

    var isDataView = function isDataView(obj) {
      return obj && DataView.prototype.isPrototypeOf(obj);
    };

    var isArrayBufferView = ArrayBuffer.isView || function (obj) {
      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
    };
  }

  function normalizeName(name) {
    if (typeof name !== 'string') {
      name = String(name);
    }
    if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
      throw new TypeError('Invalid character in header field name');
    }
    return name.toLowerCase();
  }

  function normalizeValue(value) {
    if (typeof value !== 'string') {
      value = String(value);
    }
    return value;
  }

  function iteratorFor(items) {
    var iterator = {
      next: function next() {
        var value = items.shift();
        return { done: value === undefined, value: value };
      }
    };

    if (support.iterable) {
      iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator'] = function () {
        return iterator;
      };
    }

    return iterator;
  }

  function Headers(headers) {
    this.map = {};

    if (headers instanceof Headers) {
      headers.forEach(function (value, name) {
        this.append(name, value);
      }, this);
    } else if (headers) {
      Object.getOwnPropertyNames(headers).forEach(function (name) {
        this.append(name, headers[name]);
      }, this);
    }
  }

  Headers.prototype.append = function (name, value) {
    name = normalizeName(name);
    value = normalizeValue(value);
    var list = this.map[name];
    if (!list) {
      list = [];
      this.map[name] = list;
    }
    list.push(value);
  };

  Headers.prototype['delete'] = function (name) {
    delete this.map[normalizeName(name)];
  };

  Headers.prototype.get = function (name) {
    var values = this.map[normalizeName(name)];
    return values ? values[0] : null;
  };

  Headers.prototype.getAll = function (name) {
    return this.map[normalizeName(name)] || [];
  };

  Headers.prototype.has = function (name) {
    return this.map.hasOwnProperty(normalizeName(name));
  };

  Headers.prototype.set = function (name, value) {
    this.map[normalizeName(name)] = [normalizeValue(value)];
  };

  Headers.prototype.forEach = function (callback, thisArg) {
    Object.getOwnPropertyNames(this.map).forEach(function (name) {
      this.map[name].forEach(function (value) {
        callback.call(thisArg, value, name, this);
      }, this);
    }, this);
  };

  Headers.prototype.keys = function () {
    var items = [];
    this.forEach(function (value, name) {
      items.push(name);
    });
    return iteratorFor(items);
  };

  Headers.prototype.values = function () {
    var items = [];
    this.forEach(function (value) {
      items.push(value);
    });
    return iteratorFor(items);
  };

  Headers.prototype.entries = function () {
    var items = [];
    this.forEach(function (value, name) {
      items.push([name, value]);
    });
    return iteratorFor(items);
  };

  if (support.iterable) {
    Headers.prototype[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator'] = Headers.prototype.entries;
  }

  function consumed(body) {
    if (body.bodyUsed) {
      return Promise.reject(new TypeError('Already read'));
    }
    body.bodyUsed = true;
  }

  function fileReaderReady(reader) {
    return new Promise(function (resolve, reject) {
      reader.onload = function () {
        resolve(reader.result);
      };
      reader.onerror = function () {
        reject(reader.error);
      };
    });
  }

  function readBlobAsArrayBuffer(blob) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    reader.readAsArrayBuffer(blob);
    return promise;
  }

  function readBlobAsText(blob) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    reader.readAsText(blob);
    return promise;
  }

  function readArrayBufferAsText(buf) {
    var view = new Uint8Array(buf);
    var chars = new Array(view.length);

    for (var i = 0; i < view.length; i++) {
      chars[i] = String.fromCharCode(view[i]);
    }
    return chars.join('');
  }

  function bufferClone(buf) {
    if (buf.slice) {
      return buf.slice(0);
    } else {
      var view = new Uint8Array(buf.byteLength);
      view.set(new Uint8Array(buf));
      return view.buffer;
    }
  }

  function Body() {
    this.bodyUsed = false;

    this._initBody = function (body) {
      this._bodyInit = body;
      if (!body) {
        this._bodyText = '';
      } else if (typeof body === 'string') {
        this._bodyText = body;
      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
        this._bodyBlob = body;
      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
        this._bodyFormData = body;
      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
        this._bodyText = body.toString();
      } else if (support.arrayBuffer && support.blob && isDataView(body)) {
        this._bodyArrayBuffer = bufferClone(body.buffer);

        this._bodyInit = new Blob([this._bodyArrayBuffer]);
      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
        this._bodyArrayBuffer = bufferClone(body);
      } else {
        throw new Error('unsupported BodyInit type');
      }

      if (!this.headers.get('content-type')) {
        if (typeof body === 'string') {
          this.headers.set('content-type', 'text/plain;charset=UTF-8');
        } else if (this._bodyBlob && this._bodyBlob.type) {
          this.headers.set('content-type', this._bodyBlob.type);
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
        }
      }
    };

    if (support.blob) {
      this.blob = function () {
        var rejected = consumed(this);
        if (rejected) {
          return rejected;
        }

        if (this._bodyBlob) {
          return Promise.resolve(this._bodyBlob);
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(new Blob([this._bodyArrayBuffer]));
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as blob');
        } else {
          return Promise.resolve(new Blob([this._bodyText]));
        }
      };

      this.arrayBuffer = function () {
        if (this._bodyArrayBuffer) {
          return consumed(this) || Promise.resolve(this._bodyArrayBuffer);
        } else {
          return this.blob().then(readBlobAsArrayBuffer);
        }
      };
    }

    this.text = function () {
      var rejected = consumed(this);
      if (rejected) {
        return rejected;
      }

      if (this._bodyBlob) {
        return readBlobAsText(this._bodyBlob);
      } else if (this._bodyArrayBuffer) {
        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
      } else if (this._bodyFormData) {
        throw new Error('could not read FormData body as text');
      } else {
        return Promise.resolve(this._bodyText);
      }
    };

    if (support.formData) {
      this.formData = function () {
        return this.text().then(decode);
      };
    }

    this.json = function () {
      return this.text().then(JSON.parse);
    };

    return this;
  }

  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

  function normalizeMethod(method) {
    var upcased = method.toUpperCase();
    return methods.indexOf(upcased) > -1 ? upcased : method;
  }

  function Request(input, options) {
    options = options || {};
    var body = options.body;

    if (typeof input === 'string') {
      this.url = input;
    } else {
      if (input.bodyUsed) {
        throw new TypeError('Already read');
      }
      this.url = input.url;
      this.credentials = input.credentials;
      if (!options.headers) {
        this.headers = new Headers(input.headers);
      }
      this.method = input.method;
      this.mode = input.mode;
      if (!body && input._bodyInit != null) {
        body = input._bodyInit;
        input.bodyUsed = true;
      }
    }

    this.credentials = options.credentials || this.credentials || 'omit';
    if (options.headers || !this.headers) {
      this.headers = new Headers(options.headers);
    }
    this.method = normalizeMethod(options.method || this.method || 'GET');
    this.mode = options.mode || this.mode || null;
    this.referrer = null;

    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
      throw new TypeError('Body not allowed for GET or HEAD requests');
    }
    this._initBody(body);
  }

  Request.prototype.clone = function () {
    return new Request(this, { body: this._bodyInit });
  };

  function decode(body) {
    var form = new FormData();
    body.trim().split('&').forEach(function (bytes) {
      if (bytes) {
        var split = bytes.split('=');
        var name = split.shift().replace(/\+/g, ' ');
        var value = split.join('=').replace(/\+/g, ' ');
        form.append(decodeURIComponent(name), decodeURIComponent(value));
      }
    });
    return form;
  }

  function parseHeaders(rawHeaders) {
    var headers = new Headers();
    rawHeaders.split('\r\n').forEach(function (line) {
      var parts = line.split(':');
      var key = parts.shift().trim();
      if (key) {
        var value = parts.join(':').trim();
        headers.append(key, value);
      }
    });
    return headers;
  }

  Body.call(Request.prototype);

  function Response(bodyInit, options) {
    if (!options) {
      options = {};
    }

    this.type = 'default';
    this.status = 'status' in options ? options.status : 200;
    this.ok = this.status >= 200 && this.status < 300;
    this.statusText = 'statusText' in options ? options.statusText : 'OK';
    this.headers = new Headers(options.headers);
    this.url = options.url || '';
    this._initBody(bodyInit);
  }

  Body.call(Response.prototype);

  Response.prototype.clone = function () {
    return new Response(this._bodyInit, {
      status: this.status,
      statusText: this.statusText,
      headers: new Headers(this.headers),
      url: this.url
    });
  };

  Response.error = function () {
    var response = new Response(null, { status: 0, statusText: '' });
    response.type = 'error';
    return response;
  };

  var redirectStatuses = [301, 302, 303, 307, 308];

  Response.redirect = function (url, status) {
    if (redirectStatuses.indexOf(status) === -1) {
      throw new RangeError('Invalid status code');
    }

    return new Response(null, { status: status, headers: { location: url } });
  };

  self.Headers = Headers;
  self.Request = Request;
  self.Response = Response;

  self.fetch = function (input, init) {
    return new Promise(function (resolve, reject) {
      var request = new Request(input, init);
      var xhr = new XMLHttpRequest();

      xhr.onload = function () {
        var options = {
          status: xhr.status,
          statusText: xhr.statusText,
          headers: parseHeaders(xhr.getAllResponseHeaders() || '')
        };
        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
        var body = 'response' in xhr ? xhr.response : xhr.responseText;
        resolve(new Response(body, options));
      };

      xhr.onerror = function () {
        reject(new TypeError('Network request failed'));
      };

      xhr.ontimeout = function () {
        reject(new TypeError('Network request failed'));
      };

      xhr.open(request.method, request.url, true);

      if (request.credentials === 'include') {
        xhr.withCredentials = true;
      }

      if ('responseType' in xhr && support.blob) {
        xhr.responseType = 'blob';
      }

      request.headers.forEach(function (value, name) {
        xhr.setRequestHeader(name, value);
      });

      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
    });
  };
  self.fetch.polyfill = true;
})(typeof self !== 'undefined' ? self : this);
}, 32, null, "whatwg-fetch/fetch.js");
__d(/* stringifySafe */function(global, require, module, exports) {
'use strict';

function stringifySafe(arg) {
  var ret;
  var type = typeof arg;
  if (arg === undefined) {
    ret = 'undefined';
  } else if (arg === null) {
    ret = 'null';
  } else if (type === 'string') {
    ret = '"' + arg + '"';
  } else if (type === 'function') {
    try {
      ret = arg.toString();
    } catch (e) {
      ret = '[function unknown]';
    }
  } else {
    try {
      ret = JSON.stringify(arg);
    } catch (e) {
      if (typeof arg.toString === 'function') {
        try {
          ret = arg.toString();
        } catch (E) {}
      }
    }
  }
  return ret || '["' + type + '" failed to stringify]';
}

module.exports = stringifySafe;
}, 33, null, "stringifySafe");
__d(/* fbjs/lib/emptyObject.js */function(global, require, module, exports) {

'use strict';

var emptyObject = {};

if (process.env.NODE_ENV !== 'production') {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;
}, 34, null, "fbjs/lib/emptyObject.js");
__d(/* react/index.js */function(global, require, module, exports) {'use strict';

if (process.env.NODE_ENV === 'production') {
  module.exports = require(36                             ); // 36 = ./cjs/react.production.min.js
} else {
  module.exports = require(38                          ); // 38 = ./cjs/react.development.js
}
}, 35, null, "react/index.js");
__d(/* react/cjs/react.production.min.js */function(global, require, module, exports) {
'use strict';
var f = require(37             ), // 37 = object-assign
    p = require(34                    );require(13                  );var r = require(24                      ); // 24 = fbjs/lib/emptyFunction // 13 = fbjs/lib/invariant // 34 = fbjs/lib/emptyObject
function t(a) {
  for (var b = arguments.length - 1, d = "Minified React error #" + a + "; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\x3d" + a, e = 0; e < b; e++) {
    d += "\x26args[]\x3d" + encodeURIComponent(arguments[e + 1]);
  }b = Error(d + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.");b.name = "Invariant Violation";b.framesToPop = 1;throw b;
}
var u = { isMounted: function isMounted() {
    return !1;
  }, enqueueForceUpdate: function enqueueForceUpdate() {}, enqueueReplaceState: function enqueueReplaceState() {}, enqueueSetState: function enqueueSetState() {} };function v(a, b, d) {
  this.props = a;this.context = b;this.refs = p;this.updater = d || u;
}v.prototype.isReactComponent = {};v.prototype.setState = function (a, b) {
  "object" !== typeof a && "function" !== typeof a && null != a ? t("85") : void 0;this.updater.enqueueSetState(this, a, b, "setState");
};v.prototype.forceUpdate = function (a) {
  this.updater.enqueueForceUpdate(this, a, "forceUpdate");
};
function w(a, b, d) {
  this.props = a;this.context = b;this.refs = p;this.updater = d || u;
}function x() {}x.prototype = v.prototype;var y = w.prototype = new x();y.constructor = w;f(y, v.prototype);y.isPureReactComponent = !0;function z(a, b, d) {
  this.props = a;this.context = b;this.refs = p;this.updater = d || u;
}var A = z.prototype = new x();A.constructor = z;f(A, v.prototype);A.unstable_isAsyncReactComponent = !0;A.render = function () {
  return this.props.children;
};
var B = { Component: v, PureComponent: w, AsyncComponent: z },
    C = { current: null },
    D = Object.prototype.hasOwnProperty,
    E = "function" === typeof Symbol && Symbol["for"] && Symbol["for"]("react.element") || 60103,
    F = { key: !0, ref: !0, __self: !0, __source: !0 };function G(a, b, d, e, c, g, k) {
  return { $$typeof: E, type: a, key: b, ref: d, props: k, _owner: g };
}
G.createElement = function (a, b, d) {
  var e,
      c = {},
      g = null,
      k = null,
      m = null,
      q = null;if (null != b) for (e in void 0 !== b.ref && (k = b.ref), void 0 !== b.key && (g = "" + b.key), m = void 0 === b.__self ? null : b.__self, q = void 0 === b.__source ? null : b.__source, b) {
    D.call(b, e) && !F.hasOwnProperty(e) && (c[e] = b[e]);
  }var l = arguments.length - 2;if (1 === l) c.children = d;else if (1 < l) {
    for (var h = Array(l), n = 0; n < l; n++) {
      h[n] = arguments[n + 2];
    }c.children = h;
  }if (a && a.defaultProps) for (e in l = a.defaultProps, l) {
    void 0 === c[e] && (c[e] = l[e]);
  }return G(a, g, k, m, q, C.current, c);
};
G.createFactory = function (a) {
  var b = G.createElement.bind(null, a);b.type = a;return b;
};G.cloneAndReplaceKey = function (a, b) {
  return G(a.type, b, a.ref, a._self, a._source, a._owner, a.props);
};
G.cloneElement = function (a, b, d) {
  var e = f({}, a.props),
      c = a.key,
      g = a.ref,
      k = a._self,
      m = a._source,
      q = a._owner;if (null != b) {
    void 0 !== b.ref && (g = b.ref, q = C.current);void 0 !== b.key && (c = "" + b.key);if (a.type && a.type.defaultProps) var l = a.type.defaultProps;for (h in b) {
      D.call(b, h) && !F.hasOwnProperty(h) && (e[h] = void 0 === b[h] && void 0 !== l ? l[h] : b[h]);
    }
  }var h = arguments.length - 2;if (1 === h) e.children = d;else if (1 < h) {
    l = Array(h);for (var n = 0; n < h; n++) {
      l[n] = arguments[n + 2];
    }e.children = l;
  }return G(a.type, c, g, k, m, q, e);
};
G.isValidElement = function (a) {
  return "object" === typeof a && null !== a && a.$$typeof === E;
};var H = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator"),
    I = "function" === typeof Symbol && Symbol["for"] && Symbol["for"]("react.element") || 60103;function escape(a) {
  var b = { "\x3d": "\x3d0", ":": "\x3d2" };return "$" + ("" + a).replace(/[=:]/g, function (a) {
    return b[a];
  });
}var J = /\/+/g,
    K = [];
function L(a, b, d, e) {
  if (K.length) {
    var c = K.pop();c.result = a;c.keyPrefix = b;c.func = d;c.context = e;c.count = 0;return c;
  }return { result: a, keyPrefix: b, func: d, context: e, count: 0 };
}function M(a) {
  a.result = null;a.keyPrefix = null;a.func = null;a.context = null;a.count = 0;10 > K.length && K.push(a);
}
function N(a, b, d, e) {
  var c = typeof a;if ("undefined" === c || "boolean" === c) a = null;if (null === a || "string" === c || "number" === c || "object" === c && a.$$typeof === I) return d(e, a, "" === b ? "." + O(a, 0) : b), 1;var g = 0;b = "" === b ? "." : b + ":";if (Array.isArray(a)) for (var k = 0; k < a.length; k++) {
    c = a[k];var m = b + O(c, k);g += N(c, m, d, e);
  } else if (m = H && a[H] || a["@@iterator"], "function" === typeof m) for (a = m.call(a), k = 0; !(c = a.next()).done;) {
    c = c.value, m = b + O(c, k++), g += N(c, m, d, e);
  } else "object" === c && (d = "" + a, t("31", "[object Object]" === d ? "object with keys {" + Object.keys(a).join(", ") + "}" : d, ""));return g;
}function O(a, b) {
  return "object" === typeof a && null !== a && null != a.key ? escape(a.key) : b.toString(36);
}function P(a, b) {
  a.func.call(a.context, b, a.count++);
}function Q(a, b, d) {
  var e = a.result,
      c = a.keyPrefix;a = a.func.call(a.context, b, a.count++);Array.isArray(a) ? R(a, e, d, r.thatReturnsArgument) : null != a && (G.isValidElement(a) && (a = G.cloneAndReplaceKey(a, c + (!a.key || b && b.key === a.key ? "" : ("" + a.key).replace(J, "$\x26/") + "/") + d)), e.push(a));
}
function R(a, b, d, e, c) {
  var g = "";null != d && (g = ("" + d).replace(J, "$\x26/") + "/");b = L(b, g, e, c);null == a || N(a, "", Q, b);M(b);
}var S = { forEach: function forEach(a, b, d) {
    if (null == a) return a;b = L(null, null, b, d);null == a || N(a, "", P, b);M(b);
  }, map: function map(a, b, d) {
    if (null == a) return a;var e = [];R(a, e, null, b, d);return e;
  }, count: function count(a) {
    return null == a ? 0 : N(a, "", r.thatReturnsNull, null);
  }, toArray: function toArray(a) {
    var b = [];R(a, b, null, r.thatReturnsArgument);return b;
  } };
module.exports = { Children: { map: S.map, forEach: S.forEach, count: S.count, toArray: S.toArray, only: function only(a) {
      G.isValidElement(a) ? void 0 : t("143");return a;
    } }, Component: B.Component, PureComponent: B.PureComponent, unstable_AsyncComponent: B.AsyncComponent, createElement: G.createElement, cloneElement: G.cloneElement, isValidElement: G.isValidElement, createFactory: G.createFactory, version: "16.0.0", __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: { ReactCurrentOwner: C, assign: f } };
}, 36, null, "react/cjs/react.production.min.js");
__d(/* object-assign/index.js */function(global, require, module, exports) {/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

'use strict';

var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		var test1 = new String('abc');
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(babelHelpers.extends({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};
}, 37, null, "object-assign/index.js");
__d(/* react/cjs/react.development.js */function(global, require, module, exports) {/** @license React v16.0.0
 * react.development.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';

if (process.env.NODE_ENV !== "production") {
  (function () {

    'use strict';

    var objectAssign$1 = require(37             ); // 37 = object-assign
    var require$$0 = require(23                ); // 23 = fbjs/lib/warning
    var emptyObject = require(34                    ); // 34 = fbjs/lib/emptyObject
    var invariant = require(13                  ); // 13 = fbjs/lib/invariant
    var emptyFunction = require(24                      ); // 24 = fbjs/lib/emptyFunction
    var checkPropTypes = require(39                         ); // 39 = prop-types/checkPropTypes

    {
      var warning = require$$0;
    }

    function warnNoop(publicInstance, callerName) {
      {
        var constructor = publicInstance.constructor;
        warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op.\n\nPlease check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass');
      }
    }

    var ReactNoopUpdateQueue = {
      isMounted: function isMounted(publicInstance) {
        return false;
      },

      enqueueForceUpdate: function enqueueForceUpdate(publicInstance, callback, callerName) {
        warnNoop(publicInstance, 'forceUpdate');
      },

      enqueueReplaceState: function enqueueReplaceState(publicInstance, completeState, callback, callerName) {
        warnNoop(publicInstance, 'replaceState');
      },

      enqueueSetState: function enqueueSetState(publicInstance, partialState, callback, callerName) {
        warnNoop(publicInstance, 'setState');
      }
    };

    var ReactNoopUpdateQueue_1 = ReactNoopUpdateQueue;

    var lowPriorityWarning = function lowPriorityWarning() {};

    {
      var printWarning = function printWarning(format) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        var argIndex = 0;
        var message = 'Warning: ' + format.replace(/%s/g, function () {
          return args[argIndex++];
        });
        if (typeof console !== 'undefined') {
          console.warn(message);
        }
        try {
          throw new Error(message);
        } catch (x) {}
      };

      lowPriorityWarning = function lowPriorityWarning(condition, format) {
        if (format === undefined) {
          throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
        }
        if (!condition) {
          for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
            args[_key2 - 2] = arguments[_key2];
          }

          printWarning.apply(undefined, [format].concat(args));
        }
      };
    }

    var lowPriorityWarning_1 = lowPriorityWarning;

    function ReactComponent(props, context, updater) {
      this.props = props;
      this.context = context;
      this.refs = emptyObject;

      this.updater = updater || ReactNoopUpdateQueue_1;
    }

    ReactComponent.prototype.isReactComponent = {};

    ReactComponent.prototype.setState = function (partialState, callback) {
      !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;
      this.updater.enqueueSetState(this, partialState, callback, 'setState');
    };

    ReactComponent.prototype.forceUpdate = function (callback) {
      this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
    };

    {
      var deprecatedAPIs = {
        isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
        replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
      };
      var defineDeprecationWarning = function defineDeprecationWarning(methodName, info) {
        Object.defineProperty(ReactComponent.prototype, methodName, {
          get: function get() {
            lowPriorityWarning_1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
            return undefined;
          }
        });
      };
      for (var fnName in deprecatedAPIs) {
        if (deprecatedAPIs.hasOwnProperty(fnName)) {
          defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
        }
      }
    }

    function ReactPureComponent(props, context, updater) {
      this.props = props;
      this.context = context;
      this.refs = emptyObject;

      this.updater = updater || ReactNoopUpdateQueue_1;
    }

    function ComponentDummy() {}
    ComponentDummy.prototype = ReactComponent.prototype;
    var pureComponentPrototype = ReactPureComponent.prototype = new ComponentDummy();
    pureComponentPrototype.constructor = ReactPureComponent;

    objectAssign$1(pureComponentPrototype, ReactComponent.prototype);
    pureComponentPrototype.isPureReactComponent = true;

    function ReactAsyncComponent(props, context, updater) {
      this.props = props;
      this.context = context;
      this.refs = emptyObject;

      this.updater = updater || ReactNoopUpdateQueue_1;
    }

    var asyncComponentPrototype = ReactAsyncComponent.prototype = new ComponentDummy();
    asyncComponentPrototype.constructor = ReactAsyncComponent;

    objectAssign$1(asyncComponentPrototype, ReactComponent.prototype);
    asyncComponentPrototype.unstable_isAsyncReactComponent = true;
    asyncComponentPrototype.render = function () {
      return this.props.children;
    };

    var ReactBaseClasses = {
      Component: ReactComponent,
      PureComponent: ReactPureComponent,
      AsyncComponent: ReactAsyncComponent
    };

    var ReactCurrentOwner = {
      current: null
    };

    var ReactCurrentOwner_1 = ReactCurrentOwner;

    var hasOwnProperty = Object.prototype.hasOwnProperty;

    {
      var warning$2 = require$$0;
    }

    var REACT_ELEMENT_TYPE$1 = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

    var RESERVED_PROPS = {
      key: true,
      ref: true,
      __self: true,
      __source: true
    };

    var specialPropKeyWarningShown;
    var specialPropRefWarningShown;

    function hasValidRef(config) {
      {
        if (hasOwnProperty.call(config, 'ref')) {
          var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
          if (getter && getter.isReactWarning) {
            return false;
          }
        }
      }
      return config.ref !== undefined;
    }

    function hasValidKey(config) {
      {
        if (hasOwnProperty.call(config, 'key')) {
          var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
          if (getter && getter.isReactWarning) {
            return false;
          }
        }
      }
      return config.key !== undefined;
    }

    function defineKeyPropWarningGetter(props, displayName) {
      var warnAboutAccessingKey = function warnAboutAccessingKey() {
        if (!specialPropKeyWarningShown) {
          specialPropKeyWarningShown = true;
          warning$2(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
        }
      };
      warnAboutAccessingKey.isReactWarning = true;
      Object.defineProperty(props, 'key', {
        get: warnAboutAccessingKey,
        configurable: true
      });
    }

    function defineRefPropWarningGetter(props, displayName) {
      var warnAboutAccessingRef = function warnAboutAccessingRef() {
        if (!specialPropRefWarningShown) {
          specialPropRefWarningShown = true;
          warning$2(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
        }
      };
      warnAboutAccessingRef.isReactWarning = true;
      Object.defineProperty(props, 'ref', {
        get: warnAboutAccessingRef,
        configurable: true
      });
    }

    var ReactElement = function ReactElement(type, key, ref, self, source, owner, props) {
      var element = {
        $$typeof: REACT_ELEMENT_TYPE$1,

        type: type,
        key: key,
        ref: ref,
        props: props,

        _owner: owner
      };

      {
        element._store = {};

        Object.defineProperty(element._store, 'validated', {
          configurable: false,
          enumerable: false,
          writable: true,
          value: false
        });

        Object.defineProperty(element, '_self', {
          configurable: false,
          enumerable: false,
          writable: false,
          value: self
        });

        Object.defineProperty(element, '_source', {
          configurable: false,
          enumerable: false,
          writable: false,
          value: source
        });
        if (Object.freeze) {
          Object.freeze(element.props);
          Object.freeze(element);
        }
      }

      return element;
    };

    ReactElement.createElement = function (type, config, children) {
      var propName;

      var props = {};

      var key = null;
      var ref = null;
      var self = null;
      var source = null;

      if (config != null) {
        if (hasValidRef(config)) {
          ref = config.ref;
        }
        if (hasValidKey(config)) {
          key = '' + config.key;
        }

        self = config.__self === undefined ? null : config.__self;
        source = config.__source === undefined ? null : config.__source;

        for (propName in config) {
          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
            props[propName] = config[propName];
          }
        }
      }

      var childrenLength = arguments.length - 2;
      if (childrenLength === 1) {
        props.children = children;
      } else if (childrenLength > 1) {
        var childArray = Array(childrenLength);
        for (var i = 0; i < childrenLength; i++) {
          childArray[i] = arguments[i + 2];
        }
        {
          if (Object.freeze) {
            Object.freeze(childArray);
          }
        }
        props.children = childArray;
      }

      if (type && type.defaultProps) {
        var defaultProps = type.defaultProps;
        for (propName in defaultProps) {
          if (props[propName] === undefined) {
            props[propName] = defaultProps[propName];
          }
        }
      }
      {
        if (key || ref) {
          if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE$1) {
            var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
            if (key) {
              defineKeyPropWarningGetter(props, displayName);
            }
            if (ref) {
              defineRefPropWarningGetter(props, displayName);
            }
          }
        }
      }
      return ReactElement(type, key, ref, self, source, ReactCurrentOwner_1.current, props);
    };

    ReactElement.createFactory = function (type) {
      var factory = ReactElement.createElement.bind(null, type);

      factory.type = type;
      return factory;
    };

    ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
      var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

      return newElement;
    };

    ReactElement.cloneElement = function (element, config, children) {
      var propName;

      var props = objectAssign$1({}, element.props);

      var key = element.key;
      var ref = element.ref;

      var self = element._self;

      var source = element._source;

      var owner = element._owner;

      if (config != null) {
        if (hasValidRef(config)) {
          ref = config.ref;
          owner = ReactCurrentOwner_1.current;
        }
        if (hasValidKey(config)) {
          key = '' + config.key;
        }

        var defaultProps;
        if (element.type && element.type.defaultProps) {
          defaultProps = element.type.defaultProps;
        }
        for (propName in config) {
          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
            if (config[propName] === undefined && defaultProps !== undefined) {
              props[propName] = defaultProps[propName];
            } else {
              props[propName] = config[propName];
            }
          }
        }
      }

      var childrenLength = arguments.length - 2;
      if (childrenLength === 1) {
        props.children = children;
      } else if (childrenLength > 1) {
        var childArray = Array(childrenLength);
        for (var i = 0; i < childrenLength; i++) {
          childArray[i] = arguments[i + 2];
        }
        props.children = childArray;
      }

      return ReactElement(element.type, key, ref, self, source, owner, props);
    };

    ReactElement.isValidElement = function (object) {
      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE$1;
    };

    var ReactElement_1 = ReactElement;

    var ReactDebugCurrentFrame = {};

    {
      ReactDebugCurrentFrame.getCurrentStack = null;

      ReactDebugCurrentFrame.getStackAddendum = function () {
        var impl = ReactDebugCurrentFrame.getCurrentStack;
        if (impl) {
          return impl();
        }
        return null;
      };
    }

    var ReactDebugCurrentFrame_1 = ReactDebugCurrentFrame;

    {
      var warning$1 = require$$0;

      var _require = ReactDebugCurrentFrame_1,
          getStackAddendum = _require.getStackAddendum;
    }

    var ITERATOR_SYMBOL = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator');
    var FAUX_ITERATOR_SYMBOL = '@@iterator';
    var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

    var SEPARATOR = '.';
    var SUBSEPARATOR = ':';

    function escape(key) {
      var escapeRegex = /[=:]/g;
      var escaperLookup = {
        '=': '=0',
        ':': '=2'
      };
      var escapedString = ('' + key).replace(escapeRegex, function (match) {
        return escaperLookup[match];
      });

      return '$' + escapedString;
    }

    var didWarnAboutMaps = false;

    var userProvidedKeyEscapeRegex = /\/+/g;
    function escapeUserProvidedKey(text) {
      return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
    }

    var POOL_SIZE = 10;
    var traverseContextPool = [];
    function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {
      if (traverseContextPool.length) {
        var traverseContext = traverseContextPool.pop();
        traverseContext.result = mapResult;
        traverseContext.keyPrefix = keyPrefix;
        traverseContext.func = mapFunction;
        traverseContext.context = mapContext;
        traverseContext.count = 0;
        return traverseContext;
      } else {
        return {
          result: mapResult,
          keyPrefix: keyPrefix,
          func: mapFunction,
          context: mapContext,
          count: 0
        };
      }
    }

    function releaseTraverseContext(traverseContext) {
      traverseContext.result = null;
      traverseContext.keyPrefix = null;
      traverseContext.func = null;
      traverseContext.context = null;
      traverseContext.count = 0;
      if (traverseContextPool.length < POOL_SIZE) {
        traverseContextPool.push(traverseContext);
      }
    }

    function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
      var type = typeof children;

      if (type === 'undefined' || type === 'boolean') {
        children = null;
      }

      if (children === null || type === 'string' || type === 'number' || type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
        callback(traverseContext, children, nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
        return 1;
      }

      var child;
      var nextName;
      var subtreeCount = 0;
      var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

      if (Array.isArray(children)) {
        for (var i = 0; i < children.length; i++) {
          child = children[i];
          nextName = nextNamePrefix + getComponentKey(child, i);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        var iteratorFn = ITERATOR_SYMBOL && children[ITERATOR_SYMBOL] || children[FAUX_ITERATOR_SYMBOL];
        if (typeof iteratorFn === 'function') {
          {
            if (iteratorFn === children.entries) {
              warning$1(didWarnAboutMaps, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', getStackAddendum());
              didWarnAboutMaps = true;
            }
          }

          var iterator = iteratorFn.call(children);
          var step;
          var ii = 0;
          while (!(step = iterator.next()).done) {
            child = step.value;
            nextName = nextNamePrefix + getComponentKey(child, ii++);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        } else if (type === 'object') {
          var addendum = '';
          {
            addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + getStackAddendum();
          }
          var childrenString = '' + children;
          invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);
        }
      }

      return subtreeCount;
    }

    function traverseAllChildren(children, callback, traverseContext) {
      if (children == null) {
        return 0;
      }

      return traverseAllChildrenImpl(children, '', callback, traverseContext);
    }

    function getComponentKey(component, index) {
      if (typeof component === 'object' && component !== null && component.key != null) {
        return escape(component.key);
      }

      return index.toString(36);
    }

    function forEachSingleChild(bookKeeping, child, name) {
      var func = bookKeeping.func,
          context = bookKeeping.context;

      func.call(context, child, bookKeeping.count++);
    }

    function forEachChildren(children, forEachFunc, forEachContext) {
      if (children == null) {
        return children;
      }
      var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);
      traverseAllChildren(children, forEachSingleChild, traverseContext);
      releaseTraverseContext(traverseContext);
    }

    function mapSingleChildIntoContext(bookKeeping, child, childKey) {
      var result = bookKeeping.result,
          keyPrefix = bookKeeping.keyPrefix,
          func = bookKeeping.func,
          context = bookKeeping.context;

      var mappedChild = func.call(context, child, bookKeeping.count++);
      if (Array.isArray(mappedChild)) {
        mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
      } else if (mappedChild != null) {
        if (ReactElement_1.isValidElement(mappedChild)) {
          mappedChild = ReactElement_1.cloneAndReplaceKey(mappedChild, keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
        }
        result.push(mappedChild);
      }
    }

    function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
      var escapedPrefix = '';
      if (prefix != null) {
        escapedPrefix = escapeUserProvidedKey(prefix) + '/';
      }
      var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);
      traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
      releaseTraverseContext(traverseContext);
    }

    function mapChildren(children, func, context) {
      if (children == null) {
        return children;
      }
      var result = [];
      mapIntoWithKeyPrefixInternal(children, result, null, func, context);
      return result;
    }

    function countChildren(children, context) {
      return traverseAllChildren(children, emptyFunction.thatReturnsNull, null);
    }

    function toArray(children) {
      var result = [];
      mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
      return result;
    }

    var ReactChildren = {
      forEach: forEachChildren,
      map: mapChildren,
      count: countChildren,
      toArray: toArray
    };

    var ReactChildren_1 = ReactChildren;

    var ReactVersion = '16.0.0';

    function onlyChild(children) {
      !ReactElement_1.isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;
      return children;
    }

    var onlyChild_1 = onlyChild;

    var describeComponentFrame$1 = function describeComponentFrame$1(name, source, ownerName) {
      return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
    };

    function getComponentName$1(instanceOrFiber) {
      if (typeof instanceOrFiber.getName === 'function') {
        var instance = instanceOrFiber;
        return instance.getName();
      }
      if (typeof instanceOrFiber.tag === 'number') {
        var fiber = instanceOrFiber;
        var type = fiber.type;

        if (typeof type === 'string') {
          return type;
        }
        if (typeof type === 'function') {
          return type.displayName || type.name;
        }
      }
      return null;
    }

    var getComponentName_1 = getComponentName$1;

    {
      var checkPropTypes$1 = checkPropTypes;
      var lowPriorityWarning$1 = lowPriorityWarning_1;
      var ReactDebugCurrentFrame$1 = ReactDebugCurrentFrame_1;
      var warning$3 = require$$0;
      var describeComponentFrame = describeComponentFrame$1;
      var getComponentName = getComponentName_1;

      var currentlyValidatingElement = null;

      var getDisplayName = function getDisplayName(element) {
        if (element == null) {
          return '#empty';
        } else if (typeof element === 'string' || typeof element === 'number') {
          return '#text';
        } else if (typeof element.type === 'string') {
          return element.type;
        } else {
          return element.type.displayName || element.type.name || 'Unknown';
        }
      };

      var getStackAddendum$1 = function getStackAddendum$1() {
        var stack = '';
        if (currentlyValidatingElement) {
          var name = getDisplayName(currentlyValidatingElement);
          var owner = currentlyValidatingElement._owner;
          stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner));
        }
        stack += ReactDebugCurrentFrame$1.getStackAddendum() || '';
        return stack;
      };
    }

    var ITERATOR_SYMBOL$1 = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator');
    var FAUX_ITERATOR_SYMBOL$1 = '@@iterator';

    function getDeclarationErrorAddendum() {
      if (ReactCurrentOwner_1.current) {
        var name = getComponentName(ReactCurrentOwner_1.current);
        if (name) {
          return '\n\nCheck the render method of `' + name + '`.';
        }
      }
      return '';
    }

    function getSourceInfoErrorAddendum(elementProps) {
      if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
        var source = elementProps.__source;
        var fileName = source.fileName.replace(/^.*[\\\/]/, '');
        var lineNumber = source.lineNumber;
        return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
      }
      return '';
    }

    var ownerHasKeyUseWarning = {};

    function getCurrentComponentErrorInfo(parentType) {
      var info = getDeclarationErrorAddendum();

      if (!info) {
        var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
        if (parentName) {
          info = '\n\nCheck the top-level render call using <' + parentName + '>.';
        }
      }
      return info;
    }

    function validateExplicitKey(element, parentType) {
      if (!element._store || element._store.validated || element.key != null) {
        return;
      }
      element._store.validated = true;

      var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
      if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
        return;
      }
      ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

      var childOwner = '';
      if (element && element._owner && element._owner !== ReactCurrentOwner_1.current) {
        childOwner = ' It was passed a child from ' + getComponentName(element._owner) + '.';
      }

      currentlyValidatingElement = element;
      {
        warning$3(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, getStackAddendum$1());
      }
      currentlyValidatingElement = null;
    }

    function validateChildKeys(node, parentType) {
      if (typeof node !== 'object') {
        return;
      }
      if (Array.isArray(node)) {
        for (var i = 0; i < node.length; i++) {
          var child = node[i];
          if (ReactElement_1.isValidElement(child)) {
            validateExplicitKey(child, parentType);
          }
        }
      } else if (ReactElement_1.isValidElement(node)) {
        if (node._store) {
          node._store.validated = true;
        }
      } else if (node) {
        var iteratorFn = ITERATOR_SYMBOL$1 && node[ITERATOR_SYMBOL$1] || node[FAUX_ITERATOR_SYMBOL$1];
        if (typeof iteratorFn === 'function') {
          if (iteratorFn !== node.entries) {
            var iterator = iteratorFn.call(node);
            var step;
            while (!(step = iterator.next()).done) {
              if (ReactElement_1.isValidElement(step.value)) {
                validateExplicitKey(step.value, parentType);
              }
            }
          }
        }
      }
    }

    function validatePropTypes(element) {
      var componentClass = element.type;
      if (typeof componentClass !== 'function') {
        return;
      }
      var name = componentClass.displayName || componentClass.name;
      var propTypes = componentClass.propTypes;

      if (propTypes) {
        currentlyValidatingElement = element;
        checkPropTypes$1(propTypes, element.props, 'prop', name, getStackAddendum$1);
        currentlyValidatingElement = null;
      }
      if (typeof componentClass.getDefaultProps === 'function') {
        warning$3(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
      }
    }

    var ReactElementValidator$1 = {
      createElement: function createElement(type, props, children) {
        var validType = typeof type === 'string' || typeof type === 'function';

        if (!validType) {
          var info = '';
          if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
            info += ' You likely forgot to export your component from the file ' + "it's defined in.";
          }

          var sourceInfo = getSourceInfoErrorAddendum(props);
          if (sourceInfo) {
            info += sourceInfo;
          } else {
            info += getDeclarationErrorAddendum();
          }

          info += ReactDebugCurrentFrame$1.getStackAddendum() || '';

          warning$3(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info);
        }

        var element = ReactElement_1.createElement.apply(this, arguments);

        if (element == null) {
          return element;
        }

        if (validType) {
          for (var i = 2; i < arguments.length; i++) {
            validateChildKeys(arguments[i], type);
          }
        }

        validatePropTypes(element);

        return element;
      },

      createFactory: function createFactory(type) {
        var validatedFactory = ReactElementValidator$1.createElement.bind(null, type);

        validatedFactory.type = type;

        {
          Object.defineProperty(validatedFactory, 'type', {
            enumerable: false,
            get: function get() {
              lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
              Object.defineProperty(this, 'type', {
                value: type
              });
              return type;
            }
          });
        }

        return validatedFactory;
      },

      cloneElement: function cloneElement(element, props, children) {
        var newElement = ReactElement_1.cloneElement.apply(this, arguments);
        for (var i = 2; i < arguments.length; i++) {
          validateChildKeys(arguments[i], newElement.type);
        }
        validatePropTypes(newElement);
        return newElement;
      }
    };

    var ReactElementValidator_1 = ReactElementValidator$1;

    {
      var warning$4 = require$$0;
    }

    function isNative(fn) {
      var funcToString = Function.prototype.toString;
      var reIsNative = RegExp('^' + funcToString.call(Object.prototype.hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
      try {
        var source = funcToString.call(fn);
        return reIsNative.test(source);
      } catch (err) {
        return false;
      }
    }

    var canUseCollections = typeof Array.from === 'function' && typeof Map === 'function' && isNative(Map) && Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) && typeof Set === 'function' && isNative(Set) && Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

    var setItem;
    var getItem;
    var removeItem;
    var getItemIDs;
    var addRoot;
    var removeRoot;
    var getRootIDs;

    if (canUseCollections) {
      var itemMap = new Map();
      var rootIDSet = new Set();

      setItem = function setItem(id, item) {
        itemMap.set(id, item);
      };
      getItem = function getItem(id) {
        return itemMap.get(id);
      };
      removeItem = function removeItem(id) {
        itemMap['delete'](id);
      };
      getItemIDs = function getItemIDs() {
        return Array.from(itemMap.keys());
      };

      addRoot = function addRoot(id) {
        rootIDSet.add(id);
      };
      removeRoot = function removeRoot(id) {
        rootIDSet['delete'](id);
      };
      getRootIDs = function getRootIDs() {
        return Array.from(rootIDSet.keys());
      };
    } else {
      var itemByKey = {};
      var rootByKey = {};

      var getKeyFromID = function getKeyFromID(id) {
        return '.' + id;
      };
      var getIDFromKey = function getIDFromKey(key) {
        return parseInt(key.substr(1), 10);
      };

      setItem = function setItem(id, item) {
        var key = getKeyFromID(id);
        itemByKey[key] = item;
      };
      getItem = function getItem(id) {
        var key = getKeyFromID(id);
        return itemByKey[key];
      };
      removeItem = function removeItem(id) {
        var key = getKeyFromID(id);
        delete itemByKey[key];
      };
      getItemIDs = function getItemIDs() {
        return Object.keys(itemByKey).map(getIDFromKey);
      };

      addRoot = function addRoot(id) {
        var key = getKeyFromID(id);
        rootByKey[key] = true;
      };
      removeRoot = function removeRoot(id) {
        var key = getKeyFromID(id);
        delete rootByKey[key];
      };
      getRootIDs = function getRootIDs() {
        return Object.keys(rootByKey).map(getIDFromKey);
      };
    }

    var unmountedIDs = [];

    function purgeDeep(id) {
      var item = getItem(id);
      if (item) {
        var childIDs = item.childIDs;

        removeItem(id);
        childIDs.forEach(purgeDeep);
      }
    }

    function getDisplayName$1(element) {
      if (element == null) {
        return '#empty';
      } else if (typeof element === 'string' || typeof element === 'number') {
        return '#text';
      } else if (typeof element.type === 'string') {
        return element.type;
      } else {
        return element.type.displayName || element.type.name || 'Unknown';
      }
    }

    function describeID(id) {
      var name = ReactComponentTreeHook.getDisplayName(id);
      var element = ReactComponentTreeHook.getElement(id);
      var ownerID = ReactComponentTreeHook.getOwnerID(id);
      var ownerName = void 0;

      if (ownerID) {
        ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
      }
      warning$4(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id);
      return describeComponentFrame$1(name || '', element && element._source, ownerName || '');
    }

    var ReactComponentTreeHook = {
      onSetChildren: function onSetChildren(id, nextChildIDs) {
        var item = getItem(id);
        !item ? invariant(false, 'Item must have been set') : void 0;
        item.childIDs = nextChildIDs;

        for (var i = 0; i < nextChildIDs.length; i++) {
          var nextChildID = nextChildIDs[i];
          var nextChild = getItem(nextChildID);
          !nextChild ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : void 0;
          !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : void 0;
          !nextChild.isMounted ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : void 0;
          if (nextChild.parentID == null) {
            nextChild.parentID = id;
          }
          !(nextChild.parentID === id) ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : void 0;
        }
      },
      onBeforeMountComponent: function onBeforeMountComponent(id, element, parentID) {
        var item = {
          element: element,
          parentID: parentID,
          text: null,
          childIDs: [],
          isMounted: false,
          updateCount: 0
        };
        setItem(id, item);
      },
      onBeforeUpdateComponent: function onBeforeUpdateComponent(id, element) {
        var item = getItem(id);
        if (!item || !item.isMounted) {
          return;
        }
        item.element = element;
      },
      onMountComponent: function onMountComponent(id) {
        var item = getItem(id);
        !item ? invariant(false, 'Item must have been set') : void 0;
        item.isMounted = true;
        var isRoot = item.parentID === 0;
        if (isRoot) {
          addRoot(id);
        }
      },
      onUpdateComponent: function onUpdateComponent(id) {
        var item = getItem(id);
        if (!item || !item.isMounted) {
          return;
        }
        item.updateCount++;
      },
      onUnmountComponent: function onUnmountComponent(id) {
        var item = getItem(id);
        if (item) {
          item.isMounted = false;
          var isRoot = item.parentID === 0;
          if (isRoot) {
            removeRoot(id);
          }
        }
        unmountedIDs.push(id);
      },
      purgeUnmountedComponents: function purgeUnmountedComponents() {
        if (ReactComponentTreeHook._preventPurging) {
          return;
        }

        for (var i = 0; i < unmountedIDs.length; i++) {
          var id = unmountedIDs[i];
          purgeDeep(id);
        }
        unmountedIDs.length = 0;
      },
      isMounted: function isMounted(id) {
        var item = getItem(id);
        return item ? item.isMounted : false;
      },
      getCurrentStackAddendum: function getCurrentStackAddendum() {
        var info = '';
        var currentOwner = ReactCurrentOwner_1.current;
        if (currentOwner) {
          !(typeof currentOwner.tag !== 'number') ? invariant(false, 'Fiber owners should not show up in Stack stack traces.') : void 0;
          if (typeof currentOwner._debugID === 'number') {
            info += ReactComponentTreeHook.getStackAddendumByID(currentOwner._debugID);
          }
        }
        return info;
      },
      getStackAddendumByID: function getStackAddendumByID(id) {
        var info = '';
        while (id) {
          info += describeID(id);
          id = ReactComponentTreeHook.getParentID(id);
        }
        return info;
      },
      getChildIDs: function getChildIDs(id) {
        var item = getItem(id);
        return item ? item.childIDs : [];
      },
      getDisplayName: function getDisplayName(id) {
        var element = ReactComponentTreeHook.getElement(id);
        if (!element) {
          return null;
        }
        return getDisplayName$1(element);
      },
      getElement: function getElement(id) {
        var item = getItem(id);
        return item ? item.element : null;
      },
      getOwnerID: function getOwnerID(id) {
        var element = ReactComponentTreeHook.getElement(id);
        if (!element || !element._owner) {
          return null;
        }
        return element._owner._debugID;
      },
      getParentID: function getParentID(id) {
        var item = getItem(id);
        return item ? item.parentID : null;
      },
      getSource: function getSource(id) {
        var item = getItem(id);
        var element = item ? item.element : null;
        var source = element != null ? element._source : null;
        return source;
      },
      getText: function getText(id) {
        var element = ReactComponentTreeHook.getElement(id);
        if (typeof element === 'string') {
          return element;
        } else if (typeof element === 'number') {
          return '' + element;
        } else {
          return null;
        }
      },
      getUpdateCount: function getUpdateCount(id) {
        var item = getItem(id);
        return item ? item.updateCount : 0;
      },

      getRootIDs: getRootIDs,
      getRegisteredIDs: getItemIDs
    };

    var ReactComponentTreeHook_1 = ReactComponentTreeHook;

    var createElement = ReactElement_1.createElement;
    var createFactory = ReactElement_1.createFactory;
    var cloneElement = ReactElement_1.cloneElement;

    {
      var ReactElementValidator = ReactElementValidator_1;
      createElement = ReactElementValidator.createElement;
      createFactory = ReactElementValidator.createFactory;
      cloneElement = ReactElementValidator.cloneElement;
    }

    var React = {
      Children: {
        map: ReactChildren_1.map,
        forEach: ReactChildren_1.forEach,
        count: ReactChildren_1.count,
        toArray: ReactChildren_1.toArray,
        only: onlyChild_1
      },

      Component: ReactBaseClasses.Component,
      PureComponent: ReactBaseClasses.PureComponent,
      unstable_AsyncComponent: ReactBaseClasses.AsyncComponent,

      createElement: createElement,
      cloneElement: cloneElement,
      isValidElement: ReactElement_1.isValidElement,

      createFactory: createFactory,

      version: ReactVersion,

      __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
        ReactCurrentOwner: ReactCurrentOwner_1,

        assign: objectAssign$1
      }
    };

    {
      objectAssign$1(React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {
        ReactComponentTreeHook: ReactComponentTreeHook_1,
        ReactDebugCurrentFrame: ReactDebugCurrentFrame_1
      });
    }

    var ReactEntry = React;

    module.exports = ReactEntry;
  })();
}
}, 38, null, "react/cjs/react.development.js");
__d(/* prop-types/checkPropTypes.js */function(global, require, module, exports) {

'use strict';

if (process.env.NODE_ENV !== 'production') {
  var invariant = require(13                  ); // 13 = fbjs/lib/invariant
  var warning = require(23                ); // 23 = fbjs/lib/warning
  var ReactPropTypesSecret = require(40                          ); // 40 = ./lib/ReactPropTypesSecret
  var loggedTypeFailures = {};
}

function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;

        try {
          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
        }
      }
    }
  }
}

module.exports = checkPropTypes;
}, 39, null, "prop-types/checkPropTypes.js");
__d(/* prop-types/lib/ReactPropTypesSecret.js */function(global, require, module, exports) {

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;
}, 40, null, "prop-types/lib/ReactPropTypesSecret.js");
__d(/* fbjs/lib/shallowEqual.js */function(global, require, module, exports) {

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

function is(x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;
}, 41, null, "fbjs/lib/shallowEqual.js");
__d(/* deepDiffer */function(global, require, module, exports) {
'use strict';

var deepDiffer = function deepDiffer(one, two) {
  if (one === two) {
    return false;
  }
  if (typeof one === 'function' && typeof two === 'function') {
    return false;
  }
  if (typeof one !== 'object' || one === null) {
    return one !== two;
  }
  if (typeof two !== 'object' || two === null) {
    return true;
  }
  if (one.constructor !== two.constructor) {
    return true;
  }
  if (Array.isArray(one)) {
    var len = one.length;
    if (two.length !== len) {
      return true;
    }
    for (var ii = 0; ii < len; ii++) {
      if (deepDiffer(one[ii], two[ii])) {
        return true;
      }
    }
  } else {
    for (var key in one) {
      if (deepDiffer(one[key], two[key])) {
        return true;
      }
    }
    for (var twoKey in two) {
      if (one[twoKey] === undefined && two[twoKey] !== undefined) {
        return true;
      }
    }
  }
  return false;
};

module.exports = deepDiffer;
}, 42, null, "deepDiffer");
__d(/* flattenStyle */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var ReactNativePropRegistry;

function getStyle(style) {
  if (ReactNativePropRegistry === undefined) {
    ReactNativePropRegistry = require(44                       ); // 44 = ReactNativePropRegistry
  }
  if (typeof style === 'number') {
    return ReactNativePropRegistry.getByID(style);
  }
  return style;
}

function flattenStyle(style) {
  if (!style) {
    return undefined;
  }
  invariant(style !== true, 'style may be false but not true');

  if (!Array.isArray(style)) {
    return getStyle(style);
  }

  var result = {};
  for (var i = 0, styleLength = style.length; i < styleLength; ++i) {
    var computedStyle = flattenStyle(style[i]);
    if (computedStyle) {
      for (var key in computedStyle) {
        result[key] = computedStyle[key];
      }
    }
  }
  return result;
}

module.exports = flattenStyle;
}, 43, null, "flattenStyle");
__d(/* ReactNativePropRegistry */function(global, require, module, exports) {

'use strict';

var _require = require(21           ), // 21 = ReactNative
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = _require.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

module.exports = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactNativePropRegistry;
}, 44, null, "ReactNativePropRegistry");
__d(/* TextInputState */function(global, require, module, exports) {
'use strict';

var Platform = require(46        ); // 46 = Platform
var UIManager = require(47         ); // 47 = UIManager

var TextInputState = {
  _currentlyFocusedID: null,

  currentlyFocusedField: function currentlyFocusedField() {
    return this._currentlyFocusedID;
  },

  focusTextInput: function focusTextInput(textFieldID) {
    if (this._currentlyFocusedID !== textFieldID && textFieldID !== null) {
      this._currentlyFocusedID = textFieldID;
      if (Platform.OS === 'ios') {
        UIManager.focus(textFieldID);
      } else if (Platform.OS === 'android') {
        UIManager.dispatchViewManagerCommand(textFieldID, UIManager.AndroidTextInput.Commands.focusTextInput, null);
      }
    }
  },

  blurTextInput: function blurTextInput(textFieldID) {
    if (this._currentlyFocusedID === textFieldID && textFieldID !== null) {
      this._currentlyFocusedID = null;
      if (Platform.OS === 'ios') {
        UIManager.blur(textFieldID);
      } else if (Platform.OS === 'android') {
        UIManager.dispatchViewManagerCommand(textFieldID, UIManager.AndroidTextInput.Commands.blurTextInput, null);
      }
    }
  }
};

module.exports = TextInputState;
}, 45, null, "TextInputState");
__d(/* Platform */function(global, require, module, exports) {

'use strict';

var NativeModules = require(15             ); // 15 = NativeModules

var Platform = {
  OS: 'android',
  get Version() {
    var constants = NativeModules.PlatformConstants;
    return constants && constants.Version;
  },
  get isTesting() {
    var constants = NativeModules.PlatformConstants;
    return constants && constants.isTesting;
  },
  select: function select(obj) {
    return 'android' in obj ? obj.android : obj.default;
  }
};

module.exports = Platform;
}, 46, null, "Platform");
__d(/* UIManager */function(global, require, module, exports) {
'use strict';

var NativeModules = require(15             ); // 15 = NativeModules
var Platform = require(46        ); // 46 = Platform

var defineLazyObjectProperty = require(48                        ); // 48 = defineLazyObjectProperty
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var UIManager = NativeModules.UIManager;


invariant(UIManager, 'UIManager is undefined. The native module config is probably incorrect.');

UIManager.__takeSnapshot = UIManager.takeSnapshot;
UIManager.takeSnapshot = function () {
  invariant(false, 'UIManager.takeSnapshot should not be called directly. ' + 'Use ReactNative.takeSnapshot instead.');
};

if (Platform.OS === 'ios') {
  Object.keys(UIManager).forEach(function (viewName) {
    var viewConfig = UIManager[viewName];
    if (viewConfig.Manager) {
      defineLazyObjectProperty(viewConfig, 'Constants', {
        get: function get() {
          var viewManager = NativeModules[viewConfig.Manager];
          var constants = {};
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];
            if (typeof value !== 'function') {
              constants[key] = value;
            }
          });
          return constants;
        }
      });
      defineLazyObjectProperty(viewConfig, 'Commands', {
        get: function get() {
          var viewManager = NativeModules[viewConfig.Manager];
          var commands = {};
          var index = 0;
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];
            if (typeof value === 'function') {
              commands[key] = index++;
            }
          });
          return commands;
        }
      });
    }
  });
} else if (Platform.OS === 'android' && UIManager.ViewManagerNames) {
  UIManager.ViewManagerNames.forEach(function (viewManagerName) {
    defineLazyObjectProperty(UIManager, viewManagerName, {
      get: function get() {
        return UIManager.getConstantsForViewManager(viewManagerName);
      }
    });
  });
}

module.exports = UIManager;
}, 47, null, "UIManager");
__d(/* defineLazyObjectProperty */function(global, require, module, exports) {

'use strict';

function defineLazyObjectProperty(object, name, descriptor) {
  var get = descriptor.get;

  var enumerable = descriptor.enumerable !== false;
  var writable = descriptor.writable !== false;

  var value = void 0;
  var valueSet = false;
  function getValue() {
    if (!valueSet) {
      valueSet = true;
      setValue(get());
    }
    return value;
  }
  function setValue(newValue) {
    value = newValue;
    valueSet = true;
    Object.defineProperty(object, name, {
      value: newValue,
      configurable: true,
      enumerable: enumerable,
      writable: writable
    });
  }

  Object.defineProperty(object, name, {
    get: getValue,
    set: setValue,
    configurable: true,
    enumerable: enumerable
  });
}

module.exports = defineLazyObjectProperty;
}, 48, null, "defineLazyObjectProperty");
__d(/* deepFreezeAndThrowOnMutationInDev */function(global, require, module, exports) {

'use strict';

function deepFreezeAndThrowOnMutationInDev(object) {
  if (__DEV__) {
    if (typeof object !== 'object' || object === null || Object.isFrozen(object) || Object.isSealed(object)) {
      return;
    }

    var keys = Object.keys(object);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (object.hasOwnProperty(key)) {
        object.__defineGetter__(key, identity.bind(null, object[key]));
        object.__defineSetter__(key, throwOnImmutableMutation.bind(null, key));
      }
    }

    Object.freeze(object);
    Object.seal(object);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (object.hasOwnProperty(key)) {
        deepFreezeAndThrowOnMutationInDev(object[key]);
      }
    }
  }
}

function throwOnImmutableMutation(key, value) {
  throw Error('You attempted to set the key `' + key + '` with the value `' + JSON.stringify(value) + '` on an object that is meant to be immutable ' + 'and has been frozen.');
}

function identity(value) {
  return value;
}

module.exports = deepFreezeAndThrowOnMutationInDev;
}, 49, null, "deepFreezeAndThrowOnMutationInDev");
__d(/* InitializeCore */function(global, require, module, exports) {
'use strict';

if (global.GLOBAL === undefined) {
  global.GLOBAL = global;
}

if (global.window === undefined) {
  global.window = global;
}

var defineLazyObjectProperty = require(48                        ); // 48 = defineLazyObjectProperty

function defineLazyProperty(object, name, getValue) {
  var descriptor = Object.getOwnPropertyDescriptor(object, name);
  if (__DEV__ && descriptor) {
    var backupName = 'original' + name[0].toUpperCase() + name.substr(1);
    Object.defineProperty(object, backupName, babelHelpers.extends({}, descriptor, {
      value: object[name]
    }));
  }

  var _ref = descriptor || {},
      enumerable = _ref.enumerable,
      writable = _ref.writable,
      configurable = _ref.configurable;

  if (descriptor && !configurable) {
    console.error('Failed to set polyfill. ' + name + ' is not configurable.');
    return;
  }

  defineLazyObjectProperty(object, name, {
    get: getValue,
    enumerable: enumerable !== false,
    writable: writable !== false
  });
}

function polyfillGlobal(name, getValue) {
  defineLazyProperty(global, name, getValue);
}

global.process = global.process || {};
global.process.env = global.process.env || {};
if (!global.process.env.NODE_ENV) {
  global.process.env.NODE_ENV = __DEV__ ? 'development' : 'production';
}

if (global.__RCTProfileIsProfiling) {
  var Systrace = require(19        ); // 19 = Systrace
  Systrace.setEnabled(true);
}

var ExceptionsManager = require(25                 ); // 25 = ExceptionsManager
ExceptionsManager.installConsoleErrorReporter();

if (!global.__fbDisableExceptionsManager) {
  var handleError = function handleError(e, isFatal) {
    try {
      ExceptionsManager.handleException(e, isFatal);
    } catch (ee) {
      console.log('Failed to print error: ', ee.message);

      throw e;
    }
  };

  var ErrorUtils = require(18          ); // 18 = ErrorUtils
  ErrorUtils.setGlobalHandler(handleError);
}

var ReactNativeVersionCheck = require(51                       ); // 51 = ReactNativeVersionCheck
ReactNativeVersionCheck.checkVersions();

var _shouldPolyfillCollection = require(53                            ); // 53 = _shouldPolyfillES6Collection
if (_shouldPolyfillCollection('Map')) {
  polyfillGlobal('Map', function () {
    return require(54   ); // 54 = Map
  });
}
if (_shouldPolyfillCollection('Set')) {
  polyfillGlobal('Set', function () {
    return require(58   ); // 58 = Set
  });
}

polyfillGlobal('Promise', function () {
  return require(59       ); // 59 = Promise
});

polyfillGlobal('regeneratorRuntime', function () {
  delete global.regeneratorRuntime;

  require(67                           ); // 67 = regenerator-runtime/runtime
  return global.regeneratorRuntime;
});

var defineLazyTimer = function defineLazyTimer(name) {
  polyfillGlobal(name, function () {
    return require(68        )[name]; // 68 = JSTimers
  });
};
defineLazyTimer('setTimeout');
defineLazyTimer('setInterval');
defineLazyTimer('setImmediate');
defineLazyTimer('clearTimeout');
defineLazyTimer('clearInterval');
defineLazyTimer('clearImmediate');
defineLazyTimer('requestAnimationFrame');
defineLazyTimer('cancelAnimationFrame');
defineLazyTimer('requestIdleCallback');
defineLazyTimer('cancelIdleCallback');

polyfillGlobal('XMLHttpRequest', function () {
  return require(72              ); // 72 = XMLHttpRequest
});
polyfillGlobal('FormData', function () {
  return require(88        ); // 88 = FormData
});

polyfillGlobal('fetch', function () {
  return require(31     ).fetch; // 31 = fetch
});
polyfillGlobal('Headers', function () {
  return require(31     ).Headers; // 31 = fetch
});
polyfillGlobal('Request', function () {
  return require(31     ).Request; // 31 = fetch
});
polyfillGlobal('Response', function () {
  return require(31     ).Response; // 31 = fetch
});
polyfillGlobal('WebSocket', function () {
  return require(89         ); // 89 = WebSocket
});
polyfillGlobal('Blob', function () {
  return require(90    ); // 90 = Blob
});
polyfillGlobal('URL', function () {
  return require(97   ); // 97 = URL
});

if (!global.alert) {
  global.alert = function (text) {
    require(98     ).alert('Alert', '' + text); // 98 = Alert
  };
}

var navigator = global.navigator;
if (navigator === undefined) {
  global.navigator = navigator = {};
}

defineLazyProperty(navigator, 'product', function () {
  return 'ReactNative';
});
defineLazyProperty(navigator, 'geolocation', function () {
  return require(100          ); // 100 = Geolocation
});

var BatchedBridge = require(16             ); // 16 = BatchedBridge
BatchedBridge.registerLazyCallableModule('Systrace', function () {
  return require(19        ); // 19 = Systrace
});
BatchedBridge.registerLazyCallableModule('JSTimers', function () {
  return require(68        ); // 68 = JSTimers
});
BatchedBridge.registerLazyCallableModule('HeapCapture', function () {
  return require(103          ); // 103 = HeapCapture
});
BatchedBridge.registerLazyCallableModule('SamplingProfiler', function () {
  return require(104               ); // 104 = SamplingProfiler
});
BatchedBridge.registerLazyCallableModule('RCTLog', function () {
  return require(105     ); // 105 = RCTLog
});
BatchedBridge.registerLazyCallableModule('RCTDeviceEventEmitter', function () {
  return require(84                     ); // 84 = RCTDeviceEventEmitter
});
BatchedBridge.registerLazyCallableModule('RCTNativeAppEventEmitter', function () {
  return require(106                       ); // 106 = RCTNativeAppEventEmitter
});
BatchedBridge.registerLazyCallableModule('PerformanceLogger', function () {
  return require(107                ); // 107 = PerformanceLogger
});

if (__DEV__) {
  if (!global.__RCTProfileIsProfiling) {
    BatchedBridge.registerCallableModule('HMRClient', require(109        )); // 109 = HMRClient

    if (!window.document) {
      require(112            ); // 112 = setupDevtools
    }

    var JSInspector = require(115          ); // 115 = JSInspector

    JSInspector.registerAgent(require(116           )); // 116 = NetworkAgent
  }
}
}, 50, null, "InitializeCore");
__d(/* ReactNativeVersionCheck */function(global, require, module, exports) {
'use strict';

var _require = require(15             ), // 15 = NativeModules
    PlatformConstants = _require.PlatformConstants;

var ReactNativeVersion = require(52                  ); // 52 = ReactNativeVersion

exports.checkVersions = function checkVersions() {
  if (!PlatformConstants) {
    return;
  }

  var nativeVersion = PlatformConstants.reactNativeVersion;
  if (ReactNativeVersion.version.major !== nativeVersion.major || ReactNativeVersion.version.minor !== nativeVersion.minor) {
    throw new Error('React Native version mismatch.\n\nJavaScript version: ' + _formatVersion(ReactNativeVersion.version) + '\n' + ('Native version: ' + _formatVersion(nativeVersion) + '\n\n') + 'Make sure that you have rebuilt the native code. If the problem ' + 'persists try clearing the Watchman and packager caches with ' + '`watchman watch-del-all && react-native start --reset-cache`.');
  }
};

function _formatVersion(version) {
  return version.major + '.' + version.minor + '.' + version.patch + (version.prerelease !== null ? '-' + version.prerelease : '');
}
}, 51, null, "ReactNativeVersionCheck");
__d(/* ReactNativeVersion */function(global, require, module, exports) {

exports.version = {
  major: 0,
  minor: 50,
  patch: 4,
  prerelease: null
};
}, 52, null, "ReactNativeVersion");
__d(/* _shouldPolyfillES6Collection */function(global, require, module, exports) {
'use strict';

function _shouldActuallyPolyfillES6Collection(collectionName) {
  var Collection = global[collectionName];
  if (Collection == null) {
    return true;
  }

  if (typeof global.Symbol !== 'function') {
    return true;
  }

  var proto = Collection.prototype;

  return Collection == null || typeof Collection !== 'function' || typeof proto.clear !== 'function' || new Collection().size !== 0 || typeof proto.keys !== 'function' || typeof proto.forEach !== 'function';
}

var cache = {};

function _shouldPolyfillES6Collection(collectionName) {
  var result = cache[collectionName];
  if (result !== undefined) {
    return result;
  }

  result = _shouldActuallyPolyfillES6Collection(collectionName);
  cache[collectionName] = result;
  return result;
}

module.exports = _shouldPolyfillES6Collection;
}, 53, null, "_shouldPolyfillES6Collection");
__d(/* Map */function(global, require, module, exports) {

'use strict';

var _shouldPolyfillES6Collection = require(53                            ); // 53 = _shouldPolyfillES6Collection
var guid = require(55    ); // 55 = guid
var isNode = require(56               ); // 56 = fbjs/lib/isNode
var toIterator = require(57          ); // 57 = toIterator

module.exports = function (global, undefined) {
  if (!_shouldPolyfillES6Collection('Map')) {
    return global.Map;
  }

  var KIND_KEY = 'key';
  var KIND_VALUE = 'value';
  var KIND_KEY_VALUE = 'key+value';

  var KEY_PREFIX = '$map_';

  var SECRET_SIZE_PROP;
  if (__DEV__) {
    SECRET_SIZE_PROP = '$size' + guid();
  }

  var OLD_IE_HASH_PREFIX = 'IE_HASH_';

  var Map = function () {
    function Map(iterable) {
      babelHelpers.classCallCheck(this, Map);

      if (!isObject(this)) {
        throw new TypeError('Wrong map object type.');
      }

      initMap(this);

      if (iterable != null) {
        var it = toIterator(iterable);
        var next;
        while (!(next = it.next()).done) {
          if (!isObject(next.value)) {
            throw new TypeError('Expected iterable items to be pair objects.');
          }
          this.set(next.value[0], next.value[1]);
        }
      }
    }

    babelHelpers.createClass(Map, [{
      key: 'clear',
      value: function clear() {
        initMap(this);
      }
    }, {
      key: 'has',
      value: function has(key) {
        var index = getIndex(this, key);
        return !!(index != null && this._mapData[index]);
      }
    }, {
      key: 'set',
      value: function set(key, value) {
        var index = getIndex(this, key);

        if (index != null && this._mapData[index]) {
          this._mapData[index][1] = value;
        } else {
          index = this._mapData.push([key, value]) - 1;
          setIndex(this, key, index);
          if (__DEV__) {
            this[SECRET_SIZE_PROP] += 1;
          } else {
            this.size += 1;
          }
        }

        return this;
      }
    }, {
      key: 'get',
      value: function get(key) {
        var index = getIndex(this, key);
        if (index == null) {
          return undefined;
        } else {
          return this._mapData[index][1];
        }
      }
    }, {
      key: 'delete',
      value: function _delete(key) {
        var index = getIndex(this, key);
        if (index != null && this._mapData[index]) {
          setIndex(this, key, undefined);
          this._mapData[index] = undefined;
          if (__DEV__) {
            this[SECRET_SIZE_PROP] -= 1;
          } else {
            this.size -= 1;
          }
          return true;
        } else {
          return false;
        }
      }
    }, {
      key: 'entries',
      value: function entries() {
        return new MapIterator(this, KIND_KEY_VALUE);
      }
    }, {
      key: 'keys',
      value: function keys() {
        return new MapIterator(this, KIND_KEY);
      }
    }, {
      key: 'values',
      value: function values() {
        return new MapIterator(this, KIND_VALUE);
      }
    }, {
      key: 'forEach',
      value: function forEach(callback, thisArg) {
        if (typeof callback !== 'function') {
          throw new TypeError('Callback must be callable.');
        }

        var boundCallback = callback.bind(thisArg || undefined);
        var mapData = this._mapData;

        for (var i = 0; i < mapData.length; i++) {
          var entry = mapData[i];
          if (entry != null) {
            boundCallback(entry[1], entry[0], this);
          }
        }
      }
    }]);
    return Map;
  }();

  Map.prototype[toIterator.ITERATOR_SYMBOL] = Map.prototype.entries;

  var MapIterator = function () {
    function MapIterator(map, kind) {
      babelHelpers.classCallCheck(this, MapIterator);

      if (!(isObject(map) && map._mapData)) {
        throw new TypeError('Object is not a map.');
      }

      if ([KIND_KEY, KIND_KEY_VALUE, KIND_VALUE].indexOf(kind) === -1) {
        throw new Error('Invalid iteration kind.');
      }

      this._map = map;
      this._nextIndex = 0;
      this._kind = kind;
    }

    babelHelpers.createClass(MapIterator, [{
      key: 'next',
      value: function next() {
        if (!this instanceof Map) {
          throw new TypeError('Expected to be called on a MapIterator.');
        }

        var map = this._map;
        var index = this._nextIndex;
        var kind = this._kind;

        if (map == null) {
          return createIterResultObject(undefined, true);
        }

        var entries = map._mapData;

        while (index < entries.length) {
          var record = entries[index];

          index += 1;
          this._nextIndex = index;

          if (record) {
            if (kind === KIND_KEY) {
              return createIterResultObject(record[0], false);
            } else if (kind === KIND_VALUE) {
              return createIterResultObject(record[1], false);
            } else if (kind) {
              return createIterResultObject(record, false);
            }
          }
        }

        this._map = undefined;

        return createIterResultObject(undefined, true);
      }
    }]);
    return MapIterator;
  }();

  MapIterator.prototype[toIterator.ITERATOR_SYMBOL] = function () {
    return this;
  };

  function getIndex(map, key) {
    if (isObject(key)) {
      var hash = getHash(key);
      return map._objectIndex[hash];
    } else {
      var prefixedKey = KEY_PREFIX + key;
      if (typeof key === 'string') {
        return map._stringIndex[prefixedKey];
      } else {
        return map._otherIndex[prefixedKey];
      }
    }
  }

  function setIndex(map, key, index) {
    var shouldDelete = index == null;

    if (isObject(key)) {
      var hash = getHash(key);
      if (shouldDelete) {
        delete map._objectIndex[hash];
      } else {
        map._objectIndex[hash] = index;
      }
    } else {
      var prefixedKey = KEY_PREFIX + key;
      if (typeof key === 'string') {
        if (shouldDelete) {
          delete map._stringIndex[prefixedKey];
        } else {
          map._stringIndex[prefixedKey] = index;
        }
      } else {
        if (shouldDelete) {
          delete map._otherIndex[prefixedKey];
        } else {
          map._otherIndex[prefixedKey] = index;
        }
      }
    }
  }

  function initMap(map) {
    map._mapData = [];

    map._objectIndex = {};

    map._stringIndex = {};

    map._otherIndex = {};

    if (__DEV__) {
      if (isES5) {
        if (map.hasOwnProperty(SECRET_SIZE_PROP)) {
          map[SECRET_SIZE_PROP] = 0;
        } else {
          Object.defineProperty(map, SECRET_SIZE_PROP, {
            value: 0,
            writable: true
          });
          Object.defineProperty(map, 'size', {
            set: function set(v) {
              console.error('PLEASE FIX ME: You are changing the map size property which ' + 'should not be writable and will break in production.');
              throw new Error('The map size property is not writable.');
            },
            get: function get() {
              return map[SECRET_SIZE_PROP];
            }
          });
        }

        return;
      }
    }

    map.size = 0;
  }

  function isObject(o) {
    return o != null && (typeof o === 'object' || typeof o === 'function');
  }

  function createIterResultObject(value, done) {
    return { value: value, done: done };
  }

  var isES5 = function () {
    try {
      Object.defineProperty({}, 'x', {});
      return true;
    } catch (e) {
      return false;
    }
  }();

  function isExtensible(o) {
    if (!isES5) {
      return true;
    } else {
      return Object.isExtensible(o);
    }
  }

  function getIENodeHash(node) {
    var uniqueID;
    switch (node.nodeType) {
      case 1:
        uniqueID = node.uniqueID;
        break;
      case 9:
        uniqueID = node.documentElement.uniqueID;
        break;
      default:
        return null;
    }

    if (uniqueID) {
      return OLD_IE_HASH_PREFIX + uniqueID;
    } else {
      return null;
    }
  }

  var getHash = function () {
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    var hashProperty = guid();
    var hashCounter = 0;

    return function getHash(o) {
      if (o[hashProperty]) {
        return o[hashProperty];
      } else if (!isES5 && o.propertyIsEnumerable && o.propertyIsEnumerable[hashProperty]) {
        return o.propertyIsEnumerable[hashProperty];
      } else if (!isES5 && isNode(o) && getIENodeHash(o)) {
        return getIENodeHash(o);
      } else if (!isES5 && o[hashProperty]) {
        return o[hashProperty];
      }

      if (isExtensible(o)) {
        hashCounter += 1;
        if (isES5) {
          Object.defineProperty(o, hashProperty, {
            enumerable: false,
            writable: false,
            configurable: false,
            value: hashCounter
          });
        } else if (o.propertyIsEnumerable) {
          o.propertyIsEnumerable = function () {
            return propIsEnumerable.apply(this, arguments);
          };
          o.propertyIsEnumerable[hashProperty] = hashCounter;
        } else if (isNode(o)) {
          o[hashProperty] = hashCounter;
        } else {
          throw new Error('Unable to set a non-enumerable property on object.');
        }
        return hashCounter;
      } else {
        throw new Error('Non-extensible objects are not allowed as keys.');
      }
    };
  }();

  return Map;
}(Function('return this')());
}, 54, null, "Map");
__d(/* guid */function(global, require, module, exports) {

'use strict';

function guid() {
  return 'f' + (Math.random() * (1 << 30)).toString(16).replace('.', '');
}

module.exports = guid;
}, 55, null, "guid");
__d(/* fbjs/lib/isNode.js */function(global, require, module, exports) {'use strict';

function isNode(object) {
  var doc = object ? object.ownerDocument || object : document;
  var defaultView = doc.defaultView || window;
  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}

module.exports = isNode;
}, 56, null, "fbjs/lib/isNode.js");
__d(/* toIterator */function(global, require, module, exports) {
'use strict';

var KIND_KEY = 'key';
var KIND_VALUE = 'value';
var KIND_KEY_VAL = 'key+value';

var ITERATOR_SYMBOL = typeof Symbol === 'function' ? typeof Symbol === 'function' ? Symbol.iterator : '@@iterator' : '@@iterator';

var toIterator = function () {
  if (!(Array.prototype[ITERATOR_SYMBOL] && String.prototype[ITERATOR_SYMBOL])) {
    return function () {
      var ArrayIterator = function () {
        function ArrayIterator(array, kind) {
          babelHelpers.classCallCheck(this, ArrayIterator);

          if (!Array.isArray(array)) {
            throw new TypeError('Object is not an Array');
          }
          this._iteratedObject = array;
          this._kind = kind;
          this._nextIndex = 0;
        }

        babelHelpers.createClass(ArrayIterator, [{
          key: 'next',
          value: function next() {
            if (!this instanceof ArrayIterator) {
              throw new TypeError('Object is not an ArrayIterator');
            }

            if (this._iteratedObject == null) {
              return createIterResultObject(undefined, true);
            }

            var array = this._iteratedObject;
            var len = this._iteratedObject.length;
            var index = this._nextIndex;
            var kind = this._kind;

            if (index >= len) {
              this._iteratedObject = undefined;
              return createIterResultObject(undefined, true);
            }

            this._nextIndex = index + 1;

            if (kind === KIND_KEY) {
              return createIterResultObject(index, false);
            } else if (kind === KIND_VALUE) {
              return createIterResultObject(array[index], false);
            } else if (kind === KIND_KEY_VAL) {
              return createIterResultObject([index, array[index]], false);
            }
          }
        }, {
          key: '@@iterator',
          value: function iterator() {
            return this;
          }
        }]);
        return ArrayIterator;
      }();

      var StringIterator = function () {
        function StringIterator(string) {
          babelHelpers.classCallCheck(this, StringIterator);

          if (typeof string !== 'string') {
            throw new TypeError('Object is not a string');
          }
          this._iteratedString = string;
          this._nextIndex = 0;
        }

        babelHelpers.createClass(StringIterator, [{
          key: 'next',
          value: function next() {
            if (!this instanceof StringIterator) {
              throw new TypeError('Object is not a StringIterator');
            }

            if (this._iteratedString == null) {
              return createIterResultObject(undefined, true);
            }

            var index = this._nextIndex;
            var s = this._iteratedString;
            var len = s.length;

            if (index >= len) {
              this._iteratedString = undefined;
              return createIterResultObject(undefined, true);
            }

            var ret;
            var first = s.charCodeAt(index);

            if (first < 0xD800 || first > 0xDBFF || index + 1 === len) {
              ret = s[index];
            } else {
              var second = s.charCodeAt(index + 1);
              if (second < 0xDC00 || second > 0xDFFF) {
                ret = s[index];
              } else {
                ret = s[index] + s[index + 1];
              }
            }

            this._nextIndex = index + ret.length;

            return createIterResultObject(ret, false);
          }
        }, {
          key: '@@iterator',
          value: function iterator() {
            return this;
          }
        }]);
        return StringIterator;
      }();

      function createIterResultObject(value, done) {
        return { value: value, done: done };
      }

      return function (object, kind) {
        if (typeof object === 'string') {
          return new StringIterator(object);
        } else if (Array.isArray(object)) {
          return new ArrayIterator(object, kind || KIND_VALUE);
        } else {
          return object[ITERATOR_SYMBOL]();
        }
      };
    }();
  } else {
    return function (object) {
      return object[ITERATOR_SYMBOL]();
    };
  }
}();

babelHelpers.extends(toIterator, {
  KIND_KEY: KIND_KEY,
  KIND_VALUE: KIND_VALUE,
  KIND_KEY_VAL: KIND_KEY_VAL,
  ITERATOR_SYMBOL: ITERATOR_SYMBOL
});

module.exports = toIterator;
}, 57, null, "toIterator");
__d(/* Set */function(global, require, module, exports) {

'use strict';

var Map = require(54   ); // 54 = Map

var _shouldPolyfillES6Collection = require(53                            ); // 53 = _shouldPolyfillES6Collection
var toIterator = require(57          ); // 57 = toIterator

module.exports = function (global) {
  if (!_shouldPolyfillES6Collection('Set')) {
    return global.Set;
  }

  var Set = function () {
    function Set(iterable) {
      babelHelpers.classCallCheck(this, Set);

      if (this == null || typeof this !== 'object' && typeof this !== 'function') {
        throw new TypeError('Wrong set object type.');
      }

      initSet(this);

      if (iterable != null) {
        var it = toIterator(iterable);
        var next;
        while (!(next = it.next()).done) {
          this.add(next.value);
        }
      }
    }

    babelHelpers.createClass(Set, [{
      key: 'add',
      value: function add(value) {
        this._map.set(value, value);
        this.size = this._map.size;
        return this;
      }
    }, {
      key: 'clear',
      value: function clear() {
        initSet(this);
      }
    }, {
      key: 'delete',
      value: function _delete(value) {
        var ret = this._map.delete(value);
        this.size = this._map.size;
        return ret;
      }
    }, {
      key: 'entries',
      value: function entries() {
        return this._map.entries();
      }
    }, {
      key: 'forEach',
      value: function forEach(callback) {
        var thisArg = arguments[1];
        var it = this._map.keys();
        var next;
        while (!(next = it.next()).done) {
          callback.call(thisArg, next.value, next.value, this);
        }
      }
    }, {
      key: 'has',
      value: function has(value) {
        return this._map.has(value);
      }
    }, {
      key: 'values',
      value: function values() {
        return this._map.values();
      }
    }]);
    return Set;
  }();

  Set.prototype[toIterator.ITERATOR_SYMBOL] = Set.prototype.values;

  Set.prototype.keys = Set.prototype.values;

  function initSet(set) {
    set._map = new Map();
    set.size = set._map.size;
  }

  return Set;
}(Function('return this')());
}, 58, null, "Set");
__d(/* Promise */function(global, require, module, exports) {
'use strict';

var Promise = require(60                       ); // 60 = fbjs/lib/Promise.native

if (__DEV__) {
  require(64                                       ).enable({ // 64 = promise/setimmediate/rejection-tracking
    allRejections: true,
    onUnhandled: function onUnhandled(id) {
      var error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var message = void 0;
      var stack = void 0;

      var stringValue = Object.prototype.toString.call(error);
      if (stringValue === '[object Error]') {
        message = Error.prototype.toString.call(error);
        stack = error.stack;
      } else {
        message = require(65             )(error); // 65 = pretty-format
      }

      var warning = 'Possible Unhandled Promise Rejection (id: ' + id + '):\n' + (message + '\n') + (stack == null ? '' : stack);
      console.warn(warning);
    },
    onHandled: function onHandled(id) {
      var warning = 'Promise Rejection Handled (id: ' + id + ')\n' + 'This means you can ignore any previous messages of the form ' + ('"Possible Unhandled Promise Rejection (id: ' + id + '):"');
      console.warn(warning);
    }
  });
}

module.exports = Promise;
}, 59, null, "Promise");
__d(/* fbjs/lib/Promise.native.js */function(global, require, module, exports) {

'use strict';

var Promise = require(61                                   ); // 61 = promise/setimmediate/es6-extensions
require(63                         ); // 63 = promise/setimmediate/done

Promise.prototype['finally'] = function (onSettled) {
  return this.then(onSettled, onSettled);
};

module.exports = Promise;
}, 60, null, "fbjs/lib/Promise.native.js");
__d(/* promise/setimmediate/es6-extensions.js */function(global, require, module, exports) {'use strict';

var Promise = require(62         ); // 62 = ./core.js

module.exports = Promise;

var TRUE = valuePromise(true);
var FALSE = valuePromise(false);
var NULL = valuePromise(null);
var UNDEFINED = valuePromise(undefined);
var ZERO = valuePromise(0);
var EMPTYSTRING = valuePromise('');

function valuePromise(value) {
  var p = new Promise(Promise._61);
  p._65 = 1;
  p._55 = value;
  return p;
}
Promise.resolve = function (value) {
  if (value instanceof Promise) return value;

  if (value === null) return NULL;
  if (value === undefined) return UNDEFINED;
  if (value === true) return TRUE;
  if (value === false) return FALSE;
  if (value === 0) return ZERO;
  if (value === '') return EMPTYSTRING;

  if (typeof value === 'object' || typeof value === 'function') {
    try {
      var then = value.then;
      if (typeof then === 'function') {
        return new Promise(then.bind(value));
      }
    } catch (ex) {
      return new Promise(function (resolve, reject) {
        reject(ex);
      });
    }
  }
  return valuePromise(value);
};

Promise.all = function (arr) {
  var args = Array.prototype.slice.call(arr);

  return new Promise(function (resolve, reject) {
    if (args.length === 0) return resolve([]);
    var remaining = args.length;
    function res(i, val) {
      if (val && (typeof val === 'object' || typeof val === 'function')) {
        if (val instanceof Promise && val.then === Promise.prototype.then) {
          while (val._65 === 3) {
            val = val._55;
          }
          if (val._65 === 1) return res(i, val._55);
          if (val._65 === 2) reject(val._55);
          val.then(function (val) {
            res(i, val);
          }, reject);
          return;
        } else {
          var then = val.then;
          if (typeof then === 'function') {
            var p = new Promise(then.bind(val));
            p.then(function (val) {
              res(i, val);
            }, reject);
            return;
          }
        }
      }
      args[i] = val;
      if (--remaining === 0) {
        resolve(args);
      }
    }
    for (var i = 0; i < args.length; i++) {
      res(i, args[i]);
    }
  });
};

Promise.reject = function (value) {
  return new Promise(function (resolve, reject) {
    reject(value);
  });
};

Promise.race = function (values) {
  return new Promise(function (resolve, reject) {
    values.forEach(function (value) {
      Promise.resolve(value).then(resolve, reject);
    });
  });
};

Promise.prototype['catch'] = function (onRejected) {
  return this.then(null, onRejected);
};
}, 61, null, "promise/setimmediate/es6-extensions.js");
__d(/* promise/setimmediate/core.js */function(global, require, module, exports) {'use strict';

function noop() {}

var LAST_ERROR = null;
var IS_ERROR = {};
function getThen(obj) {
  try {
    return obj.then;
  } catch (ex) {
    LAST_ERROR = ex;
    return IS_ERROR;
  }
}

function tryCallOne(fn, a) {
  try {
    return fn(a);
  } catch (ex) {
    LAST_ERROR = ex;
    return IS_ERROR;
  }
}
function tryCallTwo(fn, a, b) {
  try {
    fn(a, b);
  } catch (ex) {
    LAST_ERROR = ex;
    return IS_ERROR;
  }
}

module.exports = Promise;

function Promise(fn) {
  if (typeof this !== 'object') {
    throw new TypeError('Promises must be constructed via new');
  }
  if (typeof fn !== 'function') {
    throw new TypeError('Promise constructor\'s argument is not a function');
  }
  this._40 = 0;
  this._65 = 0;
  this._55 = null;
  this._72 = null;
  if (fn === noop) return;
  doResolve(fn, this);
}
Promise._37 = null;
Promise._87 = null;
Promise._61 = noop;

Promise.prototype.then = function (onFulfilled, onRejected) {
  if (this.constructor !== Promise) {
    return safeThen(this, onFulfilled, onRejected);
  }
  var res = new Promise(noop);
  handle(this, new Handler(onFulfilled, onRejected, res));
  return res;
};

function safeThen(self, onFulfilled, onRejected) {
  return new self.constructor(function (resolve, reject) {
    var res = new Promise(noop);
    res.then(resolve, reject);
    handle(self, new Handler(onFulfilled, onRejected, res));
  });
}
function handle(self, deferred) {
  while (self._65 === 3) {
    self = self._55;
  }
  if (Promise._37) {
    Promise._37(self);
  }
  if (self._65 === 0) {
    if (self._40 === 0) {
      self._40 = 1;
      self._72 = deferred;
      return;
    }
    if (self._40 === 1) {
      self._40 = 2;
      self._72 = [self._72, deferred];
      return;
    }
    self._72.push(deferred);
    return;
  }
  handleResolved(self, deferred);
}

function handleResolved(self, deferred) {
  setImmediate(function () {
    var cb = self._65 === 1 ? deferred.onFulfilled : deferred.onRejected;
    if (cb === null) {
      if (self._65 === 1) {
        resolve(deferred.promise, self._55);
      } else {
        reject(deferred.promise, self._55);
      }
      return;
    }
    var ret = tryCallOne(cb, self._55);
    if (ret === IS_ERROR) {
      reject(deferred.promise, LAST_ERROR);
    } else {
      resolve(deferred.promise, ret);
    }
  });
}
function resolve(self, newValue) {
  if (newValue === self) {
    return reject(self, new TypeError('A promise cannot be resolved with itself.'));
  }
  if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {
    var then = getThen(newValue);
    if (then === IS_ERROR) {
      return reject(self, LAST_ERROR);
    }
    if (then === self.then && newValue instanceof Promise) {
      self._65 = 3;
      self._55 = newValue;
      finale(self);
      return;
    } else if (typeof then === 'function') {
      doResolve(then.bind(newValue), self);
      return;
    }
  }
  self._65 = 1;
  self._55 = newValue;
  finale(self);
}

function reject(self, newValue) {
  self._65 = 2;
  self._55 = newValue;
  if (Promise._87) {
    Promise._87(self, newValue);
  }
  finale(self);
}
function finale(self) {
  if (self._40 === 1) {
    handle(self, self._72);
    self._72 = null;
  }
  if (self._40 === 2) {
    for (var i = 0; i < self._72.length; i++) {
      handle(self, self._72[i]);
    }
    self._72 = null;
  }
}

function Handler(onFulfilled, onRejected, promise) {
  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
  this.onRejected = typeof onRejected === 'function' ? onRejected : null;
  this.promise = promise;
}

function doResolve(fn, promise) {
  var done = false;
  var res = tryCallTwo(fn, function (value) {
    if (done) return;
    done = true;
    resolve(promise, value);
  }, function (reason) {
    if (done) return;
    done = true;
    reject(promise, reason);
  });
  if (!done && res === IS_ERROR) {
    done = true;
    reject(promise, LAST_ERROR);
  }
}
}, 62, null, "promise/setimmediate/core.js");
__d(/* promise/setimmediate/done.js */function(global, require, module, exports) {'use strict';

var Promise = require(62         ); // 62 = ./core.js

module.exports = Promise;
Promise.prototype.done = function (onFulfilled, onRejected) {
  var self = arguments.length ? this.then.apply(this, arguments) : this;
  self.then(null, function (err) {
    setTimeout(function () {
      throw err;
    }, 0);
  });
};
}, 63, null, "promise/setimmediate/done.js");
__d(/* promise/setimmediate/rejection-tracking.js */function(global, require, module, exports) {'use strict';

var Promise = require(62      ); // 62 = ./core

var DEFAULT_WHITELIST = [ReferenceError, TypeError, RangeError];

var enabled = false;
exports.disable = disable;
function disable() {
  enabled = false;
  Promise._37 = null;
  Promise._87 = null;
}

exports.enable = enable;
function enable(options) {
  options = options || {};
  if (enabled) disable();
  enabled = true;
  var id = 0;
  var displayId = 0;
  var rejections = {};
  Promise._37 = function (promise) {
    if (promise._65 === 2 && rejections[promise._51]) {
      if (rejections[promise._51].logged) {
        onHandled(promise._51);
      } else {
        clearTimeout(rejections[promise._51].timeout);
      }
      delete rejections[promise._51];
    }
  };
  Promise._87 = function (promise, err) {
    if (promise._40 === 0) {
      promise._51 = id++;
      rejections[promise._51] = {
        displayId: null,
        error: err,
        timeout: setTimeout(onUnhandled.bind(null, promise._51), matchWhitelist(err, DEFAULT_WHITELIST) ? 100 : 2000),
        logged: false
      };
    }
  };
  function onUnhandled(id) {
    if (options.allRejections || matchWhitelist(rejections[id].error, options.whitelist || DEFAULT_WHITELIST)) {
      rejections[id].displayId = displayId++;
      if (options.onUnhandled) {
        rejections[id].logged = true;
        options.onUnhandled(rejections[id].displayId, rejections[id].error);
      } else {
        rejections[id].logged = true;
        logError(rejections[id].displayId, rejections[id].error);
      }
    }
  }
  function onHandled(id) {
    if (rejections[id].logged) {
      if (options.onHandled) {
        options.onHandled(rejections[id].displayId, rejections[id].error);
      } else if (!rejections[id].onUnhandled) {
        console.warn('Promise Rejection Handled (id: ' + rejections[id].displayId + '):');
        console.warn('  This means you can ignore any previous messages of the form "Possible Unhandled Promise Rejection" with id ' + rejections[id].displayId + '.');
      }
    }
  }
}

function logError(id, error) {
  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');
  var errStr = (error && (error.stack || error)) + '';
  errStr.split('\n').forEach(function (line) {
    console.warn('  ' + line);
  });
}

function matchWhitelist(error, list) {
  return list.some(function (cls) {
    return error instanceof cls;
  });
}
}, 64, null, "promise/setimmediate/rejection-tracking.js");
__d(/* pretty-format/index.js */function(global, require, module, exports) {'use strict';

var printString = require(66             ); // 66 = ./printString

var toString = Object.prototype.toString;
var toISOString = Date.prototype.toISOString;
var errorToString = Error.prototype.toString;
var regExpToString = RegExp.prototype.toString;
var symbolToString = (typeof Symbol === 'function' ? Symbol.prototype : '@@prototype').toString;

var SYMBOL_REGEXP = /^Symbol\((.*)\)(.*)$/;
var NEWLINE_REGEXP = /\n/ig;

var getSymbols = Object.getOwnPropertySymbols || function (obj) {
  return [];
};

function isToStringedArrayType(toStringed) {
  return toStringed === '[object Array]' || toStringed === '[object ArrayBuffer]' || toStringed === '[object DataView]' || toStringed === '[object Float32Array]' || toStringed === '[object Float64Array]' || toStringed === '[object Int8Array]' || toStringed === '[object Int16Array]' || toStringed === '[object Int32Array]' || toStringed === '[object Uint8Array]' || toStringed === '[object Uint8ClampedArray]' || toStringed === '[object Uint16Array]' || toStringed === '[object Uint32Array]';
}

function printNumber(val) {
  if (val != +val) return 'NaN';
  var isNegativeZero = val === 0 && 1 / val < 0;
  return isNegativeZero ? '-0' : '' + val;
}

function printFunction(val, printFunctionName) {
  if (!printFunctionName) {
    return '[Function]';
  } else if (val.name === '') {
    return '[Function anonymous]';
  } else {
    return '[Function ' + val.name + ']';
  }
}

function printSymbol(val) {
  return symbolToString.call(val).replace(SYMBOL_REGEXP, 'Symbol($1)');
}

function printError(val) {
  return '[' + errorToString.call(val) + ']';
}

function printBasicValue(val, printFunctionName, escapeRegex) {
  if (val === true || val === false) return '' + val;
  if (val === undefined) return 'undefined';
  if (val === null) return 'null';

  var typeOf = typeof val;

  if (typeOf === 'number') return printNumber(val);
  if (typeOf === 'string') return '"' + printString(val) + '"';
  if (typeOf === 'function') return printFunction(val, printFunctionName);
  if (typeOf === 'symbol') return printSymbol(val);

  var toStringed = toString.call(val);

  if (toStringed === '[object WeakMap]') return 'WeakMap {}';
  if (toStringed === '[object WeakSet]') return 'WeakSet {}';
  if (toStringed === '[object Function]' || toStringed === '[object GeneratorFunction]') return printFunction(val, printFunctionName);
  if (toStringed === '[object Symbol]') return printSymbol(val);
  if (toStringed === '[object Date]') return toISOString.call(val);
  if (toStringed === '[object Error]') return printError(val);
  if (toStringed === '[object RegExp]') {
    if (escapeRegex) {
      return printString(regExpToString.call(val));
    }
    return regExpToString.call(val);
  };
  if (toStringed === '[object Arguments]' && val.length === 0) return 'Arguments []';
  if (isToStringedArrayType(toStringed) && val.length === 0) return val.constructor.name + ' []';

  if (val instanceof Error) return printError(val);

  return false;
}

function printList(list, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  var body = '';

  if (list.length) {
    body += edgeSpacing;

    var innerIndent = prevIndent + indent;

    for (var i = 0; i < list.length; i++) {
      body += innerIndent + print(list[i], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);

      if (i < list.length - 1) {
        body += ',' + spacing;
      }
    }

    body += (min ? '' : ',') + edgeSpacing + prevIndent;
  }

  return '[' + body + ']';
}

function printArguments(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  return (min ? '' : 'Arguments ') + printList(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
}

function printArray(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  return (min ? '' : val.constructor.name + ' ') + printList(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
}

function printMap(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  var result = 'Map {';
  var iterator = val.entries();
  var current = iterator.next();

  if (!current.done) {
    result += edgeSpacing;

    var innerIndent = prevIndent + indent;

    while (!current.done) {
      var key = print(current.value[0], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
      var value = print(current.value[1], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);

      result += innerIndent + key + ' => ' + value;

      current = iterator.next();

      if (!current.done) {
        result += ',' + spacing;
      }
    }

    result += (min ? '' : ',') + edgeSpacing + prevIndent;
  }

  return result + '}';
}

function printObject(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  var constructor = min ? '' : val.constructor ? val.constructor.name + ' ' : 'Object ';
  var result = constructor + '{';
  var keys = Object.keys(val).sort();
  var symbols = getSymbols(val);

  if (symbols.length) {
    keys = keys.filter(function (key) {
      return !(typeof key === 'symbol' || toString.call(key) === '[object Symbol]');
    }).concat(symbols);
  }

  if (keys.length) {
    result += edgeSpacing;

    var innerIndent = prevIndent + indent;

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var name = print(key, indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
      var value = print(val[key], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);

      result += innerIndent + name + ': ' + value;

      if (i < keys.length - 1) {
        result += ',' + spacing;
      }
    }

    result += (min ? '' : ',') + edgeSpacing + prevIndent;
  }

  return result + '}';
}

function printSet(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  var result = 'Set {';
  var iterator = val.entries();
  var current = iterator.next();

  if (!current.done) {
    result += edgeSpacing;

    var innerIndent = prevIndent + indent;

    while (!current.done) {
      result += innerIndent + print(current.value[1], indent, innerIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);

      current = iterator.next();

      if (!current.done) {
        result += ',' + spacing;
      }
    }

    result += (min ? '' : ',') + edgeSpacing + prevIndent;
  }

  return result + '}';
}

function printComplexValue(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  refs = refs.slice();
  if (refs.indexOf(val) > -1) {
    return '[Circular]';
  } else {
    refs.push(val);
  }

  currentDepth++;

  var hitMaxDepth = currentDepth > maxDepth;

  if (callToJSON && !hitMaxDepth && val.toJSON && typeof val.toJSON === 'function') {
    return print(val.toJSON(), indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  }

  var toStringed = toString.call(val);
  if (toStringed === '[object Arguments]') {
    return hitMaxDepth ? '[Arguments]' : printArguments(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  } else if (isToStringedArrayType(toStringed)) {
    return hitMaxDepth ? '[Array]' : printArray(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  } else if (toStringed === '[object Map]') {
    return hitMaxDepth ? '[Map]' : printMap(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  } else if (toStringed === '[object Set]') {
    return hitMaxDepth ? '[Set]' : printSet(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  } else if (typeof val === 'object') {
    return hitMaxDepth ? '[Object]' : printObject(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  }
}

function printPlugin(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  var match = false;
  var plugin = void 0;

  for (var p = 0; p < plugins.length; p++) {
    plugin = plugins[p];

    if (plugin.test(val)) {
      match = true;
      break;
    }
  }

  if (!match) {
    return false;
  }

  function boundPrint(val) {
    return print(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  }

  function boundIndent(str) {
    var indentation = prevIndent + indent;
    return indentation + str.replace(NEWLINE_REGEXP, '\n' + indentation);
  }

  return plugin.print(val, boundPrint, boundIndent, {
    edgeSpacing: edgeSpacing,
    spacing: spacing
  });
}

function print(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex) {
  var basic = printBasicValue(val, printFunctionName, escapeRegex);
  if (basic) return basic;

  var plugin = printPlugin(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
  if (plugin) return plugin;

  return printComplexValue(val, indent, prevIndent, spacing, edgeSpacing, refs, maxDepth, currentDepth, plugins, min, callToJSON, printFunctionName, escapeRegex);
}

var DEFAULTS = {
  callToJSON: true,
  indent: 2,
  maxDepth: Infinity,
  min: false,
  plugins: [],
  printFunctionName: true,
  escapeRegex: false
};

function validateOptions(opts) {
  Object.keys(opts).forEach(function (key) {
    if (!DEFAULTS.hasOwnProperty(key)) {
      throw new Error('prettyFormat: Invalid option: ' + key);
    }
  });

  if (opts.min && opts.indent !== undefined && opts.indent !== 0) {
    throw new Error('prettyFormat: Cannot run with min option and indent');
  }
}

function normalizeOptions(opts) {
  var result = {};

  Object.keys(DEFAULTS).forEach(function (key) {
    return result[key] = opts.hasOwnProperty(key) ? opts[key] : DEFAULTS[key];
  });

  if (result.min) {
    result.indent = 0;
  }

  return result;
}

function createIndent(indent) {
  return new Array(indent + 1).join(' ');
}

function prettyFormat(val, opts) {
  if (!opts) {
    opts = DEFAULTS;
  } else {
    validateOptions(opts);
    opts = normalizeOptions(opts);
  }

  var indent = void 0;
  var refs = void 0;
  var prevIndent = '';
  var currentDepth = 0;
  var spacing = opts.min ? ' ' : '\n';
  var edgeSpacing = opts.min ? '' : '\n';

  if (opts && opts.plugins.length) {
    indent = createIndent(opts.indent);
    refs = [];
    var pluginsResult = printPlugin(val, indent, prevIndent, spacing, edgeSpacing, refs, opts.maxDepth, currentDepth, opts.plugins, opts.min, opts.callToJSON, opts.printFunctionName, opts.escapeRegex);
    if (pluginsResult) return pluginsResult;
  }

  var basicResult = printBasicValue(val, opts.printFunctionName, opts.escapeRegex);
  if (basicResult) return basicResult;

  if (!indent) indent = createIndent(opts.indent);
  if (!refs) refs = [];
  return printComplexValue(val, indent, prevIndent, spacing, edgeSpacing, refs, opts.maxDepth, currentDepth, opts.plugins, opts.min, opts.callToJSON, opts.printFunctionName, opts.escapeRegex);
}

module.exports = prettyFormat;
}, 65, null, "pretty-format/index.js");
__d(/* pretty-format/printString.js */function(global, require, module, exports) {'use strict';

var ESCAPED_CHARACTERS = /(\\|\"|\')/g;

module.exports = function printString(val) {
  return val.replace(ESCAPED_CHARACTERS, '\\$1');
};
}, 66, null, "pretty-format/printString.js");
__d(/* regenerator-runtime/runtime.js */function(global, require, module, exports) {

!function (global) {
  "use strict";

  var hasOwn = Object.prototype.hasOwnProperty;
  var undefined;
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      module.exports = runtime;
    }

    return;
  }

  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  var ContinueSentinel = {};

  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      prototype[method] = function (arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function (genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
  };

  runtime.mark = function (genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  runtime.awrap = function (arg) {
    return new AwaitArgument(arg);
  };

  function AwaitArgument(arg) {
    this.arg = arg;
  }

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value instanceof AwaitArgument) {
          return Promise.resolve(value.arg).then(function (value) {
            invoke("next", value, resolve, reject);
          }, function (err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function (unwrapped) {
          result.value = unwrapped;
          resolve(result);
        }, reject);
      }
    }

    if (typeof process === "object" && process.domain) {
      invoke = process.domain.bind(invoke);
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function (resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
    }

    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);

  runtime.async = function (innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));

    return runtime.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        return doneResult();
      }

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          if (method === "return" || method === "throw" && delegate.iterator[method] === undefined) {
            context.delegate = null;

            var returnMethod = delegate.iterator["return"];
            if (returnMethod) {
              var record = tryCatch(returnMethod, delegate.iterator, arg);
              if (record.type === "throw") {
                method = "throw";
                arg = record.arg;
                continue;
              }
            }

            if (method === "return") {
              continue;
            }
          }

          var record = tryCatch(delegate.iterator[method], delegate.iterator, arg);

          if (record.type === "throw") {
            context.delegate = null;

            method = "throw";
            arg = record.arg;
            continue;
          }

          method = "next";
          arg = undefined;

          var info = record.arg;
          if (info.done) {
            context[delegate.resultName] = info.value;
            context.next = delegate.nextLoc;
          } else {
            state = GenStateSuspendedYield;
            return info;
          }

          context.delegate = null;
        }

        if (method === "next") {
          context.sent = context._sent = arg;
        } else if (method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw arg;
          }

          if (context.dispatchException(arg)) {
            method = "next";
            arg = undefined;
          }
        } else if (method === "return") {
          context.abrupt("return", arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          state = context.done ? GenStateCompleted : GenStateSuspendedYield;

          var info = {
            value: record.arg,
            done: context.done
          };

          if (record.arg === ContinueSentinel) {
            if (context.delegate && method === "next") {
              arg = undefined;
            }
          } else {
            return info;
          }
        } else if (record.type === "throw") {
          state = GenStateCompleted;

          method = "throw";
          arg = record.arg;
        }
      }
    };
  }

  defineIteratorMethods(Gp);

  Gp[iteratorSymbol] = function () {
    return this;
  };

  Gp[toStringTagSymbol] = "Generator";

  Gp.toString = function () {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function (object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1,
            next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function reset(skipTempReset) {
      this.prev = 0;
      this.next = 0;

      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function stop() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function dispatchException(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;
        return !!caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }
          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function abrupt(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.next = finallyEntry.finallyLoc;
      } else {
        this.complete(record);
      }

      return ContinueSentinel;
    },

    complete: function complete(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" || record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = record.arg;
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }
    },

    finish: function finish(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function _catch(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      throw new Error("illegal catch attempt");
    },

    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      return ContinueSentinel;
    }
  };
}(typeof global === "object" ? global : typeof window === "object" ? window : typeof self === "object" ? self : this);
}, 67, null, "regenerator-runtime/runtime.js");
__d(/* JSTimers */function(global, require, module, exports) {
'use strict';

var Platform = require(46        ); // 46 = Platform
var Systrace = require(19        ); // 19 = Systrace

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var _require = require(15             ), // 15 = NativeModules
    Timing = _require.Timing;

var _performanceNow = null;
function performanceNow() {
  if (!_performanceNow) {
    _performanceNow = require(69                       ); // 69 = fbjs/lib/performanceNow
  }
  return _performanceNow();
}

var FRAME_DURATION = 1000 / 60;
var IDLE_CALLBACK_FRAME_DEADLINE = 1;

var MAX_TIMER_DURATION_MS = 60 * 1000;
var IS_ANDROID = Platform.OS === 'android';
var ANDROID_LONG_TIMER_MESSAGE = 'Setting a timer for a long period of time, i.e. multiple minutes, is a ' + 'performance and correctness issue on Android as it keeps the timer ' + 'module awake, and timers can only be called when the app is in the foreground. ' + 'See https://github.com/facebook/react-native/issues/12981 for more info.';

var callbacks = [];
var types = [];
var timerIDs = [];
var immediates = [];
var requestIdleCallbacks = [];
var requestIdleCallbackTimeouts = {};
var identifiers = [];

var GUID = 1;
var errors = null;

var hasEmittedTimeDriftWarning = false;

function _getFreeIndex() {
  var freeIndex = timerIDs.indexOf(null);
  if (freeIndex === -1) {
    freeIndex = timerIDs.length;
  }
  return freeIndex;
}

function _allocateCallback(func, type) {
  var id = GUID++;
  var freeIndex = _getFreeIndex();
  timerIDs[freeIndex] = id;
  callbacks[freeIndex] = func;
  types[freeIndex] = type;
  if (__DEV__) {
    var parseErrorStack = require(26               ); // 26 = parseErrorStack
    var error = new Error();
    error.framesToPop = 1;
    var stack = parseErrorStack(error);
    if (stack) {
      identifiers[freeIndex] = stack.shift();
    }
  }
  return id;
}

function _callTimer(timerID, frameTime, didTimeout) {
  require(23                )(timerID <= GUID, 'Tried to call timer with ID %s but no such timer exists.', timerID); // 23 = fbjs/lib/warning

  var timerIndex = timerIDs.indexOf(timerID);
  if (timerIndex === -1) {
    return;
  }

  var type = types[timerIndex];
  var callback = callbacks[timerIndex];
  if (!callback || !type) {
    console.error('No callback found for timerID ' + timerID);
    return;
  }

  if (__DEV__) {
    var identifier = identifiers[timerIndex] || {};
    Systrace.beginEvent('Systrace.callTimer: ' + identifier.methodName);
  }

  if (type === 'setTimeout' || type === 'setImmediate' || type === 'requestAnimationFrame' || type === 'requestIdleCallback') {
    _clearIndex(timerIndex);
  }

  try {
    if (type === 'setTimeout' || type === 'setInterval' || type === 'setImmediate') {
      callback();
    } else if (type === 'requestAnimationFrame') {
      callback(performanceNow());
    } else if (type === 'requestIdleCallback') {
      callback({
        timeRemaining: function timeRemaining() {
          return Math.max(0, FRAME_DURATION - (performanceNow() - frameTime));
        },
        didTimeout: !!didTimeout
      });
    } else {
      console.error('Tried to call a callback with invalid type: ' + type);
    }
  } catch (e) {
    if (!errors) {
      errors = [e];
    } else {
      errors.push(e);
    }
  }

  if (__DEV__) {
    Systrace.endEvent();
  }
}

function _callImmediatesPass() {
  if (__DEV__) {
    Systrace.beginEvent('callImmediatesPass()');
  }

  if (immediates.length > 0) {
    var passImmediates = immediates.slice();
    immediates = [];

    for (var i = 0; i < passImmediates.length; ++i) {
      _callTimer(passImmediates[i], 0);
    }
  }

  if (__DEV__) {
    Systrace.endEvent();
  }
  return immediates.length > 0;
}

function _clearIndex(i) {
  timerIDs[i] = null;
  callbacks[i] = null;
  types[i] = null;
  identifiers[i] = null;
}

function _freeCallback(timerID) {
  if (timerID == null) {
    return;
  }

  var index = timerIDs.indexOf(timerID);

  if (index !== -1) {
    _clearIndex(index);
    var type = types[index];
    if (type !== 'setImmediate' && type !== 'requestIdleCallback') {
      Timing.deleteTimer(timerID);
    }
  }
}

var JSTimers = {
  setTimeout: function setTimeout(func, duration) {
    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    if (__DEV__ && IS_ANDROID && duration > MAX_TIMER_DURATION_MS) {
      console.warn(ANDROID_LONG_TIMER_MESSAGE + '\n' + '(Saw setTimeout with duration ' + duration + 'ms)');
    }
    var id = _allocateCallback(function () {
      return func.apply(undefined, args);
    }, 'setTimeout');
    Timing.createTimer(id, duration || 0, Date.now(), false);
    return id;
  },

  setInterval: function setInterval(func, duration) {
    for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
      args[_key2 - 2] = arguments[_key2];
    }

    if (__DEV__ && IS_ANDROID && duration > MAX_TIMER_DURATION_MS) {
      console.warn(ANDROID_LONG_TIMER_MESSAGE + '\n' + '(Saw setInterval with duration ' + duration + 'ms)');
    }
    var id = _allocateCallback(function () {
      return func.apply(undefined, args);
    }, 'setInterval');
    Timing.createTimer(id, duration || 0, Date.now(), true);
    return id;
  },

  setImmediate: function setImmediate(func) {
    for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
      args[_key3 - 1] = arguments[_key3];
    }

    var id = _allocateCallback(function () {
      return func.apply(undefined, args);
    }, 'setImmediate');
    immediates.push(id);
    return id;
  },

  requestAnimationFrame: function requestAnimationFrame(func) {
    var id = _allocateCallback(func, 'requestAnimationFrame');
    Timing.createTimer(id, 1, Date.now(), false);
    return id;
  },

  requestIdleCallback: function requestIdleCallback(func, options) {
    if (requestIdleCallbacks.length === 0) {
      Timing.setSendIdleEvents(true);
    }

    var timeout = options && options.timeout;
    var id = _allocateCallback(timeout != null ? function (deadline) {
      var timeoutId = requestIdleCallbackTimeouts[id];
      if (timeoutId) {
        JSTimers.clearTimeout(timeoutId);
        delete requestIdleCallbackTimeouts[id];
      }
      return func(deadline);
    } : func, 'requestIdleCallback');
    requestIdleCallbacks.push(id);

    if (timeout != null) {
      var timeoutId = JSTimers.setTimeout(function () {
        var index = requestIdleCallbacks.indexOf(id);
        if (index > -1) {
          requestIdleCallbacks.splice(index, 1);
          _callTimer(id, performanceNow(), true);
        }
        delete requestIdleCallbackTimeouts[id];
        if (requestIdleCallbacks.length === 0) {
          Timing.setSendIdleEvents(false);
        }
      }, timeout);
      requestIdleCallbackTimeouts[id] = timeoutId;
    }
    return id;
  },

  cancelIdleCallback: function cancelIdleCallback(timerID) {
    _freeCallback(timerID);
    var index = requestIdleCallbacks.indexOf(timerID);
    if (index !== -1) {
      requestIdleCallbacks.splice(index, 1);
    }

    var timeoutId = requestIdleCallbackTimeouts[timerID];
    if (timeoutId) {
      JSTimers.clearTimeout(timeoutId);
      delete requestIdleCallbackTimeouts[timerID];
    }

    if (requestIdleCallbacks.length === 0) {
      Timing.setSendIdleEvents(false);
    }
  },

  clearTimeout: function clearTimeout(timerID) {
    _freeCallback(timerID);
  },

  clearInterval: function clearInterval(timerID) {
    _freeCallback(timerID);
  },

  clearImmediate: function clearImmediate(timerID) {
    _freeCallback(timerID);
    var index = immediates.indexOf(timerID);
    if (index !== -1) {
      immediates.splice(index, 1);
    }
  },

  cancelAnimationFrame: function cancelAnimationFrame(timerID) {
    _freeCallback(timerID);
  },

  callTimers: function callTimers(timersToCall) {
    invariant(timersToCall.length !== 0, 'Cannot call `callTimers` with an empty list of IDs.');

    errors = null;
    for (var i = 0; i < timersToCall.length; i++) {
      _callTimer(timersToCall[i], 0);
    }

    if (errors) {
      var errorCount = errors.length;
      if (errorCount > 1) {
        for (var ii = 1; ii < errorCount; ii++) {
          JSTimers.setTimeout(function (error) {
            throw error;
          }.bind(null, errors[ii]), 0);
        }
      }
      throw errors[0];
    }
  },

  callIdleCallbacks: function callIdleCallbacks(frameTime) {
    if (FRAME_DURATION - (performanceNow() - frameTime) < IDLE_CALLBACK_FRAME_DEADLINE) {
      return;
    }

    errors = null;
    if (requestIdleCallbacks.length > 0) {
      var passIdleCallbacks = requestIdleCallbacks.slice();
      requestIdleCallbacks = [];

      for (var i = 0; i < passIdleCallbacks.length; ++i) {
        _callTimer(passIdleCallbacks[i], frameTime);
      }
    }

    if (requestIdleCallbacks.length === 0) {
      Timing.setSendIdleEvents(false);
    }

    if (errors) {
      errors.forEach(function (error) {
        return JSTimers.setTimeout(function () {
          throw error;
        }, 0);
      });
    }
  },

  callImmediates: function callImmediates() {
    errors = null;
    while (_callImmediatesPass()) {}
    if (errors) {
      errors.forEach(function (error) {
        return JSTimers.setTimeout(function () {
          throw error;
        }, 0);
      });
    }
  },
  emitTimeDriftWarning: function emitTimeDriftWarning(warningMessage) {
    if (hasEmittedTimeDriftWarning) {
      return;
    }
    hasEmittedTimeDriftWarning = true;
    console.warn(warningMessage);
  }
};

if (!Timing) {
  console.warn("Timing native module is not available, can't set timers.");

  module.exports = {
    callImmediates: JSTimers.callImmediates,
    setImmediate: JSTimers.setImmediate
  };
} else {
  module.exports = JSTimers;
}
}, 68, null, "JSTimers");
__d(/* fbjs/lib/performanceNow.js */function(global, require, module, exports) {'use strict';

var performance = require(70             ); // 70 = ./performance

var performanceNow;

if (performance.now) {
  performanceNow = function performanceNow() {
    return performance.now();
  };
} else {
  performanceNow = function performanceNow() {
    return Date.now();
  };
}

module.exports = performanceNow;
}, 69, null, "fbjs/lib/performanceNow.js");
__d(/* fbjs/lib/performance.js */function(global, require, module, exports) {

'use strict';

var ExecutionEnvironment = require(71                      ); // 71 = ./ExecutionEnvironment

var performance;

if (ExecutionEnvironment.canUseDOM) {
  performance = window.performance || window.msPerformance || window.webkitPerformance;
}

module.exports = performance || {};
}, 70, null, "fbjs/lib/performance.js");
__d(/* fbjs/lib/ExecutionEnvironment.js */function(global, require, module, exports) {

'use strict';

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM };

module.exports = ExecutionEnvironment;
}, 71, null, "fbjs/lib/ExecutionEnvironment.js");
__d(/* XMLHttpRequest */function(global, require, module, exports) {
'use strict';

var EventTarget = require(73                 ); // 73 = event-target-shim
var RCTNetworking = require(77             ); // 77 = RCTNetworking

var base64 = require(87         ); // 87 = base64-js
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var warning = require(23                ); // 23 = fbjs/lib/warning

var UNSENT = 0;
var OPENED = 1;
var HEADERS_RECEIVED = 2;
var LOADING = 3;
var DONE = 4;

var SUPPORTED_RESPONSE_TYPES = {
  arraybuffer: typeof global.ArrayBuffer === 'function',
  blob: typeof global.Blob === 'function',
  document: false,
  json: true,
  text: true,
  '': true
};

var REQUEST_EVENTS = ['abort', 'error', 'load', 'loadstart', 'progress', 'timeout', 'loadend'];

var XHR_EVENTS = REQUEST_EVENTS.concat('readystatechange');

var XMLHttpRequestEventTarget = function (_EventTarget) {
  babelHelpers.inherits(XMLHttpRequestEventTarget, _EventTarget);

  function XMLHttpRequestEventTarget() {
    babelHelpers.classCallCheck(this, XMLHttpRequestEventTarget);
    return babelHelpers.possibleConstructorReturn(this, (XMLHttpRequestEventTarget.__proto__ || Object.getPrototypeOf(XMLHttpRequestEventTarget)).apply(this, arguments));
  }

  return XMLHttpRequestEventTarget;
}(EventTarget.apply(undefined, REQUEST_EVENTS));

var XMLHttpRequest = function (_EventTarget2) {
  babelHelpers.inherits(XMLHttpRequest, _EventTarget2);
  babelHelpers.createClass(XMLHttpRequest, null, [{
    key: 'setInterceptor',
    value: function setInterceptor(interceptor) {
      XMLHttpRequest._interceptor = interceptor;
    }
  }]);

  function XMLHttpRequest() {
    babelHelpers.classCallCheck(this, XMLHttpRequest);

    var _this2 = babelHelpers.possibleConstructorReturn(this, (XMLHttpRequest.__proto__ || Object.getPrototypeOf(XMLHttpRequest)).call(this));

    _this2.UNSENT = UNSENT;
    _this2.OPENED = OPENED;
    _this2.HEADERS_RECEIVED = HEADERS_RECEIVED;
    _this2.LOADING = LOADING;
    _this2.DONE = DONE;
    _this2.readyState = UNSENT;
    _this2.status = 0;
    _this2.timeout = 0;
    _this2.withCredentials = true;
    _this2.upload = new XMLHttpRequestEventTarget();
    _this2._aborted = false;
    _this2._hasError = false;
    _this2._method = null;
    _this2._response = '';
    _this2._url = null;
    _this2._timedOut = false;
    _this2._trackingName = 'unknown';
    _this2._incrementalEvents = false;

    _this2._reset();
    return _this2;
  }

  babelHelpers.createClass(XMLHttpRequest, [{
    key: '_reset',
    value: function _reset() {
      this.readyState = this.UNSENT;
      this.responseHeaders = undefined;
      this.status = 0;
      delete this.responseURL;

      this._requestId = null;

      this._cachedResponse = undefined;
      this._hasError = false;
      this._headers = {};
      this._response = '';
      this._responseType = '';
      this._sent = false;
      this._lowerCaseResponseHeaders = {};

      this._clearSubscriptions();
      this._timedOut = false;
    }
  }, {
    key: '__didCreateRequest',
    value: function __didCreateRequest(requestId) {
      this._requestId = requestId;

      XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.requestSent(requestId, this._url || '', this._method || 'GET', this._headers);
    }
  }, {
    key: '__didUploadProgress',
    value: function __didUploadProgress(requestId, progress, total) {
      if (requestId === this._requestId) {
        this.upload.dispatchEvent({
          type: 'progress',
          lengthComputable: true,
          loaded: progress,
          total: total
        });
      }
    }
  }, {
    key: '__didReceiveResponse',
    value: function __didReceiveResponse(requestId, status, responseHeaders, responseURL) {
      if (requestId === this._requestId) {
        this.status = status;
        this.setResponseHeaders(responseHeaders);
        this.setReadyState(this.HEADERS_RECEIVED);
        if (responseURL || responseURL === '') {
          this.responseURL = responseURL;
        } else {
          delete this.responseURL;
        }

        XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.responseReceived(requestId, responseURL || this._url || '', status, responseHeaders || {});
      }
    }
  }, {
    key: '__didReceiveData',
    value: function __didReceiveData(requestId, response) {
      if (requestId !== this._requestId) {
        return;
      }
      this._response = response;
      this._cachedResponse = undefined;
      this.setReadyState(this.LOADING);

      XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.dataReceived(requestId, response);
    }
  }, {
    key: '__didReceiveIncrementalData',
    value: function __didReceiveIncrementalData(requestId, responseText, progress, total) {
      if (requestId !== this._requestId) {
        return;
      }
      if (!this._response) {
        this._response = responseText;
      } else {
        this._response += responseText;
      }

      XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.dataReceived(requestId, responseText);

      this.setReadyState(this.LOADING);
      this.__didReceiveDataProgress(requestId, progress, total);
    }
  }, {
    key: '__didReceiveDataProgress',
    value: function __didReceiveDataProgress(requestId, loaded, total) {
      if (requestId !== this._requestId) {
        return;
      }
      this.dispatchEvent({
        type: 'progress',
        lengthComputable: total >= 0,
        loaded: loaded,
        total: total
      });
    }
  }, {
    key: '__didCompleteResponse',
    value: function __didCompleteResponse(requestId, error, timeOutError) {
      if (requestId === this._requestId) {
        if (error) {
          if (this._responseType === '' || this._responseType === 'text') {
            this._response = error;
          }
          this._hasError = true;
          if (timeOutError) {
            this._timedOut = true;
          }
        }
        this._clearSubscriptions();
        this._requestId = null;
        this.setReadyState(this.DONE);

        if (error) {
          XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.loadingFailed(requestId, error);
        } else {
          XMLHttpRequest._interceptor && XMLHttpRequest._interceptor.loadingFinished(requestId, this._response.length);
        }
      }
    }
  }, {
    key: '_clearSubscriptions',
    value: function _clearSubscriptions() {
      (this._subscriptions || []).forEach(function (sub) {
        if (sub) {
          sub.remove();
        }
      });
      this._subscriptions = [];
    }
  }, {
    key: 'getAllResponseHeaders',
    value: function getAllResponseHeaders() {
      if (!this.responseHeaders) {
        return null;
      }
      var headers = this.responseHeaders || {};
      return Object.keys(headers).map(function (headerName) {
        return headerName + ': ' + headers[headerName];
      }).join('\r\n');
    }
  }, {
    key: 'getResponseHeader',
    value: function getResponseHeader(header) {
      var value = this._lowerCaseResponseHeaders[header.toLowerCase()];
      return value !== undefined ? value : null;
    }
  }, {
    key: 'setRequestHeader',
    value: function setRequestHeader(header, value) {
      if (this.readyState !== this.OPENED) {
        throw new Error('Request has not been opened');
      }
      this._headers[header.toLowerCase()] = String(value);
    }
  }, {
    key: 'setTrackingName',
    value: function setTrackingName(trackingName) {
      this._trackingName = trackingName;
      return this;
    }
  }, {
    key: 'open',
    value: function open(method, url, async) {
      if (this.readyState !== this.UNSENT) {
        throw new Error('Cannot open, already sending');
      }
      if (async !== undefined && !async) {
        throw new Error('Synchronous http requests are not supported');
      }
      if (!url) {
        throw new Error('Cannot load an empty url');
      }
      this._method = method.toUpperCase();
      this._url = url;
      this._aborted = false;
      this.setReadyState(this.OPENED);
    }
  }, {
    key: 'send',
    value: function send(data) {
      var _this3 = this;

      if (this.readyState !== this.OPENED) {
        throw new Error('Request has not been opened');
      }
      if (this._sent) {
        throw new Error('Request has already been sent');
      }
      this._sent = true;
      var incrementalEvents = this._incrementalEvents || !!this.onreadystatechange || !!this.onprogress;

      this._subscriptions.push(RCTNetworking.addListener('didSendNetworkData', function (args) {
        return _this3.__didUploadProgress.apply(_this3, babelHelpers.toConsumableArray(args));
      }));
      this._subscriptions.push(RCTNetworking.addListener('didReceiveNetworkResponse', function (args) {
        return _this3.__didReceiveResponse.apply(_this3, babelHelpers.toConsumableArray(args));
      }));
      this._subscriptions.push(RCTNetworking.addListener('didReceiveNetworkData', function (args) {
        return _this3.__didReceiveData.apply(_this3, babelHelpers.toConsumableArray(args));
      }));
      this._subscriptions.push(RCTNetworking.addListener('didReceiveNetworkIncrementalData', function (args) {
        return _this3.__didReceiveIncrementalData.apply(_this3, babelHelpers.toConsumableArray(args));
      }));
      this._subscriptions.push(RCTNetworking.addListener('didReceiveNetworkDataProgress', function (args) {
        return _this3.__didReceiveDataProgress.apply(_this3, babelHelpers.toConsumableArray(args));
      }));
      this._subscriptions.push(RCTNetworking.addListener('didCompleteNetworkResponse', function (args) {
        return _this3.__didCompleteResponse.apply(_this3, babelHelpers.toConsumableArray(args));
      }));

      var nativeResponseType = 'text';
      if (this._responseType === 'arraybuffer' || this._responseType === 'blob') {
        nativeResponseType = 'base64';
      }

      invariant(this._method, 'Request method needs to be defined.');
      invariant(this._url, 'Request URL needs to be defined.');
      RCTNetworking.sendRequest(this._method, this._trackingName, this._url, this._headers, data, nativeResponseType, incrementalEvents, this.timeout, this.__didCreateRequest.bind(this), this.withCredentials);
    }
  }, {
    key: 'abort',
    value: function abort() {
      this._aborted = true;
      if (this._requestId) {
        RCTNetworking.abortRequest(this._requestId);
      }

      if (!(this.readyState === this.UNSENT || this.readyState === this.OPENED && !this._sent || this.readyState === this.DONE)) {
        this._reset();
        this.setReadyState(this.DONE);
      }

      this._reset();
    }
  }, {
    key: 'setResponseHeaders',
    value: function setResponseHeaders(responseHeaders) {
      this.responseHeaders = responseHeaders || null;
      var headers = responseHeaders || {};
      this._lowerCaseResponseHeaders = Object.keys(headers).reduce(function (lcaseHeaders, headerName) {
        lcaseHeaders[headerName.toLowerCase()] = headers[headerName];
        return lcaseHeaders;
      }, {});
    }
  }, {
    key: 'setReadyState',
    value: function setReadyState(newState) {
      this.readyState = newState;
      this.dispatchEvent({ type: 'readystatechange' });
      if (newState === this.DONE) {
        if (this._aborted) {
          this.dispatchEvent({ type: 'abort' });
        } else if (this._hasError) {
          if (this._timedOut) {
            this.dispatchEvent({ type: 'timeout' });
          } else {
            this.dispatchEvent({ type: 'error' });
          }
        } else {
          this.dispatchEvent({ type: 'load' });
        }
        this.dispatchEvent({ type: 'loadend' });
      }
    }
  }, {
    key: 'addEventListener',
    value: function addEventListener(type, listener) {
      if (type === 'readystatechange' || type === 'progress') {
        this._incrementalEvents = true;
      }
      babelHelpers.get(XMLHttpRequest.prototype.__proto__ || Object.getPrototypeOf(XMLHttpRequest.prototype), 'addEventListener', this).call(this, type, listener);
    }
  }, {
    key: 'responseType',
    get: function get() {
      return this._responseType;
    },
    set: function set(responseType) {
      if (this._sent) {
        throw new Error('Failed to set the \'responseType\' property on \'XMLHttpRequest\': The ' + 'response type cannot be set after the request has been sent.');
      }
      if (!SUPPORTED_RESPONSE_TYPES.hasOwnProperty(responseType)) {
        warning(false, 'The provided value \'' + responseType + '\' is not a valid \'responseType\'.');
        return;
      }

      invariant(SUPPORTED_RESPONSE_TYPES[responseType] || responseType === 'document', 'The provided value \'' + responseType + '\' is unsupported in this environment.');
      this._responseType = responseType;
    }
  }, {
    key: 'responseText',
    get: function get() {
      if (this._responseType !== '' && this._responseType !== 'text') {
        throw new Error("The 'responseText' property is only available if 'responseType' " + ('is set to \'\' or \'text\', but it is \'' + this._responseType + '\'.'));
      }
      if (this.readyState < LOADING) {
        return '';
      }
      return this._response;
    }
  }, {
    key: 'response',
    get: function get() {
      var responseType = this.responseType;

      if (responseType === '' || responseType === 'text') {
        return this.readyState < LOADING || this._hasError ? '' : this._response;
      }

      if (this.readyState !== DONE) {
        return null;
      }

      if (this._cachedResponse !== undefined) {
        return this._cachedResponse;
      }

      switch (responseType) {
        case 'document':
          this._cachedResponse = null;
          break;

        case 'arraybuffer':
          this._cachedResponse = base64.toByteArray(this._response).buffer;
          break;

        case 'blob':
          this._cachedResponse = new global.Blob([base64.toByteArray(this._response).buffer], { type: this.getResponseHeader('content-type') || '' });
          break;

        case 'json':
          try {
            this._cachedResponse = JSON.parse(this._response);
          } catch (_) {
            this._cachedResponse = null;
          }
          break;

        default:
          this._cachedResponse = null;
      }

      return this._cachedResponse;
    }
  }]);
  return XMLHttpRequest;
}(EventTarget.apply(undefined, babelHelpers.toConsumableArray(XHR_EVENTS)));

XMLHttpRequest.UNSENT = UNSENT;
XMLHttpRequest.OPENED = OPENED;
XMLHttpRequest.HEADERS_RECEIVED = HEADERS_RECEIVED;
XMLHttpRequest.LOADING = LOADING;
XMLHttpRequest.DONE = DONE;
XMLHttpRequest._interceptor = null;


module.exports = XMLHttpRequest;
}, 72, null, "XMLHttpRequest");
__d(/* event-target-shim/lib/event-target.js */function(global, require, module, exports) {

"use strict";

var Commons = require(74         ); // 74 = ./commons
var CustomEventTarget = require(75                     ); // 75 = ./custom-event-target
var EventWrapper = require(76               ); // 76 = ./event-wrapper
var LISTENERS = Commons.LISTENERS;
var CAPTURE = Commons.CAPTURE;
var BUBBLE = Commons.BUBBLE;
var ATTRIBUTE = Commons.ATTRIBUTE;
var newNode = Commons.newNode;
var defineCustomEventTarget = CustomEventTarget.defineCustomEventTarget;
var createEventWrapper = EventWrapper.createEventWrapper;
var STOP_IMMEDIATE_PROPAGATION_FLAG = EventWrapper.STOP_IMMEDIATE_PROPAGATION_FLAG;

var HAS_EVENTTARGET_INTERFACE = typeof window !== "undefined" && typeof window.EventTarget !== "undefined";

var EventTarget = module.exports = function EventTarget() {
    if (this instanceof EventTarget) {
        Object.defineProperty(this, LISTENERS, { value: Object.create(null) });
    } else if (arguments.length === 1 && Array.isArray(arguments[0])) {
        return defineCustomEventTarget(EventTarget, arguments[0]);
    } else if (arguments.length > 0) {
        var types = Array(arguments.length);
        for (var i = 0; i < arguments.length; ++i) {
            types[i] = arguments[i];
        }

        return defineCustomEventTarget(EventTarget, types);
    } else {
        throw new TypeError("Cannot call a class as a function");
    }
};

EventTarget.prototype = Object.create((HAS_EVENTTARGET_INTERFACE ? window.EventTarget : Object).prototype, {
    constructor: {
        value: EventTarget,
        writable: true,
        configurable: true
    },

    addEventListener: {
        value: function addEventListener(type, listener, capture) {
            if (listener == null) {
                return false;
            }
            if (typeof listener !== "function" && typeof listener !== "object") {
                throw new TypeError("\"listener\" is not an object.");
            }

            var kind = capture ? CAPTURE : BUBBLE;
            var node = this[LISTENERS][type];
            if (node == null) {
                this[LISTENERS][type] = newNode(listener, kind);
                return true;
            }

            var prev = null;
            while (node != null) {
                if (node.listener === listener && node.kind === kind) {
                    return false;
                }
                prev = node;
                node = node.next;
            }

            prev.next = newNode(listener, kind);
            return true;
        },
        configurable: true,
        writable: true
    },

    removeEventListener: {
        value: function removeEventListener(type, listener, capture) {
            if (listener == null) {
                return false;
            }

            var kind = capture ? CAPTURE : BUBBLE;
            var prev = null;
            var node = this[LISTENERS][type];
            while (node != null) {
                if (node.listener === listener && node.kind === kind) {
                    if (prev == null) {
                        this[LISTENERS][type] = node.next;
                    } else {
                        prev.next = node.next;
                    }
                    return true;
                }

                prev = node;
                node = node.next;
            }

            return false;
        },
        configurable: true,
        writable: true
    },

    dispatchEvent: {
        value: function dispatchEvent(event) {
            var node = this[LISTENERS][event.type];
            if (node == null) {
                return true;
            }

            var wrapped = createEventWrapper(event, this);

            while (node != null) {
                if (typeof node.listener === "function") {
                    node.listener.call(this, wrapped);
                } else if (node.kind !== ATTRIBUTE && typeof node.listener.handleEvent === "function") {
                    node.listener.handleEvent(wrapped);
                }

                if (wrapped[STOP_IMMEDIATE_PROPAGATION_FLAG]) {
                    break;
                }
                node = node.next;
            }

            return !wrapped.defaultPrevented;
        },
        configurable: true,
        writable: true
    }
});
}, 73, null, "event-target-shim/lib/event-target.js");
__d(/* event-target-shim/lib/commons.js */function(global, require, module, exports) {

"use strict";

var createUniqueKey = exports.createUniqueKey = typeof Symbol !== "undefined" ? Symbol : function createUniqueKey(name) {
  return "[[" + name + "_" + Math.random().toFixed(8).slice(2) + "]]";
};

exports.LISTENERS = createUniqueKey("listeners");

exports.CAPTURE = 1;

exports.BUBBLE = 2;

exports.ATTRIBUTE = 3;

exports.newNode = function newNode(listener, kind) {
  return { listener: listener, kind: kind, next: null };
};
}, 74, null, "event-target-shim/lib/commons.js");
__d(/* event-target-shim/lib/custom-event-target.js */function(global, require, module, exports) {

"use strict";

var Commons = require(74         ); // 74 = ./commons
var LISTENERS = Commons.LISTENERS;
var ATTRIBUTE = Commons.ATTRIBUTE;
var newNode = Commons.newNode;

function getAttributeListener(eventTarget, type) {
    var node = eventTarget[LISTENERS][type];
    while (node != null) {
        if (node.kind === ATTRIBUTE) {
            return node.listener;
        }
        node = node.next;
    }
    return null;
}

function setAttributeListener(eventTarget, type, listener) {
    if (typeof listener !== "function" && typeof listener !== "object") {
        listener = null;
    }

    var prev = null;
    var node = eventTarget[LISTENERS][type];
    while (node != null) {
        if (node.kind === ATTRIBUTE) {
            if (prev == null) {
                eventTarget[LISTENERS][type] = node.next;
            } else {
                prev.next = node.next;
            }
        } else {
            prev = node;
        }

        node = node.next;
    }

    if (listener != null) {
        if (prev == null) {
            eventTarget[LISTENERS][type] = newNode(listener, ATTRIBUTE);
        } else {
            prev.next = newNode(listener, ATTRIBUTE);
        }
    }
}

exports.defineCustomEventTarget = function (EventTargetBase, types) {
    function EventTarget() {
        EventTargetBase.call(this);
    }

    var descripter = {
        constructor: {
            value: EventTarget,
            configurable: true,
            writable: true
        }
    };

    types.forEach(function (type) {
        descripter["on" + type] = {
            get: function get() {
                return getAttributeListener(this, type);
            },
            set: function set(listener) {
                setAttributeListener(this, type, listener);
            },
            configurable: true,
            enumerable: true
        };
    });

    EventTarget.prototype = Object.create(EventTargetBase.prototype, descripter);

    return EventTarget;
};
}, 75, null, "event-target-shim/lib/custom-event-target.js");
__d(/* event-target-shim/lib/event-wrapper.js */function(global, require, module, exports) {

"use strict";

var createUniqueKey = require(74         ).createUniqueKey; // 74 = ./commons

var STOP_IMMEDIATE_PROPAGATION_FLAG = createUniqueKey("stop_immediate_propagation_flag");

var CANCELED_FLAG = createUniqueKey("canceled_flag");

var ORIGINAL_EVENT = createUniqueKey("original_event");

var wrapperPrototypeDefinition = Object.freeze({
    stopPropagation: Object.freeze({
        value: function stopPropagation() {
            var e = this[ORIGINAL_EVENT];
            if (typeof e.stopPropagation === "function") {
                e.stopPropagation();
            }
        },
        writable: true,
        configurable: true
    }),

    stopImmediatePropagation: Object.freeze({
        value: function stopImmediatePropagation() {
            this[STOP_IMMEDIATE_PROPAGATION_FLAG] = true;

            var e = this[ORIGINAL_EVENT];
            if (typeof e.stopImmediatePropagation === "function") {
                e.stopImmediatePropagation();
            }
        },
        writable: true,
        configurable: true
    }),

    preventDefault: Object.freeze({
        value: function preventDefault() {
            if (this.cancelable === true) {
                this[CANCELED_FLAG] = true;
            }

            var e = this[ORIGINAL_EVENT];
            if (typeof e.preventDefault === "function") {
                e.preventDefault();
            }
        },
        writable: true,
        configurable: true
    }),

    defaultPrevented: Object.freeze({
        get: function defaultPrevented() {
            return this[CANCELED_FLAG];
        },
        enumerable: true,
        configurable: true
    })
});

exports.STOP_IMMEDIATE_PROPAGATION_FLAG = STOP_IMMEDIATE_PROPAGATION_FLAG;

exports.createEventWrapper = function createEventWrapper(event, eventTarget) {
    var timeStamp = typeof event.timeStamp === "number" ? event.timeStamp : Date.now();
    var propertyDefinition = {
        type: { value: event.type, enumerable: true },
        target: { value: eventTarget, enumerable: true },
        currentTarget: { value: eventTarget, enumerable: true },
        eventPhase: { value: 2, enumerable: true },
        bubbles: { value: Boolean(event.bubbles), enumerable: true },
        cancelable: { value: Boolean(event.cancelable), enumerable: true },
        timeStamp: { value: timeStamp, enumerable: true },
        isTrusted: { value: false, enumerable: true }
    };
    propertyDefinition[STOP_IMMEDIATE_PROPAGATION_FLAG] = { value: false, writable: true };
    propertyDefinition[CANCELED_FLAG] = { value: false, writable: true };
    propertyDefinition[ORIGINAL_EVENT] = { value: event };

    if (typeof event.detail !== "undefined") {
        propertyDefinition.detail = { value: event.detail, enumerable: true };
    }

    return Object.create(Object.create(event, wrapperPrototypeDefinition), propertyDefinition);
};
}, 76, null, "event-target-shim/lib/event-wrapper.js");
__d(/* RCTNetworking */function(global, require, module, exports) {
'use strict';

var MissingNativeEventEmitterShim = require(78                             ); // 78 = MissingNativeEventEmitterShim
var NativeEventEmitter = require(83                  ); // 83 = NativeEventEmitter
var RCTNetworkingNative = require(15             ).Networking; // 15 = NativeModules
var convertRequestBody = require(85                  ); // 85 = convertRequestBody

function convertHeadersMapToArray(headers) {
  var headerArray = [];
  for (var name in headers) {
    headerArray.push([name, headers[name]]);
  }
  return headerArray;
}

var _requestId = 1;
function generateRequestId() {
  return _requestId++;
}

var RCTNetworking = function (_NativeEventEmitter) {
  babelHelpers.inherits(RCTNetworking, _NativeEventEmitter);

  function RCTNetworking() {
    babelHelpers.classCallCheck(this, RCTNetworking);

    var _this = babelHelpers.possibleConstructorReturn(this, (RCTNetworking.__proto__ || Object.getPrototypeOf(RCTNetworking)).call(this, RCTNetworkingNative));

    _this.isAvailable = true;
    return _this;
  }

  babelHelpers.createClass(RCTNetworking, [{
    key: 'sendRequest',
    value: function sendRequest(method, trackingName, url, headers, data, responseType, incrementalUpdates, timeout, callback, withCredentials) {
      var body = convertRequestBody(data);
      if (body && body.formData) {
        body.formData = body.formData.map(function (part) {
          return babelHelpers.extends({}, part, {
            headers: convertHeadersMapToArray(part.headers)
          });
        });
      }
      var requestId = generateRequestId();
      RCTNetworkingNative.sendRequest(method, url, requestId, convertHeadersMapToArray(headers), babelHelpers.extends({}, body, { trackingName: trackingName }), responseType, incrementalUpdates, timeout, withCredentials);
      callback(requestId);
    }
  }, {
    key: 'abortRequest',
    value: function abortRequest(requestId) {
      RCTNetworkingNative.abortRequest(requestId);
    }
  }, {
    key: 'clearCookies',
    value: function clearCookies(callback) {
      RCTNetworkingNative.clearCookies(callback);
    }
  }]);
  return RCTNetworking;
}(NativeEventEmitter);

if (__DEV__ && !RCTNetworkingNative) {
  var MissingNativeRCTNetworkingShim = function (_MissingNativeEventEm) {
    babelHelpers.inherits(MissingNativeRCTNetworkingShim, _MissingNativeEventEm);

    function MissingNativeRCTNetworkingShim() {
      babelHelpers.classCallCheck(this, MissingNativeRCTNetworkingShim);
      return babelHelpers.possibleConstructorReturn(this, (MissingNativeRCTNetworkingShim.__proto__ || Object.getPrototypeOf(MissingNativeRCTNetworkingShim)).call(this, 'RCTNetworking', 'Networking'));
    }

    babelHelpers.createClass(MissingNativeRCTNetworkingShim, [{
      key: 'sendRequest',
      value: function sendRequest() {
        this.throwMissingNativeModule();
      }
    }, {
      key: 'abortRequest',
      value: function abortRequest() {
        this.throwMissingNativeModule();
      }
    }, {
      key: 'clearCookies',
      value: function clearCookies() {
        this.throwMissingNativeModule();
      }
    }]);
    return MissingNativeRCTNetworkingShim;
  }(MissingNativeEventEmitterShim);

  RCTNetworking = new MissingNativeRCTNetworkingShim();
} else {
  RCTNetworking = new RCTNetworking();
}

module.exports = RCTNetworking;
}, 77, null, "RCTNetworking");
__d(/* MissingNativeEventEmitterShim */function(global, require, module, exports) {
'use strict';

var EmitterSubscription = require(79                   ); // 79 = EmitterSubscription
var EventEmitter = require(81            ); // 81 = EventEmitter

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var MissingNativeEventEmitterShim = function (_EventEmitter) {
  babelHelpers.inherits(MissingNativeEventEmitterShim, _EventEmitter);

  function MissingNativeEventEmitterShim(nativeModuleName, nativeEventEmitterName) {
    babelHelpers.classCallCheck(this, MissingNativeEventEmitterShim);

    var _this = babelHelpers.possibleConstructorReturn(this, (MissingNativeEventEmitterShim.__proto__ || Object.getPrototypeOf(MissingNativeEventEmitterShim)).call(this, null));

    _this.isAvailable = false;

    _this._nativeModuleName = nativeModuleName;
    _this._nativeEventEmitterName = nativeEventEmitterName;
    return _this;
  }

  babelHelpers.createClass(MissingNativeEventEmitterShim, [{
    key: 'throwMissingNativeModule',
    value: function throwMissingNativeModule() {
      invariant(false, 'Cannot use \'' + this._nativeEventEmitterName + '\' module when ' + ('native \'' + this._nativeModuleName + '\' is not included in the build. ') + ('Either include it, or check \'' + this._nativeEventEmitterName + '\'.isAvailable ') + 'before calling any methods.');
    }
  }, {
    key: 'addListener',
    value: function addListener(eventType, listener, context) {
      this.throwMissingNativeModule();
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners(eventType) {
      this.throwMissingNativeModule();
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription(subscription) {
      this.throwMissingNativeModule();
    }
  }]);
  return MissingNativeEventEmitterShim;
}(EventEmitter);

module.exports = MissingNativeEventEmitterShim;
}, 78, null, "MissingNativeEventEmitterShim");
__d(/* EmitterSubscription */function(global, require, module, exports) {
'use strict';

var EventSubscription = require(80                 ); // 80 = EventSubscription

var EmitterSubscription = function (_EventSubscription) {
  babelHelpers.inherits(EmitterSubscription, _EventSubscription);

  function EmitterSubscription(emitter, subscriber, listener, context) {
    babelHelpers.classCallCheck(this, EmitterSubscription);

    var _this = babelHelpers.possibleConstructorReturn(this, (EmitterSubscription.__proto__ || Object.getPrototypeOf(EmitterSubscription)).call(this, subscriber));

    _this.emitter = emitter;
    _this.listener = listener;
    _this.context = context;
    return _this;
  }

  babelHelpers.createClass(EmitterSubscription, [{
    key: 'remove',
    value: function remove() {
      this.emitter.removeSubscription(this);
    }
  }]);
  return EmitterSubscription;
}(EventSubscription);

module.exports = EmitterSubscription;
}, 79, null, "EmitterSubscription");
__d(/* EventSubscription */function(global, require, module, exports) {
'use strict';

var EventSubscription = function () {
  function EventSubscription(subscriber) {
    babelHelpers.classCallCheck(this, EventSubscription);

    this.subscriber = subscriber;
  }

  babelHelpers.createClass(EventSubscription, [{
    key: 'remove',
    value: function remove() {
      this.subscriber.removeSubscription(this);
    }
  }]);
  return EventSubscription;
}();

module.exports = EventSubscription;
}, 80, null, "EventSubscription");
__d(/* EventEmitter */function(global, require, module, exports) {
'use strict';

var EmitterSubscription = require(79                   ); // 79 = EmitterSubscription
var EventSubscriptionVendor = require(82                       ); // 82 = EventSubscriptionVendor

var emptyFunction = require(24                      ); // 24 = fbjs/lib/emptyFunction
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var EventEmitter = function () {
  function EventEmitter(subscriber) {
    babelHelpers.classCallCheck(this, EventEmitter);

    this._subscriber = subscriber || new EventSubscriptionVendor();
  }

  babelHelpers.createClass(EventEmitter, [{
    key: 'addListener',
    value: function addListener(eventType, listener, context) {

      return this._subscriber.addSubscription(eventType, new EmitterSubscription(this, this._subscriber, listener, context));
    }
  }, {
    key: 'once',
    value: function once(eventType, listener, context) {
      var _this = this;

      return this.addListener(eventType, function () {
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this.removeCurrentListener();
        listener.apply(context, args);
      });
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners(eventType) {
      this._subscriber.removeAllSubscriptions(eventType);
    }
  }, {
    key: 'removeCurrentListener',
    value: function removeCurrentListener() {
      invariant(!!this._currentSubscription, 'Not in an emitting cycle; there is no current subscription');
      this.removeSubscription(this._currentSubscription);
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription(subscription) {
      invariant(subscription.emitter === this, 'Subscription does not belong to this emitter.');
      this._subscriber.removeSubscription(subscription);
    }
  }, {
    key: 'listeners',
    value: function listeners(eventType) {
      var subscriptions = this._subscriber.getSubscriptionsForType(eventType);
      return subscriptions ? subscriptions.filter(emptyFunction.thatReturnsTrue).map(function (subscription) {
        return subscription.listener;
      }) : [];
    }
  }, {
    key: 'emit',
    value: function emit(eventType) {
      var subscriptions = this._subscriber.getSubscriptionsForType(eventType);
      if (subscriptions) {
        for (var i = 0, l = subscriptions.length; i < l; i++) {
          var subscription = subscriptions[i];

          if (subscription) {
            this._currentSubscription = subscription;
            subscription.listener.apply(subscription.context, Array.prototype.slice.call(arguments, 1));
          }
        }
        this._currentSubscription = null;
      }
    }
  }, {
    key: 'removeListener',
    value: function removeListener(eventType, listener) {
      var subscriptions = this._subscriber.getSubscriptionsForType(eventType);
      if (subscriptions) {
        for (var i = 0, l = subscriptions.length; i < l; i++) {
          var subscription = subscriptions[i];

          if (subscription && subscription.listener === listener) {
            subscription.remove();
          }
        }
      }
    }
  }]);
  return EventEmitter;
}();

module.exports = EventEmitter;
}, 81, null, "EventEmitter");
__d(/* EventSubscriptionVendor */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var EventSubscriptionVendor = function () {
  function EventSubscriptionVendor() {
    babelHelpers.classCallCheck(this, EventSubscriptionVendor);

    this._subscriptionsForType = {};
    this._currentSubscription = null;
  }

  babelHelpers.createClass(EventSubscriptionVendor, [{
    key: 'addSubscription',
    value: function addSubscription(eventType, subscription) {
      invariant(subscription.subscriber === this, 'The subscriber of the subscription is incorrectly set.');
      if (!this._subscriptionsForType[eventType]) {
        this._subscriptionsForType[eventType] = [];
      }
      var key = this._subscriptionsForType[eventType].length;
      this._subscriptionsForType[eventType].push(subscription);
      subscription.eventType = eventType;
      subscription.key = key;
      return subscription;
    }
  }, {
    key: 'removeAllSubscriptions',
    value: function removeAllSubscriptions(eventType) {
      if (eventType === undefined) {
        this._subscriptionsForType = {};
      } else {
        delete this._subscriptionsForType[eventType];
      }
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription(subscription) {
      var eventType = subscription.eventType;
      var key = subscription.key;

      var subscriptionsForType = this._subscriptionsForType[eventType];
      if (subscriptionsForType) {
        delete subscriptionsForType[key];
      }
    }
  }, {
    key: 'getSubscriptionsForType',
    value: function getSubscriptionsForType(eventType) {
      return this._subscriptionsForType[eventType];
    }
  }]);
  return EventSubscriptionVendor;
}();

module.exports = EventSubscriptionVendor;
}, 82, null, "EventSubscriptionVendor");
__d(/* NativeEventEmitter */function(global, require, module, exports) {
'use strict';

var EventEmitter = require(81            ); // 81 = EventEmitter
var Platform = require(46        ); // 46 = Platform
var RCTDeviceEventEmitter = require(84                     ); // 84 = RCTDeviceEventEmitter
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var NativeEventEmitter = function (_EventEmitter) {
  babelHelpers.inherits(NativeEventEmitter, _EventEmitter);

  function NativeEventEmitter(nativeModule) {
    babelHelpers.classCallCheck(this, NativeEventEmitter);

    var _this = babelHelpers.possibleConstructorReturn(this, (NativeEventEmitter.__proto__ || Object.getPrototypeOf(NativeEventEmitter)).call(this, RCTDeviceEventEmitter.sharedSubscriber));

    if (Platform.OS === 'ios') {
      invariant(nativeModule, 'Native module cannot be null.');
      _this._nativeModule = nativeModule;
    }
    return _this;
  }

  babelHelpers.createClass(NativeEventEmitter, [{
    key: 'addListener',
    value: function addListener(eventType, listener, context) {
      if (Platform.OS === 'ios') {
        this._nativeModule.addListener(eventType);
      }
      return babelHelpers.get(NativeEventEmitter.prototype.__proto__ || Object.getPrototypeOf(NativeEventEmitter.prototype), 'addListener', this).call(this, eventType, listener, context);
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners(eventType) {
      invariant(eventType, 'eventType argument is required.');
      if (Platform.OS === 'ios') {
        var count = this.listeners(eventType).length;
        this._nativeModule.removeListeners(count);
      }
      babelHelpers.get(NativeEventEmitter.prototype.__proto__ || Object.getPrototypeOf(NativeEventEmitter.prototype), 'removeAllListeners', this).call(this, eventType);
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription(subscription) {
      if (Platform.OS === 'ios') {
        this._nativeModule.removeListeners(1);
      }
      babelHelpers.get(NativeEventEmitter.prototype.__proto__ || Object.getPrototypeOf(NativeEventEmitter.prototype), 'removeSubscription', this).call(this, subscription);
    }
  }]);
  return NativeEventEmitter;
}(EventEmitter);

module.exports = NativeEventEmitter;
}, 83, null, "NativeEventEmitter");
__d(/* RCTDeviceEventEmitter */function(global, require, module, exports) {
'use strict';

var EventEmitter = require(81            ); // 81 = EventEmitter
var EventSubscriptionVendor = require(82                       ); // 82 = EventSubscriptionVendor

function checkNativeEventModule(eventType) {
  if (eventType) {
    if (eventType.lastIndexOf('statusBar', 0) === 0) {
      throw new Error('`' + eventType + '` event should be registered via the StatusBarIOS module');
    }
    if (eventType.lastIndexOf('keyboard', 0) === 0) {
      throw new Error('`' + eventType + '` event should be registered via the Keyboard module');
    }
    if (eventType === 'appStateDidChange' || eventType === 'memoryWarning') {
      throw new Error('`' + eventType + '` event should be registered via the AppState module');
    }
  }
}

var RCTDeviceEventEmitter = function (_EventEmitter) {
  babelHelpers.inherits(RCTDeviceEventEmitter, _EventEmitter);

  function RCTDeviceEventEmitter() {
    babelHelpers.classCallCheck(this, RCTDeviceEventEmitter);

    var sharedSubscriber = new EventSubscriptionVendor();

    var _this = babelHelpers.possibleConstructorReturn(this, (RCTDeviceEventEmitter.__proto__ || Object.getPrototypeOf(RCTDeviceEventEmitter)).call(this, sharedSubscriber));

    _this.sharedSubscriber = sharedSubscriber;
    return _this;
  }

  babelHelpers.createClass(RCTDeviceEventEmitter, [{
    key: 'addListener',
    value: function addListener(eventType, listener, context) {
      if (__DEV__) {
        checkNativeEventModule(eventType);
      }
      return babelHelpers.get(RCTDeviceEventEmitter.prototype.__proto__ || Object.getPrototypeOf(RCTDeviceEventEmitter.prototype), 'addListener', this).call(this, eventType, listener, context);
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners(eventType) {
      if (__DEV__) {
        checkNativeEventModule(eventType);
      }
      babelHelpers.get(RCTDeviceEventEmitter.prototype.__proto__ || Object.getPrototypeOf(RCTDeviceEventEmitter.prototype), 'removeAllListeners', this).call(this, eventType);
    }
  }, {
    key: 'removeSubscription',
    value: function removeSubscription(subscription) {
      if (subscription.emitter !== this) {
        subscription.emitter.removeSubscription(subscription);
      } else {
        babelHelpers.get(RCTDeviceEventEmitter.prototype.__proto__ || Object.getPrototypeOf(RCTDeviceEventEmitter.prototype), 'removeSubscription', this).call(this, subscription);
      }
    }
  }]);
  return RCTDeviceEventEmitter;
}(EventEmitter);

module.exports = new RCTDeviceEventEmitter();
}, 84, null, "RCTDeviceEventEmitter");
__d(/* convertRequestBody */function(global, require, module, exports) {
'use strict';

var binaryToBase64 = require(86              ); // 86 = binaryToBase64

var FormData = require(88        ); // 88 = FormData

function convertRequestBody(body) {
  if (typeof body === 'string') {
    return { string: body };
  }
  if (body instanceof FormData) {
    return { formData: body.getParts() };
  }
  if (body instanceof ArrayBuffer || ArrayBuffer.isView(body)) {
    return { base64: binaryToBase64(body) };
  }
  return body;
}

module.exports = convertRequestBody;
}, 85, null, "convertRequestBody");
__d(/* binaryToBase64 */function(global, require, module, exports) {
'use strict';

var base64 = require(87         ); // 87 = base64-js

function binaryToBase64(data) {
  if (data instanceof ArrayBuffer) {
    data = new Uint8Array(data);
  }
  if (data instanceof Uint8Array) {
    return base64.fromByteArray(data);
  }
  if (!ArrayBuffer.isView(data)) {
    throw new Error('data must be ArrayBuffer or typed array');
  }
  var _data = data,
      buffer = _data.buffer,
      byteOffset = _data.byteOffset,
      byteLength = _data.byteLength;

  return base64.fromByteArray(new Uint8Array(buffer, byteOffset, byteLength));
}

module.exports = binaryToBase64;
}, 86, null, "binaryToBase64");
__d(/* base64-js/index.js */function(global, require, module, exports) {'use strict';

exports.byteLength = byteLength;
exports.toByteArray = toByteArray;
exports.fromByteArray = fromByteArray;

var lookup = [];
var revLookup = [];
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i];
  revLookup[code.charCodeAt(i)] = i;
}

revLookup['-'.charCodeAt(0)] = 62;
revLookup['_'.charCodeAt(0)] = 63;

function placeHoldersCount(b64) {
  var len = b64.length;
  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4');
  }

  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;
}

function byteLength(b64) {
  return b64.length * 3 / 4 - placeHoldersCount(b64);
}

function toByteArray(b64) {
  var i, l, tmp, placeHolders, arr;
  var len = b64.length;
  placeHolders = placeHoldersCount(b64);

  arr = new Arr(len * 3 / 4 - placeHolders);

  l = placeHolders > 0 ? len - 4 : len;

  var L = 0;

  for (i = 0; i < l; i += 4) {
    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
    arr[L++] = tmp >> 16 & 0xFF;
    arr[L++] = tmp >> 8 & 0xFF;
    arr[L++] = tmp & 0xFF;
  }

  if (placeHolders === 2) {
    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
    arr[L++] = tmp & 0xFF;
  } else if (placeHolders === 1) {
    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
    arr[L++] = tmp >> 8 & 0xFF;
    arr[L++] = tmp & 0xFF;
  }

  return arr;
}

function tripletToBase64(num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];
}

function encodeChunk(uint8, start, end) {
  var tmp;
  var output = [];
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];
    output.push(tripletToBase64(tmp));
  }
  return output.join('');
}

function fromByteArray(uint8) {
  var tmp;
  var len = uint8.length;
  var extraBytes = len % 3;
  var output = '';
  var parts = [];
  var maxChunkLength = 16383;
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
  }

  if (extraBytes === 1) {
    tmp = uint8[len - 1];
    output += lookup[tmp >> 2];
    output += lookup[tmp << 4 & 0x3F];
    output += '==';
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1];
    output += lookup[tmp >> 10];
    output += lookup[tmp >> 4 & 0x3F];
    output += lookup[tmp << 2 & 0x3F];
    output += '=';
  }

  parts.push(output);

  return parts.join('');
}
}, 87, null, "base64-js/index.js");
__d(/* FormData */function(global, require, module, exports) {
'use strict';

var FormData = function () {
  function FormData() {
    babelHelpers.classCallCheck(this, FormData);

    this._parts = [];
  }

  babelHelpers.createClass(FormData, [{
    key: 'append',
    value: function append(key, value) {
      this._parts.push([key, value]);
    }
  }, {
    key: 'getParts',
    value: function getParts() {
      return this._parts.map(function (_ref) {
        var _ref2 = babelHelpers.slicedToArray(_ref, 2),
            name = _ref2[0],
            value = _ref2[1];

        var contentDisposition = 'form-data; name="' + name + '"';

        var headers = { 'content-disposition': contentDisposition };

        if (typeof value === 'object' && value) {
          if (typeof value.name === 'string') {
            headers['content-disposition'] += '; filename="' + value.name + '"';
          }
          if (typeof value.type === 'string') {
            headers['content-type'] = value.type;
          }
          return babelHelpers.extends({}, value, { headers: headers, fieldName: name });
        }

        return { string: String(value), headers: headers, fieldName: name };
      });
    }
  }]);
  return FormData;
}();

module.exports = FormData;
}, 88, null, "FormData");
__d(/* WebSocket */function(global, require, module, exports) {
'use strict';

var Blob = require(90    ); // 90 = Blob
var EventTarget = require(73                 ); // 73 = event-target-shim
var NativeEventEmitter = require(83                  ); // 83 = NativeEventEmitter
var NativeModules = require(15             ); // 15 = NativeModules
var Platform = require(46        ); // 46 = Platform
var WebSocketEvent = require(96              ); // 96 = WebSocketEvent

var base64 = require(87         ); // 87 = base64-js
var binaryToBase64 = require(86              ); // 86 = binaryToBase64
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var WebSocketModule = NativeModules.WebSocketModule;


var CONNECTING = 0;
var OPEN = 1;
var CLOSING = 2;
var CLOSED = 3;

var CLOSE_NORMAL = 1000;

var WEBSOCKET_EVENTS = ['close', 'error', 'message', 'open'];

var nextWebSocketId = 0;

var WebSocket = function (_EventTarget) {
  babelHelpers.inherits(WebSocket, _EventTarget);

  function WebSocket(url, protocols, options) {
    babelHelpers.classCallCheck(this, WebSocket);

    var _this = babelHelpers.possibleConstructorReturn(this, (WebSocket.__proto__ || Object.getPrototypeOf(WebSocket)).call(this));

    _this.CONNECTING = CONNECTING;
    _this.OPEN = OPEN;
    _this.CLOSING = CLOSING;
    _this.CLOSED = CLOSED;
    _this.readyState = CONNECTING;

    if (typeof protocols === 'string') {
      protocols = [protocols];
    }

    var _ref = options || {},
        _ref$headers = _ref.headers,
        headers = _ref$headers === undefined ? {} : _ref$headers,
        unrecognized = babelHelpers.objectWithoutProperties(_ref, ['headers']);

    if (unrecognized && typeof unrecognized.origin === 'string') {
      console.warn('Specifying `origin` as a WebSocket connection option is deprecated. Include it under `headers` instead.');

      headers.origin = unrecognized.origin;

      delete unrecognized.origin;
    }

    if (Object.keys(unrecognized).length > 0) {
      console.warn('Unrecognized WebSocket connection option(s) `' + Object.keys(unrecognized).join('`, `') + '`. ' + 'Did you mean to put these under `headers`?');
    }

    if (!Array.isArray(protocols)) {
      protocols = null;
    }

    if (!WebSocket.isAvailable) {
      throw new Error('Cannot initialize WebSocket module. ' + 'Native module WebSocketModule is missing.');
    }

    _this._eventEmitter = new NativeEventEmitter(WebSocketModule);
    _this._socketId = nextWebSocketId++;
    _this._registerEvents();
    WebSocketModule.connect(url, protocols, { headers: headers }, _this._socketId);
    return _this;
  }

  babelHelpers.createClass(WebSocket, [{
    key: 'close',
    value: function close(code, reason) {
      if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {
        return;
      }

      this.readyState = this.CLOSING;
      this._close(code, reason);
    }
  }, {
    key: 'send',
    value: function send(data) {
      if (this.readyState === this.CONNECTING) {
        throw new Error('INVALID_STATE_ERR');
      }

      if (data instanceof Blob) {
        var BlobModule = NativeModules.BlobModule;
        invariant(BlobModule, 'Native module BlobModule is required for blob support');
        BlobModule.sendBlob(data, this._socketId);
        return;
      }

      if (typeof data === 'string') {
        WebSocketModule.send(data, this._socketId);
        return;
      }

      if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {
        WebSocketModule.sendBinary(binaryToBase64(data), this._socketId);
        return;
      }

      throw new Error('Unsupported data type');
    }
  }, {
    key: 'ping',
    value: function ping() {
      if (this.readyState === this.CONNECTING) {
        throw new Error('INVALID_STATE_ERR');
      }

      WebSocketModule.ping(this._socketId);
    }
  }, {
    key: '_close',
    value: function _close(code, reason) {
      if (Platform.OS === 'android') {
        var statusCode = typeof code === 'number' ? code : CLOSE_NORMAL;
        var closeReason = typeof reason === 'string' ? reason : '';
        WebSocketModule.close(statusCode, closeReason, this._socketId);
      } else {
        WebSocketModule.close(this._socketId);
      }
    }
  }, {
    key: '_unregisterEvents',
    value: function _unregisterEvents() {
      this._subscriptions.forEach(function (e) {
        return e.remove();
      });
      this._subscriptions = [];
    }
  }, {
    key: '_registerEvents',
    value: function _registerEvents() {
      var _this2 = this;

      this._subscriptions = [this._eventEmitter.addListener('websocketMessage', function (ev) {
        if (ev.id !== _this2._socketId) {
          return;
        }
        var data = ev.data;
        switch (ev.type) {
          case 'binary':
            data = base64.toByteArray(ev.data).buffer;
            break;
          case 'blob':
            data = Blob.create(ev.data);
            break;
        }
        _this2.dispatchEvent(new WebSocketEvent('message', { data: data }));
      }), this._eventEmitter.addListener('websocketOpen', function (ev) {
        if (ev.id !== _this2._socketId) {
          return;
        }
        _this2.readyState = _this2.OPEN;
        _this2.dispatchEvent(new WebSocketEvent('open'));
      }), this._eventEmitter.addListener('websocketClosed', function (ev) {
        if (ev.id !== _this2._socketId) {
          return;
        }
        _this2.readyState = _this2.CLOSED;
        _this2.dispatchEvent(new WebSocketEvent('close', {
          code: ev.code,
          reason: ev.reason
        }));
        _this2._unregisterEvents();
        _this2.close();
      }), this._eventEmitter.addListener('websocketFailed', function (ev) {
        if (ev.id !== _this2._socketId) {
          return;
        }
        _this2.readyState = _this2.CLOSED;
        _this2.dispatchEvent(new WebSocketEvent('error', {
          message: ev.message
        }));
        _this2.dispatchEvent(new WebSocketEvent('close', {
          message: ev.message
        }));
        _this2._unregisterEvents();
        _this2.close();
      })];
    }
  }, {
    key: 'binaryType',
    get: function get() {
      return this._binaryType;
    },
    set: function set(binaryType) {
      if (binaryType !== 'blob' && binaryType !== 'arraybuffer') {
        throw new Error('binaryType must be either \'blob\' or \'arraybuffer\'');
      }
      if (this._binaryType === 'blob' || binaryType === 'blob') {
        var BlobModule = NativeModules.BlobModule;
        invariant(BlobModule, 'Native module BlobModule is required for blob support');
        if (BlobModule) {
          if (binaryType === 'blob') {
            BlobModule.enableBlobSupport(this._socketId);
          } else {
            BlobModule.disableBlobSupport(this._socketId);
          }
        }
      }
      this._binaryType = binaryType;
    }
  }]);
  return WebSocket;
}(EventTarget.apply(undefined, WEBSOCKET_EVENTS));

WebSocket.CONNECTING = CONNECTING;
WebSocket.OPEN = OPEN;
WebSocket.CLOSING = CLOSING;
WebSocket.CLOSED = CLOSED;
WebSocket.isAvailable = !!WebSocketModule;


module.exports = WebSocket;
}, 89, null, "WebSocket");
__d(/* Blob */function(global, require, module, exports) {

'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var uuid = require(91    ); // 91 = uuid

var _require = require(15             ), // 15 = NativeModules
    BlobModule = _require.BlobModule;

var Blob = function () {
  babelHelpers.createClass(Blob, null, [{
    key: 'create',
    value: function create(props) {
      return babelHelpers.extends(Object.create(Blob.prototype), props);
    }
  }]);

  function Blob(parts, options) {
    babelHelpers.classCallCheck(this, Blob);

    var blobId = uuid();
    var size = 0;
    parts.forEach(function (part) {
      invariant(part instanceof Blob, 'Can currently only create a Blob from other Blobs');
      size += part.size;
    });
    BlobModule.createFromParts(parts, blobId);
    return Blob.create({
      blobId: blobId,
      offset: 0,
      size: size
    });
  }

  babelHelpers.createClass(Blob, [{
    key: 'slice',
    value: function slice(start, end) {
      var offset = this.offset;
      var size = this.size;
      if (typeof start === 'number') {
        if (start > size) {
          start = size;
        }
        offset += start;
        size -= start;

        if (typeof end === 'number') {
          if (end < 0) {
            end = this.size + end;
          }
          size = end - start;
        }
      }
      return Blob.create({
        blobId: this.blobId,
        offset: offset,
        size: size
      });
    }
  }, {
    key: 'close',
    value: function close() {
      BlobModule.release(this.blobId);
    }
  }]);
  return Blob;
}();

module.exports = Blob;
}, 90, null, "Blob");
__d(/* uuid/index.js */function(global, require, module, exports) {var v1 = require(92    ); // 92 = ./v1
var v4 = require(95    ); // 95 = ./v4

var uuid = v4;
uuid.v1 = v1;
uuid.v4 = v4;

module.exports = uuid;
}, 91, null, "uuid/index.js");
__d(/* uuid/v1.js */function(global, require, module, exports) {
var rng = require(93         ); // 93 = ./lib/rng
var bytesToUuid = require(94                 ); // 94 = ./lib/bytesToUuid

var _seedBytes = rng();

var _nodeId = [_seedBytes[0] | 0x01, _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]];

var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;

var _lastMSecs = 0,
    _lastNSecs = 0;

function v1(options, buf, offset) {
  var i = buf && offset || 0;
  var b = buf || [];

  options = options || {};

  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;

  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();

  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;

  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000;

  if (dt < 0 && options.clockseq === undefined) {
    clockseq = clockseq + 1 & 0x3fff;
  }

  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
    nsecs = 0;
  }

  if (nsecs >= 10000) {
    throw new Error('uuid.v1(): Can\'t create more than 10M uuids/sec');
  }

  _lastMSecs = msecs;
  _lastNSecs = nsecs;
  _clockseq = clockseq;

  msecs += 12219292800000;

  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
  b[i++] = tl >>> 24 & 0xff;
  b[i++] = tl >>> 16 & 0xff;
  b[i++] = tl >>> 8 & 0xff;
  b[i++] = tl & 0xff;

  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;
  b[i++] = tmh >>> 8 & 0xff;
  b[i++] = tmh & 0xff;

  b[i++] = tmh >>> 24 & 0xf | 0x10;
  b[i++] = tmh >>> 16 & 0xff;

  b[i++] = clockseq >>> 8 | 0x80;

  b[i++] = clockseq & 0xff;

  var node = options.node || _nodeId;
  for (var n = 0; n < 6; ++n) {
    b[i + n] = node[n];
  }

  return buf ? buf : bytesToUuid(b);
}

module.exports = v1;
}, 92, null, "uuid/v1.js");
__d(/* uuid/lib/rng-browser.js */function(global, require, module, exports) {
var rng;

var crypto = global.crypto || global.msCrypto;
if (crypto && crypto.getRandomValues) {
  var rnds8 = new Uint8Array(16);
  rng = function whatwgRNG() {
    crypto.getRandomValues(rnds8);
    return rnds8;
  };
}

if (!rng) {
  var rnds = new Array(16);
  rng = function rng() {
    for (var i = 0, r; i < 16; i++) {
      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;
      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
    }

    return rnds;
  };
}

module.exports = rng;
}, 93, null, "uuid/lib/rng-browser.js");
__d(/* uuid/lib/bytesToUuid.js */function(global, require, module, exports) {
var byteToHex = [];
for (var i = 0; i < 256; ++i) {
  byteToHex[i] = (i + 0x100).toString(16).substr(1);
}

function bytesToUuid(buf, offset) {
  var i = offset || 0;
  var bth = byteToHex;
  return bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]];
}

module.exports = bytesToUuid;
}, 94, null, "uuid/lib/bytesToUuid.js");
__d(/* uuid/v4.js */function(global, require, module, exports) {var rng = require(93         ); // 93 = ./lib/rng
var bytesToUuid = require(94                 ); // 94 = ./lib/bytesToUuid

function v4(options, buf, offset) {
  var i = buf && offset || 0;

  if (typeof options == 'string') {
    buf = options == 'binary' ? new Array(16) : null;
    options = null;
  }
  options = options || {};

  var rnds = options.random || (options.rng || rng)();

  rnds[6] = rnds[6] & 0x0f | 0x40;
  rnds[8] = rnds[8] & 0x3f | 0x80;

  if (buf) {
    for (var ii = 0; ii < 16; ++ii) {
      buf[i + ii] = rnds[ii];
    }
  }

  return buf || bytesToUuid(rnds);
}

module.exports = v4;
}, 95, null, "uuid/v4.js");
__d(/* WebSocketEvent */function(global, require, module, exports) {

'use strict';

var WebSocketEvent = function WebSocketEvent(type, eventInitDict) {
  babelHelpers.classCallCheck(this, WebSocketEvent);

  this.type = type.toString();
  babelHelpers.extends(this, eventInitDict);
};

module.exports = WebSocketEvent;
}, 96, null, "WebSocketEvent");
__d(/* URL */function(global, require, module, exports) {

'use strict';

var Blob = require(90    ); // 90 = Blob

var _require = require(15             ), // 15 = NativeModules
    BlobModule = _require.BlobModule;

var BLOB_URL_PREFIX = null;

if (BlobModule && typeof BlobModule.BLOB_URI_SCHEME === 'string') {
  BLOB_URL_PREFIX = BlobModule.BLOB_URI_SCHEME + ':';
  if (typeof BlobModule.BLOB_URI_HOST === 'string') {
    BLOB_URL_PREFIX += '//' + BlobModule.BLOB_URI_HOST + '/';
  }
}

var URL = function () {
  function URL() {
    babelHelpers.classCallCheck(this, URL);

    throw new Error('Creating BlobURL objects is not supported yet.');
  }

  babelHelpers.createClass(URL, null, [{
    key: 'createObjectURL',
    value: function createObjectURL(blob) {
      if (BLOB_URL_PREFIX === null) {
        throw new Error('Cannot create URL for blob!');
      }
      return '' + BLOB_URL_PREFIX + blob.blobId + '?offset=' + blob.offset + '&size=' + blob.size;
    }
  }, {
    key: 'revokeObjectURL',
    value: function revokeObjectURL(url) {}
  }]);
  return URL;
}();

module.exports = URL;
}, 97, null, "URL");
__d(/* Alert */function(global, require, module, exports) {
'use strict';

var AlertIOS = require(99        ); // 99 = AlertIOS
var NativeModules = require(15             ); // 15 = NativeModules
var Platform = require(46        ); // 46 = Platform

var Alert = function () {
  function Alert() {
    babelHelpers.classCallCheck(this, Alert);
  }

  babelHelpers.createClass(Alert, null, [{
    key: 'alert',
    value: function alert(title, message, buttons, options, type) {
      if (Platform.OS === 'ios') {
        if (typeof type !== 'undefined') {
          console.warn('Alert.alert() with a 5th "type" parameter is deprecated and will be removed. Use AlertIOS.prompt() instead.');
          AlertIOS.alert(title, message, buttons, type);
          return;
        }
        AlertIOS.alert(title, message, buttons);
      } else if (Platform.OS === 'android') {
        AlertAndroid.alert(title, message, buttons, options);
      }
    }
  }]);
  return Alert;
}();

var AlertAndroid = function () {
  function AlertAndroid() {
    babelHelpers.classCallCheck(this, AlertAndroid);
  }

  babelHelpers.createClass(AlertAndroid, null, [{
    key: 'alert',
    value: function alert(title, message, buttons, options) {
      var config = {
        title: title || '',
        message: message || ''
      };

      if (options) {
        config = babelHelpers.extends({}, config, { cancelable: options.cancelable });
      }

      var validButtons = buttons ? buttons.slice(0, 3) : [{ text: 'OK' }];
      var buttonPositive = validButtons.pop();
      var buttonNegative = validButtons.pop();
      var buttonNeutral = validButtons.pop();
      if (buttonNeutral) {
        config = babelHelpers.extends({}, config, { buttonNeutral: buttonNeutral.text || '' });
      }
      if (buttonNegative) {
        config = babelHelpers.extends({}, config, { buttonNegative: buttonNegative.text || '' });
      }
      if (buttonPositive) {
        config = babelHelpers.extends({}, config, { buttonPositive: buttonPositive.text || '' });
      }
      NativeModules.DialogManagerAndroid.showAlert(config, function (errorMessage) {
        return console.warn(errorMessage);
      }, function (action, buttonKey) {
        if (action === NativeModules.DialogManagerAndroid.buttonClicked) {
          if (buttonKey === NativeModules.DialogManagerAndroid.buttonNeutral) {
            buttonNeutral.onPress && buttonNeutral.onPress();
          } else if (buttonKey === NativeModules.DialogManagerAndroid.buttonNegative) {
            buttonNegative.onPress && buttonNegative.onPress();
          } else if (buttonKey === NativeModules.DialogManagerAndroid.buttonPositive) {
            buttonPositive.onPress && buttonPositive.onPress();
          }
        } else if (action === NativeModules.DialogManagerAndroid.dismissed) {
          options && options.onDismiss && options.onDismiss();
        }
      });
    }
  }]);
  return AlertAndroid;
}();

module.exports = Alert;
}, 98, null, "Alert");
__d(/* AlertIOS */function(global, require, module, exports) {
'use strict';

var RCTAlertManager = require(15             ).AlertManager; // 15 = NativeModules

var AlertIOS = function () {
  function AlertIOS() {
    babelHelpers.classCallCheck(this, AlertIOS);
  }

  babelHelpers.createClass(AlertIOS, null, [{
    key: 'alert',
    value: function alert(title, message, callbackOrButtons, type) {
      if (typeof type !== 'undefined') {
        console.warn('AlertIOS.alert() with a 4th "type" parameter is deprecated and will be removed. Use AlertIOS.prompt() instead.');
        this.prompt(title, message, callbackOrButtons, type);
        return;
      }
      this.prompt(title, message, callbackOrButtons, 'default');
    }
  }, {
    key: 'prompt',
    value: function prompt(title, message, callbackOrButtons) {
      var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'plain-text';
      var defaultValue = arguments[4];
      var keyboardType = arguments[5];

      if (typeof type === 'function') {
        console.warn('You passed a callback function as the "type" argument to AlertIOS.prompt(). React Native is ' + 'assuming  you want to use the deprecated AlertIOS.prompt(title, defaultValue, buttons, callback) ' + 'signature. The current signature is AlertIOS.prompt(title, message, callbackOrButtons, type, defaultValue, ' + 'keyboardType) and the old syntax will be removed in a future version.');

        var callback = type;
        var defaultValue = message;
        RCTAlertManager.alertWithArgs({
          title: title || '',
          type: 'plain-text',
          defaultValue: defaultValue
        }, function (id, value) {
          callback(value);
        });
        return;
      }

      var callbacks = [];
      var buttons = [];
      var cancelButtonKey;
      var destructiveButtonKey;
      if (typeof callbackOrButtons === 'function') {
        callbacks = [callbackOrButtons];
      } else if (callbackOrButtons instanceof Array) {
        callbackOrButtons.forEach(function (btn, index) {
          callbacks[index] = btn.onPress;
          if (btn.style === 'cancel') {
            cancelButtonKey = String(index);
          } else if (btn.style === 'destructive') {
            destructiveButtonKey = String(index);
          }
          if (btn.text || index < (callbackOrButtons || []).length - 1) {
            var btnDef = {};
            btnDef[index] = btn.text || '';
            buttons.push(btnDef);
          }
        });
      }

      RCTAlertManager.alertWithArgs({
        title: title || '',
        message: message || undefined,
        buttons: buttons,
        type: type || undefined,
        defaultValue: defaultValue,
        cancelButtonKey: cancelButtonKey,
        destructiveButtonKey: destructiveButtonKey,
        keyboardType: keyboardType
      }, function (id, value) {
        var cb = callbacks[id];
        cb && cb(value);
      });
    }
  }]);
  return AlertIOS;
}();

module.exports = AlertIOS;
}, 99, null, "AlertIOS");
__d(/* Geolocation */function(global, require, module, exports) {
'use strict';

var NativeEventEmitter = require(83                  ); // 83 = NativeEventEmitter
var RCTLocationObserver = require(15             ).LocationObserver; // 15 = NativeModules

var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var logError = require(101       ); // 101 = logError

var warning = require(23                ); // 23 = fbjs/lib/warning

var LocationEventEmitter = new NativeEventEmitter(RCTLocationObserver);

var Platform = require(46        ); // 46 = Platform
var PermissionsAndroid = require(102                 ); // 102 = PermissionsAndroid

var subscriptions = [];
var updatesEnabled = false;

var Geolocation = {
  setRNConfiguration: function setRNConfiguration(config) {
    if (RCTLocationObserver.setConfiguration) {
      RCTLocationObserver.setConfiguration(config);
    }
  },

  requestAuthorization: function requestAuthorization() {
    RCTLocationObserver.requestAuthorization();
  },

  getCurrentPosition: function getCurrentPosition(geo_success, geo_error, geo_options) {
    var hasPermission, status;
    return regeneratorRuntime.async(function getCurrentPosition$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            invariant(typeof geo_success === 'function', 'Must provide a valid geo_success callback.');
            hasPermission = true;

            if (!(Platform.OS === 'android' && Platform.Version >= 23)) {
              _context.next = 11;
              break;
            }

            _context.next = 5;
            return regeneratorRuntime.awrap(PermissionsAndroid.check(PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION));

          case 5:
            hasPermission = _context.sent;

            if (hasPermission) {
              _context.next = 11;
              break;
            }

            _context.next = 9;
            return regeneratorRuntime.awrap(PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION));

          case 9:
            status = _context.sent;

            hasPermission = status === PermissionsAndroid.RESULTS.GRANTED;

          case 11:
            if (hasPermission) {
              RCTLocationObserver.getCurrentPosition(geo_options || {}, geo_success, geo_error || logError);
            }

          case 12:
          case 'end':
            return _context.stop();
        }
      }
    }, null, this);
  },

  watchPosition: function watchPosition(success, error, options) {
    if (!updatesEnabled) {
      RCTLocationObserver.startObserving(options || {});
      updatesEnabled = true;
    }
    var watchID = subscriptions.length;
    subscriptions.push([LocationEventEmitter.addListener('geolocationDidChange', success), error ? LocationEventEmitter.addListener('geolocationError', error) : null]);
    return watchID;
  },

  clearWatch: function clearWatch(watchID) {
    var sub = subscriptions[watchID];
    if (!sub) {
      return;
    }

    sub[0].remove();

    var sub1 = sub[1];sub1 && sub1.remove();
    subscriptions[watchID] = undefined;
    var noWatchers = true;
    for (var ii = 0; ii < subscriptions.length; ii++) {
      if (subscriptions[ii]) {
        noWatchers = false;
      }
    }
    if (noWatchers) {
      Geolocation.stopObserving();
    }
  },

  stopObserving: function stopObserving() {
    if (updatesEnabled) {
      RCTLocationObserver.stopObserving();
      updatesEnabled = false;
      for (var ii = 0; ii < subscriptions.length; ii++) {
        var sub = subscriptions[ii];
        if (sub) {
          warning(false, 'Called stopObserving with existing subscriptions.');
          sub[0].remove();

          var sub1 = sub[1];sub1 && sub1.remove();
        }
      }
      subscriptions = [];
    }
  }
};

module.exports = Geolocation;
}, 100, null, "Geolocation");
__d(/* logError */function(global, require, module, exports) {
'use strict';

var logError = function logError() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  if (args.length === 1 && args[0] instanceof Error) {
    var err = args[0];
    console.error('Error: "' + err.message + '".  Stack:\n' + err.stack);
  } else {
    console.error.apply(console, args);
  }
};

module.exports = logError;
}, 101, null, "logError");
__d(/* PermissionsAndroid */function(global, require, module, exports) {
'use strict';

var NativeModules = require(15             ); // 15 = NativeModules

var PermissionsAndroid = function () {
  function PermissionsAndroid() {
    babelHelpers.classCallCheck(this, PermissionsAndroid);

    this.PERMISSIONS = {
      READ_CALENDAR: 'android.permission.READ_CALENDAR',
      WRITE_CALENDAR: 'android.permission.WRITE_CALENDAR',
      CAMERA: 'android.permission.CAMERA',
      READ_CONTACTS: 'android.permission.READ_CONTACTS',
      WRITE_CONTACTS: 'android.permission.WRITE_CONTACTS',
      GET_ACCOUNTS: 'android.permission.GET_ACCOUNTS',
      ACCESS_FINE_LOCATION: 'android.permission.ACCESS_FINE_LOCATION',
      ACCESS_COARSE_LOCATION: 'android.permission.ACCESS_COARSE_LOCATION',
      RECORD_AUDIO: 'android.permission.RECORD_AUDIO',
      READ_PHONE_STATE: 'android.permission.READ_PHONE_STATE',
      CALL_PHONE: 'android.permission.CALL_PHONE',
      READ_CALL_LOG: 'android.permission.READ_CALL_LOG',
      WRITE_CALL_LOG: 'android.permission.WRITE_CALL_LOG',
      ADD_VOICEMAIL: 'com.android.voicemail.permission.ADD_VOICEMAIL',
      USE_SIP: 'android.permission.USE_SIP',
      PROCESS_OUTGOING_CALLS: 'android.permission.PROCESS_OUTGOING_CALLS',
      BODY_SENSORS: 'android.permission.BODY_SENSORS',
      SEND_SMS: 'android.permission.SEND_SMS',
      RECEIVE_SMS: 'android.permission.RECEIVE_SMS',
      READ_SMS: 'android.permission.READ_SMS',
      RECEIVE_WAP_PUSH: 'android.permission.RECEIVE_WAP_PUSH',
      RECEIVE_MMS: 'android.permission.RECEIVE_MMS',
      READ_EXTERNAL_STORAGE: 'android.permission.READ_EXTERNAL_STORAGE',
      WRITE_EXTERNAL_STORAGE: 'android.permission.WRITE_EXTERNAL_STORAGE'
    };

    this.RESULTS = {
      GRANTED: 'granted',
      DENIED: 'denied',
      NEVER_ASK_AGAIN: 'never_ask_again'
    };
  }

  babelHelpers.createClass(PermissionsAndroid, [{
    key: 'checkPermission',
    value: function checkPermission(permission) {
      console.warn('"PermissionsAndroid.checkPermission" is deprecated. Use "PermissionsAndroid.check" instead');
      return NativeModules.PermissionsAndroid.checkPermission(permission);
    }
  }, {
    key: 'check',
    value: function check(permission) {
      return NativeModules.PermissionsAndroid.checkPermission(permission);
    }
  }, {
    key: 'requestPermission',
    value: function requestPermission(permission, rationale) {
      var response;
      return regeneratorRuntime.async(function requestPermission$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              console.warn('"PermissionsAndroid.requestPermission" is deprecated. Use "PermissionsAndroid.request" instead');
              _context.next = 3;
              return regeneratorRuntime.awrap(this.request(permission, rationale));

            case 3:
              response = _context.sent;
              return _context.abrupt('return', response === this.RESULTS.GRANTED);

            case 5:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'request',
    value: function request(permission, rationale) {
      var shouldShowRationale;
      return regeneratorRuntime.async(function request$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              if (!rationale) {
                _context2.next = 6;
                break;
              }

              _context2.next = 3;
              return regeneratorRuntime.awrap(NativeModules.PermissionsAndroid.shouldShowRequestPermissionRationale(permission));

            case 3:
              shouldShowRationale = _context2.sent;

              if (!shouldShowRationale) {
                _context2.next = 6;
                break;
              }

              return _context2.abrupt('return', new Promise(function (resolve, reject) {
                NativeModules.DialogManagerAndroid.showAlert(rationale, function () {
                  return reject(new Error('Error showing rationale'));
                }, function () {
                  return resolve(NativeModules.PermissionsAndroid.requestPermission(permission));
                });
              }));

            case 6:
              return _context2.abrupt('return', NativeModules.PermissionsAndroid.requestPermission(permission));

            case 7:
            case 'end':
              return _context2.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'requestMultiple',
    value: function requestMultiple(permissions) {
      return NativeModules.PermissionsAndroid.requestMultiplePermissions(permissions);
    }
  }]);
  return PermissionsAndroid;
}();

PermissionsAndroid = new PermissionsAndroid();

module.exports = PermissionsAndroid;
}, 102, null, "PermissionsAndroid");
__d(/* HeapCapture */function(global, require, module, exports) {
'use strict';

var HeapCapture = {
  captureHeap: function captureHeap(path) {
    var error = null;
    try {
      global.nativeCaptureHeap(path);
      console.log('HeapCapture.captureHeap succeeded: ' + path);
    } catch (e) {
      console.log('HeapCapture.captureHeap error: ' + e.toString());
      error = e.toString();
    }
    require(15             ).JSCHeapCapture.captureComplete(path, error); // 15 = NativeModules
  }
};

module.exports = HeapCapture;
}, 103, null, "HeapCapture");
__d(/* SamplingProfiler */function(global, require, module, exports) {
'use strict';

var SamplingProfiler = {
  poke: function poke(token) {
    var error = null;
    var result = null;
    try {
      result = global.pokeSamplingProfiler();
      if (result === null) {
        console.log('The JSC Sampling Profiler has started');
      } else {
        console.log('The JSC Sampling Profiler has stopped');
      }
    } catch (e) {
      console.log('Error occured when restarting Sampling Profiler: ' + e.toString());
      error = e.toString();
    }

    var _require = require(15             ), // 15 = NativeModules
        JSCSamplingProfiler = _require.JSCSamplingProfiler;

    JSCSamplingProfiler.operationComplete(token, result, error);
  }
};

module.exports = SamplingProfiler;
}, 104, null, "SamplingProfiler");
__d(/* RCTLog */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var levelsMap = {
  log: 'log',
  info: 'info',
  warn: 'warn',
  error: 'error',
  fatal: 'error'
};

var warningHandler = null;

var RCTLog = {
  logIfNoNativeHook: function logIfNoNativeHook(level) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    if (typeof global.nativeLoggingHook === 'undefined') {
      RCTLog.logToConsole.apply(RCTLog, [level].concat(babelHelpers.toConsumableArray(args)));
    } else {
      if (warningHandler && level === 'warn') {
        warningHandler.apply(undefined, babelHelpers.toConsumableArray(args));
      }
    }
  },
  logToConsole: function logToConsole(level) {
    var _console;

    var logFn = levelsMap[level];
    invariant(logFn, 'Level "' + level + '" not one of ' + Object.keys(levelsMap).toString());

    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }

    (_console = console)[logFn].apply(_console, babelHelpers.toConsumableArray(args));
  },
  setWarningHandler: function setWarningHandler(handler) {
    warningHandler = handler;
  }
};

module.exports = RCTLog;
}, 105, null, "RCTLog");
__d(/* RCTNativeAppEventEmitter */function(global, require, module, exports) {
'use strict';

var RCTDeviceEventEmitter = require(84                     ); // 84 = RCTDeviceEventEmitter

var RCTNativeAppEventEmitter = RCTDeviceEventEmitter;
module.exports = RCTNativeAppEventEmitter;
}, 106, null, "RCTNativeAppEventEmitter");
__d(/* PerformanceLogger */function(global, require, module, exports) {
'use strict';

var Systrace = require(19        ); // 19 = Systrace

var infoLog = require(108      ); // 108 = infoLog
var performanceNow = global.nativePerformanceNow || require(69                       ); // 69 = fbjs/lib/performanceNow

var timespans = {};
var extras = {};
var cookies = {};

var PRINT_TO_CONSOLE = false;

var PerformanceLogger = {
  addTimespan: function addTimespan(key, lengthInMs, description) {
    if (timespans[key]) {
      if (__DEV__) {
        infoLog('PerformanceLogger: Attempting to add a timespan that already exists ', key);
      }
      return;
    }

    timespans[key] = {
      description: description,
      totalTime: lengthInMs
    };
  },
  startTimespan: function startTimespan(key, description) {
    if (timespans[key]) {
      if (__DEV__) {
        infoLog('PerformanceLogger: Attempting to start a timespan that already exists ', key);
      }
      return;
    }

    timespans[key] = {
      description: description,
      startTime: performanceNow()
    };
    cookies[key] = Systrace.beginAsyncEvent(key);
    if (__DEV__ && PRINT_TO_CONSOLE) {
      infoLog('PerformanceLogger.js', 'start: ' + key);
    }
  },
  stopTimespan: function stopTimespan(key) {
    var timespan = timespans[key];
    if (!timespan || !timespan.startTime) {
      if (__DEV__) {
        infoLog('PerformanceLogger: Attempting to end a timespan that has not started ', key);
      }
      return;
    }
    if (timespan.endTime) {
      if (__DEV__) {
        infoLog('PerformanceLogger: Attempting to end a timespan that has already ended ', key);
      }
      return;
    }

    timespan.endTime = performanceNow();
    timespan.totalTime = timespan.endTime - (timespan.startTime || 0);
    if (__DEV__ && PRINT_TO_CONSOLE) {
      infoLog('PerformanceLogger.js', 'end: ' + key);
    }

    Systrace.endAsyncEvent(key, cookies[key]);
    delete cookies[key];
  },
  clear: function clear() {
    timespans = {};
    extras = {};
  },
  clearCompleted: function clearCompleted() {
    for (var _key in timespans) {
      if (timespans[_key].totalTime) {
        delete timespans[_key];
      }
    }
    extras = {};
  },
  clearExceptTimespans: function clearExceptTimespans(keys) {
    timespans = Object.keys(timespans).reduce(function (previous, key) {
      if (keys.indexOf(key) !== -1) {
        previous[key] = timespans[key];
      }
      return previous;
    }, {});
    extras = {};
  },
  currentTimestamp: function currentTimestamp() {
    return performanceNow();
  },
  getTimespans: function getTimespans() {
    return timespans;
  },
  hasTimespan: function hasTimespan(key) {
    return !!timespans[key];
  },
  logTimespans: function logTimespans() {
    for (var _key2 in timespans) {
      if (timespans[_key2].totalTime) {
        infoLog(_key2 + ': ' + timespans[_key2].totalTime + 'ms');
      }
    }
  },
  addTimespans: function addTimespans(newTimespans, labels) {
    for (var ii = 0, l = newTimespans.length; ii < l; ii += 2) {
      var label = labels[ii / 2];
      PerformanceLogger.addTimespan(label, newTimespans[ii + 1] - newTimespans[ii], label);
    }
  },
  setExtra: function setExtra(key, value) {
    if (extras[key]) {
      if (__DEV__) {
        infoLog('PerformanceLogger: Attempting to set an extra that already exists ', { key: key, currentValue: extras[key], attemptedValue: value });
      }
      return;
    }
    extras[key] = value;
  },
  getExtras: function getExtras() {
    return extras;
  }
};

module.exports = PerformanceLogger;
}, 107, null, "PerformanceLogger");
__d(/* infoLog */function(global, require, module, exports) {
'use strict';

function infoLog() {
  var _console;

  return (_console = console).log.apply(_console, arguments);
}

module.exports = infoLog;
}, 108, null, "infoLog");
__d(/* HMRClient */function(global, require, module, exports) {
'use strict';

var Platform = require(46        ); // 46 = Platform
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var HMRClient = {
  enable: function enable(platform, bundleEntry, host, port) {
    invariant(platform, 'Missing required parameter `platform`');
    invariant(bundleEntry, 'Missing required paramenter `bundleEntry`');
    invariant(host, 'Missing required paramenter `host`');

    var WebSocket = require(89         ); // 89 = WebSocket

    var wsHostPort = port !== null && port !== '' ? host + ':' + port : host;

    var wsUrl = 'ws://' + wsHostPort + '/hot?' + ('platform=' + platform + '&') + ('bundleEntry=' + bundleEntry.replace('.bundle', '.js'));

    var activeWS = new WebSocket(wsUrl);
    activeWS.onerror = function (e) {
      var error = 'Hot loading isn\'t working because it cannot connect to the development server.\n\nTry the following to fix the issue:\n- Ensure that the packager server is running and available on the same network';

      if (Platform.OS === 'ios') {
        error += '\n- Ensure that the Packager server URL is correctly set in AppDelegate';
      } else {
        error += '\n- Ensure that your device/emulator is connected to your machine and has USB debugging enabled - run \'adb devices\' to see a list of connected devices\n- If you\'re on a physical device connected to the same machine, run \'adb reverse tcp:8081 tcp:8081\' to forward requests from your device\n- If your device is on the same Wi-Fi network, set \'Debug server host & port for device\' in \'Dev settings\' to your machine\'s IP address and the port of the local dev server - e.g. 10.0.1.1:8081';
      }

      error += '\n\nURL: ' + host + ':' + port + '\n\nError: ' + e.message;

      throw new Error(error);
    };
    activeWS.onmessage = function (_ref) {
      var data = _ref.data;

      var HMRLoadingView = require(110             ); // 110 = HMRLoadingView

      data = JSON.parse(data);

      switch (data.type) {
        case 'update-start':
          {
            HMRLoadingView.showMessage('Hot Loading...');
            break;
          }
        case 'update':
          {
            var _data$body = data.body,
                modules = _data$body.modules,
                sourceMappingURLs = _data$body.sourceMappingURLs,
                sourceURLs = _data$body.sourceURLs,
                inverseDependencies = _data$body.inverseDependencies;


            if (Platform.OS === 'ios') {
              var RCTRedBox = require(15             ).RedBox; // 15 = NativeModules
              RCTRedBox && RCTRedBox.dismiss && RCTRedBox.dismiss();
            } else {
              var RCTExceptionsManager = require(15             ).ExceptionsManager; // 15 = NativeModules
              RCTExceptionsManager && RCTExceptionsManager.dismissRedbox && RCTExceptionsManager.dismissRedbox();
            }

            modules.forEach(function (_ref2, i) {
              var id = _ref2.id,
                  code = _ref2.code;

              code = code + '\n\n' + sourceMappingURLs[i];

              var injectFunction = typeof global.nativeInjectHMRUpdate === 'function' ? global.nativeInjectHMRUpdate : eval;

              code = ['__accept(', id + ',', 'function(global,require,module,exports){', '' + code, '\n},', '' + JSON.stringify(inverseDependencies), ');'].join('');

              injectFunction(code, sourceURLs[i]);
            });

            HMRLoadingView.hide();
            break;
          }
        case 'update-done':
          {
            HMRLoadingView.hide();
            break;
          }
        case 'error':
          {
            HMRLoadingView.hide();
            throw new Error(data.body.type + ' ' + data.body.description);
          }
        default:
          {
            throw new Error('Unexpected message: ' + data);
          }
      }
    };
  }
};

module.exports = HMRClient;
}, 109, null, "HMRClient");
__d(/* HMRLoadingView */function(global, require, module, exports) {

'use strict';

var ToastAndroid = require(111           ); // 111 = ToastAndroid

var TOAST_SHORT_DELAY = 2000;

var HMRLoadingView = function () {
  function HMRLoadingView() {
    babelHelpers.classCallCheck(this, HMRLoadingView);
  }

  babelHelpers.createClass(HMRLoadingView, null, [{
    key: 'showMessage',
    value: function showMessage(message) {
      if (HMRLoadingView._showing) {
        return;
      }
      ToastAndroid.show(message, ToastAndroid.SHORT);
      HMRLoadingView._showing = true;
      setTimeout(function () {
        HMRLoadingView._showing = false;
      }, TOAST_SHORT_DELAY);
    }
  }, {
    key: 'hide',
    value: function hide() {}
  }]);
  return HMRLoadingView;
}();

module.exports = HMRLoadingView;
}, 110, null, "HMRLoadingView");
__d(/* ToastAndroid */function(global, require, module, exports) {

'use strict';

var RCTToastAndroid = require(15             ).ToastAndroid; // 15 = NativeModules

var ToastAndroid = {
  SHORT: RCTToastAndroid.SHORT,
  LONG: RCTToastAndroid.LONG,

  TOP: RCTToastAndroid.TOP,
  BOTTOM: RCTToastAndroid.BOTTOM,
  CENTER: RCTToastAndroid.CENTER,

  show: function show(message, duration) {
    RCTToastAndroid.show(message, duration);
  },

  showWithGravity: function showWithGravity(message, duration, gravity) {
    RCTToastAndroid.showWithGravity(message, duration, gravity);
  },

  showWithGravityAndOffset: function showWithGravityAndOffset(message, duration, gravity, xOffset, yOffset) {
    RCTToastAndroid.showWithGravityAndOffset(message, duration, gravity, xOffset, yOffset);
  }
};

module.exports = ToastAndroid;
}, 111, null, "ToastAndroid");
__d(/* setupDevtools */function(global, require, module, exports) {
'use strict';

var register = function register() {};

if (__DEV__) {
  var AppState = require(113       ); // 113 = AppState
  var WebSocket = require(89         ); // 89 = WebSocket

  var _require = require(15             ), // 15 = NativeModules
      PlatformConstants = _require.PlatformConstants;

  var reactDevTools = require(114                  ); // 114 = react-devtools-core

  if (WebSocket.isAvailable) {
    var _isAppActive = function _isAppActive() {
      return AppState.currentState !== 'background';
    };

    var _host = PlatformConstants && PlatformConstants.ServerHost ? PlatformConstants.ServerHost.split(':')[0] : 'localhost';

    reactDevTools.connectToDevTools({
      isAppActive: _isAppActive,
      host: _host,

      port: window.__REACT_DEVTOOLS_PORT__,
      resolveRNStyle: require(43            ) // 43 = flattenStyle
    });
  }
}

module.exports = {
  register: register
};
}, 112, null, "setupDevtools");
__d(/* AppState */function(global, require, module, exports) {
'use strict';

var MissingNativeEventEmitterShim = require(78                             ); // 78 = MissingNativeEventEmitterShim
var NativeEventEmitter = require(83                  ); // 83 = NativeEventEmitter
var NativeModules = require(15             ); // 15 = NativeModules
var RCTAppState = NativeModules.AppState;

var logError = require(101       ); // 101 = logError
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var AppState = function (_NativeEventEmitter) {
  babelHelpers.inherits(AppState, _NativeEventEmitter);

  function AppState() {
    babelHelpers.classCallCheck(this, AppState);

    var _this = babelHelpers.possibleConstructorReturn(this, (AppState.__proto__ || Object.getPrototypeOf(AppState)).call(this, RCTAppState));

    _this.isAvailable = true;


    _this.isAvailable = true;
    _this._eventHandlers = {
      change: new Map(),
      memoryWarning: new Map()
    };

    _this.currentState = RCTAppState.initialAppState || 'active';

    var eventUpdated = false;

    _this.addListener('appStateDidChange', function (appStateData) {
      eventUpdated = true;
      _this.currentState = appStateData.app_state;
    });

    RCTAppState.getCurrentAppState(function (appStateData) {
      if (!eventUpdated) {
        _this.currentState = appStateData.app_state;
      }
    }, logError);
    return _this;
  }

  babelHelpers.createClass(AppState, [{
    key: 'addEventListener',
    value: function addEventListener(type, handler) {
      invariant(['change', 'memoryWarning'].indexOf(type) !== -1, 'Trying to subscribe to unknown event: "%s"', type);
      if (type === 'change') {
        this._eventHandlers[type].set(handler, this.addListener('appStateDidChange', function (appStateData) {
          handler(appStateData.app_state);
        }));
      } else if (type === 'memoryWarning') {
        this._eventHandlers[type].set(handler, this.addListener('memoryWarning', handler));
      }
    }
  }, {
    key: 'removeEventListener',
    value: function removeEventListener(type, handler) {
      invariant(['change', 'memoryWarning'].indexOf(type) !== -1, 'Trying to remove listener for unknown event: "%s"', type);
      if (!this._eventHandlers[type].has(handler)) {
        return;
      }
      this._eventHandlers[type].get(handler).remove();
      this._eventHandlers[type].delete(handler);
    }
  }]);
  return AppState;
}(NativeEventEmitter);

if (__DEV__ && !RCTAppState) {
  var MissingNativeAppStateShim = function (_MissingNativeEventEm) {
    babelHelpers.inherits(MissingNativeAppStateShim, _MissingNativeEventEm);

    function MissingNativeAppStateShim() {
      babelHelpers.classCallCheck(this, MissingNativeAppStateShim);
      return babelHelpers.possibleConstructorReturn(this, (MissingNativeAppStateShim.__proto__ || Object.getPrototypeOf(MissingNativeAppStateShim)).call(this, 'RCTAppState', 'AppState'));
    }

    babelHelpers.createClass(MissingNativeAppStateShim, [{
      key: 'addEventListener',
      value: function addEventListener() {
        this.throwMissingNativeModule();
      }
    }, {
      key: 'removeEventListener',
      value: function removeEventListener() {
        this.throwMissingNativeModule();
      }
    }, {
      key: 'currentState',
      get: function get() {
        this.throwMissingNativeModule();
      }
    }]);
    return MissingNativeAppStateShim;
  }(MissingNativeEventEmitterShim);

  AppState = new MissingNativeAppStateShim();
} else {
  AppState = new AppState();
}

module.exports = AppState;
}, 113, null, "AppState");
__d(/* react-devtools-core/build/backend.js */function(global, require, module, exports) {!function (root, factory) {
    "object" == typeof exports && "object" == typeof module ? module.exports = factory() : "function" == typeof define && define.amd ? define([], factory) : "object" == typeof exports ? exports.ReactDevToolsBackend = factory() : root.ReactDevToolsBackend = factory();
}(this, function () {
    return function (modules) {
        function __webpack_require__(moduleId) {
            if (installedModules[moduleId]) return installedModules[moduleId].exports;
            var module = installedModules[moduleId] = {
                exports: {},
                id: moduleId,
                loaded: !1
            };
            return modules[moduleId].call(module.exports, module, module.exports, __webpack_require__), module.loaded = !0, module.exports;
        }
        var installedModules = {};
        return __webpack_require__.m = modules, __webpack_require__.c = installedModules, __webpack_require__.p = "", __webpack_require__(0);
    }([function (module, exports, __webpack_require__) {
        "use strict";

        function connectToDevTools(options) {
            function scheduleRetry() {
                setTimeout(function () {
                    return connectToDevTools(options);
                }, 2e3);
            }
            function handleClose() {
                hasClosed || (hasClosed = !0, scheduleRetry(), closeListeners.forEach(function (fn) {
                    return fn();
                }));
            }
            function handleMessage(evt) {
                var data;
                if (0 !== evt.data.indexOf("eval:")) {
                    try {
                        data = JSON.parse(evt.data);
                    } catch (e) {
                        return void console.error("failed to parse json: " + evt.data);
                    }
                    messageListeners.forEach(function (fn) {
                        try {
                            fn(data);
                        } catch (e) {
                            throw console.log(data), e;
                        }
                    });
                }
            }
            var _ref = options || {},
                _ref$host = _ref.host,
                host = void 0 === _ref$host ? "localhost" : _ref$host,
                _ref$port = _ref.port,
                port = void 0 === _ref$port ? 8097 : _ref$port,
                _ref$resolveRNStyle = _ref.resolveRNStyle,
                resolveRNStyle = void 0 === _ref$resolveRNStyle ? null : _ref$resolveRNStyle,
                _ref$isAppActive = _ref.isAppActive,
                isAppActive = void 0 === _ref$isAppActive ? function () {
                return !0;
            } : _ref$isAppActive;
            if (!isAppActive()) return void scheduleRetry();
            var messageListeners = [],
                closeListeners = [],
                uri = "ws://" + host + ":" + port,
                ws = new window.WebSocket(uri);
            ws.onclose = handleClose, ws.onerror = handleClose, ws.onmessage = handleMessage, ws.onopen = function () {
                var wall = {
                    listen: function listen(fn) {
                        messageListeners.push(fn);
                    },
                    onClose: function onClose(fn) {
                        closeListeners.push(fn);
                    },
                    send: function send(data) {
                        ws.send(JSON.stringify(data));
                    }
                };
                setupBackend(wall, resolveRNStyle);
            };
            var hasClosed = !1;
        }
        function setupBackend(wall, resolveRNStyle) {
            wall.onClose(function () {
                agent && agent.emit("shutdown"), window.__REACT_DEVTOOLS_GLOBAL_HOOK__.emit("shutdown"), bridge = null, agent = null, console.log("closing devtools");
            });
            var bridge = new Bridge(wall),
                agent = new Agent(window, {
                rnStyle: !!resolveRNStyle,
                rnStyleMeasure: !!resolveRNStyle
            });
            agent.addBridge(bridge), resolveRNStyle && setupRNStyle(bridge, agent, resolveRNStyle), setupRelay(bridge, agent, window.__REACT_DEVTOOLS_GLOBAL_HOOK__);
            var _connectTimeout = setTimeout(function () {
                console.warn("react-devtools agent got no connection");
            }, 2e4);
            agent.once("connected", function () {
                agent && (inject(window.__REACT_DEVTOOLS_GLOBAL_HOOK__, agent), clearTimeout(_connectTimeout));
            });
        }
        var Agent = __webpack_require__(1),
            Bridge = __webpack_require__(6),
            installGlobalHook = __webpack_require__(31),
            installRelayHook = __webpack_require__(32),
            inject = __webpack_require__(33),
            setupRNStyle = __webpack_require__(45),
            setupRelay = __webpack_require__(47);
        installGlobalHook(window), installRelayHook(window), window.document && window.__REACT_DEVTOOLS_GLOBAL_HOOK__.on("react-devtools", function (agent) {
            var setupHighlighter = __webpack_require__(48);
            setupHighlighter(agent);
        }), module.exports = {
            connectToDevTools: connectToDevTools
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        function _possibleConstructorReturn(self, call) {
            if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !call || "object" != typeof call && "function" != typeof call ? self : call;
        }
        function _inherits(subClass, superClass) {
            if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            subClass.prototype = Object.create(superClass && superClass.prototype, {
                constructor: {
                    value: subClass,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
        }
        var _typeof = "function" == typeof Symbol && "symbol" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") ? function (obj) {
            return typeof obj;
        } : function (obj) {
            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
        },
            _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function (Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor;
            };
        }(),
            _require = __webpack_require__(2),
            EventEmitter = _require.EventEmitter,
            assign = __webpack_require__(3),
            guid = __webpack_require__(4),
            getIn = __webpack_require__(5),
            Agent = function (_EventEmitter) {
            function Agent(global, capabilities) {
                _classCallCheck(this, Agent);
                var _this = _possibleConstructorReturn(this, (Agent.__proto__ || Object.getPrototypeOf(Agent)).call(this));
                _this.global = global, _this.internalInstancesById = new Map(), _this.idsByInternalInstances = new WeakMap(), _this.renderers = new Map(), _this.elementData = new Map(), _this.roots = new Set(), _this.reactInternals = {};
                var lastSelected;
                _this.on("selected", function (id) {
                    var data = _this.elementData.get(id);
                    data && data.publicInstance && _this.global.$r === lastSelected && (_this.global.$r = data.publicInstance, lastSelected = data.publicInstance);
                }), _this._prevSelected = null, _this._scrollUpdate = !1;
                var isReactDOM = window.document && "function" == typeof window.document.createElement;
                return _this.capabilities = assign({
                    scroll: isReactDOM && "function" == typeof window.document.body.scrollIntoView,
                    dom: isReactDOM,
                    editTextContent: !1
                }, capabilities), isReactDOM && (_this._updateScroll = _this._updateScroll.bind(_this), window.addEventListener("scroll", _this._onScroll.bind(_this), !0), window.addEventListener("click", _this._onClick.bind(_this), !0), window.addEventListener("mouseover", _this._onMouseOver.bind(_this), !0), window.addEventListener("resize", _this._onResize.bind(_this), !0)), _this;
            }
            return _inherits(Agent, _EventEmitter), _createClass(Agent, [{
                key: "sub",
                value: function value(ev, fn) {
                    var _this2 = this;
                    return this.on(ev, fn), function () {
                        _this2.removeListener(ev, fn);
                    };
                }
            }, {
                key: "setReactInternals",
                value: function value(renderer, reactInternals) {
                    this.reactInternals[renderer] = reactInternals;
                }
            }, {
                key: "addBridge",
                value: function value(bridge) {
                    var _this3 = this;
                    bridge.on("requestCapabilities", function () {
                        bridge.send("capabilities", _this3.capabilities), _this3.emit("connected");
                    }), bridge.on("setState", this._setState.bind(this)), bridge.on("setProps", this._setProps.bind(this)), bridge.on("setContext", this._setContext.bind(this)), bridge.on("makeGlobal", this._makeGlobal.bind(this)), bridge.on("highlight", function (id) {
                        return _this3.highlight(id);
                    }), bridge.on("highlightMany", function (id) {
                        return _this3.highlightMany(id);
                    }), bridge.on("hideHighlight", function () {
                        return _this3.emit("hideHighlight");
                    }), bridge.on("startInspecting", function () {
                        return _this3.emit("startInspecting");
                    }), bridge.on("stopInspecting", function () {
                        return _this3.emit("stopInspecting");
                    }), bridge.on("selected", function (id) {
                        return _this3.emit("selected", id);
                    }), bridge.on("setInspectEnabled", function (enabled) {
                        _this3._inspectEnabled = enabled, _this3.emit("stopInspecting");
                    }), bridge.on("shutdown", function () {
                        return _this3.emit("shutdown");
                    }), bridge.on("changeTextContent", function (_ref) {
                        var id = _ref.id,
                            text = _ref.text,
                            node = _this3.getNodeForID(id);
                        node && (node.textContent = text);
                    }), bridge.on("putSelectedNode", function (id) {
                        window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$node = _this3.getNodeForID(id);
                    }), bridge.on("putSelectedInstance", function (id) {
                        var node = _this3.elementData.get(id);
                        node ? window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$type = node.type : window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$type = null, node && node.publicInstance ? window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$inst = node.publicInstance : window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$inst = null;
                    }), bridge.on("checkSelection", function () {
                        var newSelected = window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$0;
                        if (newSelected !== _this3._prevSelected) {
                            _this3._prevSelected = newSelected;
                            var sentSelected = window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$node;
                            newSelected !== sentSelected && _this3.selectFromDOMNode(newSelected, !0);
                        }
                    }), bridge.on("scrollToNode", function (id) {
                        return _this3.scrollToNode(id);
                    }), bridge.on("traceupdatesstatechange", function (value) {
                        return _this3.emit("traceupdatesstatechange", value);
                    }), bridge.on("colorizerchange", function (value) {
                        return _this3.emit("colorizerchange", value);
                    }), this.on("root", function (id) {
                        return bridge.send("root", id);
                    }), this.on("mount", function (data) {
                        return bridge.send("mount", data);
                    }), this.on("update", function (data) {
                        return bridge.send("update", data);
                    }), this.on("unmount", function (id) {
                        bridge.send("unmount", id), bridge.forget(id);
                    }), this.on("setSelection", function (data) {
                        return bridge.send("select", data);
                    }), this.on("setInspectEnabled", function (data) {
                        return bridge.send("setInspectEnabled", data);
                    });
                }
            }, {
                key: "scrollToNode",
                value: function value(id) {
                    var node = this.getNodeForID(id);
                    if (!node) return void console.warn("unable to get the node for scrolling");
                    var domElement = node.nodeType === Node.ELEMENT_NODE ? node : node.parentElement;
                    return domElement ? ("function" == typeof domElement.scrollIntoViewIfNeeded ? domElement.scrollIntoViewIfNeeded() : "function" == typeof domElement.scrollIntoView && domElement.scrollIntoView(), void this.highlight(id)) : void console.warn("unable to get the domElement for scrolling");
                }
            }, {
                key: "highlight",
                value: function value(id) {
                    var data = this.elementData.get(id),
                        node = this.getNodeForID(id);
                    data && node && this.emit("highlight", {
                        node: node,
                        name: data.name,
                        props: data.props
                    });
                }
            }, {
                key: "highlightMany",
                value: function value(ids) {
                    var _this4 = this,
                        nodes = [];
                    ids.forEach(function (id) {
                        var node = _this4.getNodeForID(id);
                        node && nodes.push(node);
                    }), nodes.length && this.emit("highlightMany", nodes);
                }
            }, {
                key: "getNodeForID",
                value: function value(id) {
                    var component = this.internalInstancesById.get(id);
                    if (!component) return null;
                    var renderer = this.renderers.get(id);
                    return renderer && this.reactInternals[renderer].getNativeFromReactElement ? this.reactInternals[renderer].getNativeFromReactElement(component) : null;
                }
            }, {
                key: "selectFromDOMNode",
                value: function value(node, quiet) {
                    var offsetFromLeaf = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                        id = this.getIDForNode(node);
                    id && this.emit("setSelection", {
                        id: id,
                        quiet: quiet,
                        offsetFromLeaf: offsetFromLeaf
                    });
                }
            }, {
                key: "selectFromReactInstance",
                value: function value(instance, quiet) {
                    var id = this.getId(instance);
                    return id ? void this.emit("setSelection", {
                        id: id,
                        quiet: quiet
                    }) : void console.log("no instance id", instance);
                }
            }, {
                key: "getIDForNode",
                value: function value(node) {
                    if (!this.reactInternals) return null;
                    var component;
                    for (var renderer in this.reactInternals) {
                        try {
                            component = this.reactInternals[renderer].getReactElementFromNative(node);
                        } catch (e) {}
                        if (component) return this.getId(component);
                    }
                    return null;
                }
            }, {
                key: "_setProps",
                value: function value(_ref2) {
                    var id = _ref2.id,
                        path = _ref2.path,
                        value = _ref2.value,
                        data = this.elementData.get(id);
                    data && data.updater && data.updater.setInProps ? data.updater.setInProps(path, value) : console.warn("trying to set props on a component that doesn't support it");
                }
            }, {
                key: "_setState",
                value: function value(_ref3) {
                    var id = _ref3.id,
                        path = _ref3.path,
                        value = _ref3.value,
                        data = this.elementData.get(id);
                    data && data.updater && data.updater.setInState ? data.updater.setInState(path, value) : console.warn("trying to set state on a component that doesn't support it");
                }
            }, {
                key: "_setContext",
                value: function value(_ref4) {
                    var id = _ref4.id,
                        path = _ref4.path,
                        value = _ref4.value,
                        data = this.elementData.get(id);
                    data && data.updater && data.updater.setInContext ? data.updater.setInContext(path, value) : console.warn("trying to set context on a component that doesn't support it");
                }
            }, {
                key: "_makeGlobal",
                value: function value(_ref5) {
                    var id = _ref5.id,
                        path = _ref5.path,
                        data = this.elementData.get(id);
                    if (data) {
                        var value;
                        value = "instance" === path ? data.publicInstance : getIn(data, path), this.global.$tmp = value, console.log("$tmp =", value);
                    }
                }
            }, {
                key: "getId",
                value: function value(internalInstance) {
                    return "object" === ("undefined" == typeof internalInstance ? "undefined" : _typeof(internalInstance)) && internalInstance ? (this.idsByInternalInstances.has(internalInstance) || (this.idsByInternalInstances.set(internalInstance, guid()), this.internalInstancesById.set(this.idsByInternalInstances.get(internalInstance), internalInstance)), this.idsByInternalInstances.get(internalInstance)) : internalInstance;
                }
            }, {
                key: "addRoot",
                value: function value(renderer, internalInstance) {
                    var id = this.getId(internalInstance);
                    this.roots.add(id), this.emit("root", id);
                }
            }, {
                key: "onMounted",
                value: function value(renderer, component, data) {
                    var _this5 = this,
                        id = this.getId(component);
                    this.renderers.set(id, renderer), this.elementData.set(id, data);
                    var send = assign({}, data);
                    send.children && send.children.map && (send.children = send.children.map(function (c) {
                        return _this5.getId(c);
                    })), send.id = id, send.canUpdate = send.updater && !!send.updater.forceUpdate, delete send.type, delete send.updater, this.emit("mount", send);
                }
            }, {
                key: "onUpdated",
                value: function value(component, data) {
                    var _this6 = this,
                        id = this.getId(component);
                    this.elementData.set(id, data);
                    var send = assign({}, data);
                    send.children && send.children.map && (send.children = send.children.map(function (c) {
                        return _this6.getId(c);
                    })), send.id = id, send.canUpdate = send.updater && !!send.updater.forceUpdate, delete send.type, delete send.updater, this.emit("update", send);
                }
            }, {
                key: "onUnmounted",
                value: function value(component) {
                    var id = this.getId(component);
                    this.elementData["delete"](id), this.roots["delete"](id), this.renderers["delete"](id), this.emit("unmount", id), this.idsByInternalInstances["delete"](component);
                }
            }, {
                key: "_onScroll",
                value: function value() {
                    this._scrollUpdate || (this._scrollUpdate = !0, window.requestAnimationFrame(this._updateScroll));
                }
            }, {
                key: "_updateScroll",
                value: function value() {
                    this.emit("refreshMultiOverlay"), this.emit("stopInspecting"), this._scrollUpdate = !1;
                }
            }, {
                key: "_onClick",
                value: function value(event) {
                    if (this._inspectEnabled) {
                        var id = this.getIDForNode(event.target);
                        id && (event.stopPropagation(), event.preventDefault(), this.emit("setSelection", {
                            id: id
                        }), this.emit("setInspectEnabled", !1));
                    }
                }
            }, {
                key: "_onMouseOver",
                value: function value(event) {
                    if (this._inspectEnabled) {
                        var id = this.getIDForNode(event.target);
                        if (!id) return;
                        this.highlight(id);
                    }
                }
            }, {
                key: "_onResize",
                value: function value(event) {
                    this.emit("stopInspecting");
                }
            }]), Agent;
        }(EventEmitter);
        module.exports = Agent;
    }, function (module, exports) {
        function EventEmitter() {
            this._events = this._events || {}, this._maxListeners = this._maxListeners || void 0;
        }
        function isFunction(arg) {
            return "function" == typeof arg;
        }
        function isNumber(arg) {
            return "number" == typeof arg;
        }
        function isObject(arg) {
            return "object" == typeof arg && null !== arg;
        }
        function isUndefined(arg) {
            return void 0 === arg;
        }
        module.exports = EventEmitter, EventEmitter.EventEmitter = EventEmitter, EventEmitter.prototype._events = void 0, EventEmitter.prototype._maxListeners = void 0, EventEmitter.defaultMaxListeners = 10, EventEmitter.prototype.setMaxListeners = function (n) {
            if (!isNumber(n) || n < 0 || isNaN(n)) throw TypeError("n must be a positive number");
            return this._maxListeners = n, this;
        }, EventEmitter.prototype.emit = function (type) {
            var er, handler, len, args, i, listeners;
            if (this._events || (this._events = {}), "error" === type && (!this._events.error || isObject(this._events.error) && !this._events.error.length)) {
                if (er = arguments[1], er instanceof Error) throw er;
                var err = new Error('Uncaught, unspecified "error" event. (' + er + ")");
                throw err.context = er, err;
            }
            if (handler = this._events[type], isUndefined(handler)) return !1;
            if (isFunction(handler)) switch (arguments.length) {
                case 1:
                    handler.call(this);
                    break;

                case 2:
                    handler.call(this, arguments[1]);
                    break;

                case 3:
                    handler.call(this, arguments[1], arguments[2]);
                    break;

                default:
                    args = Array.prototype.slice.call(arguments, 1), handler.apply(this, args);
            } else if (isObject(handler)) for (args = Array.prototype.slice.call(arguments, 1), listeners = handler.slice(), len = listeners.length, i = 0; i < len; i++) {
                listeners[i].apply(this, args);
            }return !0;
        }, EventEmitter.prototype.addListener = function (type, listener) {
            var m;
            if (!isFunction(listener)) throw TypeError("listener must be a function");
            return this._events || (this._events = {}), this._events.newListener && this.emit("newListener", type, isFunction(listener.listener) ? listener.listener : listener), this._events[type] ? isObject(this._events[type]) ? this._events[type].push(listener) : this._events[type] = [this._events[type], listener] : this._events[type] = listener, isObject(this._events[type]) && !this._events[type].warned && (m = isUndefined(this._maxListeners) ? EventEmitter.defaultMaxListeners : this._maxListeners, m && m > 0 && this._events[type].length > m && (this._events[type].warned = !0, console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.", this._events[type].length), "function" == typeof console.trace && console.trace())), this;
        }, EventEmitter.prototype.on = EventEmitter.prototype.addListener, EventEmitter.prototype.once = function (type, listener) {
            function g() {
                this.removeListener(type, g), fired || (fired = !0, listener.apply(this, arguments));
            }
            if (!isFunction(listener)) throw TypeError("listener must be a function");
            var fired = !1;
            return g.listener = listener, this.on(type, g), this;
        }, EventEmitter.prototype.removeListener = function (type, listener) {
            var list, position, length, i;
            if (!isFunction(listener)) throw TypeError("listener must be a function");
            if (!this._events || !this._events[type]) return this;
            if (list = this._events[type], length = list.length, position = -1, list === listener || isFunction(list.listener) && list.listener === listener) delete this._events[type], this._events.removeListener && this.emit("removeListener", type, listener);else if (isObject(list)) {
                for (i = length; i-- > 0;) {
                    if (list[i] === listener || list[i].listener && list[i].listener === listener) {
                        position = i;
                        break;
                    }
                }if (position < 0) return this;
                1 === list.length ? (list.length = 0, delete this._events[type]) : list.splice(position, 1), this._events.removeListener && this.emit("removeListener", type, listener);
            }
            return this;
        }, EventEmitter.prototype.removeAllListeners = function (type) {
            var key, listeners;
            if (!this._events) return this;
            if (!this._events.removeListener) return 0 === arguments.length ? this._events = {} : this._events[type] && delete this._events[type], this;
            if (0 === arguments.length) {
                for (key in this._events) {
                    "removeListener" !== key && this.removeAllListeners(key);
                }return this.removeAllListeners("removeListener"), this._events = {}, this;
            }
            if (listeners = this._events[type], isFunction(listeners)) this.removeListener(type, listeners);else if (listeners) for (; listeners.length;) {
                this.removeListener(type, listeners[listeners.length - 1]);
            }return delete this._events[type], this;
        }, EventEmitter.prototype.listeners = function (type) {
            var ret;
            return ret = this._events && this._events[type] ? isFunction(this._events[type]) ? [this._events[type]] : this._events[type].slice() : [];
        }, EventEmitter.prototype.listenerCount = function (type) {
            if (this._events) {
                var evlistener = this._events[type];
                if (isFunction(evlistener)) return 1;
                if (evlistener) return evlistener.length;
            }
            return 0;
        }, EventEmitter.listenerCount = function (emitter, type) {
            return emitter.listenerCount(type);
        };
    }, function (module, exports) {
        "use strict";

        function toObject(val) {
            if (null === val || void 0 === val) throw new TypeError("Object.assign cannot be called with null or undefined");
            return Object(val);
        }
        var hasOwnProperty = Object.prototype.hasOwnProperty,
            propIsEnumerable = Object.prototype.propertyIsEnumerable;
        module.exports = Object.assign || function (target, source) {
            for (var from, symbols, to = toObject(target), s = 1; s < arguments.length; s++) {
                from = Object(arguments[s]);
                for (var key in from) {
                    hasOwnProperty.call(from, key) && (to[key] = from[key]);
                }if (Object.getOwnPropertySymbols) {
                    symbols = Object.getOwnPropertySymbols(from);
                    for (var i = 0; i < symbols.length; i++) {
                        propIsEnumerable.call(from, symbols[i]) && (to[symbols[i]] = from[symbols[i]]);
                    }
                }
            }
            return to;
        };
    }, function (module, exports) {
        "use strict";

        function guid() {
            return "g" + Math.random().toString(16).substr(2);
        }
        module.exports = guid;
    }, function (module, exports) {
        "use strict";

        function _toConsumableArray(arr) {
            if (Array.isArray(arr)) {
                for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
                    arr2[i] = arr[i];
                }return arr2;
            }
            return Array.from(arr);
        }
        function getIn(base, path) {
            return path.reduce(function (obj, attr) {
                if (obj) {
                    if (obj.hasOwnProperty(attr)) return obj[attr];
                    if ("function" == typeof obj[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]) return [].concat(_toConsumableArray(obj))[attr];
                }
                return null;
            }, base);
        }
        module.exports = getIn;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function _toConsumableArray(arr) {
            if (Array.isArray(arr)) {
                for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
                    arr2[i] = arr[i];
                }return arr2;
            }
            return Array.from(arr);
        }
        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        function getWindowFunction(name, polyfill) {
            return String(window[name]).indexOf("[native code]") === -1 ? polyfill : window[name];
        }
        var _extends = Object.assign || function (target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                    Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
                }
            }
            return target;
        },
            _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function (Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor;
            };
        }(),
            consts = __webpack_require__(7),
            hydrate = __webpack_require__(26),
            dehydrate = __webpack_require__(27),
            getIn = __webpack_require__(5),
            performanceNow = __webpack_require__(28),
            lastRunTimeMS = 5,
            cancelIdleCallback = getWindowFunction("cancelIdleCallback", clearTimeout),
            requestIdleCallback = getWindowFunction("requestIdleCallback", function (cb, options) {
            var delayMS = 3e3 * lastRunTimeMS;
            return delayMS > 500 && (delayMS = 500), setTimeout(function () {
                var startTime = performanceNow();
                cb({
                    didTimeout: !1,
                    timeRemaining: function timeRemaining() {
                        return 1 / 0;
                    }
                });
                var endTime = performanceNow();
                lastRunTimeMS = (endTime - startTime) / 1e3;
            }, delayMS);
        }),
            Bridge = function () {
            function Bridge(wall) {
                _classCallCheck(this, Bridge), this._cbs = new Map(), this._inspectables = new Map(), this._cid = 0, this._listeners = {}, this._buffer = [], this._flushHandle = null, this._callers = {}, this._paused = !1, this._wall = wall, wall.listen(this._handleMessage.bind(this));
            }
            return _createClass(Bridge, [{
                key: "inspect",
                value: function value(id, path, cb) {
                    var _cid = this._cid++;
                    this._cbs.set(_cid, function (data, cleaned, proto, protoclean) {
                        cleaned.length && hydrate(data, cleaned), proto && protoclean.length && hydrate(proto, protoclean), proto && (data[consts.proto] = proto), cb(data);
                    }), this._wall.send({
                        type: "inspect",
                        callback: _cid,
                        path: path,
                        id: id
                    });
                }
            }, {
                key: "call",
                value: function value(name, args, cb) {
                    var _cid = this._cid++;
                    this._cbs.set(_cid, cb), this._wall.send({
                        type: "call",
                        callback: _cid,
                        args: args,
                        name: name
                    });
                }
            }, {
                key: "onCall",
                value: function value(name, handler) {
                    if (this._callers[name]) throw new Error("only one call handler per call name allowed");
                    this._callers[name] = handler;
                }
            }, {
                key: "pause",
                value: function value() {
                    this._wall.send({
                        type: "pause"
                    });
                }
            }, {
                key: "resume",
                value: function value() {
                    this._wall.send({
                        type: "resume"
                    });
                }
            }, {
                key: "setInspectable",
                value: function value(id, data) {
                    var prev = this._inspectables.get(id);
                    return prev ? void this._inspectables.set(id, _extends({}, prev, data)) : void this._inspectables.set(id, data);
                }
            }, {
                key: "send",
                value: function value(evt, data) {
                    this._buffer.push({
                        evt: evt,
                        data: data
                    }), this.scheduleFlush();
                }
            }, {
                key: "scheduleFlush",
                value: function value() {
                    if (!this._flushHandle && this._buffer.length) {
                        var timeout = this._paused ? 5e3 : 500;
                        this._flushHandle = requestIdleCallback(this.flushBufferWhileIdle.bind(this), {
                            timeout: timeout
                        });
                    }
                }
            }, {
                key: "cancelFlush",
                value: function value() {
                    this._flushHandle && (cancelIdleCallback(this._flushHandle), this._flushHandle = null);
                }
            }, {
                key: "flushBufferWhileIdle",
                value: function value(deadline) {
                    this._flushHandle = null;
                    for (var chunkCount = this._paused ? 20 : 10, chunkSize = Math.round(this._buffer.length / chunkCount), minChunkSize = this._paused ? 50 : 100; this._buffer.length && (deadline.timeRemaining() > 0 || deadline.didTimeout);) {
                        var take = Math.min(this._buffer.length, Math.max(minChunkSize, chunkSize)),
                            currentBuffer = this._buffer.splice(0, take);
                        this.flushBufferSlice(currentBuffer);
                    }
                    this._buffer.length && this.scheduleFlush();
                }
            }, {
                key: "flushBufferSlice",
                value: function value(bufferSlice) {
                    var _this = this,
                        events = bufferSlice.map(function (_ref) {
                        var evt = _ref.evt,
                            data = _ref.data,
                            cleaned = [],
                            san = dehydrate(data, cleaned);
                        return cleaned.length && _this.setInspectable(data.id, data), {
                            type: "event",
                            evt: evt,
                            data: san,
                            cleaned: cleaned
                        };
                    });
                    this._wall.send({
                        type: "many-events",
                        events: events
                    });
                }
            }, {
                key: "forget",
                value: function value(id) {
                    this._inspectables["delete"](id);
                }
            }, {
                key: "on",
                value: function value(evt, fn) {
                    this._listeners[evt] ? this._listeners[evt].push(fn) : this._listeners[evt] = [fn];
                }
            }, {
                key: "off",
                value: function value(evt, fn) {
                    if (this._listeners[evt]) {
                        var ix = this._listeners[evt].indexOf(fn);
                        ix !== -1 && this._listeners[evt].splice(ix, 1);
                    }
                }
            }, {
                key: "once",
                value: function value(evt, fn) {
                    var self = this,
                        listener = function listener() {
                        fn.apply(this, arguments), self.off(evt, listener);
                    };
                    this.on(evt, listener);
                }
            }, {
                key: "_handleMessage",
                value: function value(payload) {
                    var _this2 = this;
                    if ("resume" === payload.type) return this._paused = !1, void this.scheduleFlush();
                    if ("pause" === payload.type) return this._paused = !0, void this.cancelFlush();
                    if ("callback" === payload.type) {
                        var callback = this._cbs.get(payload.id);
                        return void (callback && (callback.apply(void 0, _toConsumableArray(payload.args)), this._cbs["delete"](payload.id)));
                    }
                    if ("call" === payload.type) return void this._handleCall(payload.name, payload.args, payload.callback);
                    if ("inspect" === payload.type) return void this._inspectResponse(payload.id, payload.path, payload.callback);
                    if ("event" === payload.type) {
                        payload.cleaned && hydrate(payload.data, payload.cleaned);
                        var fns = this._listeners[payload.evt],
                            data = payload.data;
                        fns && fns.forEach(function (fn) {
                            return fn(data);
                        });
                    }
                    "many-events" === payload.type && payload.events.forEach(function (event) {
                        event.cleaned && hydrate(event.data, event.cleaned);
                        var handlers = _this2._listeners[event.evt];
                        handlers && handlers.forEach(function (fn) {
                            return fn(event.data);
                        });
                    });
                }
            }, {
                key: "_handleCall",
                value: function value(name, args, callback) {
                    if (!this._callers[name]) return void console.warn('unknown call: "' + name + '"');
                    args = Array.isArray(args) ? args : [args];
                    var result;
                    try {
                        result = this._callers[name].apply(null, args);
                    } catch (e) {
                        return void console.error("Failed to call", e);
                    }
                    this._wall.send({
                        type: "callback",
                        id: callback,
                        args: [result]
                    });
                }
            }, {
                key: "_inspectResponse",
                value: function value(id, path, callback) {
                    var inspectable = this._inspectables.get(id),
                        result = {},
                        cleaned = [],
                        proto = null,
                        protoclean = [];
                    if (inspectable) {
                        var val = getIn(inspectable, path),
                            protod = !1,
                            isFn = "function" == typeof val;
                        if (val && "function" == typeof val[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]) {
                            var iterVal = Object.create({}),
                                count = 0,
                                _iteratorNormalCompletion = !0,
                                _didIteratorError = !1,
                                _iteratorError = void 0;
                            try {
                                for (var _step, _iterator = val[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = !0) {
                                    var entry = _step.value;
                                    if (count > 100) break;
                                    iterVal[count] = entry, count++;
                                }
                            } catch (err) {
                                _didIteratorError = !0, _iteratorError = err;
                            } finally {
                                try {
                                    !_iteratorNormalCompletion && _iterator["return"] && _iterator["return"]();
                                } finally {
                                    if (_didIteratorError) throw _iteratorError;
                                }
                            }
                            val = iterVal;
                        }
                        if (Object.getOwnPropertyNames(val).forEach(function (name) {
                            "__proto__" === name && (protod = !0), (!isFn || "arguments" !== name && "callee" !== name && "caller" !== name) && (result[name] = dehydrate(val[name], cleaned, [name]));
                        }), !protod && val.__proto__ && "Object" !== val.constructor.name) {
                            var newProto = {},
                                pIsFn = "function" == typeof val.__proto__;
                            Object.getOwnPropertyNames(val.__proto__).forEach(function (name) {
                                (!pIsFn || "arguments" !== name && "callee" !== name && "caller" !== name) && (newProto[name] = dehydrate(val.__proto__[name], protoclean, [name]));
                            }), proto = newProto;
                        }
                    }
                    this._wall.send({
                        type: "callback",
                        id: callback,
                        args: [result, cleaned, proto, protoclean]
                    });
                }
            }]), Bridge;
        }();
        module.exports = Bridge;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var _Symbol = __webpack_require__(8);
        module.exports = {
            name: _Symbol("name"),
            type: _Symbol("type"),
            inspected: _Symbol("inspected"),
            meta: _Symbol("meta"),
            proto: _Symbol("proto")
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        module.exports = __webpack_require__(9)() ? Symbol : __webpack_require__(10);
    }, function (module, exports) {
        "use strict";

        module.exports = function () {
            var symbol;
            if ("function" != typeof Symbol) return !1;
            symbol = Symbol("test symbol");
            try {
                String(symbol);
            } catch (e) {
                return !1;
            }
            return "symbol" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") || "object" == typeof (typeof Symbol === "function" ? Symbol.isConcatSpreadable : "@@isConcatSpreadable") && "object" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") && "object" == typeof (typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive") && "object" == typeof (typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag") && "object" == typeof (typeof Symbol === "function" ? Symbol.unscopables : "@@unscopables");
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var NativeSymbol,
            SymbolPolyfill,
            _HiddenSymbol,
            d = __webpack_require__(11),
            validateSymbol = __webpack_require__(24),
            create = Object.create,
            defineProperties = Object.defineProperties,
            defineProperty = Object.defineProperty,
            objPrototype = Object.prototype,
            globalSymbols = create(null);
        "function" == typeof Symbol && (NativeSymbol = Symbol);
        var generateName = function () {
            var created = create(null);
            return function (desc) {
                for (var name, ie11BugWorkaround, postfix = 0; created[desc + (postfix || "")];) {
                    ++postfix;
                }return desc += postfix || "", created[desc] = !0, name = "@@" + desc, defineProperty(objPrototype, name, d.gs(null, function (value) {
                    ie11BugWorkaround || (ie11BugWorkaround = !0, defineProperty(this, name, d(value)), ie11BugWorkaround = !1);
                })), name;
            };
        }();
        _HiddenSymbol = function HiddenSymbol(description) {
            if (this instanceof _HiddenSymbol) throw new TypeError("TypeError: Symbol is not a constructor");
            return SymbolPolyfill(description);
        }, module.exports = SymbolPolyfill = function Symbol(description) {
            var symbol;
            if (this instanceof Symbol) throw new TypeError("TypeError: Symbol is not a constructor");
            return symbol = create(_HiddenSymbol.prototype), description = void 0 === description ? "" : String(description), defineProperties(symbol, {
                __description__: d("", description),
                __name__: d("", generateName(description))
            });
        }, defineProperties(SymbolPolyfill, {
            "for": d(function (key) {
                return globalSymbols[key] ? globalSymbols[key] : globalSymbols[key] = SymbolPolyfill(String(key));
            }),
            keyFor: d(function (s) {
                var key;
                validateSymbol(s);
                for (key in globalSymbols) {
                    if (globalSymbols[key] === s) return key;
                }
            }),
            hasInstance: d("", NativeSymbol && NativeSymbol.hasInstance || SymbolPolyfill("hasInstance")),
            isConcatSpreadable: d("", NativeSymbol && NativeSymbol.isConcatSpreadable || SymbolPolyfill("isConcatSpreadable")),
            iterator: d("", NativeSymbol && NativeSymbol.iterator || SymbolPolyfill("iterator")),
            match: d("", NativeSymbol && NativeSymbol.match || SymbolPolyfill("match")),
            replace: d("", NativeSymbol && NativeSymbol.replace || SymbolPolyfill("replace")),
            search: d("", NativeSymbol && NativeSymbol.search || SymbolPolyfill("search")),
            species: d("", NativeSymbol && NativeSymbol.species || SymbolPolyfill("species")),
            split: d("", NativeSymbol && NativeSymbol.split || SymbolPolyfill("split")),
            toPrimitive: d("", NativeSymbol && NativeSymbol.toPrimitive || SymbolPolyfill("toPrimitive")),
            toStringTag: d("", NativeSymbol && NativeSymbol.toStringTag || SymbolPolyfill("toStringTag")),
            unscopables: d("", NativeSymbol && NativeSymbol.unscopables || SymbolPolyfill("unscopables"))
        }), defineProperties(_HiddenSymbol.prototype, {
            constructor: d(SymbolPolyfill),
            toString: d("", function () {
                return this.__name__;
            })
        }), defineProperties(SymbolPolyfill.prototype, {
            toString: d(function () {
                return "Symbol (" + validateSymbol(this).__description__ + ")";
            }),
            valueOf: d(function () {
                return validateSymbol(this);
            })
        }), defineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d("", function () {
            return validateSymbol(this);
        })), defineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d("c", "Symbol")), defineProperty(_HiddenSymbol.prototype, SymbolPolyfill.toStringTag, d("c", SymbolPolyfill.prototype[SymbolPolyfill.toStringTag])), defineProperty(_HiddenSymbol.prototype, SymbolPolyfill.toPrimitive, d("c", SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var d,
            assign = __webpack_require__(12),
            normalizeOpts = __webpack_require__(19),
            isCallable = __webpack_require__(20),
            contains = __webpack_require__(21);
        d = module.exports = function (dscr, value) {
            var c, e, w, options, desc;
            return arguments.length < 2 || "string" != typeof dscr ? (options = value, value = dscr, dscr = null) : options = arguments[2], null == dscr ? (c = w = !0, e = !1) : (c = contains.call(dscr, "c"), e = contains.call(dscr, "e"), w = contains.call(dscr, "w")), desc = {
                value: value,
                configurable: c,
                enumerable: e,
                writable: w
            }, options ? assign(normalizeOpts(options), desc) : desc;
        }, d.gs = function (dscr, get, set) {
            var c, e, options, desc;
            return "string" != typeof dscr ? (options = set, set = get, get = dscr, dscr = null) : options = arguments[3], null == get ? get = void 0 : isCallable(get) ? null == set ? set = void 0 : isCallable(set) || (options = set, set = void 0) : (options = get, get = set = void 0), null == dscr ? (c = !0, e = !1) : (c = contains.call(dscr, "c"), e = contains.call(dscr, "e")), desc = {
                get: get,
                set: set,
                configurable: c,
                enumerable: e
            }, options ? assign(normalizeOpts(options), desc) : desc;
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        module.exports = __webpack_require__(13)() ? Object.assign : __webpack_require__(14);
    }, function (module, exports) {
        "use strict";

        module.exports = function () {
            var obj,
                assign = Object.assign;
            return "function" == typeof assign && (obj = {
                foo: "raz"
            }, assign(obj, {
                bar: "dwa"
            }, {
                trzy: "trzy"
            }), obj.foo + obj.bar + obj.trzy === "razdwatrzy");
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var keys = __webpack_require__(15),
            value = __webpack_require__(18),
            max = Math.max;
        module.exports = function (dest, src) {
            var error,
                i,
                assign,
                l = max(arguments.length, 2);
            for (dest = Object(value(dest)), assign = function assign(key) {
                try {
                    dest[key] = src[key];
                } catch (e) {
                    error || (error = e);
                }
            }, i = 1; i < l; ++i) {
                src = arguments[i], keys(src).forEach(assign);
            }if (void 0 !== error) throw error;
            return dest;
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        module.exports = __webpack_require__(16)() ? Object.keys : __webpack_require__(17);
    }, function (module, exports) {
        "use strict";

        module.exports = function () {
            try {
                return Object.keys("primitive"), !0;
            } catch (e) {
                return !1;
            }
        };
    }, function (module, exports) {
        "use strict";

        var keys = Object.keys;
        module.exports = function (object) {
            return keys(null == object ? object : Object(object));
        };
    }, function (module, exports) {
        "use strict";

        module.exports = function (value) {
            if (null == value) throw new TypeError("Cannot use null or undefined");
            return value;
        };
    }, function (module, exports) {
        "use strict";

        var forEach = Array.prototype.forEach,
            create = Object.create,
            process = function process(src, obj) {
            var key;
            for (key in src) {
                obj[key] = src[key];
            }
        };
        module.exports = function (options) {
            var result = create(null);
            return forEach.call(arguments, function (options) {
                null != options && process(Object(options), result);
            }), result;
        };
    }, function (module, exports) {
        "use strict";

        module.exports = function (obj) {
            return "function" == typeof obj;
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        module.exports = __webpack_require__(22)() ? String.prototype.contains : __webpack_require__(23);
    }, function (module, exports) {
        "use strict";

        var str = "razdwatrzy";
        module.exports = function () {
            return "function" == typeof str.contains && str.contains("dwa") === !0 && str.contains("foo") === !1;
        };
    }, function (module, exports) {
        "use strict";

        var indexOf = String.prototype.indexOf;
        module.exports = function (searchString) {
            return indexOf.call(this, searchString, arguments[1]) > -1;
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var isSymbol = __webpack_require__(25);
        module.exports = function (value) {
            if (!isSymbol(value)) throw new TypeError(value + " is not a symbol");
            return value;
        };
    }, function (module, exports) {
        "use strict";

        module.exports = function (x) {
            return x && ("symbol" == typeof x || "Symbol" === x["@@toStringTag"]) || !1;
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function hydrate(data, cleaned) {
            cleaned.forEach(function (path) {
                var last = path.pop(),
                    obj = path.reduce(function (obj_, attr) {
                    return obj_ ? obj_[attr] : null;
                }, data);
                if (obj && obj[last]) {
                    var replace = {};
                    replace[consts.name] = obj[last].name, replace[consts.type] = obj[last].type, replace[consts.meta] = obj[last].meta, replace[consts.inspected] = !1, obj[last] = replace;
                }
            });
        }
        var consts = __webpack_require__(7);
        module.exports = hydrate;
    }, function (module, exports) {
        "use strict";

        function getPropType(data) {
            if (!data) return null;
            var type = "undefined" == typeof data ? "undefined" : _typeof(data);
            if ("object" === type) {
                if (data._reactFragment) return "react_fragment";
                if (Array.isArray(data)) return "array";
                if (ArrayBuffer.isView(data)) return data instanceof DataView ? "data_view" : "typed_array";
                if (data instanceof ArrayBuffer) return "array_buffer";
                if ("function" == typeof data[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]) return "iterator";
                if ("[object Date]" === Object.prototype.toString.call(data)) return "date";
            }
            return type;
        }
        function createDehydrated(type, data, cleaned, path) {
            var meta = {};
            return "array" !== type && "typed_array" !== type || (meta.length = data.length), "iterator" !== type && "typed_array" !== type || (meta.readOnly = !0), cleaned.push(path), {
                type: type,
                meta: meta,
                name: data.constructor && "Object" !== data.constructor.name ? data.constructor.name : ""
            };
        }
        function dehydrate(data, cleaned) {
            var path = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [],
                level = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
                type = getPropType(data);
            switch (type) {
                case "function":
                    return cleaned.push(path), {
                        name: data.name,
                        type: "function"
                    };

                case "string":
                    return data.length <= 500 ? data : data.slice(0, 500) + "...";

                case "symbol":
                    return cleaned.push(path), {
                        type: "symbol",
                        name: data.toString()
                    };

                case "react_fragment":
                    return "A React Fragment";

                case "array_buffer":
                case "data_view":
                    return cleaned.push(path), {
                        type: type,
                        name: "data_view" === type ? "DataView" : "ArrayBuffer",
                        meta: {
                            length: data.byteLength,
                            uninspectable: !0
                        }
                    };

                case "array":
                    return level > 2 ? createDehydrated(type, data, cleaned, path) : data.map(function (item, i) {
                        return dehydrate(item, cleaned, path.concat([i]), level + 1);
                    });

                case "typed_array":
                case "iterator":
                    return createDehydrated(type, data, cleaned, path);

                case "date":
                    return cleaned.push(path), {
                        name: data.toString(),
                        type: "date",
                        meta: {
                            uninspectable: !0
                        }
                    };

                case "object":
                    if (level > 2 || data.constructor && "function" == typeof data.constructor && "Object" !== data.constructor.name) return createDehydrated(type, data, cleaned, path);
                    var res = {};
                    for (var name in data) {
                        res[name] = dehydrate(data[name], cleaned, path.concat([name]), level + 1);
                    }return res;

                default:
                    return data;
            }
        }
        var _typeof = "function" == typeof Symbol && "symbol" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") ? function (obj) {
            return typeof obj;
        } : function (obj) {
            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
        };
        module.exports = dehydrate;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var performanceNow,
            performance = __webpack_require__(29);
        performanceNow = performance.now ? function () {
            return performance.now();
        } : function () {
            return Date.now();
        }, module.exports = performanceNow;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var performance,
            ExecutionEnvironment = __webpack_require__(30);
        ExecutionEnvironment.canUseDOM && (performance = window.performance || window.msPerformance || window.webkitPerformance), module.exports = performance || {};
    }, function (module, exports) {
        "use strict";

        var canUseDOM = !("undefined" == typeof window || !window.document || !window.document.createElement),
            ExecutionEnvironment = {
            canUseDOM: canUseDOM,
            canUseWorkers: "undefined" != typeof Worker,
            canUseEventListeners: canUseDOM && !(!window.addEventListener && !window.attachEvent),
            canUseViewport: canUseDOM && !!window.screen,
            isInWorker: !canUseDOM
        };
        module.exports = ExecutionEnvironment;
    }, function (module, exports) {
        "use strict";

        function installGlobalHook(window) {
            function detectReactBuildType(renderer) {
                try {
                    if ("string" == typeof renderer.version) return renderer.bundleType > 0 ? "development" : "production";
                    var toString = Function.prototype.toString;
                    if (renderer.Mount && renderer.Mount._renderNewRootComponent) {
                        var renderRootCode = toString.call(renderer.Mount._renderNewRootComponent);
                        return 0 !== renderRootCode.indexOf("function") ? "production" : renderRootCode.indexOf("storedMeasure") !== -1 ? "development" : renderRootCode.indexOf("should be a pure function") !== -1 ? renderRootCode.indexOf("NODE_ENV") !== -1 ? "development" : renderRootCode.indexOf("development") !== -1 ? "development" : renderRootCode.indexOf("true") !== -1 ? "development" : renderRootCode.indexOf("nextElement") !== -1 || renderRootCode.indexOf("nextComponent") !== -1 ? "unminified" : "development" : renderRootCode.indexOf("nextElement") !== -1 || renderRootCode.indexOf("nextComponent") !== -1 ? "unminified" : renderRootCode.indexOf("._registerComponent") !== -1 ? "outdated" : "production";
                    }
                } catch (err) {}
                return "production";
            }
            if (!window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {
                var hasDetectedBadDCE = !1,
                    hook = {
                    _renderers: {},
                    helpers: {},
                    checkDCE: function checkDCE(fn) {
                        try {
                            var toString = Function.prototype.toString,
                                code = toString.call(fn);
                            code.indexOf("^_^") > -1 && (hasDetectedBadDCE = !0, setTimeout(function () {
                                throw new Error("React is running in production mode, but dead code elimination has not been applied. Read how to correctly configure React for production: https://fb.me/react-perf-use-the-production-build");
                            }));
                        } catch (err) {}
                    },
                    inject: function inject(renderer) {
                        var id = Math.random().toString(16).slice(2);
                        hook._renderers[id] = renderer;
                        var reactBuildType = hasDetectedBadDCE ? "deadcode" : detectReactBuildType(renderer);
                        return hook.emit("renderer", {
                            id: id,
                            renderer: renderer,
                            reactBuildType: reactBuildType
                        }), id;
                    },
                    _listeners: {},
                    sub: function sub(evt, fn) {
                        return hook.on(evt, fn), function () {
                            return hook.off(evt, fn);
                        };
                    },
                    on: function on(evt, fn) {
                        hook._listeners[evt] || (hook._listeners[evt] = []), hook._listeners[evt].push(fn);
                    },
                    off: function off(evt, fn) {
                        if (hook._listeners[evt]) {
                            var ix = hook._listeners[evt].indexOf(fn);
                            ix !== -1 && hook._listeners[evt].splice(ix, 1), hook._listeners[evt].length || (hook._listeners[evt] = null);
                        }
                    },
                    emit: function emit(evt, data) {
                        hook._listeners[evt] && hook._listeners[evt].map(function (fn) {
                            return fn(data);
                        });
                    },
                    supportsFiber: !0,
                    _fiberRoots: {},
                    getFiberRoots: function getFiberRoots(rendererID) {
                        var roots = hook._fiberRoots;
                        return roots[rendererID] || (roots[rendererID] = new Set()), roots[rendererID];
                    },
                    onCommitFiberUnmount: function onCommitFiberUnmount(rendererID, fiber) {
                        hook.helpers[rendererID] && hook.helpers[rendererID].handleCommitFiberUnmount(fiber);
                    },
                    onCommitFiberRoot: function onCommitFiberRoot(rendererID, root) {
                        var mountedRoots = hook.getFiberRoots(rendererID),
                            current = root.current,
                            isKnownRoot = mountedRoots.has(root),
                            isUnmounting = null == current.memoizedState || null == current.memoizedState.element;
                        isKnownRoot || isUnmounting ? isKnownRoot && isUnmounting && mountedRoots["delete"](root) : mountedRoots.add(root), hook.helpers[rendererID] && hook.helpers[rendererID].handleCommitFiberRoot(root);
                    }
                };
                Object.defineProperty(window, "__REACT_DEVTOOLS_GLOBAL_HOOK__", {
                    value: hook
                });
            }
        }
        module.exports = installGlobalHook;
    }, function (module, exports) {
        "use strict";

        function installRelayHook(window) {
            function decorate(obj, attr, fn) {
                var old = obj[attr];
                obj[attr] = function () {
                    var res = old.apply(this, arguments);
                    return fn.apply(this, arguments), res;
                };
            }
            function emit(name, data) {
                _eventQueue.push({
                    name: name,
                    data: data
                }), _listener && _listener(name, data);
            }
            function setRequestListener(listener) {
                if (_listener) throw new Error("Relay Devtools: Called only call setRequestListener once.");
                return _listener = listener, _eventQueue.forEach(function (_ref) {
                    var name = _ref.name,
                        data = _ref.data;
                    listener(name, data);
                }), function () {
                    _listener = null;
                };
            }
            function recordRequest(type, start, request, requestNumber) {
                var id = Math.random().toString(16).substr(2);
                request.then(function (response) {
                    emit("relay:success", {
                        id: id,
                        end: performanceNow(),
                        response: response.response
                    });
                }, function (error) {
                    emit("relay:failure", {
                        id: id,
                        end: performanceNow(),
                        error: error
                    });
                });
                for (var textChunks = [], text = request.getQueryString(); text.length > 0;) {
                    textChunks.push(text.substr(0, TEXT_CHUNK_LENGTH)), text = text.substr(TEXT_CHUNK_LENGTH);
                }return {
                    id: id,
                    name: request.getDebugName(),
                    requestNumber: requestNumber,
                    start: start,
                    text: textChunks,
                    type: type,
                    variables: request.getVariables()
                };
            }
            function instrumentRelayRequests(relayInternals) {
                var NetworkLayer = relayInternals.NetworkLayer;
                decorate(NetworkLayer, "sendMutation", function (mutation) {
                    requestNumber++, emit("relay:pending", [recordRequest("mutation", performanceNow(), mutation, requestNumber)]);
                }), decorate(NetworkLayer, "sendQueries", function (queries) {
                    requestNumber++;
                    var start = performanceNow();
                    emit("relay:pending", queries.map(function (query) {
                        return recordRequest("query", start, query, requestNumber);
                    }));
                });
                var instrumented = {};
                for (var key in relayInternals) {
                    relayInternals.hasOwnProperty(key) && (instrumented[key] = relayInternals[key]);
                }return instrumented.setRequestListener = setRequestListener, instrumented;
            }
            var performanceNow,
                performance = window.performance;
            performanceNow = performance && "function" == typeof performance.now ? function () {
                return performance.now();
            } : function () {
                return Date.now();
            };
            var TEXT_CHUNK_LENGTH = 500,
                hook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;
            if (hook) {
                var _eventQueue = [],
                    _listener = null,
                    requestNumber = 0,
                    _relayInternals = null;
                Object.defineProperty(hook, "_relayInternals", {
                    configurable: !0,
                    set: function set(relayInternals) {
                        _relayInternals = instrumentRelayRequests(relayInternals);
                    },
                    get: function get() {
                        return _relayInternals;
                    }
                });
            }
        }
        module.exports = installRelayHook;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var setupBackend = __webpack_require__(34);
        module.exports = function (hook, agent) {
            var subs = [hook.sub("renderer-attached", function (_ref) {
                var id = _ref.id,
                    helpers = (_ref.renderer, _ref.helpers);
                agent.setReactInternals(id, helpers), helpers.walkTree(agent.onMounted.bind(agent, id), agent.addRoot.bind(agent, id));
            }), hook.sub("root", function (_ref2) {
                var renderer = _ref2.renderer,
                    internalInstance = _ref2.internalInstance;
                return agent.addRoot(renderer, internalInstance);
            }), hook.sub("mount", function (_ref3) {
                var renderer = _ref3.renderer,
                    internalInstance = _ref3.internalInstance,
                    data = _ref3.data;
                return agent.onMounted(renderer, internalInstance, data);
            }), hook.sub("update", function (_ref4) {
                var internalInstance = (_ref4.renderer, _ref4.internalInstance),
                    data = _ref4.data;
                return agent.onUpdated(internalInstance, data);
            }), hook.sub("unmount", function (_ref5) {
                var internalInstance = (_ref5.renderer, _ref5.internalInstance);
                return agent.onUnmounted(internalInstance);
            })],
                success = setupBackend(hook);
            success && (hook.emit("react-devtools", agent), hook.reactDevtoolsAgent = agent, agent.on("shutdown", function () {
                subs.forEach(function (fn) {
                    return fn();
                }), hook.reactDevtoolsAgent = null;
            }));
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var attachRenderer = __webpack_require__(35);
        module.exports = function (hook) {
            var oldReact = window.React && window.React.__internals;
            oldReact && 0 === Object.keys(hook._renderers).length && hook.inject(oldReact);
            for (var rid in hook._renderers) {
                hook.helpers[rid] = attachRenderer(hook, rid, hook._renderers[rid]), hook.emit("renderer-attached", {
                    id: rid,
                    renderer: hook._renderers[rid],
                    helpers: hook.helpers[rid]
                });
            }hook.on("renderer", function (_ref) {
                var id = _ref.id,
                    renderer = _ref.renderer;
                hook.helpers[id] = attachRenderer(hook, id, renderer), hook.emit("renderer-attached", {
                    id: id,
                    renderer: renderer,
                    helpers: hook.helpers[id]
                });
            });
            var shutdown = function shutdown() {
                for (var id in hook.helpers) {
                    hook.helpers[id].cleanup();
                }hook.off("shutdown", shutdown);
            };
            return hook.on("shutdown", shutdown), !0;
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function attachRenderer(hook, rid, renderer) {
            var rootNodeIDMap = new Map(),
                extras = {},
                isPre013 = !renderer.Reconciler;
            if ("function" == typeof renderer.findFiberByHostInstance) return attachRendererFiber(hook, rid, renderer);
            renderer.Mount.findNodeHandle && renderer.Mount.nativeTagToRootNodeID ? (extras.getNativeFromReactElement = function (component) {
                return renderer.Mount.findNodeHandle(component);
            }, extras.getReactElementFromNative = function (nativeTag) {
                var id = renderer.Mount.nativeTagToRootNodeID(nativeTag);
                return rootNodeIDMap.get(id);
            }) : renderer.ComponentTree ? (extras.getNativeFromReactElement = function (component) {
                return renderer.ComponentTree.getNodeFromInstance(component);
            }, extras.getReactElementFromNative = function (node) {
                return renderer.ComponentTree.getClosestInstanceFromNode(node);
            }) : renderer.Mount.getID && renderer.Mount.getNode ? (extras.getNativeFromReactElement = function (component) {
                try {
                    return renderer.Mount.getNode(component._rootNodeID);
                } catch (e) {
                    return;
                }
            }, extras.getReactElementFromNative = function (node) {
                for (var id = renderer.Mount.getID(node); node && node.parentNode && !id;) {
                    node = node.parentNode, id = renderer.Mount.getID(node);
                }return rootNodeIDMap.get(id);
            }) : console.warn("Unknown react version (does not have getID), probably an unshimmed React Native");
            var oldMethods, oldRenderComponent, oldRenderRoot;
            return renderer.Mount._renderNewRootComponent ? oldRenderRoot = decorateResult(renderer.Mount, "_renderNewRootComponent", function (internalInstance) {
                hook.emit("root", {
                    renderer: rid,
                    internalInstance: internalInstance
                });
            }) : renderer.Mount.renderComponent && (oldRenderComponent = decorateResult(renderer.Mount, "renderComponent", function (internalInstance) {
                hook.emit("root", {
                    renderer: rid,
                    internalInstance: internalInstance._reactInternalInstance
                });
            })), renderer.Component ? (console.error("You are using a version of React with limited support in this version of the devtools.\nPlease upgrade to use at least 0.13, or you can downgrade to use the old version of the devtools:\ninstructions here https://github.com/facebook/react-devtools/tree/devtools-next#how-do-i-use-this-for-react--013"), oldMethods = decorateMany(renderer.Component.Mixin, {
                mountComponent: function mountComponent() {
                    var _this = this;
                    rootNodeIDMap.set(this._rootNodeID, this), setTimeout(function () {
                        hook.emit("mount", {
                            internalInstance: _this,
                            data: getData012(_this),
                            renderer: rid
                        });
                    }, 0);
                },
                updateComponent: function updateComponent() {
                    var _this2 = this;
                    setTimeout(function () {
                        hook.emit("update", {
                            internalInstance: _this2,
                            data: getData012(_this2),
                            renderer: rid
                        });
                    }, 0);
                },
                unmountComponent: function unmountComponent() {
                    hook.emit("unmount", {
                        internalInstance: this,
                        renderer: rid
                    }), rootNodeIDMap["delete"](this._rootNodeID, this);
                }
            })) : renderer.Reconciler && (oldMethods = decorateMany(renderer.Reconciler, {
                mountComponent: function mountComponent(internalInstance, rootID, transaction, context) {
                    var data = getData(internalInstance);
                    rootNodeIDMap.set(internalInstance._rootNodeID, internalInstance), hook.emit("mount", {
                        internalInstance: internalInstance,
                        data: data,
                        renderer: rid
                    });
                },
                performUpdateIfNecessary: function performUpdateIfNecessary(internalInstance, nextChild, transaction, context) {
                    hook.emit("update", {
                        internalInstance: internalInstance,
                        data: getData(internalInstance),
                        renderer: rid
                    });
                },
                receiveComponent: function receiveComponent(internalInstance, nextChild, transaction, context) {
                    hook.emit("update", {
                        internalInstance: internalInstance,
                        data: getData(internalInstance),
                        renderer: rid
                    });
                },
                unmountComponent: function unmountComponent(internalInstance) {
                    hook.emit("unmount", {
                        internalInstance: internalInstance,
                        renderer: rid
                    }), rootNodeIDMap["delete"](internalInstance._rootNodeID, internalInstance);
                }
            })), extras.walkTree = function (visit, visitRoot) {
                var onMount = function onMount(component, data) {
                    rootNodeIDMap.set(component._rootNodeID, component), visit(component, data);
                };
                walkRoots(renderer.Mount._instancesByReactRootID || renderer.Mount._instancesByContainerID, onMount, visitRoot, isPre013);
            }, extras.cleanup = function () {
                oldMethods && (renderer.Component ? restoreMany(renderer.Component.Mixin, oldMethods) : restoreMany(renderer.Reconciler, oldMethods)), oldRenderRoot && (renderer.Mount._renderNewRootComponent = oldRenderRoot), oldRenderComponent && (renderer.Mount.renderComponent = oldRenderComponent), oldMethods = null, oldRenderRoot = null, oldRenderComponent = null;
            }, extras;
        }
        function walkRoots(roots, onMount, onRoot, isPre013) {
            for (var name in roots) {
                walkNode(roots[name], onMount, isPre013), onRoot(roots[name]);
            }
        }
        function walkNode(internalInstance, onMount, isPre013) {
            var data = isPre013 ? getData012(internalInstance) : getData(internalInstance);
            data.children && Array.isArray(data.children) && data.children.forEach(function (child) {
                return walkNode(child, onMount, isPre013);
            }), onMount(internalInstance, data);
        }
        function decorateResult(obj, attr, fn) {
            var old = obj[attr];
            return obj[attr] = function (instance) {
                var res = old.apply(this, arguments);
                return fn(res), res;
            }, old;
        }
        function decorate(obj, attr, fn) {
            var old = obj[attr];
            return obj[attr] = function (instance) {
                var res = old.apply(this, arguments);
                return fn.apply(this, arguments), res;
            }, old;
        }
        function decorateMany(source, fns) {
            var olds = {};
            for (var name in fns) {
                olds[name] = decorate(source, name, fns[name]);
            }return olds;
        }
        function restoreMany(source, olds) {
            for (var name in olds) {
                source[name] = olds[name];
            }
        }
        var getData = __webpack_require__(36),
            getData012 = __webpack_require__(41),
            attachRendererFiber = __webpack_require__(42);
        module.exports = attachRenderer;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function getData(internalInstance) {
            var children = null,
                props = null,
                state = null,
                context = null,
                updater = null,
                name = null,
                type = null,
                key = null,
                ref = null,
                source = null,
                text = null,
                publicInstance = null,
                nodeType = "Native";
            if ("object" !== ("undefined" == typeof internalInstance ? "undefined" : _typeof(internalInstance))) nodeType = "Text", text = internalInstance + "";else if (null === internalInstance._currentElement || internalInstance._currentElement === !1) nodeType = "Empty";else if (internalInstance._renderedComponent) nodeType = "NativeWrapper", children = [internalInstance._renderedComponent], props = internalInstance._instance.props, state = internalInstance._instance.state, context = internalInstance._instance.context, context && 0 === Object.keys(context).length && (context = null);else if (internalInstance._renderedChildren) children = childrenList(internalInstance._renderedChildren);else if (internalInstance._currentElement && internalInstance._currentElement.props) {
                var unfilteredChildren = internalInstance._currentElement.props.children,
                    filteredChildren = [];
                traverseAllChildrenImpl(unfilteredChildren, "", function (_traverseContext, child) {
                    var childType = "undefined" == typeof child ? "undefined" : _typeof(child);
                    "string" !== childType && "number" !== childType || filteredChildren.push(child);
                }), children = filteredChildren.length <= 1 ? filteredChildren.length ? String(filteredChildren[0]) : void 0 : filteredChildren;
            }
            if (!props && internalInstance._currentElement && internalInstance._currentElement.props && (props = internalInstance._currentElement.props), null != internalInstance._currentElement && (type = internalInstance._currentElement.type, internalInstance._currentElement.key && (key = String(internalInstance._currentElement.key)), source = internalInstance._currentElement._source, ref = internalInstance._currentElement.ref, "string" == typeof type ? (name = type, null != internalInstance._nativeNode && (publicInstance = internalInstance._nativeNode), null != internalInstance._hostNode && (publicInstance = internalInstance._hostNode)) : "function" == typeof type ? (nodeType = "Composite", name = getDisplayName(type), internalInstance._renderedComponent && (internalInstance._currentElement.props === internalInstance._renderedComponent._currentElement || internalInstance._currentElement.type.isReactTopLevelWrapper) && (nodeType = "Wrapper"), null === name && (name = "No display name")) : "string" == typeof internalInstance._stringText ? (nodeType = "Text", text = internalInstance._stringText) : name = getDisplayName(type)), internalInstance._instance) {
                var inst = internalInstance._instance;
                updater = {
                    setState: inst.setState && inst.setState.bind(inst),
                    forceUpdate: inst.forceUpdate && inst.forceUpdate.bind(inst),
                    setInProps: inst.forceUpdate && setInProps.bind(null, internalInstance),
                    setInState: inst.forceUpdate && setInState.bind(null, inst),
                    setInContext: inst.forceUpdate && setInContext.bind(null, inst)
                }, "function" == typeof type && (publicInstance = inst), inst._renderedChildren && (children = childrenList(inst._renderedChildren));
            }
            return "function" == typeof internalInstance.setNativeProps && (updater = {
                setNativeProps: function setNativeProps(nativeProps) {
                    internalInstance.setNativeProps(nativeProps);
                }
            }), {
                nodeType: nodeType,
                type: type,
                key: key,
                ref: ref,
                source: source,
                name: name,
                props: props,
                state: state,
                context: context,
                children: children,
                text: text,
                updater: updater,
                publicInstance: publicInstance
            };
        }
        function setInProps(internalInst, path, value) {
            var element = internalInst._currentElement;
            internalInst._currentElement = _extends({}, element, {
                props: copyWithSet(element.props, path, value)
            }), internalInst._instance.forceUpdate();
        }
        function setInState(inst, path, value) {
            setIn(inst.state, path, value), inst.forceUpdate();
        }
        function setInContext(inst, path, value) {
            setIn(inst.context, path, value), inst.forceUpdate();
        }
        function setIn(obj, path, value) {
            var last = path.pop(),
                parent = path.reduce(function (obj_, attr) {
                return obj_ ? obj_[attr] : null;
            }, obj);
            parent && (parent[last] = value);
        }
        function childrenList(children) {
            var res = [];
            for (var name in children) {
                res.push(children[name]);
            }return res;
        }
        var _extends = Object.assign || function (target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                    Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
                }
            }
            return target;
        },
            _typeof = "function" == typeof Symbol && "symbol" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") ? function (obj) {
            return typeof obj;
        } : function (obj) {
            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
        },
            copyWithSet = __webpack_require__(37),
            getDisplayName = __webpack_require__(38),
            traverseAllChildrenImpl = __webpack_require__(39);
        module.exports = getData;
    }, function (module, exports) {
        "use strict";

        function copyWithSetImpl(obj, path, idx, value) {
            if (idx >= path.length) return value;
            var key = path[idx],
                updated = Array.isArray(obj) ? obj.slice() : _extends({}, obj);
            return updated[key] = copyWithSetImpl(obj[key], path, idx + 1, value), updated;
        }
        function copyWithSet(obj, path, value) {
            return copyWithSetImpl(obj, path, 0, value);
        }
        var _extends = Object.assign || function (target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                    Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
                }
            }
            return target;
        };
        module.exports = copyWithSet;
    }, function (module, exports) {
        "use strict";

        function getDisplayName(type) {
            if (cachedDisplayNames.has(type)) return cachedDisplayNames.get(type);
            var displayName = void 0;
            "string" == typeof type.displayName && (displayName = type.displayName), displayName || (displayName = type.name || "Unknown");
            var match = displayName.match(FB_MODULE_RE);
            if (match) {
                var componentName = match[1],
                    moduleName = match[2];
                componentName && moduleName && (moduleName === componentName || moduleName.startsWith(componentName + ".")) && (displayName = componentName);
            }
            return cachedDisplayNames.set(type, displayName), displayName;
        }
        var FB_MODULE_RE = /^(.*) \[from (.*)\]$/,
            cachedDisplayNames = new WeakMap();
        module.exports = getDisplayName;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function escape(key) {
            var escapeRegex = /[=:]/g,
                escaperLookup = {
                "=": "=0",
                ":": "=2"
            },
                escapedString = ("" + key).replace(escapeRegex, function (match) {
                return escaperLookup[match];
            });
            return "$" + escapedString;
        }
        function getComponentKey(component, index) {
            return "object" === ("undefined" == typeof component ? "undefined" : _typeof(component)) && null !== component && null != component.key ? escape(component.key) : index.toString(36);
        }
        function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
            var type = "undefined" == typeof children ? "undefined" : _typeof(children);
            if ("undefined" !== type && "boolean" !== type || (children = null), null === children || "string" === type || "number" === type || "object" === type && children.$$typeof === REACT_ELEMENT_TYPE) return callback(traverseContext, children, "" === nameSoFar ? SEPARATOR + getComponentKey(children, 0) : nameSoFar), 1;
            var child,
                nextName,
                subtreeCount = 0,
                nextNamePrefix = "" === nameSoFar ? SEPARATOR : nameSoFar + SUBSEPARATOR;
            if (Array.isArray(children)) for (var i = 0; i < children.length; i++) {
                child = children[i], nextName = nextNamePrefix + getComponentKey(child, i), subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
            } else {
                var iteratorFn = ITERATOR_SYMBOL && children[ITERATOR_SYMBOL] || children[FAUX_ITERATOR_SYMBOL];
                if ("function" == typeof iteratorFn) for (var step, iterator = iteratorFn.call(children), ii = 0; !(step = iterator.next()).done;) {
                    child = step.value, nextName = nextNamePrefix + getComponentKey(child, ii++), subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
                } else if ("object" === type) {
                    var addendum = " If you meant to render a collection of children, use an array instead.",
                        childrenString = "" + children;
                    invariant(!1, "The React Devtools cannot render an object as a child. (found: %s).%s", "[object Object]" === childrenString ? "object with keys {" + Object.keys(children).join(", ") + "}" : childrenString, addendum);
                }
            }
            return subtreeCount;
        }
        var _typeof = "function" == typeof Symbol && "symbol" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") ? function (obj) {
            return typeof obj;
        } : function (obj) {
            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
        },
            invariant = __webpack_require__(40),
            SEPARATOR = ".",
            SUBSEPARATOR = ":",
            FAUX_ITERATOR_SYMBOL = "@@iterator",
            ITERATOR_SYMBOL = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator"),
            REACT_ELEMENT_TYPE = "function" == typeof Symbol && Symbol["for"] && Symbol["for"]("react.element") || 60103;
        module.exports = traverseAllChildrenImpl;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function invariant(condition, format, a, b, c, d, e, f) {
            if (!condition) {
                var error;
                if (void 0 === format) error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else {
                    var args = [a, b, c, d, e, f],
                        argIndex = 0;
                    error = new Error(format.replace(/%s/g, function () {
                        return args[argIndex++];
                    })), error.name = "Invariant Violation";
                }
                throw error.framesToPop = 1, error;
            }
        }
        module.exports = invariant;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function getData012(internalInstance) {
            var children = null,
                props = internalInstance.props,
                state = internalInstance.state,
                context = internalInstance.context,
                updater = null,
                name = null,
                type = null,
                key = null,
                ref = null,
                text = null,
                publicInstance = null,
                nodeType = "Native";
            return internalInstance._renderedComponent ? (nodeType = "Wrapper", children = [internalInstance._renderedComponent], context && 0 === Object.keys(context).length && (context = null)) : internalInstance._renderedChildren ? (name = internalInstance.constructor.displayName, children = childrenList(internalInstance._renderedChildren)) : "string" == typeof props.children && (name = internalInstance.constructor.displayName, children = props.children, nodeType = "Native"), !props && internalInstance._currentElement && internalInstance._currentElement.props && (props = internalInstance._currentElement.props), internalInstance._currentElement && (type = internalInstance._currentElement.type, internalInstance._currentElement.key && (key = String(internalInstance._currentElement.key)), ref = internalInstance._currentElement.ref, "string" == typeof type ? name = type : (nodeType = "Composite", name = type.displayName, name || (name = "No display name"))), name || (name = internalInstance.constructor.displayName || "No display name", nodeType = "Composite"), "string" == typeof props && (nodeType = "Text", text = props, props = null, name = null), internalInstance.forceUpdate && (updater = {
                setState: internalInstance.setState.bind(internalInstance),
                forceUpdate: internalInstance.forceUpdate.bind(internalInstance),
                setInProps: internalInstance.forceUpdate && setInProps.bind(null, internalInstance),
                setInState: internalInstance.forceUpdate && setInState.bind(null, internalInstance),
                setInContext: internalInstance.forceUpdate && setInContext.bind(null, internalInstance)
            }, publicInstance = internalInstance), {
                nodeType: nodeType,
                type: type,
                key: key,
                ref: ref,
                source: null,
                name: name,
                props: props,
                state: state,
                context: context,
                children: children,
                text: text,
                updater: updater,
                publicInstance: publicInstance
            };
        }
        function setInProps(inst, path, value) {
            inst.props = copyWithSet(inst.props, path, value), inst.forceUpdate();
        }
        function setInState(inst, path, value) {
            setIn(inst.state, path, value), inst.forceUpdate();
        }
        function setInContext(inst, path, value) {
            setIn(inst.context, path, value), inst.forceUpdate();
        }
        function setIn(obj, path, value) {
            var last = path.pop(),
                parent = path.reduce(function (obj_, attr) {
                return obj_ ? obj_[attr] : null;
            }, obj);
            parent && (parent[last] = value);
        }
        function childrenList(children) {
            var res = [];
            for (var name in children) {
                res.push(children[name]);
            }return res;
        }
        var copyWithSet = __webpack_require__(37);
        module.exports = getData012;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function attachRendererFiber(hook, rid, renderer) {
            function getOpaqueNode(fiber) {
                if (opaqueNodes.has(fiber)) return fiber;
                var alternate = fiber.alternate;
                return null != alternate && opaqueNodes.has(alternate) ? alternate : (opaqueNodes.add(fiber), fiber);
            }
            function hasDataChanged(prevFiber, nextFiber) {
                if (prevFiber.tag === ClassComponent) {
                    if ((nextFiber.effectTag & PerformedWork) !== PerformedWork) return !1;
                    if (prevFiber.stateNode.context !== nextFiber.stateNode.context) return !0;
                    if (null != nextFiber.updateQueue && nextFiber.updateQueue.hasForceUpdate) return !0;
                }
                return prevFiber.memoizedProps !== nextFiber.memoizedProps || prevFiber.memoizedState !== nextFiber.memoizedState || prevFiber.ref !== nextFiber.ref || prevFiber._debugSource !== nextFiber._debugSource;
            }
            function flushPendingEvents() {
                var events = pendingEvents;
                pendingEvents = [];
                for (var i = 0; i < events.length; i++) {
                    var event = events[i];
                    hook.emit(event.type, event);
                }
            }
            function enqueueMount(fiber) {
                pendingEvents.push({
                    internalInstance: getOpaqueNode(fiber),
                    data: getDataFiber(fiber, getOpaqueNode),
                    renderer: rid,
                    type: "mount"
                });
                var isRoot = fiber.tag === HostRoot;
                isRoot && pendingEvents.push({
                    internalInstance: getOpaqueNode(fiber),
                    renderer: rid,
                    type: "root"
                });
            }
            function enqueueUpdateIfNecessary(fiber, hasChildOrderChanged) {
                (hasChildOrderChanged || hasDataChanged(fiber.alternate, fiber)) && pendingEvents.push({
                    internalInstance: getOpaqueNode(fiber),
                    data: getDataFiber(fiber, getOpaqueNode),
                    renderer: rid,
                    type: "update"
                });
            }
            function enqueueUnmount(fiber) {
                var isRoot = fiber.tag === HostRoot,
                    opaqueNode = getOpaqueNode(fiber),
                    event = {
                    internalInstance: opaqueNode,
                    renderer: rid,
                    type: "unmount"
                };
                isRoot ? pendingEvents.push(event) : pendingEvents.unshift(event), opaqueNodes["delete"](opaqueNode);
            }
            function mountFiber(fiber) {
                var node = fiber;
                outer: for (;;) {
                    if (node.child) node.child["return"] = node, node = node.child;else {
                        if (enqueueMount(node), node == fiber) return;
                        if (!node.sibling) {
                            for (; node["return"];) {
                                if (node = node["return"], enqueueMount(node), node == fiber) return;
                                if (node.sibling) {
                                    node.sibling["return"] = node["return"], node = node.sibling;
                                    continue outer;
                                }
                            }
                            return;
                        }
                        node.sibling["return"] = node["return"], node = node.sibling;
                    }
                }
            }
            function updateFiber(nextFiber, prevFiber) {
                var hasChildOrderChanged = !1;
                if (nextFiber.child !== prevFiber.child) {
                    for (var nextChild = nextFiber.child, prevChildAtSameIndex = prevFiber.child; nextChild;) {
                        if (nextChild.alternate) {
                            var prevChild = nextChild.alternate;
                            updateFiber(nextChild, prevChild), hasChildOrderChanged || prevChild === prevChildAtSameIndex || (hasChildOrderChanged = !0);
                        } else mountFiber(nextChild), hasChildOrderChanged || (hasChildOrderChanged = !0);
                        nextChild = nextChild.sibling, hasChildOrderChanged || null == prevChildAtSameIndex || (prevChildAtSameIndex = prevChildAtSameIndex.sibling);
                    }
                    hasChildOrderChanged || null == prevChildAtSameIndex || (hasChildOrderChanged = !0);
                }
                enqueueUpdateIfNecessary(nextFiber, hasChildOrderChanged);
            }
            function walkTree() {
                hook.getFiberRoots(rid).forEach(function (root) {
                    mountFiber(root.current);
                }), flushPendingEvents();
            }
            function cleanup() {}
            function handleCommitFiberUnmount(fiber) {
                enqueueUnmount(fiber);
            }
            function handleCommitFiberRoot(root) {
                var current = root.current,
                    alternate = current.alternate;
                if (alternate) {
                    var wasMounted = null != alternate.memoizedState && null != alternate.memoizedState.element,
                        isMounted = null != current.memoizedState && null != current.memoizedState.element;
                    !wasMounted && isMounted ? mountFiber(current) : wasMounted && isMounted ? updateFiber(current, alternate) : wasMounted && !isMounted && enqueueUnmount(current);
                } else mountFiber(current);
                flushPendingEvents();
            }
            function getNativeFromReactElement(fiber) {
                try {
                    var opaqueNode = fiber,
                        hostInstance = renderer.findHostInstanceByFiber(opaqueNode);
                    return hostInstance;
                } catch (err) {
                    return null;
                }
            }
            function getReactElementFromNative(hostInstance) {
                var fiber = renderer.findFiberByHostInstance(hostInstance);
                if (null != fiber) {
                    var opaqueNode = getOpaqueNode(fiber);
                    return opaqueNode;
                }
                return null;
            }
            var opaqueNodes = new Set(),
                pendingEvents = [];
            return {
                getNativeFromReactElement: getNativeFromReactElement,
                getReactElementFromNative: getReactElementFromNative,
                handleCommitFiberRoot: handleCommitFiberRoot,
                handleCommitFiberUnmount: handleCommitFiberUnmount,
                cleanup: cleanup,
                walkTree: walkTree
            };
        }
        var getDataFiber = __webpack_require__(43),
            _require = __webpack_require__(44),
            ClassComponent = _require.ClassComponent,
            HostRoot = _require.HostRoot,
            PerformedWork = 1;
        module.exports = attachRendererFiber;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function getDataFiber(fiber, getOpaqueNode) {
            var type = fiber.type,
                key = fiber.key,
                ref = fiber.ref,
                source = fiber._debugSource,
                publicInstance = null,
                props = null,
                state = null,
                children = null,
                context = null,
                updater = null,
                nodeType = null,
                name = null,
                text = null;
            switch (fiber.tag) {
                case FunctionalComponent:
                case ClassComponent:
                    nodeType = "Composite", name = getDisplayName(fiber.type), publicInstance = fiber.stateNode, props = fiber.memoizedProps, state = fiber.memoizedState, null != publicInstance && (context = publicInstance.context, context && 0 === Object.keys(context).length && (context = null));
                    var inst = publicInstance;
                    inst && (updater = {
                        setState: inst.setState && inst.setState.bind(inst),
                        forceUpdate: inst.forceUpdate && inst.forceUpdate.bind(inst),
                        setInProps: inst.forceUpdate && setInProps.bind(null, fiber),
                        setInState: inst.forceUpdate && setInState.bind(null, inst),
                        setInContext: inst.forceUpdate && setInContext.bind(null, inst)
                    }), children = [];
                    break;

                case HostRoot:
                    nodeType = "Wrapper", children = [];
                    break;

                case HostPortal:
                    nodeType = "Portal", name = "ReactPortal", props = {
                        target: fiber.stateNode.containerInfo
                    }, children = [];
                    break;

                case HostComponent:
                    nodeType = "Native", name = fiber.type, name = name.replace("topsecret-", ""), publicInstance = fiber.stateNode, props = fiber.memoizedProps, children = "string" == typeof props.children || "number" == typeof props.children ? props.children.toString() : [], "function" == typeof fiber.stateNode.setNativeProps && (updater = {
                        setNativeProps: function setNativeProps(nativeProps) {
                            fiber.stateNode.setNativeProps(nativeProps);
                        }
                    });
                    break;

                case HostText:
                    nodeType = "Text", text = fiber.memoizedProps;
                    break;

                case Fragment:
                    nodeType = "Wrapper", children = [];
                    break;

                default:
                    nodeType = "Native", props = fiber.memoizedProps, name = "TODO_NOT_IMPLEMENTED_YET", children = [];
            }
            if (Array.isArray(children)) for (var child = fiber.child; child;) {
                children.push(getOpaqueNode(child)), child = child.sibling;
            }return {
                nodeType: nodeType,
                type: type,
                key: key,
                ref: ref,
                source: source,
                name: name,
                props: props,
                state: state,
                context: context,
                children: children,
                text: text,
                updater: updater,
                publicInstance: publicInstance
            };
        }
        function setInProps(fiber, path, value) {
            var inst = fiber.stateNode;
            fiber.pendingProps = copyWithSet(inst.props, path, value), fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps), fiber.stateNode.forceUpdate();
        }
        function setInState(inst, path, value) {
            setIn(inst.state, path, value), inst.forceUpdate();
        }
        function setInContext(inst, path, value) {
            setIn(inst.context, path, value), inst.forceUpdate();
        }
        function setIn(obj, path, value) {
            var last = path.pop(),
                parent = path.reduce(function (obj_, attr) {
                return obj_ ? obj_[attr] : null;
            }, obj);
            parent && (parent[last] = value);
        }
        var copyWithSet = __webpack_require__(37),
            getDisplayName = __webpack_require__(38),
            _require = __webpack_require__(44),
            FunctionalComponent = _require.FunctionalComponent,
            ClassComponent = _require.ClassComponent,
            HostRoot = _require.HostRoot,
            HostPortal = _require.HostPortal,
            HostComponent = _require.HostComponent,
            HostText = _require.HostText,
            Fragment = _require.Fragment;
        module.exports = getDataFiber;
    }, function (module, exports) {
        "use strict";

        module.exports = {
            IndeterminateComponent: 0,
            FunctionalComponent: 1,
            ClassComponent: 2,
            HostRoot: 3,
            HostPortal: 4,
            HostComponent: 5,
            HostText: 6,
            CoroutineComponent: 7,
            CoroutineHandlerPhase: 8,
            YieldComponent: 9,
            Fragment: 10
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function _defineProperty(obj, key, value) {
            return key in obj ? Object.defineProperty(obj, key, {
                value: value,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : obj[key] = value, obj;
        }
        function measureStyle(agent, bridge, resolveRNStyle, id) {
            var node = agent.elementData.get(id);
            if (!node || !node.props) return void bridge.send("rn-style:measure", {});
            var style = resolveRNStyle(node.props.style);
            styleOverridesByHostComponentId[id] && (style = babelHelpers.extends({}, style, styleOverridesByHostComponentId[id]));
            var instance = node.publicInstance;
            return instance && instance.measure ? void instance.measure(function (x, y, width, height, left, top) {
                if ("number" != typeof x) return void bridge.send("rn-style:measure", {
                    style: style
                });
                var margin = style && resolveBoxStyle("margin", style) || blank,
                    padding = style && resolveBoxStyle("padding", style) || blank;
                bridge.send("rn-style:measure", {
                    style: style,
                    measuredLayout: {
                        x: x,
                        y: y,
                        width: width,
                        height: height,
                        left: left,
                        top: top,
                        margin: margin,
                        padding: padding
                    }
                });
            }) : void bridge.send("rn-style:measure", {
                style: style
            });
        }
        function shallowClone(obj) {
            var nobj = {};
            for (var n in obj) {
                nobj[n] = obj[n];
            }return nobj;
        }
        function renameStyle(agent, id, oldName, newName, val) {
            var _ref3,
                data = agent.elementData.get(id),
                newStyle = newName ? (_ref3 = {}, _defineProperty(_ref3, oldName, void 0), _defineProperty(_ref3, newName, val), _ref3) : _defineProperty({}, oldName, void 0);
            if (data && data.updater && data.updater.setInProps) {
                var customStyle,
                    style = data && data.props && data.props.style;
                if (Array.isArray(style)) {
                    var lastLength = style.length - 1;
                    "object" !== _typeof(style[lastLength]) || Array.isArray(style[lastLength]) ? (style = style.concat([newStyle]), data.updater.setInProps(["style"], style)) : (customStyle = shallowClone(style[lastLength]), delete customStyle[oldName], newName ? customStyle[newName] = val : customStyle[oldName] = void 0, data.updater.setInProps(["style", lastLength], customStyle));
                } else "object" === ("undefined" == typeof style ? "undefined" : _typeof(style)) ? (customStyle = shallowClone(style), delete customStyle[oldName], newName ? customStyle[newName] = val : customStyle[oldName] = void 0, data.updater.setInProps(["style"], customStyle)) : (style = [style, newStyle], data.updater.setInProps(["style"], style));
            } else {
                if (!(data && data.updater && data.updater.setNativeProps)) return;
                styleOverridesByHostComponentId[id] ? babelHelpers.extends(styleOverridesByHostComponentId[id], newStyle) : styleOverridesByHostComponentId[id] = newStyle, data.updater.setNativeProps({
                    style: newStyle
                });
            }
            agent.emit("hideHighlight");
        }
        function setStyle(agent, id, attr, val) {
            var data = agent.elementData.get(id),
                newStyle = _defineProperty({}, attr, val);
            if (data && data.updater && data.updater.setInProps) {
                var style = data.props && data.props.style;
                if (Array.isArray(style)) {
                    var lastLength = style.length - 1;
                    "object" !== _typeof(style[lastLength]) || Array.isArray(style[lastLength]) ? (style = style.concat([newStyle]), data.updater.setInProps(["style"], style)) : data.updater.setInProps(["style", lastLength, attr], val);
                } else style = [style, newStyle], data.updater.setInProps(["style"], style);
            } else {
                if (!(data && data.updater && data.updater.setNativeProps)) return;
                styleOverridesByHostComponentId[id] ? babelHelpers.extends(styleOverridesByHostComponentId[id], newStyle) : styleOverridesByHostComponentId[id] = newStyle, data.updater.setNativeProps({
                    style: newStyle
                });
            }
            agent.emit("hideHighlight");
        }
        var _typeof = "function" == typeof Symbol && "symbol" == typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") ? function (obj) {
            return typeof obj;
        } : function (obj) {
            return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
        },
            resolveBoxStyle = __webpack_require__(46),
            styleOverridesByHostComponentId = {};
        module.exports = function (bridge, agent, resolveRNStyle) {
            bridge.onCall("rn-style:get", function (id) {
                var node = agent.elementData.get(id);
                return node && node.props ? resolveRNStyle(node.props.style) : null;
            }), bridge.on("rn-style:measure", function (id) {
                measureStyle(agent, bridge, resolveRNStyle, id);
            }), bridge.on("rn-style:rename", function (_ref) {
                var id = _ref.id,
                    oldName = _ref.oldName,
                    newName = _ref.newName,
                    val = _ref.val;
                renameStyle(agent, id, oldName, newName, val), setTimeout(function () {
                    return measureStyle(agent, bridge, resolveRNStyle, id);
                });
            }), bridge.on("rn-style:set", function (_ref2) {
                var id = _ref2.id,
                    attr = _ref2.attr,
                    val = _ref2.val;
                setStyle(agent, id, attr, val), setTimeout(function () {
                    return measureStyle(agent, bridge, resolveRNStyle, id);
                });
            });
        };
        var blank = {
            top: 0,
            left: 0,
            right: 0,
            bottom: 0
        };
    }, function (module, exports) {
        "use strict";

        function resolveBoxStyle(prefix, style) {
            var res = {},
                subs = ["top", "left", "bottom", "right"],
                set = !1;
            return subs.forEach(function (sub) {
                res[sub] = style[prefix] || 0;
            }), style[prefix] && (set = !0), style[prefix + "Vertical"] && (res.top = res.bottom = style[prefix + "Vertical"], set = !0), style[prefix + "Horizontal"] && (res.left = res.right = style[prefix + "Horizontal"], set = !0), subs.forEach(function (sub) {
                var val = style[prefix + capFirst(sub)];
                val && (res[sub] = val, set = !0);
            }), set ? res : null;
        }
        function capFirst(text) {
            return text[0].toUpperCase() + text.slice(1);
        }
        module.exports = resolveBoxStyle;
    }, function (module, exports) {
        "use strict";

        function decorate(obj, attr, fn) {
            var old = obj[attr];
            return obj[attr] = function () {
                var res = old.apply(this, arguments);
                return fn.apply(this, arguments), res;
            }, function () {
                obj[attr] = old;
            };
        }
        var subscriptionEnabled = !1;
        module.exports = function (bridge, agent, hook) {
            function sendStoreData() {
                subscriptionEnabled && bridge.send("relay:store", {
                    id: "relay:store",
                    nodes: DefaultStoreData.getNodeData()
                });
            }
            var shouldEnable = !!hook._relayInternals;
            if (bridge.onCall("relay:check", function () {
                return shouldEnable;
            }), shouldEnable) {
                var _hook$_relayInternals = hook._relayInternals,
                    DefaultStoreData = _hook$_relayInternals.DefaultStoreData,
                    setRequestListener = _hook$_relayInternals.setRequestListener;
                bridge.onCall("relay:store:enable", function () {
                    subscriptionEnabled = !0, sendStoreData();
                }), bridge.onCall("relay:store:disable", function () {
                    subscriptionEnabled = !1;
                }), sendStoreData(), decorate(DefaultStoreData, "handleUpdatePayload", sendStoreData), decorate(DefaultStoreData, "handleQueryPayload", sendStoreData);
                var removeListener = setRequestListener(function (event, data) {
                    bridge.send(event, data);
                });
                hook.on("shutdown", removeListener);
            }
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        var Highlighter = __webpack_require__(49);
        module.exports = function (agent) {
            var hl = new Highlighter(window, function (node) {
                agent.selectFromDOMNode(node);
            });
            agent.on("highlight", function (data) {
                return hl.highlight(data.node, data.name);
            }), agent.on("highlightMany", function (nodes) {
                return hl.highlightMany(nodes);
            }), agent.on("hideHighlight", function () {
                return hl.hideHighlight();
            }), agent.on("refreshMultiOverlay", function () {
                return hl.refreshMultiOverlay();
            }), agent.on("startInspecting", function () {
                return hl.startInspecting();
            }), agent.on("stopInspecting", function () {
                return hl.stopInspecting();
            }), agent.on("shutdown", function () {
                hl.remove();
            });
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        function captureSubscription(obj, evt, cb) {
            return obj.addEventListener(evt, cb, !0), function () {
                return obj.removeEventListener(evt, cb, !0);
            };
        }
        function makeMagnifier() {
            var button = window.document.createElement("button");
            return button.innerHTML = "&#128269;", button.style.backgroundColor = "transparent", button.style.border = "none", button.style.outline = "none", button.style.cursor = "pointer", button.style.position = "fixed", button.style.bottom = "10px", button.style.right = "10px", button.style.fontSize = "30px", button.style.zIndex = 1e7, button;
        }
        var _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function (Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor;
            };
        }(),
            Overlay = __webpack_require__(50),
            MultiOverlay = __webpack_require__(52),
            Highlighter = function () {
            function Highlighter(win, onSelect) {
                _classCallCheck(this, Highlighter), this._win = win, this._onSelect = onSelect, this._overlay = null, this._multiOverlay = null, this._subs = [];
            }
            return _createClass(Highlighter, [{
                key: "startInspecting",
                value: function value() {
                    this._inspecting = !0, this._subs = [captureSubscription(this._win, "mouseover", this.onHover.bind(this)), captureSubscription(this._win, "mousedown", this.onMouseDown.bind(this)), captureSubscription(this._win, "click", this.onClick.bind(this))];
                }
            }, {
                key: "stopInspecting",
                value: function value() {
                    this._subs.forEach(function (unsub) {
                        return unsub();
                    }), this.hideHighlight();
                }
            }, {
                key: "remove",
                value: function value() {
                    this.stopInspecting(), this._button && this._button.parentNode && this._button.parentNode.removeChild(this._button);
                }
            }, {
                key: "highlight",
                value: function value(node, name) {
                    this.removeMultiOverlay(), node.nodeType !== Node.COMMENT_NODE && (this._overlay || (this._overlay = new Overlay(this._win)), this._overlay.inspect(node, name));
                }
            }, {
                key: "highlightMany",
                value: function value(nodes) {
                    this.removeOverlay(), this._multiOverlay || (this._multiOverlay = new MultiOverlay(this._win)), this._multiOverlay.highlightMany(nodes);
                }
            }, {
                key: "hideHighlight",
                value: function value() {
                    this._inspecting = !1, this.removeOverlay(), this.removeMultiOverlay();
                }
            }, {
                key: "refreshMultiOverlay",
                value: function value() {
                    this._multiOverlay && this._multiOverlay.refresh();
                }
            }, {
                key: "removeOverlay",
                value: function value() {
                    this._overlay && (this._overlay.remove(), this._overlay = null);
                }
            }, {
                key: "removeMultiOverlay",
                value: function value() {
                    this._multiOverlay && (this._multiOverlay.remove(), this._multiOverlay = null);
                }
            }, {
                key: "onMouseDown",
                value: function value(evt) {
                    this._inspecting && (evt.preventDefault(), evt.stopPropagation(), evt.cancelBubble = !0, this._onSelect(evt.target));
                }
            }, {
                key: "onClick",
                value: function value(evt) {
                    this._inspecting && (this._subs.forEach(function (unsub) {
                        return unsub();
                    }), evt.preventDefault(), evt.stopPropagation(), evt.cancelBubble = !0, this.hideHighlight());
                }
            }, {
                key: "onHover",
                value: function value(evt) {
                    this._inspecting && (evt.preventDefault(), evt.stopPropagation(), evt.cancelBubble = !0, this.highlight(evt.target));
                }
            }, {
                key: "injectButton",
                value: function value() {
                    this._button = makeMagnifier(), this._button.onclick = this.startInspecting.bind(this), this._win.document.body.appendChild(this._button);
                }
            }]), Highlighter;
        }();
        module.exports = Highlighter;
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        function findTipPos(dims, win) {
            var top,
                tipHeight = 20,
                margin = 5;
            return top = dims.top + dims.height + tipHeight <= win.innerHeight ? dims.top + dims.height < 0 ? margin : dims.top + dims.height + margin : dims.top - tipHeight <= win.innerHeight ? dims.top - tipHeight - margin < margin ? margin : dims.top - tipHeight - margin : win.innerHeight - tipHeight - margin, top += "px", dims.left < 0 ? {
                top: top,
                left: margin
            } : dims.left + 200 > win.innerWidth ? {
                top: top,
                right: margin
            } : {
                top: top,
                left: dims.left + margin + "px"
            };
        }
        function getElementDimensions(domElement) {
            var calculatedStyle = window.getComputedStyle(domElement);
            return {
                borderLeft: +calculatedStyle.borderLeftWidth.match(/[0-9]*/)[0],
                borderRight: +calculatedStyle.borderRightWidth.match(/[0-9]*/)[0],
                borderTop: +calculatedStyle.borderTopWidth.match(/[0-9]*/)[0],
                borderBottom: +calculatedStyle.borderBottomWidth.match(/[0-9]*/)[0],
                marginLeft: +calculatedStyle.marginLeft.match(/[0-9]*/)[0],
                marginRight: +calculatedStyle.marginRight.match(/[0-9]*/)[0],
                marginTop: +calculatedStyle.marginTop.match(/[0-9]*/)[0],
                marginBottom: +calculatedStyle.marginBottom.match(/[0-9]*/)[0],
                paddingLeft: +calculatedStyle.paddingLeft.match(/[0-9]*/)[0],
                paddingRight: +calculatedStyle.paddingRight.match(/[0-9]*/)[0],
                paddingTop: +calculatedStyle.paddingTop.match(/[0-9]*/)[0],
                paddingBottom: +calculatedStyle.paddingBottom.match(/[0-9]*/)[0]
            };
        }
        function getOwnerWindow(node) {
            return node.ownerDocument ? node.ownerDocument.defaultView : null;
        }
        function getOwnerIframe(node) {
            var nodeWindow = getOwnerWindow(node);
            return nodeWindow ? nodeWindow.frameElement : null;
        }
        function getBoundingClientRectWithBorderOffset(node) {
            var dimensions = getElementDimensions(node);
            return mergeRectOffsets([node.getBoundingClientRect(), {
                top: dimensions.borderTop,
                left: dimensions.borderLeft,
                bottom: dimensions.borderBottom,
                right: dimensions.borderRight,
                width: 0,
                height: 0
            }]);
        }
        function mergeRectOffsets(rects) {
            return rects.reduce(function (previousRect, rect) {
                return null == previousRect ? rect : {
                    top: previousRect.top + rect.top,
                    left: previousRect.left + rect.left,
                    width: previousRect.width,
                    height: previousRect.height,
                    bottom: previousRect.bottom + rect.bottom,
                    right: previousRect.right + rect.right
                };
            });
        }
        function getNestedBoundingClientRect(node, boundaryWindow) {
            var ownerIframe = getOwnerIframe(node);
            if (ownerIframe && ownerIframe !== boundaryWindow) {
                for (var rects = [node.getBoundingClientRect()], currentIframe = ownerIframe, onlyOneMore = !1; currentIframe;) {
                    var rect = getBoundingClientRectWithBorderOffset(currentIframe);
                    if (rects.push(rect), currentIframe = getOwnerIframe(currentIframe), onlyOneMore) break;
                    currentIframe && getOwnerWindow(currentIframe) === boundaryWindow && (onlyOneMore = !0);
                }
                return mergeRectOffsets(rects);
            }
            return node.getBoundingClientRect();
        }
        function boxWrap(dims, what, node) {
            assign(node.style, {
                borderTopWidth: dims[what + "Top"] + "px",
                borderLeftWidth: dims[what + "Left"] + "px",
                borderRightWidth: dims[what + "Right"] + "px",
                borderBottomWidth: dims[what + "Bottom"] + "px",
                borderStyle: "solid"
            });
        }
        var _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function (Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor;
            };
        }(),
            assign = __webpack_require__(3),
            _require = __webpack_require__(51),
            monospace = _require.monospace,
            Overlay = function () {
            function Overlay(window) {
                _classCallCheck(this, Overlay);
                var doc = window.document;
                this.win = window, this.container = doc.createElement("div"), this.node = doc.createElement("div"), this.border = doc.createElement("div"), this.padding = doc.createElement("div"), this.content = doc.createElement("div"), this.border.style.borderColor = overlayStyles.border, this.padding.style.borderColor = overlayStyles.padding, this.content.style.backgroundColor = overlayStyles.background, assign(this.node.style, {
                    borderColor: overlayStyles.margin,
                    pointerEvents: "none",
                    position: "fixed"
                }), this.tip = doc.createElement("div"), assign(this.tip.style, {
                    backgroundColor: "#333740",
                    borderRadius: "2px",
                    fontFamily: monospace.family,
                    fontWeight: "bold",
                    padding: "3px 5px",
                    position: "fixed",
                    fontSize: monospace.sizes.normal
                }), this.nameSpan = doc.createElement("span"), this.tip.appendChild(this.nameSpan), assign(this.nameSpan.style, {
                    color: "#ee78e6",
                    borderRight: "1px solid #aaaaaa",
                    paddingRight: "0.5rem",
                    marginRight: "0.5rem"
                }), this.dimSpan = doc.createElement("span"), this.tip.appendChild(this.dimSpan), assign(this.dimSpan.style, {
                    color: "#d7d7d7"
                }), this.container.style.zIndex = 1e7, this.node.style.zIndex = 1e7, this.tip.style.zIndex = 1e7, this.container.appendChild(this.node), this.container.appendChild(this.tip), this.node.appendChild(this.border), this.border.appendChild(this.padding), this.padding.appendChild(this.content), doc.body.appendChild(this.container);
            }
            return _createClass(Overlay, [{
                key: "remove",
                value: function value() {
                    this.container.parentNode && this.container.parentNode.removeChild(this.container);
                }
            }, {
                key: "inspect",
                value: function value(node, name) {
                    if (node.nodeType === Node.ELEMENT_NODE) {
                        var box = getNestedBoundingClientRect(node, this.win),
                            dims = getElementDimensions(node);
                        boxWrap(dims, "margin", this.node), boxWrap(dims, "border", this.border), boxWrap(dims, "padding", this.padding), assign(this.content.style, {
                            height: box.height - dims.borderTop - dims.borderBottom - dims.paddingTop - dims.paddingBottom + "px",
                            width: box.width - dims.borderLeft - dims.borderRight - dims.paddingLeft - dims.paddingRight + "px"
                        }), assign(this.node.style, {
                            top: box.top - dims.marginTop + "px",
                            left: box.left - dims.marginLeft + "px"
                        }), this.nameSpan.textContent = name || node.nodeName.toLowerCase(), this.dimSpan.textContent = box.width + "px × " + box.height + "px";
                        var tipPos = findTipPos({
                            top: box.top - dims.marginTop,
                            left: box.left - dims.marginLeft,
                            height: box.height + dims.marginTop + dims.marginBottom,
                            width: box.width + dims.marginLeft + dims.marginRight
                        }, this.win);
                        assign(this.tip.style, tipPos);
                    }
                }
            }]), Overlay;
        }(),
            overlayStyles = {
            background: "rgba(120, 170, 210, 0.7)",
            padding: "rgba(77, 200, 0, 0.3)",
            margin: "rgba(255, 155, 0, 0.3)",
            border: "rgba(255, 200, 50, 0.3)"
        };
        module.exports = Overlay;
    }, function (module, exports) {
        "use strict";

        module.exports = {
            monospace: {
                family: "Menlo, Consolas, monospace",
                sizes: {
                    normal: 11,
                    large: 14
                }
            },
            sansSerif: {
                family: '"Helvetica Neue", "Lucida Grande", -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, sans-serif',
                sizes: {
                    small: 10,
                    normal: 12,
                    large: 14
                }
            }
        };
    }, function (module, exports, __webpack_require__) {
        "use strict";

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        var _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function (Constructor, protoProps, staticProps) {
                return protoProps && defineProperties(Constructor.prototype, protoProps), staticProps && defineProperties(Constructor, staticProps), Constructor;
            };
        }(),
            assign = __webpack_require__(3),
            MultiOverlay = function () {
            function MultiOverlay(window) {
                _classCallCheck(this, MultiOverlay), this.win = window;
                var doc = window.document;
                this.container = doc.createElement("div"), doc.body.appendChild(this.container), this._currentNodes = null;
            }
            return _createClass(MultiOverlay, [{
                key: "highlightMany",
                value: function value(nodes) {
                    var _this = this;
                    this._currentNodes = nodes, this.container.innerHTML = "", nodes.forEach(function (node) {
                        var div = _this.win.document.createElement("div");
                        if ("function" == typeof node.getBoundingClientRect) {
                            var box = node.getBoundingClientRect();
                            box.bottom < 0 || box.top > window.innerHeight || (assign(div.style, {
                                top: box.top + "px",
                                left: box.left + "px",
                                width: box.width + "px",
                                height: box.height + "px",
                                border: "2px dotted rgba(200, 100, 100, .8)",
                                boxSizing: "border-box",
                                backgroundColor: "rgba(200, 100, 100, .2)",
                                position: "fixed",
                                zIndex: 1e7,
                                pointerEvents: "none"
                            }), _this.container.appendChild(div));
                        }
                    });
                }
            }, {
                key: "refresh",
                value: function value() {
                    this._currentNodes && this.highlightMany(this._currentNodes);
                }
            }, {
                key: "remove",
                value: function value() {
                    this.container.parentNode && (this.container.parentNode.removeChild(this.container), this._currentNodes = null);
                }
            }]), MultiOverlay;
        }();
        module.exports = MultiOverlay;
    }]);
});
}, 114, null, "react-devtools-core/build/backend.js");
__d(/* JSInspector */function(global, require, module, exports) {
'use strict';

var JSInspector = {
  registerAgent: function registerAgent(type) {
    if (global.__registerInspectorAgent) {
      global.__registerInspectorAgent(type);
    }
  },
  getTimestamp: function getTimestamp() {
    return global.__inspectorTimestamp();
  }
};

module.exports = JSInspector;
}, 115, null, "JSInspector");
__d(/* NetworkAgent */function(global, require, module, exports) {
'use strict';

var InspectorAgent = require(117             ); // 117 = InspectorAgent
var JSInspector = require(115          ); // 115 = JSInspector
var Map = require(54   ); // 54 = Map
var XMLHttpRequest = require(72              ); // 72 = XMLHttpRequest

var Interceptor = function () {
  function Interceptor(agent) {
    babelHelpers.classCallCheck(this, Interceptor);

    this._agent = agent;
    this._requests = new Map();
  }

  babelHelpers.createClass(Interceptor, [{
    key: 'getData',
    value: function getData(requestId) {
      return this._requests.get(requestId);
    }
  }, {
    key: 'requestSent',
    value: function requestSent(id, url, method, headers) {
      var requestId = String(id);
      this._requests.set(requestId, '');

      var request = {
        url: url,
        method: method,
        headers: headers,
        initialPriority: 'Medium'
      };
      var event = {
        requestId: requestId,
        documentURL: '',
        frameId: '1',
        loaderId: '1',
        request: request,
        timestamp: JSInspector.getTimestamp(),
        initiator: {
          type: 'other'
        },
        type: 'Other'
      };
      this._agent.sendEvent('requestWillBeSent', event);
    }
  }, {
    key: 'responseReceived',
    value: function responseReceived(id, url, status, headers) {
      var requestId = String(id);
      var response = {
        url: url,
        status: status,
        statusText: String(status),
        headers: headers,

        requestHeaders: {},
        mimeType: this._getMimeType(headers),
        connectionReused: false,
        connectionId: -1,
        encodedDataLength: 0,
        securityState: 'unknown'
      };

      var event = {
        requestId: requestId,
        frameId: '1',
        loaderId: '1',
        timestamp: JSInspector.getTimestamp(),
        type: 'Other',
        response: response
      };
      this._agent.sendEvent('responseReceived', event);
    }
  }, {
    key: 'dataReceived',
    value: function dataReceived(id, data) {
      var requestId = String(id);
      var existingData = this._requests.get(requestId) || '';
      this._requests.set(requestId, existingData.concat(data));
      var event = {
        requestId: requestId,
        timestamp: JSInspector.getTimestamp(),
        dataLength: data.length,
        encodedDataLength: data.length
      };
      this._agent.sendEvent('dataReceived', event);
    }
  }, {
    key: 'loadingFinished',
    value: function loadingFinished(id, encodedDataLength) {
      var event = {
        requestId: String(id),
        timestamp: JSInspector.getTimestamp(),
        encodedDataLength: encodedDataLength
      };
      this._agent.sendEvent('loadingFinished', event);
    }
  }, {
    key: 'loadingFailed',
    value: function loadingFailed(id, error) {
      var event = {
        requestId: String(id),
        timestamp: JSInspector.getTimestamp(),
        type: 'Other',
        errorText: error
      };
      this._agent.sendEvent('loadingFailed', event);
    }
  }, {
    key: '_getMimeType',
    value: function _getMimeType(headers) {
      var contentType = headers['Content-Type'] || '';
      return contentType.split(';')[0];
    }
  }]);
  return Interceptor;
}();

var NetworkAgent = function (_InspectorAgent) {
  babelHelpers.inherits(NetworkAgent, _InspectorAgent);

  function NetworkAgent() {
    babelHelpers.classCallCheck(this, NetworkAgent);
    return babelHelpers.possibleConstructorReturn(this, (NetworkAgent.__proto__ || Object.getPrototypeOf(NetworkAgent)).apply(this, arguments));
  }

  babelHelpers.createClass(NetworkAgent, [{
    key: 'enable',
    value: function enable(_ref) {
      var maxResourceBufferSize = _ref.maxResourceBufferSize,
          maxTotalBufferSize = _ref.maxTotalBufferSize;

      this._interceptor = new Interceptor(this);
      XMLHttpRequest.setInterceptor(this._interceptor);
    }
  }, {
    key: 'disable',
    value: function disable() {
      XMLHttpRequest.setInterceptor(null);
      this._interceptor = null;
    }
  }, {
    key: 'getResponseBody',
    value: function getResponseBody(_ref2) {
      var requestId = _ref2.requestId;

      return { body: this.interceptor().getData(requestId), base64Encoded: false };
    }
  }, {
    key: 'interceptor',
    value: function interceptor() {
      if (this._interceptor) {
        return this._interceptor;
      } else {
        throw Error('_interceptor can not be null');
      }
    }
  }]);
  return NetworkAgent;
}(InspectorAgent);

NetworkAgent.DOMAIN = 'Network';


module.exports = NetworkAgent;
}, 116, null, "NetworkAgent");
__d(/* InspectorAgent */function(global, require, module, exports) {
'use strict';

var InspectorAgent = function () {
  function InspectorAgent(eventSender) {
    babelHelpers.classCallCheck(this, InspectorAgent);

    this._eventSender = eventSender;
  }

  babelHelpers.createClass(InspectorAgent, [{
    key: 'sendEvent',
    value: function sendEvent(name, params) {
      this._eventSender(name, params);
    }
  }]);
  return InspectorAgent;
}();

module.exports = InspectorAgent;
}, 117, null, "InspectorAgent");
__d(/* RCTEventEmitter */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(16             ); // 16 = BatchedBridge

var RCTEventEmitter = {
  register: function register(eventEmitter) {
    BatchedBridge.registerCallableModule('RCTEventEmitter', eventEmitter);
  }
};

module.exports = RCTEventEmitter;
}, 118, null, "RCTEventEmitter");
__d(/* ReactNativeFiber-prod */function(global, require, module, exports) {
"use strict";

var invariant = require(13                  ), // 13 = fbjs/lib/invariant
    ExceptionsManager = require(25                 ), // 25 = ExceptionsManager
    emptyObject = require(34                    ), // 34 = fbjs/lib/emptyObject
    react = require(35     ), // 35 = react
    shallowEqual = require(41                     ), // 41 = fbjs/lib/shallowEqual
    deepDiffer = require(42          ), // 42 = deepDiffer
    flattenStyle = require(43            ), // 43 = flattenStyle
    TextInputState = require(45              ), // 45 = TextInputState
    UIManager = require(47         ); // 47 = UIManager

require(49                                 ), require(50              ); // 50 = InitializeCore // 49 = deepFreezeAndThrowOnMutationInDev

var RCTEventEmitter = require(118              ), // 118 = RCTEventEmitter
    emptyFunction = require(24                      ), // 24 = fbjs/lib/emptyFunction
    defaultShowDialog = function defaultShowDialog(capturedError) {
    return !0;
},
    showDialog = defaultShowDialog;

function logCapturedError(capturedError) {
    if (!1 !== showDialog(capturedError)) {
        var error = capturedError.error;
        console.error(error);
    }
}

var injection = {
    injectDialog: function injectDialog(fn) {
        invariant(showDialog === defaultShowDialog, "The custom dialog was already injected."), invariant("function" == typeof fn, "Injected showDialog() must be a function."), showDialog = fn;
    }
},
    logCapturedError_1 = logCapturedError,
    ReactFiberErrorLogger = {
    injection: injection,
    logCapturedError: logCapturedError_1
},
    ReactErrorUtils = {
    _caughtError: null,
    _hasCaughtError: !1,
    _rethrowError: null,
    _hasRethrowError: !1,
    injection: {
        injectErrorUtils: function injectErrorUtils(injectedErrorUtils) {
            invariant("function" == typeof injectedErrorUtils.invokeGuardedCallback, "Injected invokeGuardedCallback() must be a function."), _invokeGuardedCallback = injectedErrorUtils.invokeGuardedCallback;
        }
    },
    invokeGuardedCallback: function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
        _invokeGuardedCallback.apply(ReactErrorUtils, arguments);
    },
    invokeGuardedCallbackAndCatchFirstError: function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
        if (ReactErrorUtils.invokeGuardedCallback.apply(this, arguments), ReactErrorUtils.hasCaughtError()) {
            var error = ReactErrorUtils.clearCaughtError();
            ReactErrorUtils._hasRethrowError || (ReactErrorUtils._hasRethrowError = !0, ReactErrorUtils._rethrowError = error);
        }
    },
    rethrowCaughtError: function rethrowCaughtError() {
        return _rethrowCaughtError.apply(ReactErrorUtils, arguments);
    },
    hasCaughtError: function hasCaughtError() {
        return ReactErrorUtils._hasCaughtError;
    },
    clearCaughtError: function clearCaughtError() {
        if (ReactErrorUtils._hasCaughtError) {
            var error = ReactErrorUtils._caughtError;
            return ReactErrorUtils._caughtError = null, ReactErrorUtils._hasCaughtError = !1, error;
        }
        invariant(!1, "clearCaughtError was called but no error was captured. This error " + "is likely caused by a bug in React. Please file an issue.");
    }
},
    _invokeGuardedCallback = function _invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
    ReactErrorUtils._hasCaughtError = !1, ReactErrorUtils._caughtError = null;
    var funcArgs = Array.prototype.slice.call(arguments, 3);
    try {
        func.apply(context, funcArgs);
    } catch (error) {
        ReactErrorUtils._caughtError = error, ReactErrorUtils._hasCaughtError = !0;
    }
},
    _rethrowCaughtError = function _rethrowCaughtError() {
    if (ReactErrorUtils._hasRethrowError) {
        var error = ReactErrorUtils._rethrowError;
        throw ReactErrorUtils._rethrowError = null, ReactErrorUtils._hasRethrowError = !1, error;
    }
},
    ReactErrorUtils_1 = ReactErrorUtils,
    ComponentTree,
    injection$1 = {
    injectComponentTree: function injectComponentTree(Injected) {
        ComponentTree = Injected;
    }
};

function isEndish(topLevelType) {
    return "topMouseUp" === topLevelType || "topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType;
}

function isMoveish(topLevelType) {
    return "topMouseMove" === topLevelType || "topTouchMove" === topLevelType;
}

function isStartish(topLevelType) {
    return "topMouseDown" === topLevelType || "topTouchStart" === topLevelType;
}

function executeDispatch(event, simulated, listener, inst) {
    var type = event.type || "unknown-event";
    event.currentTarget = EventPluginUtils.getNodeFromInstance(inst), ReactErrorUtils_1.invokeGuardedCallbackAndCatchFirstError(type, listener, void 0, event), event.currentTarget = null;
}

function executeDispatchesInOrder(event, simulated) {
    var dispatchListeners = event._dispatchListeners,
        dispatchInstances = event._dispatchInstances;
    if (Array.isArray(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !event.isPropagationStopped(); i++) {
        executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    } else dispatchListeners && executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
    event._dispatchListeners = null, event._dispatchInstances = null;
}

function executeDispatchesInOrderStopAtTrueImpl(event) {
    var dispatchListeners = event._dispatchListeners,
        dispatchInstances = event._dispatchInstances;
    if (Array.isArray(dispatchListeners)) {
        for (var i = 0; i < dispatchListeners.length && !event.isPropagationStopped(); i++) {
            if (dispatchListeners[i](event, dispatchInstances[i])) return dispatchInstances[i];
        }
    } else if (dispatchListeners && dispatchListeners(event, dispatchInstances)) return dispatchInstances;
    return null;
}

function executeDispatchesInOrderStopAtTrue(event) {
    var ret = executeDispatchesInOrderStopAtTrueImpl(event);
    return event._dispatchInstances = null, event._dispatchListeners = null, ret;
}

function executeDirectDispatch(event) {
    var dispatchListener = event._dispatchListeners,
        dispatchInstance = event._dispatchInstances;
    invariant(!Array.isArray(dispatchListener), "executeDirectDispatch(...): Invalid `event`."), event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
    var res = dispatchListener ? dispatchListener(event) : null;
    return event.currentTarget = null, event._dispatchListeners = null, event._dispatchInstances = null, res;
}

function hasDispatches(event) {
    return !!event._dispatchListeners;
}

var EventPluginUtils = {
    isEndish: isEndish,
    isMoveish: isMoveish,
    isStartish: isStartish,
    executeDirectDispatch: executeDirectDispatch,
    executeDispatchesInOrder: executeDispatchesInOrder,
    executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
    hasDispatches: hasDispatches,
    getFiberCurrentPropsFromNode: function getFiberCurrentPropsFromNode(node) {
        return ComponentTree.getFiberCurrentPropsFromNode(node);
    },
    getInstanceFromNode: function getInstanceFromNode(node) {
        return ComponentTree.getInstanceFromNode(node);
    },
    getNodeFromInstance: function getNodeFromInstance(node) {
        return ComponentTree.getNodeFromInstance(node);
    },
    injection: injection$1
},
    EventPluginUtils_1 = EventPluginUtils,
    fiberHostComponent = null,
    ReactControlledComponentInjection = {
    injectFiberControlledHostComponent: function injectFiberControlledHostComponent(hostComponentImpl) {
        fiberHostComponent = hostComponentImpl;
    }
},
    restoreTarget = null,
    restoreQueue = null;

function restoreStateOfTarget(target) {
    var internalInstance = EventPluginUtils_1.getInstanceFromNode(target);
    if (internalInstance) {
        invariant(fiberHostComponent && "function" == typeof fiberHostComponent.restoreControlledState, "Fiber needs to be injected to handle a fiber target for controlled " + "events. This error is likely caused by a bug in React. Please file an issue.");
        var props = EventPluginUtils_1.getFiberCurrentPropsFromNode(internalInstance.stateNode);
        fiberHostComponent.restoreControlledState(internalInstance.stateNode, internalInstance.type, props);
    }
}

var ReactControlledComponent = {
    injection: ReactControlledComponentInjection,
    enqueueStateRestore: function enqueueStateRestore(target) {
        restoreTarget ? restoreQueue ? restoreQueue.push(target) : restoreQueue = [target] : restoreTarget = target;
    },
    restoreStateIfNeeded: function restoreStateIfNeeded() {
        if (restoreTarget) {
            var target = restoreTarget,
                queuedTargets = restoreQueue;
            if (restoreTarget = null, restoreQueue = null, restoreStateOfTarget(target), queuedTargets) for (var i = 0; i < queuedTargets.length; i++) {
                restoreStateOfTarget(queuedTargets[i]);
            }
        }
    }
},
    ReactControlledComponent_1 = ReactControlledComponent,
    fiberBatchedUpdates = function fiberBatchedUpdates(fn, bookkeeping) {
    return fn(bookkeeping);
};

function batchedUpdates(fn, bookkeeping) {
    return fiberBatchedUpdates(fn, bookkeeping);
}

var isNestingBatched = !1;

function batchedUpdatesWithControlledComponents(fn, bookkeeping) {
    if (isNestingBatched) return batchedUpdates(fn, bookkeeping);
    isNestingBatched = !0;
    try {
        return batchedUpdates(fn, bookkeeping);
    } finally {
        isNestingBatched = !1, ReactControlledComponent_1.restoreStateIfNeeded();
    }
}

var ReactGenericBatchingInjection = {
    injectFiberBatchedUpdates: function injectFiberBatchedUpdates(_batchedUpdates) {
        fiberBatchedUpdates = _batchedUpdates;
    }
},
    ReactGenericBatching = {
    batchedUpdates: batchedUpdatesWithControlledComponents,
    injection: ReactGenericBatchingInjection
},
    ReactGenericBatching_1 = ReactGenericBatching;

function ReactNativeFiberErrorDialog(capturedError) {
    var componentStack = capturedError.componentStack,
        error = capturedError.error,
        errorToHandle = void 0;
    if (error instanceof Error) {
        var message = error.message,
            name = error.name,
            summary = message ? name + ": " + message : name;
        errorToHandle = error;
        try {
            errorToHandle.message = summary + "\n\nThis error is located at:" + componentStack;
        } catch (e) {}
    } else errorToHandle = "string" == typeof error ? new Error(error + "\n\nThis error is located at:" + componentStack) : new Error("Unspecified error at:" + componentStack);
    return ExceptionsManager.handleException(errorToHandle, !1), !1;
}

var showDialog$1 = ReactNativeFiberErrorDialog,
    ReactNativeFiberErrorDialog_1 = {
    showDialog: showDialog$1
},
    REACT_PORTAL_TYPE = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for") && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") || 60106,
    createPortal = function createPortal(children, containerInfo, implementation) {
    var key = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
    return {
        $$typeof: REACT_PORTAL_TYPE,
        key: null == key ? null : "" + key,
        children: children,
        containerInfo: containerInfo,
        implementation: implementation
    };
},
    isPortal = function isPortal(object) {
    return "object" == typeof object && null !== object && object.$$typeof === REACT_PORTAL_TYPE;
},
    REACT_PORTAL_TYPE_1 = REACT_PORTAL_TYPE,
    ReactPortal = {
    createPortal: createPortal,
    isPortal: isPortal,
    REACT_PORTAL_TYPE: REACT_PORTAL_TYPE_1
},
    instanceCache = {},
    instanceProps = {};

function precacheFiberNode(hostInst, tag) {
    instanceCache[tag] = hostInst;
}

function uncacheFiberNode(tag) {
    delete instanceCache[tag], delete instanceProps[tag];
}

function getInstanceFromTag(tag) {
    return instanceCache[tag] || null;
}

function getTagFromInstance(inst) {
    var tag = inst.stateNode._nativeTag;
    return invariant(tag, "All native instances should have a tag."), tag;
}

function getFiberCurrentPropsFromNode(stateNode) {
    return instanceProps[stateNode._nativeTag] || null;
}

function updateFiberProps(tag, props) {
    instanceProps[tag] = props;
}

var ReactNativeComponentTree = {
    getClosestInstanceFromNode: getInstanceFromTag,
    getInstanceFromNode: getInstanceFromTag,
    getNodeFromInstance: getTagFromInstance,
    precacheFiberNode: precacheFiberNode,
    uncacheFiberNode: uncacheFiberNode,
    getFiberCurrentPropsFromNode: getFiberCurrentPropsFromNode,
    updateFiberProps: updateFiberProps
},
    ReactNativeComponentTree_1 = ReactNativeComponentTree,
    commonjsGlobal = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {},
    ReactFeatureFlags = {
    enableAsyncSubtreeAPI: !0
},
    ReactFeatureFlags_1 = ReactFeatureFlags,
    ReactTypeOfSideEffect = {
    NoEffect: 0,
    PerformedWork: 1,
    Placement: 2,
    Update: 4,
    PlacementAndUpdate: 6,
    Deletion: 8,
    ContentReset: 16,
    Callback: 32,
    Err: 64,
    Ref: 128
},
    ReactPriorityLevel = {
    NoWork: 0,
    SynchronousPriority: 1,
    TaskPriority: 2,
    HighPriority: 3,
    LowPriority: 4,
    OffscreenPriority: 5
},
    ReactTypeOfWork = {
    IndeterminateComponent: 0,
    FunctionalComponent: 1,
    ClassComponent: 2,
    HostRoot: 3,
    HostPortal: 4,
    HostComponent: 5,
    HostText: 6,
    CoroutineComponent: 7,
    CoroutineHandlerPhase: 8,
    YieldComponent: 9,
    Fragment: 10
},
    CallbackEffect = ReactTypeOfSideEffect.Callback,
    NoWork = ReactPriorityLevel.NoWork,
    SynchronousPriority = ReactPriorityLevel.SynchronousPriority,
    TaskPriority = ReactPriorityLevel.TaskPriority,
    ClassComponent = ReactTypeOfWork.ClassComponent,
    HostRoot = ReactTypeOfWork.HostRoot,
    _queue1 = void 0,
    _queue2 = void 0;

function comparePriority(a, b) {
    return a !== TaskPriority && a !== SynchronousPriority || b !== TaskPriority && b !== SynchronousPriority ? a === NoWork && b !== NoWork ? -255 : a !== NoWork && b === NoWork ? 255 : a - b : 0;
}

function createUpdateQueue() {
    return {
        first: null,
        last: null,
        hasForceUpdate: !1,
        callbackList: null
    };
}

function cloneUpdate(update) {
    return {
        priorityLevel: update.priorityLevel,
        partialState: update.partialState,
        callback: update.callback,
        isReplace: update.isReplace,
        isForced: update.isForced,
        isTopLevelUnmount: update.isTopLevelUnmount,
        next: null
    };
}

function insertUpdateIntoQueue(queue, update, insertAfter, insertBefore) {
    null !== insertAfter ? insertAfter.next = update : (update.next = queue.first, queue.first = update), null !== insertBefore ? update.next = insertBefore : queue.last = update;
}

function findInsertionPosition(queue, update) {
    var priorityLevel = update.priorityLevel,
        insertAfter = null,
        insertBefore = null;
    if (null !== queue.last && comparePriority(queue.last.priorityLevel, priorityLevel) <= 0) insertAfter = queue.last;else for (insertBefore = queue.first; null !== insertBefore && comparePriority(insertBefore.priorityLevel, priorityLevel) <= 0;) {
        insertAfter = insertBefore, insertBefore = insertBefore.next;
    }return insertAfter;
}

function ensureUpdateQueues(fiber) {
    var alternateFiber = fiber.alternate,
        queue1 = fiber.updateQueue;
    null === queue1 && (queue1 = fiber.updateQueue = createUpdateQueue());
    var queue2 = void 0;
    null !== alternateFiber ? null === (queue2 = alternateFiber.updateQueue) && (queue2 = alternateFiber.updateQueue = createUpdateQueue()) : queue2 = null, _queue1 = queue1, _queue2 = queue2 !== queue1 ? queue2 : null;
}

function insertUpdate(fiber, update) {
    ensureUpdateQueues(fiber);
    var queue1 = _queue1,
        queue2 = _queue2,
        insertAfter1 = findInsertionPosition(queue1, update),
        insertBefore1 = null !== insertAfter1 ? insertAfter1.next : queue1.first;
    if (null === queue2) return insertUpdateIntoQueue(queue1, update, insertAfter1, insertBefore1), null;
    var insertAfter2 = findInsertionPosition(queue2, update),
        insertBefore2 = null !== insertAfter2 ? insertAfter2.next : queue2.first;
    if (insertUpdateIntoQueue(queue1, update, insertAfter1, insertBefore1), insertBefore1 === insertBefore2 && null !== insertBefore1 || insertAfter1 === insertAfter2 && null !== insertAfter1) return null === insertAfter2 && (queue2.first = update), null === insertBefore2 && (queue2.last = null), null;
    var update2 = cloneUpdate(update);
    return insertUpdateIntoQueue(queue2, update2, insertAfter2, insertBefore2), update2;
}

function addUpdate(fiber, partialState, callback, priorityLevel) {
    insertUpdate(fiber, {
        priorityLevel: priorityLevel,
        partialState: partialState,
        callback: callback,
        isReplace: !1,
        isForced: !1,
        isTopLevelUnmount: !1,
        next: null
    });
}

var addUpdate_1 = addUpdate;

function addReplaceUpdate(fiber, state, callback, priorityLevel) {
    insertUpdate(fiber, {
        priorityLevel: priorityLevel,
        partialState: state,
        callback: callback,
        isReplace: !0,
        isForced: !1,
        isTopLevelUnmount: !1,
        next: null
    });
}

var addReplaceUpdate_1 = addReplaceUpdate;

function addForceUpdate(fiber, callback, priorityLevel) {
    insertUpdate(fiber, {
        priorityLevel: priorityLevel,
        partialState: null,
        callback: callback,
        isReplace: !1,
        isForced: !0,
        isTopLevelUnmount: !1,
        next: null
    });
}

var addForceUpdate_1 = addForceUpdate;

function getUpdatePriority(fiber) {
    var updateQueue = fiber.updateQueue;
    return null === updateQueue ? NoWork : fiber.tag !== ClassComponent && fiber.tag !== HostRoot ? NoWork : null !== updateQueue.first ? updateQueue.first.priorityLevel : NoWork;
}

var getUpdatePriority_1 = getUpdatePriority;

function addTopLevelUpdate$1(fiber, partialState, callback, priorityLevel) {
    var isTopLevelUnmount = null === partialState.element,
        update = {
        priorityLevel: priorityLevel,
        partialState: partialState,
        callback: callback,
        isReplace: !1,
        isForced: !1,
        isTopLevelUnmount: isTopLevelUnmount,
        next: null
    },
        update2 = insertUpdate(fiber, update);
    if (isTopLevelUnmount) {
        var queue1 = _queue1,
            queue2 = _queue2;
        null !== queue1 && null !== update.next && (update.next = null, queue1.last = update), null !== queue2 && null !== update2 && null !== update2.next && (update2.next = null, queue2.last = update);
    }
}

var addTopLevelUpdate_1 = addTopLevelUpdate$1;

function getStateFromUpdate(update, instance, prevState, props) {
    var partialState = update.partialState;
    if ("function" == typeof partialState) {
        return partialState.call(instance, prevState, props);
    }
    return partialState;
}

function beginUpdateQueue(current, workInProgress, queue, instance, prevState, props, priorityLevel) {
    if (null !== current && current.updateQueue === queue) {
        var currentQueue = queue;
        queue = workInProgress.updateQueue = {
            first: currentQueue.first,
            last: currentQueue.last,
            callbackList: null,
            hasForceUpdate: !1
        };
    }
    for (var callbackList = queue.callbackList, hasForceUpdate = queue.hasForceUpdate, state = prevState, dontMutatePrevState = !0, update = queue.first; null !== update && comparePriority(update.priorityLevel, priorityLevel) <= 0;) {
        queue.first = update.next, null === queue.first && (queue.last = null);
        var _partialState = void 0;
        update.isReplace ? (state = getStateFromUpdate(update, instance, state, props), dontMutatePrevState = !0) : (_partialState = getStateFromUpdate(update, instance, state, props)) && (state = dontMutatePrevState ? babelHelpers.extends({}, state, _partialState) : babelHelpers.extends(state, _partialState), dontMutatePrevState = !1), update.isForced && (hasForceUpdate = !0), null === update.callback || update.isTopLevelUnmount && null !== update.next || (callbackList = null !== callbackList ? callbackList : [], callbackList.push(update.callback), workInProgress.effectTag |= CallbackEffect), update = update.next;
    }
    return queue.callbackList = callbackList, queue.hasForceUpdate = hasForceUpdate, null !== queue.first || null !== callbackList || hasForceUpdate || (workInProgress.updateQueue = null), state;
}

var beginUpdateQueue_1 = beginUpdateQueue;

function commitCallbacks(finishedWork, queue, context) {
    var callbackList = queue.callbackList;
    if (null !== callbackList) {
        queue.callbackList = null;
        for (var i = 0; i < callbackList.length; i++) {
            var _callback = callbackList[i];
            invariant("function" == typeof _callback, "Invalid argument passed as callback. Expected a function. Instead " + "received: %s", _callback), _callback.call(context);
        }
    }
}

var commitCallbacks_1 = commitCallbacks,
    ReactFiberUpdateQueue = {
    addUpdate: addUpdate_1,
    addReplaceUpdate: addReplaceUpdate_1,
    addForceUpdate: addForceUpdate_1,
    getUpdatePriority: getUpdatePriority_1,
    addTopLevelUpdate: addTopLevelUpdate_1,
    beginUpdateQueue: beginUpdateQueue_1,
    commitCallbacks: commitCallbacks_1
};

function getComponentName$1(fiber) {
    var type = fiber.type;
    return "string" == typeof type ? type : "function" == typeof type ? type.displayName || type.name : null;
}

var getComponentName_1 = getComponentName$1,
    ReactInstanceMap = {
    remove: function remove(key) {
        key._reactInternalFiber = void 0;
    },
    get: function get(key) {
        return key._reactInternalFiber;
    },
    has: function has(key) {
        return void 0 !== key._reactInternalFiber;
    },
    set: function set(key, value) {
        key._reactInternalFiber = value;
    }
},
    ReactInstanceMap_1 = ReactInstanceMap,
    ReactInternals = react.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
    ReactGlobalSharedState = {
    ReactCurrentOwner: ReactInternals.ReactCurrentOwner
},
    ReactGlobalSharedState_1 = ReactGlobalSharedState,
    HostComponent$1 = ReactTypeOfWork.HostComponent,
    HostRoot$2 = ReactTypeOfWork.HostRoot,
    HostPortal = ReactTypeOfWork.HostPortal,
    HostText = ReactTypeOfWork.HostText,
    NoEffect = ReactTypeOfSideEffect.NoEffect,
    Placement = ReactTypeOfSideEffect.Placement,
    MOUNTING = 1,
    MOUNTED = 2,
    UNMOUNTED = 3;

function isFiberMountedImpl(fiber) {
    var node = fiber;
    if (fiber.alternate) for (; node.return;) {
        node = node.return;
    } else {
        if ((node.effectTag & Placement) !== NoEffect) return MOUNTING;
        for (; node.return;) {
            if (node = node.return, (node.effectTag & Placement) !== NoEffect) return MOUNTING;
        }
    }
    return node.tag === HostRoot$2 ? MOUNTED : UNMOUNTED;
}

var isFiberMounted$1 = function isFiberMounted$1(fiber) {
    return isFiberMountedImpl(fiber) === MOUNTED;
},
    isMounted = function isMounted(component) {
    var fiber = ReactInstanceMap_1.get(component);
    return !!fiber && isFiberMountedImpl(fiber) === MOUNTED;
};

function assertIsMounted(fiber) {
    invariant(isFiberMountedImpl(fiber) === MOUNTED, "Unable to find node on an unmounted component.");
}

function findCurrentFiberUsingSlowPath(fiber) {
    var alternate = fiber.alternate;
    if (!alternate) {
        var state = isFiberMountedImpl(fiber);
        return invariant(state !== UNMOUNTED, "Unable to find node on an unmounted component."), state === MOUNTING ? null : fiber;
    }
    for (var a = fiber, b = alternate; !0;) {
        var parentA = a.return,
            parentB = parentA ? parentA.alternate : null;
        if (!parentA || !parentB) break;
        if (parentA.child === parentB.child) {
            for (var child = parentA.child; child;) {
                if (child === a) return assertIsMounted(parentA), fiber;
                if (child === b) return assertIsMounted(parentA), alternate;
                child = child.sibling;
            }
            invariant(!1, "Unable to find node on an unmounted component.");
        }
        if (a.return !== b.return) a = parentA, b = parentB;else {
            for (var didFindChild = !1, _child = parentA.child; _child;) {
                if (_child === a) {
                    didFindChild = !0, a = parentA, b = parentB;
                    break;
                }
                if (_child === b) {
                    didFindChild = !0, b = parentA, a = parentB;
                    break;
                }
                _child = _child.sibling;
            }
            if (!didFindChild) {
                for (_child = parentB.child; _child;) {
                    if (_child === a) {
                        didFindChild = !0, a = parentB, b = parentA;
                        break;
                    }
                    if (_child === b) {
                        didFindChild = !0, b = parentB, a = parentA;
                        break;
                    }
                    _child = _child.sibling;
                }
                invariant(didFindChild, "Child was not found in either parent set. This indicates a bug " + "in React related to the return pointer. Please file an issue.");
            }
        }
        invariant(a.alternate === b, "Return fibers should always be each others' alternates. " + "This error is likely caused by a bug in React. Please file an issue.");
    }
    return invariant(a.tag === HostRoot$2, "Unable to find node on an unmounted component."), a.stateNode.current === a ? fiber : alternate;
}

var findCurrentFiberUsingSlowPath_1 = findCurrentFiberUsingSlowPath,
    findCurrentHostFiber$1 = function findCurrentHostFiber$1(parent) {
    var currentParent = findCurrentFiberUsingSlowPath(parent);
    if (!currentParent) return null;
    for (var node = currentParent; !0;) {
        if (node.tag === HostComponent$1 || node.tag === HostText) return node;
        if (node.child) node.child.return = node, node = node.child;else {
            if (node === currentParent) return null;
            for (; !node.sibling;) {
                if (!node.return || node.return === currentParent) return null;
                node = node.return;
            }
            node.sibling.return = node.return, node = node.sibling;
        }
    }
    return null;
},
    findCurrentHostFiberWithNoPortals$1 = function findCurrentHostFiberWithNoPortals$1(parent) {
    var currentParent = findCurrentFiberUsingSlowPath(parent);
    if (!currentParent) return null;
    for (var node = currentParent; !0;) {
        if (node.tag === HostComponent$1 || node.tag === HostText) return node;
        if (node.child && node.tag !== HostPortal) node.child.return = node, node = node.child;else {
            if (node === currentParent) return null;
            for (; !node.sibling;) {
                if (!node.return || node.return === currentParent) return null;
                node = node.return;
            }
            node.sibling.return = node.return, node = node.sibling;
        }
    }
    return null;
},
    ReactFiberTreeReflection = {
    isFiberMounted: isFiberMounted$1,
    isMounted: isMounted,
    findCurrentFiberUsingSlowPath: findCurrentFiberUsingSlowPath_1,
    findCurrentHostFiber: findCurrentHostFiber$1,
    findCurrentHostFiberWithNoPortals: findCurrentHostFiberWithNoPortals$1
},
    valueStack = [],
    index = -1,
    createCursor$1 = function createCursor$1(defaultValue) {
    return {
        current: defaultValue
    };
},
    isEmpty = function isEmpty() {
    return -1 === index;
},
    pop$1 = function pop$1(cursor, fiber) {
    index < 0 || (cursor.current = valueStack[index], valueStack[index] = null, index--);
},
    push$1 = function push$1(cursor, value, fiber) {
    index++, valueStack[index] = cursor.current, cursor.current = value;
},
    reset = function reset() {
    for (; index > -1;) {
        valueStack[index] = null, index--;
    }
},
    ReactFiberStack = {
    createCursor: createCursor$1,
    isEmpty: isEmpty,
    pop: pop$1,
    push: push$1,
    reset: reset
},
    isFiberMounted = ReactFiberTreeReflection.isFiberMounted,
    ClassComponent$1 = ReactTypeOfWork.ClassComponent,
    HostRoot$1 = ReactTypeOfWork.HostRoot,
    createCursor = ReactFiberStack.createCursor,
    pop = ReactFiberStack.pop,
    push = ReactFiberStack.push,
    contextStackCursor = createCursor(emptyObject),
    didPerformWorkStackCursor = createCursor(!1),
    previousContext = emptyObject;

function getUnmaskedContext(workInProgress) {
    return isContextProvider$1(workInProgress) ? previousContext : contextStackCursor.current;
}

var getUnmaskedContext_1 = getUnmaskedContext;

function cacheContext(workInProgress, unmaskedContext, maskedContext) {
    var instance = workInProgress.stateNode;
    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
}

var cacheContext_1 = cacheContext,
    getMaskedContext = function getMaskedContext(workInProgress, unmaskedContext) {
    var type = workInProgress.type,
        contextTypes = type.contextTypes;
    if (!contextTypes) return emptyObject;
    var instance = workInProgress.stateNode;
    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
    var context = {};
    for (var key in contextTypes) {
        context[key] = unmaskedContext[key];
    }return instance && cacheContext(workInProgress, unmaskedContext, context), context;
},
    hasContextChanged = function hasContextChanged() {
    return didPerformWorkStackCursor.current;
};

function isContextConsumer(fiber) {
    return fiber.tag === ClassComponent$1 && null != fiber.type.contextTypes;
}

var isContextConsumer_1 = isContextConsumer;

function isContextProvider$1(fiber) {
    return fiber.tag === ClassComponent$1 && null != fiber.type.childContextTypes;
}

var isContextProvider_1 = isContextProvider$1;

function popContextProvider(fiber) {
    isContextProvider$1(fiber) && (pop(didPerformWorkStackCursor, fiber), pop(contextStackCursor, fiber));
}

var popContextProvider_1 = popContextProvider,
    popTopLevelContextObject = function popTopLevelContextObject(fiber) {
    pop(didPerformWorkStackCursor, fiber), pop(contextStackCursor, fiber);
},
    pushTopLevelContextObject = function pushTopLevelContextObject(fiber, context, didChange) {
    invariant(null == contextStackCursor.cursor, "Unexpected context found on stack. " + "This error is likely caused by a bug in React. Please file an issue."), push(contextStackCursor, context, fiber), push(didPerformWorkStackCursor, didChange, fiber);
};

function processChildContext$1(fiber, parentContext) {
    var instance = fiber.stateNode,
        childContextTypes = fiber.type.childContextTypes;
    if ("function" != typeof instance.getChildContext) return parentContext;
    var childContext = void 0;
    childContext = instance.getChildContext();
    for (var contextKey in childContext) {
        invariant(contextKey in childContextTypes, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', getComponentName_1(fiber) || "Unknown", contextKey);
    }return babelHelpers.extends({}, parentContext, childContext);
}

var processChildContext_1 = processChildContext$1,
    pushContextProvider = function pushContextProvider(workInProgress) {
    if (!isContextProvider$1(workInProgress)) return !1;
    var instance = workInProgress.stateNode,
        memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyObject;
    return previousContext = contextStackCursor.current, push(contextStackCursor, memoizedMergedChildContext, workInProgress), push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress), !0;
},
    invalidateContextProvider = function invalidateContextProvider(workInProgress, didChange) {
    var instance = workInProgress.stateNode;
    if (invariant(instance, "Expected to have an instance by this point. " + "This error is likely caused by a bug in React. Please file an issue."), didChange) {
        var mergedContext = processChildContext$1(workInProgress, previousContext);
        instance.__reactInternalMemoizedMergedChildContext = mergedContext, pop(didPerformWorkStackCursor, workInProgress), pop(contextStackCursor, workInProgress), push(contextStackCursor, mergedContext, workInProgress), push(didPerformWorkStackCursor, didChange, workInProgress);
    } else pop(didPerformWorkStackCursor, workInProgress), push(didPerformWorkStackCursor, didChange, workInProgress);
},
    resetContext = function resetContext() {
    previousContext = emptyObject, contextStackCursor.current = emptyObject, didPerformWorkStackCursor.current = !1;
},
    findCurrentUnmaskedContext$1 = function findCurrentUnmaskedContext$1(fiber) {
    invariant(isFiberMounted(fiber) && fiber.tag === ClassComponent$1, "Expected subtree parent to be a mounted class component. " + "This error is likely caused by a bug in React. Please file an issue.");
    for (var node = fiber; node.tag !== HostRoot$1;) {
        if (isContextProvider$1(node)) return node.stateNode.__reactInternalMemoizedMergedChildContext;
        var parent = node.return;
        invariant(parent, "Found unexpected detached subtree parent. " + "This error is likely caused by a bug in React. Please file an issue."), node = parent;
    }
    return node.stateNode.context;
},
    ReactFiberContext = {
    getUnmaskedContext: getUnmaskedContext_1,
    cacheContext: cacheContext_1,
    getMaskedContext: getMaskedContext,
    hasContextChanged: hasContextChanged,
    isContextConsumer: isContextConsumer_1,
    isContextProvider: isContextProvider_1,
    popContextProvider: popContextProvider_1,
    popTopLevelContextObject: popTopLevelContextObject,
    pushTopLevelContextObject: pushTopLevelContextObject,
    processChildContext: processChildContext_1,
    pushContextProvider: pushContextProvider,
    invalidateContextProvider: invalidateContextProvider,
    resetContext: resetContext,
    findCurrentUnmaskedContext: findCurrentUnmaskedContext$1
},
    ReactTypeOfInternalContext = {
    NoContext: 0,
    AsyncUpdates: 1
},
    IndeterminateComponent = ReactTypeOfWork.IndeterminateComponent,
    ClassComponent$3 = ReactTypeOfWork.ClassComponent,
    HostRoot$3 = ReactTypeOfWork.HostRoot,
    HostComponent$2 = ReactTypeOfWork.HostComponent,
    HostText$1 = ReactTypeOfWork.HostText,
    HostPortal$1 = ReactTypeOfWork.HostPortal,
    CoroutineComponent = ReactTypeOfWork.CoroutineComponent,
    YieldComponent = ReactTypeOfWork.YieldComponent,
    Fragment = ReactTypeOfWork.Fragment,
    NoWork$1 = ReactPriorityLevel.NoWork,
    NoContext = ReactTypeOfInternalContext.NoContext,
    NoEffect$1 = ReactTypeOfSideEffect.NoEffect;

function FiberNode(tag, key, internalContextTag) {
    this.tag = tag, this.key = key, this.type = null, this.stateNode = null, this.return = null, this.child = null, this.sibling = null, this.index = 0, this.ref = null, this.pendingProps = null, this.memoizedProps = null, this.updateQueue = null, this.memoizedState = null, this.internalContextTag = internalContextTag, this.effectTag = NoEffect$1, this.nextEffect = null, this.firstEffect = null, this.lastEffect = null, this.pendingWorkPriority = NoWork$1, this.alternate = null;
}

var createFiber = function createFiber(tag, key, internalContextTag) {
    return new FiberNode(tag, key, internalContextTag);
};

function shouldConstruct(Component) {
    return !(!Component.prototype || !Component.prototype.isReactComponent);
}

var createWorkInProgress = function createWorkInProgress(current, renderPriority) {
    var workInProgress = current.alternate;
    return null === workInProgress ? (workInProgress = createFiber(current.tag, current.key, current.internalContextTag), workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.effectTag = NoEffect$1, workInProgress.nextEffect = null, workInProgress.firstEffect = null, workInProgress.lastEffect = null), workInProgress.pendingWorkPriority = renderPriority, workInProgress.child = current.child, workInProgress.memoizedProps = current.memoizedProps, workInProgress.memoizedState = current.memoizedState, workInProgress.updateQueue = current.updateQueue, workInProgress.sibling = current.sibling, workInProgress.index = current.index, workInProgress.ref = current.ref, workInProgress;
},
    createHostRootFiber$1 = function createHostRootFiber$1() {
    return createFiber(HostRoot$3, null, NoContext);
},
    createFiberFromElement = function createFiberFromElement(element, internalContextTag, priorityLevel) {
    var owner = null,
        fiber = createFiberFromElementType(element.type, element.key, internalContextTag, owner);
    return fiber.pendingProps = element.props, fiber.pendingWorkPriority = priorityLevel, fiber;
},
    createFiberFromFragment = function createFiberFromFragment(elements, internalContextTag, priorityLevel) {
    var fiber = createFiber(Fragment, null, internalContextTag);
    return fiber.pendingProps = elements, fiber.pendingWorkPriority = priorityLevel, fiber;
},
    createFiberFromText = function createFiberFromText(content, internalContextTag, priorityLevel) {
    var fiber = createFiber(HostText$1, null, internalContextTag);
    return fiber.pendingProps = content, fiber.pendingWorkPriority = priorityLevel, fiber;
};

function createFiberFromElementType(type, key, internalContextTag, debugOwner) {
    var fiber = void 0;
    if ("function" == typeof type) fiber = shouldConstruct(type) ? createFiber(ClassComponent$3, key, internalContextTag) : createFiber(IndeterminateComponent, key, internalContextTag), fiber.type = type;else if ("string" == typeof type) fiber = createFiber(HostComponent$2, key, internalContextTag), fiber.type = type;else if ("object" == typeof type && null !== type && "number" == typeof type.tag) fiber = type;else {
        var info = "";
        invariant(!1, "Element type is invalid: expected a string (for built-in components) " + "or a class/function (for composite components) but got: %s.%s", null == type ? type : typeof type, info);
    }
    return fiber;
}

var createFiberFromElementType_1 = createFiberFromElementType,
    createFiberFromHostInstanceForDeletion = function createFiberFromHostInstanceForDeletion() {
    var fiber = createFiber(HostComponent$2, null, NoContext);
    return fiber.type = "DELETED", fiber;
},
    createFiberFromCoroutine = function createFiberFromCoroutine(coroutine, internalContextTag, priorityLevel) {
    var fiber = createFiber(CoroutineComponent, coroutine.key, internalContextTag);
    return fiber.type = coroutine.handler, fiber.pendingProps = coroutine, fiber.pendingWorkPriority = priorityLevel, fiber;
},
    createFiberFromYield = function createFiberFromYield(yieldNode, internalContextTag, priorityLevel) {
    return createFiber(YieldComponent, null, internalContextTag);
},
    createFiberFromPortal = function createFiberFromPortal(portal, internalContextTag, priorityLevel) {
    var fiber = createFiber(HostPortal$1, portal.key, internalContextTag);
    return fiber.pendingProps = portal.children || [], fiber.pendingWorkPriority = priorityLevel, fiber.stateNode = {
        containerInfo: portal.containerInfo,
        implementation: portal.implementation
    }, fiber;
},
    largerPriority = function largerPriority(p1, p2) {
    return p1 !== NoWork$1 && (p2 === NoWork$1 || p2 > p1) ? p1 : p2;
},
    ReactFiber = {
    createWorkInProgress: createWorkInProgress,
    createHostRootFiber: createHostRootFiber$1,
    createFiberFromElement: createFiberFromElement,
    createFiberFromFragment: createFiberFromFragment,
    createFiberFromText: createFiberFromText,
    createFiberFromElementType: createFiberFromElementType_1,
    createFiberFromHostInstanceForDeletion: createFiberFromHostInstanceForDeletion,
    createFiberFromCoroutine: createFiberFromCoroutine,
    createFiberFromYield: createFiberFromYield,
    createFiberFromPortal: createFiberFromPortal,
    largerPriority: largerPriority
},
    createHostRootFiber = ReactFiber.createHostRootFiber,
    createFiberRoot$1 = function createFiberRoot$1(containerInfo) {
    var uninitializedFiber = createHostRootFiber(),
        root = {
        current: uninitializedFiber,
        containerInfo: containerInfo,
        isScheduled: !1,
        nextScheduledRoot: null,
        context: null,
        pendingContext: null
    };
    return uninitializedFiber.stateNode = root, root;
},
    ReactFiberRoot = {
    createFiberRoot: createFiberRoot$1
},
    describeComponentFrame = function describeComponentFrame(name, source, ownerName) {
    return "\n    in " + (name || "Unknown") + (source ? " (at " + source.fileName.replace(/^.*[\\\/]/, "") + ":" + source.lineNumber + ")" : ownerName ? " (created by " + ownerName + ")" : "");
},
    IndeterminateComponent$1 = ReactTypeOfWork.IndeterminateComponent,
    FunctionalComponent = ReactTypeOfWork.FunctionalComponent,
    ClassComponent$5 = ReactTypeOfWork.ClassComponent,
    HostComponent$4 = ReactTypeOfWork.HostComponent;

function describeFiber(fiber) {
    switch (fiber.tag) {
        case IndeterminateComponent$1:
        case FunctionalComponent:
        case ClassComponent$5:
        case HostComponent$4:
            var owner = fiber._debugOwner,
                source = fiber._debugSource,
                name = getComponentName_1(fiber),
                ownerName = null;
            return owner && (ownerName = getComponentName_1(owner)), describeComponentFrame(name, source, ownerName);

        default:
            return "";
    }
}

function getStackAddendumByWorkInProgressFiber$1(workInProgress) {
    var info = "",
        node = workInProgress;
    do {
        info += describeFiber(node), node = node.return;
    } while (node);
    return info;
}

var ReactFiberComponentTreeHook = {
    getStackAddendumByWorkInProgressFiber: getStackAddendumByWorkInProgressFiber$1
},
    REACT_COROUTINE_TYPE$1,
    REACT_YIELD_TYPE$1;

"function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for") ? (REACT_COROUTINE_TYPE$1 = (typeof Symbol === "function" ? Symbol.for : "@@for")("react.coroutine"), REACT_YIELD_TYPE$1 = (typeof Symbol === "function" ? Symbol.for : "@@for")("react.yield")) : (REACT_COROUTINE_TYPE$1 = 60104, REACT_YIELD_TYPE$1 = 60105);

var createCoroutine = function createCoroutine(children, handler, props) {
    var key = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
    return {
        $$typeof: REACT_COROUTINE_TYPE$1,
        key: null == key ? null : "" + key,
        children: children,
        handler: handler,
        props: props
    };
},
    createYield = function createYield(value) {
    return {
        $$typeof: REACT_YIELD_TYPE$1,
        value: value
    };
},
    isCoroutine = function isCoroutine(object) {
    return "object" == typeof object && null !== object && object.$$typeof === REACT_COROUTINE_TYPE$1;
},
    isYield = function isYield(object) {
    return "object" == typeof object && null !== object && object.$$typeof === REACT_YIELD_TYPE$1;
},
    REACT_YIELD_TYPE_1 = REACT_YIELD_TYPE$1,
    REACT_COROUTINE_TYPE_1 = REACT_COROUTINE_TYPE$1,
    ReactCoroutine = {
    createCoroutine: createCoroutine,
    createYield: createYield,
    isCoroutine: isCoroutine,
    isYield: isYield,
    REACT_YIELD_TYPE: REACT_YIELD_TYPE_1,
    REACT_COROUTINE_TYPE: REACT_COROUTINE_TYPE_1
},
    REACT_COROUTINE_TYPE = ReactCoroutine.REACT_COROUTINE_TYPE,
    REACT_YIELD_TYPE = ReactCoroutine.REACT_YIELD_TYPE,
    REACT_PORTAL_TYPE$1 = ReactPortal.REACT_PORTAL_TYPE,
    createWorkInProgress$2 = ReactFiber.createWorkInProgress,
    createFiberFromElement$1 = ReactFiber.createFiberFromElement,
    createFiberFromFragment$1 = ReactFiber.createFiberFromFragment,
    createFiberFromText$1 = ReactFiber.createFiberFromText,
    createFiberFromCoroutine$1 = ReactFiber.createFiberFromCoroutine,
    createFiberFromYield$1 = ReactFiber.createFiberFromYield,
    createFiberFromPortal$1 = ReactFiber.createFiberFromPortal,
    isArray = Array.isArray,
    FunctionalComponent$2 = ReactTypeOfWork.FunctionalComponent,
    ClassComponent$7 = ReactTypeOfWork.ClassComponent,
    HostText$3 = ReactTypeOfWork.HostText,
    HostPortal$4 = ReactTypeOfWork.HostPortal,
    CoroutineComponent$2 = ReactTypeOfWork.CoroutineComponent,
    YieldComponent$2 = ReactTypeOfWork.YieldComponent,
    Fragment$2 = ReactTypeOfWork.Fragment,
    NoEffect$2 = ReactTypeOfSideEffect.NoEffect,
    Placement$3 = ReactTypeOfSideEffect.Placement,
    Deletion$1 = ReactTypeOfSideEffect.Deletion,
    ITERATOR_SYMBOL = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator"),
    FAUX_ITERATOR_SYMBOL = "@@iterator",
    REACT_ELEMENT_TYPE = "function" == typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for") && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") || 60103;

function getIteratorFn(maybeIterable) {
    if (null === maybeIterable || void 0 === maybeIterable) return null;
    var iteratorFn = ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
    return "function" == typeof iteratorFn ? iteratorFn : null;
}

function coerceRef(current, element) {
    var mixedRef = element.ref;
    if (null !== mixedRef && "function" != typeof mixedRef) {
        if (element._owner) {
            var owner = element._owner,
                inst = void 0;
            if (owner) {
                var ownerFiber = owner;
                invariant(ownerFiber.tag === ClassComponent$7, "Stateless function components cannot have refs."), inst = ownerFiber.stateNode;
            }
            invariant(inst, "Missing owner for string ref %s. This error is likely caused by a " + "bug in React. Please file an issue.", mixedRef);
            var stringRef = "" + mixedRef;
            if (null !== current && null !== current.ref && current.ref._stringRef === stringRef) return current.ref;
            var ref = function ref(value) {
                var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
                null === value ? delete refs[stringRef] : refs[stringRef] = value;
            };
            return ref._stringRef = stringRef, ref;
        }
        invariant("string" == typeof mixedRef, "Expected ref to be a function or a string."), invariant(element._owner, "Element ref was specified as a string (%s) but no owner was " + "set. You may have multiple copies of React loaded. " + "(details: https://fb.me/react-refs-must-have-owner).", mixedRef);
    }
    return mixedRef;
}

function throwOnInvalidObjectType(returnFiber, newChild) {
    if ("textarea" !== returnFiber.type) {
        invariant(!1, "Objects are not valid as a React child (found: %s).%s", "[object Object]" === Object.prototype.toString.call(newChild) ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild, "");
    }
}

function ChildReconciler(shouldClone, shouldTrackSideEffects) {
    function deleteChild(returnFiber, childToDelete) {
        if (shouldTrackSideEffects) {
            if (!shouldClone) {
                if (null === childToDelete.alternate) return;
                childToDelete = childToDelete.alternate;
            }
            var last = returnFiber.lastEffect;
            null !== last ? (last.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete, childToDelete.nextEffect = null, childToDelete.effectTag = Deletion$1;
        }
    }
    function deleteRemainingChildren(returnFiber, currentFirstChild) {
        if (!shouldTrackSideEffects) return null;
        for (var childToDelete = currentFirstChild; null !== childToDelete;) {
            deleteChild(returnFiber, childToDelete), childToDelete = childToDelete.sibling;
        }return null;
    }
    function mapRemainingChildren(returnFiber, currentFirstChild) {
        for (var existingChildren = new Map(), existingChild = currentFirstChild; null !== existingChild;) {
            null !== existingChild.key ? existingChildren.set(existingChild.key, existingChild) : existingChildren.set(existingChild.index, existingChild), existingChild = existingChild.sibling;
        }return existingChildren;
    }
    function useFiber(fiber, priority) {
        if (shouldClone) {
            var clone = createWorkInProgress$2(fiber, priority);
            return clone.index = 0, clone.sibling = null, clone;
        }
        return fiber.pendingWorkPriority = priority, fiber.effectTag = NoEffect$2, fiber.index = 0, fiber.sibling = null, fiber;
    }
    function placeChild(newFiber, lastPlacedIndex, newIndex) {
        if (newFiber.index = newIndex, !shouldTrackSideEffects) return lastPlacedIndex;
        var current = newFiber.alternate;
        if (null !== current) {
            var oldIndex = current.index;
            return oldIndex < lastPlacedIndex ? (newFiber.effectTag = Placement$3, lastPlacedIndex) : oldIndex;
        }
        return newFiber.effectTag = Placement$3, lastPlacedIndex;
    }
    function placeSingleChild(newFiber) {
        return shouldTrackSideEffects && null === newFiber.alternate && (newFiber.effectTag = Placement$3), newFiber;
    }
    function updateTextNode(returnFiber, current, textContent, priority) {
        if (null === current || current.tag !== HostText$3) {
            var created = createFiberFromText$1(textContent, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        var existing = useFiber(current, priority);
        return existing.pendingProps = textContent, existing.return = returnFiber, existing;
    }
    function updateElement(returnFiber, current, element, priority) {
        if (null === current || current.type !== element.type) {
            var created = createFiberFromElement$1(element, returnFiber.internalContextTag, priority);
            return created.ref = coerceRef(current, element), created.return = returnFiber, created;
        }
        var existing = useFiber(current, priority);
        return existing.ref = coerceRef(current, element), existing.pendingProps = element.props, existing.return = returnFiber, existing;
    }
    function updateCoroutine(returnFiber, current, coroutine, priority) {
        if (null === current || current.tag !== CoroutineComponent$2) {
            var created = createFiberFromCoroutine$1(coroutine, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        var existing = useFiber(current, priority);
        return existing.pendingProps = coroutine, existing.return = returnFiber, existing;
    }
    function updateYield(returnFiber, current, yieldNode, priority) {
        if (null === current || current.tag !== YieldComponent$2) {
            var created = createFiberFromYield$1(yieldNode, returnFiber.internalContextTag, priority);
            return created.type = yieldNode.value, created.return = returnFiber, created;
        }
        var existing = useFiber(current, priority);
        return existing.type = yieldNode.value, existing.return = returnFiber, existing;
    }
    function updatePortal(returnFiber, current, portal, priority) {
        if (null === current || current.tag !== HostPortal$4 || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
            var created = createFiberFromPortal$1(portal, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        var existing = useFiber(current, priority);
        return existing.pendingProps = portal.children || [], existing.return = returnFiber, existing;
    }
    function updateFragment(returnFiber, current, fragment, priority) {
        if (null === current || current.tag !== Fragment$2) {
            var created = createFiberFromFragment$1(fragment, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        var existing = useFiber(current, priority);
        return existing.pendingProps = fragment, existing.return = returnFiber, existing;
    }
    function createChild(returnFiber, newChild, priority) {
        if ("string" == typeof newChild || "number" == typeof newChild) {
            var created = createFiberFromText$1("" + newChild, returnFiber.internalContextTag, priority);
            return created.return = returnFiber, created;
        }
        if ("object" == typeof newChild && null !== newChild) {
            switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                    var _created = createFiberFromElement$1(newChild, returnFiber.internalContextTag, priority);
                    return _created.ref = coerceRef(null, newChild), _created.return = returnFiber, _created;

                case REACT_COROUTINE_TYPE:
                    var _created2 = createFiberFromCoroutine$1(newChild, returnFiber.internalContextTag, priority);
                    return _created2.return = returnFiber, _created2;

                case REACT_YIELD_TYPE:
                    var _created3 = createFiberFromYield$1(newChild, returnFiber.internalContextTag, priority);
                    return _created3.type = newChild.value, _created3.return = returnFiber, _created3;

                case REACT_PORTAL_TYPE$1:
                    var _created4 = createFiberFromPortal$1(newChild, returnFiber.internalContextTag, priority);
                    return _created4.return = returnFiber, _created4;
            }
            if (isArray(newChild) || getIteratorFn(newChild)) {
                var _created5 = createFiberFromFragment$1(newChild, returnFiber.internalContextTag, priority);
                return _created5.return = returnFiber, _created5;
            }
            throwOnInvalidObjectType(returnFiber, newChild);
        }
        return null;
    }
    function updateSlot(returnFiber, oldFiber, newChild, priority) {
        var key = null !== oldFiber ? oldFiber.key : null;
        if ("string" == typeof newChild || "number" == typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, priority);
        if ("object" == typeof newChild && null !== newChild) {
            switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                    return newChild.key === key ? updateElement(returnFiber, oldFiber, newChild, priority) : null;

                case REACT_COROUTINE_TYPE:
                    return newChild.key === key ? updateCoroutine(returnFiber, oldFiber, newChild, priority) : null;

                case REACT_YIELD_TYPE:
                    return null === key ? updateYield(returnFiber, oldFiber, newChild, priority) : null;

                case REACT_PORTAL_TYPE$1:
                    return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, priority) : null;
            }
            if (isArray(newChild) || getIteratorFn(newChild)) return null !== key ? null : updateFragment(returnFiber, oldFiber, newChild, priority);
            throwOnInvalidObjectType(returnFiber, newChild);
        }
        return null;
    }
    function updateFromMap(existingChildren, returnFiber, newIdx, newChild, priority) {
        if ("string" == typeof newChild || "number" == typeof newChild) {
            return updateTextNode(returnFiber, existingChildren.get(newIdx) || null, "" + newChild, priority);
        }
        if ("object" == typeof newChild && null !== newChild) {
            switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                    return updateElement(returnFiber, existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild, priority);

                case REACT_COROUTINE_TYPE:
                    return updateCoroutine(returnFiber, existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild, priority);

                case REACT_YIELD_TYPE:
                    return updateYield(returnFiber, existingChildren.get(newIdx) || null, newChild, priority);

                case REACT_PORTAL_TYPE$1:
                    return updatePortal(returnFiber, existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild, priority);
            }
            if (isArray(newChild) || getIteratorFn(newChild)) {
                return updateFragment(returnFiber, existingChildren.get(newIdx) || null, newChild, priority);
            }
            throwOnInvalidObjectType(returnFiber, newChild);
        }
        return null;
    }
    function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, priority) {
        for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, lastPlacedIndex = 0, newIdx = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++) {
            oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
            var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], priority);
            if (null === newFiber) {
                null === oldFiber && (oldFiber = nextOldFiber);
                break;
            }
            shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber), lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber, previousNewFiber = newFiber, oldFiber = nextOldFiber;
        }
        if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;
        if (null === oldFiber) {
            for (; newIdx < newChildren.length; newIdx++) {
                var _newFiber = createChild(returnFiber, newChildren[newIdx], priority);
                _newFiber && (lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = _newFiber : previousNewFiber.sibling = _newFiber, previousNewFiber = _newFiber);
            }
            return resultingFirstChild;
        }
        for (var existingChildren = mapRemainingChildren(returnFiber, oldFiber); newIdx < newChildren.length; newIdx++) {
            var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], priority);
            _newFiber2 && (shouldTrackSideEffects && null !== _newFiber2.alternate && existingChildren.delete(null === _newFiber2.key ? newIdx : _newFiber2.key), lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = _newFiber2 : previousNewFiber.sibling = _newFiber2, previousNewFiber = _newFiber2);
        }
        return shouldTrackSideEffects && existingChildren.forEach(function (child) {
            return deleteChild(returnFiber, child);
        }), resultingFirstChild;
    }
    function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, priority) {
        var iteratorFn = getIteratorFn(newChildrenIterable);
        invariant("function" == typeof iteratorFn, "An object is not an iterable. This error is likely caused by a bug in " + "React. Please file an issue.");
        var newChildren = iteratorFn.call(newChildrenIterable);
        invariant(null != newChildren, "An iterable object provided no iterator.");
        for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, lastPlacedIndex = 0, newIdx = 0, nextOldFiber = null, step = newChildren.next(); null !== oldFiber && !step.done; newIdx++, step = newChildren.next()) {
            oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
            var newFiber = updateSlot(returnFiber, oldFiber, step.value, priority);
            if (null === newFiber) {
                oldFiber || (oldFiber = nextOldFiber);
                break;
            }
            shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber), lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber, previousNewFiber = newFiber, oldFiber = nextOldFiber;
        }
        if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;
        if (null === oldFiber) {
            for (; !step.done; newIdx++, step = newChildren.next()) {
                var _newFiber3 = createChild(returnFiber, step.value, priority);
                null !== _newFiber3 && (lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = _newFiber3 : previousNewFiber.sibling = _newFiber3, previousNewFiber = _newFiber3);
            }
            return resultingFirstChild;
        }
        for (var existingChildren = mapRemainingChildren(returnFiber, oldFiber); !step.done; newIdx++, step = newChildren.next()) {
            var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, priority);
            null !== _newFiber4 && (shouldTrackSideEffects && null !== _newFiber4.alternate && existingChildren.delete(null === _newFiber4.key ? newIdx : _newFiber4.key), lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx), null === previousNewFiber ? resultingFirstChild = _newFiber4 : previousNewFiber.sibling = _newFiber4, previousNewFiber = _newFiber4);
        }
        return shouldTrackSideEffects && existingChildren.forEach(function (child) {
            return deleteChild(returnFiber, child);
        }), resultingFirstChild;
    }
    function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, priority) {
        if (null !== currentFirstChild && currentFirstChild.tag === HostText$3) {
            deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
            var existing = useFiber(currentFirstChild, priority);
            return existing.pendingProps = textContent, existing.return = returnFiber, existing;
        }
        deleteRemainingChildren(returnFiber, currentFirstChild);
        var created = createFiberFromText$1(textContent, returnFiber.internalContextTag, priority);
        return created.return = returnFiber, created;
    }
    function reconcileSingleElement(returnFiber, currentFirstChild, element, priority) {
        for (var key = element.key, child = currentFirstChild; null !== child;) {
            if (child.key === key) {
                if (child.type === element.type) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(child, priority);
                    return existing.ref = coerceRef(child, element), existing.pendingProps = element.props, existing.return = returnFiber, existing;
                }
                deleteRemainingChildren(returnFiber, child);
                break;
            }
            deleteChild(returnFiber, child), child = child.sibling;
        }
        var created = createFiberFromElement$1(element, returnFiber.internalContextTag, priority);
        return created.ref = coerceRef(currentFirstChild, element), created.return = returnFiber, created;
    }
    function reconcileSingleCoroutine(returnFiber, currentFirstChild, coroutine, priority) {
        for (var key = coroutine.key, child = currentFirstChild; null !== child;) {
            if (child.key === key) {
                if (child.tag === CoroutineComponent$2) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(child, priority);
                    return existing.pendingProps = coroutine, existing.return = returnFiber, existing;
                }
                deleteRemainingChildren(returnFiber, child);
                break;
            }
            deleteChild(returnFiber, child), child = child.sibling;
        }
        var created = createFiberFromCoroutine$1(coroutine, returnFiber.internalContextTag, priority);
        return created.return = returnFiber, created;
    }
    function reconcileSingleYield(returnFiber, currentFirstChild, yieldNode, priority) {
        var child = currentFirstChild;
        if (null !== child) {
            if (child.tag === YieldComponent$2) {
                deleteRemainingChildren(returnFiber, child.sibling);
                var existing = useFiber(child, priority);
                return existing.type = yieldNode.value, existing.return = returnFiber, existing;
            }
            deleteRemainingChildren(returnFiber, child);
        }
        var created = createFiberFromYield$1(yieldNode, returnFiber.internalContextTag, priority);
        return created.type = yieldNode.value, created.return = returnFiber, created;
    }
    function reconcileSinglePortal(returnFiber, currentFirstChild, portal, priority) {
        for (var key = portal.key, child = currentFirstChild; null !== child;) {
            if (child.key === key) {
                if (child.tag === HostPortal$4 && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(child, priority);
                    return existing.pendingProps = portal.children || [], existing.return = returnFiber, existing;
                }
                deleteRemainingChildren(returnFiber, child);
                break;
            }
            deleteChild(returnFiber, child), child = child.sibling;
        }
        var created = createFiberFromPortal$1(portal, returnFiber.internalContextTag, priority);
        return created.return = returnFiber, created;
    }
    function reconcileChildFibers(returnFiber, currentFirstChild, newChild, priority) {
        var isObject = "object" == typeof newChild && null !== newChild;
        if (isObject) switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
                return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, priority));

            case REACT_COROUTINE_TYPE:
                return placeSingleChild(reconcileSingleCoroutine(returnFiber, currentFirstChild, newChild, priority));

            case REACT_YIELD_TYPE:
                return placeSingleChild(reconcileSingleYield(returnFiber, currentFirstChild, newChild, priority));

            case REACT_PORTAL_TYPE$1:
                return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, priority));
        }
        if ("string" == typeof newChild || "number" == typeof newChild) return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, "" + newChild, priority));
        if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, priority);
        if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, priority);
        if (isObject && throwOnInvalidObjectType(returnFiber, newChild), void 0 === newChild) switch (returnFiber.tag) {
            case ClassComponent$7:
            case FunctionalComponent$2:
                var Component = returnFiber.type;
                invariant(!1, "%s(...): Nothing was returned from render. This usually means a " + "return statement is missing. Or, to render nothing, " + "return null.", Component.displayName || Component.name || "Component");
        }
        return deleteRemainingChildren(returnFiber, currentFirstChild);
    }
    return reconcileChildFibers;
}

var reconcileChildFibers$1 = ChildReconciler(!0, !0),
    reconcileChildFibersInPlace$1 = ChildReconciler(!1, !0),
    mountChildFibersInPlace$1 = ChildReconciler(!1, !1),
    cloneChildFibers$1 = function cloneChildFibers$1(current, workInProgress) {
    if (invariant(null === current || workInProgress.child === current.child, "Resuming work not yet implemented."), null !== workInProgress.child) {
        var currentChild = workInProgress.child,
            newChild = createWorkInProgress$2(currentChild, currentChild.pendingWorkPriority);
        for (newChild.pendingProps = currentChild.pendingProps, workInProgress.child = newChild, newChild.return = workInProgress; null !== currentChild.sibling;) {
            currentChild = currentChild.sibling, newChild = newChild.sibling = createWorkInProgress$2(currentChild, currentChild.pendingWorkPriority), newChild.pendingProps = currentChild.pendingProps, newChild.return = workInProgress;
        }newChild.sibling = null;
    }
},
    ReactChildFiber = {
    reconcileChildFibers: reconcileChildFibers$1,
    reconcileChildFibersInPlace: reconcileChildFibersInPlace$1,
    mountChildFibersInPlace: mountChildFibersInPlace$1,
    cloneChildFibers: cloneChildFibers$1
},
    Update$1 = ReactTypeOfSideEffect.Update,
    AsyncUpdates$1 = ReactTypeOfInternalContext.AsyncUpdates,
    cacheContext$1 = ReactFiberContext.cacheContext,
    getMaskedContext$2 = ReactFiberContext.getMaskedContext,
    getUnmaskedContext$2 = ReactFiberContext.getUnmaskedContext,
    isContextConsumer$1 = ReactFiberContext.isContextConsumer,
    addUpdate$1 = ReactFiberUpdateQueue.addUpdate,
    addReplaceUpdate$1 = ReactFiberUpdateQueue.addReplaceUpdate,
    addForceUpdate$1 = ReactFiberUpdateQueue.addForceUpdate,
    beginUpdateQueue$2 = ReactFiberUpdateQueue.beginUpdateQueue,
    _require5 = ReactFiberContext,
    hasContextChanged$2 = _require5.hasContextChanged,
    isMounted$1 = ReactFiberTreeReflection.isMounted,
    ReactFiberClassComponent = function ReactFiberClassComponent(scheduleUpdate, getPriorityContext, memoizeProps, memoizeState) {
    var updater = {
        isMounted: isMounted$1,
        enqueueSetState: function enqueueSetState(instance, partialState, callback) {
            var fiber = ReactInstanceMap_1.get(instance),
                priorityLevel = getPriorityContext(fiber, !1);
            callback = void 0 === callback ? null : callback, addUpdate$1(fiber, partialState, callback, priorityLevel), scheduleUpdate(fiber, priorityLevel);
        },
        enqueueReplaceState: function enqueueReplaceState(instance, state, callback) {
            var fiber = ReactInstanceMap_1.get(instance),
                priorityLevel = getPriorityContext(fiber, !1);
            callback = void 0 === callback ? null : callback, addReplaceUpdate$1(fiber, state, callback, priorityLevel), scheduleUpdate(fiber, priorityLevel);
        },
        enqueueForceUpdate: function enqueueForceUpdate(instance, callback) {
            var fiber = ReactInstanceMap_1.get(instance),
                priorityLevel = getPriorityContext(fiber, !1);
            callback = void 0 === callback ? null : callback, addForceUpdate$1(fiber, callback, priorityLevel), scheduleUpdate(fiber, priorityLevel);
        }
    };
    function checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext) {
        if (null === oldProps || null !== workInProgress.updateQueue && workInProgress.updateQueue.hasForceUpdate) return !0;
        var instance = workInProgress.stateNode,
            type = workInProgress.type;
        if ("function" == typeof instance.shouldComponentUpdate) {
            return instance.shouldComponentUpdate(newProps, newState, newContext);
        }
        return !type.prototype || !type.prototype.isPureReactComponent || !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
    }
    function resetInputPointers(workInProgress, instance) {
        instance.props = workInProgress.memoizedProps, instance.state = workInProgress.memoizedState;
    }
    function adoptClassInstance(workInProgress, instance) {
        instance.updater = updater, workInProgress.stateNode = instance, ReactInstanceMap_1.set(instance, workInProgress);
    }
    function constructClassInstance(workInProgress, props) {
        var ctor = workInProgress.type,
            unmaskedContext = getUnmaskedContext$2(workInProgress),
            needsContext = isContextConsumer$1(workInProgress),
            context = needsContext ? getMaskedContext$2(workInProgress, unmaskedContext) : emptyObject,
            instance = new ctor(props, context);
        return adoptClassInstance(workInProgress, instance), needsContext && cacheContext$1(workInProgress, unmaskedContext, context), instance;
    }
    function callComponentWillMount(workInProgress, instance) {
        var oldState = instance.state;
        instance.componentWillMount(), oldState !== instance.state && updater.enqueueReplaceState(instance, instance.state, null);
    }
    function callComponentWillReceiveProps(workInProgress, instance, newProps, newContext) {
        var oldState = instance.state;
        instance.componentWillReceiveProps(newProps, newContext), instance.state !== oldState && updater.enqueueReplaceState(instance, instance.state, null);
    }
    function mountClassInstance(workInProgress, priorityLevel) {
        var current = workInProgress.alternate,
            instance = workInProgress.stateNode,
            state = instance.state || null,
            props = workInProgress.pendingProps;
        invariant(props, "There must be pending props for an initial mount. This error is " + "likely caused by a bug in React. Please file an issue.");
        var unmaskedContext = getUnmaskedContext$2(workInProgress);
        if (instance.props = props, instance.state = state, instance.refs = emptyObject, instance.context = getMaskedContext$2(workInProgress, unmaskedContext), ReactFeatureFlags_1.enableAsyncSubtreeAPI && null != workInProgress.type && null != workInProgress.type.prototype && !0 === workInProgress.type.prototype.unstable_isAsyncReactComponent && (workInProgress.internalContextTag |= AsyncUpdates$1), "function" == typeof instance.componentWillMount) {
            callComponentWillMount(workInProgress, instance);
            var updateQueue = workInProgress.updateQueue;
            null !== updateQueue && (instance.state = beginUpdateQueue$2(current, workInProgress, updateQueue, instance, state, props, priorityLevel));
        }
        "function" == typeof instance.componentDidMount && (workInProgress.effectTag |= Update$1);
    }
    function updateClassInstance(current, workInProgress, priorityLevel) {
        var instance = workInProgress.stateNode;
        resetInputPointers(workInProgress, instance);
        var oldProps = workInProgress.memoizedProps,
            newProps = workInProgress.pendingProps;
        newProps || (newProps = oldProps, invariant(null != newProps, "There should always be pending or memoized props. This error is " + "likely caused by a bug in React. Please file an issue."));
        var oldContext = instance.context,
            newUnmaskedContext = getUnmaskedContext$2(workInProgress),
            newContext = getMaskedContext$2(workInProgress, newUnmaskedContext);
        "function" != typeof instance.componentWillReceiveProps || oldProps === newProps && oldContext === newContext || callComponentWillReceiveProps(workInProgress, instance, newProps, newContext);
        var oldState = workInProgress.memoizedState,
            newState = void 0;
        if (newState = null !== workInProgress.updateQueue ? beginUpdateQueue$2(current, workInProgress, workInProgress.updateQueue, instance, oldState, newProps, priorityLevel) : oldState, !(oldProps !== newProps || oldState !== newState || hasContextChanged$2() || null !== workInProgress.updateQueue && workInProgress.updateQueue.hasForceUpdate)) return "function" == typeof instance.componentDidUpdate && (oldProps === current.memoizedProps && oldState === current.memoizedState || (workInProgress.effectTag |= Update$1)), !1;
        var shouldUpdate = checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext);
        return shouldUpdate ? ("function" == typeof instance.componentWillUpdate && instance.componentWillUpdate(newProps, newState, newContext), "function" == typeof instance.componentDidUpdate && (workInProgress.effectTag |= Update$1)) : ("function" == typeof instance.componentDidUpdate && (oldProps === current.memoizedProps && oldState === current.memoizedState || (workInProgress.effectTag |= Update$1)), memoizeProps(workInProgress, newProps), memoizeState(workInProgress, newState)), instance.props = newProps, instance.state = newState, instance.context = newContext, shouldUpdate;
    }
    return {
        adoptClassInstance: adoptClassInstance,
        constructClassInstance: constructClassInstance,
        mountClassInstance: mountClassInstance,
        updateClassInstance: updateClassInstance
    };
},
    mountChildFibersInPlace = ReactChildFiber.mountChildFibersInPlace,
    reconcileChildFibers = ReactChildFiber.reconcileChildFibers,
    reconcileChildFibersInPlace = ReactChildFiber.reconcileChildFibersInPlace,
    cloneChildFibers = ReactChildFiber.cloneChildFibers,
    beginUpdateQueue$1 = ReactFiberUpdateQueue.beginUpdateQueue,
    getMaskedContext$1 = ReactFiberContext.getMaskedContext,
    getUnmaskedContext$1 = ReactFiberContext.getUnmaskedContext,
    hasContextChanged$1 = ReactFiberContext.hasContextChanged,
    pushContextProvider$1 = ReactFiberContext.pushContextProvider,
    pushTopLevelContextObject$1 = ReactFiberContext.pushTopLevelContextObject,
    invalidateContextProvider$1 = ReactFiberContext.invalidateContextProvider,
    IndeterminateComponent$2 = ReactTypeOfWork.IndeterminateComponent,
    FunctionalComponent$1 = ReactTypeOfWork.FunctionalComponent,
    ClassComponent$6 = ReactTypeOfWork.ClassComponent,
    HostRoot$5 = ReactTypeOfWork.HostRoot,
    HostComponent$5 = ReactTypeOfWork.HostComponent,
    HostText$2 = ReactTypeOfWork.HostText,
    HostPortal$3 = ReactTypeOfWork.HostPortal,
    CoroutineComponent$1 = ReactTypeOfWork.CoroutineComponent,
    CoroutineHandlerPhase = ReactTypeOfWork.CoroutineHandlerPhase,
    YieldComponent$1 = ReactTypeOfWork.YieldComponent,
    Fragment$1 = ReactTypeOfWork.Fragment,
    NoWork$3 = ReactPriorityLevel.NoWork,
    OffscreenPriority$1 = ReactPriorityLevel.OffscreenPriority,
    PerformedWork$1 = ReactTypeOfSideEffect.PerformedWork,
    Placement$2 = ReactTypeOfSideEffect.Placement,
    ContentReset$1 = ReactTypeOfSideEffect.ContentReset,
    Err$1 = ReactTypeOfSideEffect.Err,
    Ref$1 = ReactTypeOfSideEffect.Ref,
    ReactCurrentOwner$2 = ReactGlobalSharedState_1.ReactCurrentOwner,
    ReactFiberBeginWork = function ReactFiberBeginWork(config, hostContext, hydrationContext, scheduleUpdate, getPriorityContext) {
    var shouldSetTextContent = config.shouldSetTextContent,
        useSyncScheduling = config.useSyncScheduling,
        shouldDeprioritizeSubtree = config.shouldDeprioritizeSubtree,
        pushHostContext = hostContext.pushHostContext,
        pushHostContainer = hostContext.pushHostContainer,
        enterHydrationState = hydrationContext.enterHydrationState,
        resetHydrationState = hydrationContext.resetHydrationState,
        tryToClaimNextHydratableInstance = hydrationContext.tryToClaimNextHydratableInstance,
        _ReactFiberClassCompo = ReactFiberClassComponent(scheduleUpdate, getPriorityContext, memoizeProps, memoizeState),
        adoptClassInstance = _ReactFiberClassCompo.adoptClassInstance,
        constructClassInstance = _ReactFiberClassCompo.constructClassInstance,
        mountClassInstance = _ReactFiberClassCompo.mountClassInstance,
        updateClassInstance = _ReactFiberClassCompo.updateClassInstance;
    function reconcileChildren(current, workInProgress, nextChildren) {
        reconcileChildrenAtPriority(current, workInProgress, nextChildren, workInProgress.pendingWorkPriority);
    }
    function reconcileChildrenAtPriority(current, workInProgress, nextChildren, priorityLevel) {
        null === current ? workInProgress.child = mountChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, priorityLevel) : current.child === workInProgress.child ? workInProgress.child = reconcileChildFibers(workInProgress, workInProgress.child, nextChildren, priorityLevel) : workInProgress.child = reconcileChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, priorityLevel);
    }
    function updateFragment(current, workInProgress) {
        var nextChildren = workInProgress.pendingProps;
        if (hasContextChanged$1()) null === nextChildren && (nextChildren = workInProgress.memoizedProps);else if (null === nextChildren || workInProgress.memoizedProps === nextChildren) return bailoutOnAlreadyFinishedWork(current, workInProgress);
        return reconcileChildren(current, workInProgress, nextChildren), memoizeProps(workInProgress, nextChildren), workInProgress.child;
    }
    function markRef(current, workInProgress) {
        var ref = workInProgress.ref;
        null === ref || current && current.ref === ref || (workInProgress.effectTag |= Ref$1);
    }
    function updateFunctionalComponent(current, workInProgress) {
        var fn = workInProgress.type,
            nextProps = workInProgress.pendingProps,
            memoizedProps = workInProgress.memoizedProps;
        if (hasContextChanged$1()) null === nextProps && (nextProps = memoizedProps);else if (null === nextProps || memoizedProps === nextProps) return bailoutOnAlreadyFinishedWork(current, workInProgress);
        var nextChildren,
            unmaskedContext = getUnmaskedContext$1(workInProgress),
            context = getMaskedContext$1(workInProgress, unmaskedContext);
        return nextChildren = fn(nextProps, context), workInProgress.effectTag |= PerformedWork$1, reconcileChildren(current, workInProgress, nextChildren), memoizeProps(workInProgress, nextProps), workInProgress.child;
    }
    function updateClassComponent(current, workInProgress, priorityLevel) {
        var hasContext = pushContextProvider$1(workInProgress),
            shouldUpdate = void 0;
        return null === current ? workInProgress.stateNode ? invariant(!1, "Resuming work not yet implemented.") : (constructClassInstance(workInProgress, workInProgress.pendingProps), mountClassInstance(workInProgress, priorityLevel), shouldUpdate = !0) : shouldUpdate = updateClassInstance(current, workInProgress, priorityLevel), finishClassComponent(current, workInProgress, shouldUpdate, hasContext);
    }
    function finishClassComponent(current, workInProgress, shouldUpdate, hasContext) {
        if (markRef(current, workInProgress), !shouldUpdate) return hasContext && invalidateContextProvider$1(workInProgress, !1), bailoutOnAlreadyFinishedWork(current, workInProgress);
        var instance = workInProgress.stateNode;
        ReactCurrentOwner$2.current = workInProgress;
        var nextChildren = void 0;
        return nextChildren = instance.render(), workInProgress.effectTag |= PerformedWork$1, reconcileChildren(current, workInProgress, nextChildren), memoizeState(workInProgress, instance.state), memoizeProps(workInProgress, instance.props), hasContext && invalidateContextProvider$1(workInProgress, !0), workInProgress.child;
    }
    function pushHostRootContext(workInProgress) {
        var root = workInProgress.stateNode;
        root.pendingContext ? pushTopLevelContextObject$1(workInProgress, root.pendingContext, root.pendingContext !== root.context) : root.context && pushTopLevelContextObject$1(workInProgress, root.context, !1), pushHostContainer(workInProgress, root.containerInfo);
    }
    function updateHostRoot(current, workInProgress, priorityLevel) {
        pushHostRootContext(workInProgress);
        var updateQueue = workInProgress.updateQueue;
        if (null !== updateQueue) {
            var prevState = workInProgress.memoizedState,
                state = beginUpdateQueue$1(current, workInProgress, updateQueue, null, prevState, null, priorityLevel);
            if (prevState === state) return resetHydrationState(), bailoutOnAlreadyFinishedWork(current, workInProgress);
            var element = state.element;
            return null !== current && null !== current.child || !enterHydrationState(workInProgress) ? (resetHydrationState(), reconcileChildren(current, workInProgress, element)) : (workInProgress.effectTag |= Placement$2, workInProgress.child = mountChildFibersInPlace(workInProgress, workInProgress.child, element, priorityLevel)), memoizeState(workInProgress, state), workInProgress.child;
        }
        return resetHydrationState(), bailoutOnAlreadyFinishedWork(current, workInProgress);
    }
    function updateHostComponent(current, workInProgress, renderPriority) {
        pushHostContext(workInProgress), null === current && tryToClaimNextHydratableInstance(workInProgress);
        var type = workInProgress.type,
            memoizedProps = workInProgress.memoizedProps,
            nextProps = workInProgress.pendingProps;
        null === nextProps && (nextProps = memoizedProps, invariant(null !== nextProps, "We should always have pending or current props. This error is " + "likely caused by a bug in React. Please file an issue."));
        var prevProps = null !== current ? current.memoizedProps : null;
        if (hasContextChanged$1()) ;else if (null === nextProps || memoizedProps === nextProps) return bailoutOnAlreadyFinishedWork(current, workInProgress);
        var nextChildren = nextProps.children;
        return shouldSetTextContent(type, nextProps) ? nextChildren = null : prevProps && shouldSetTextContent(type, prevProps) && (workInProgress.effectTag |= ContentReset$1), markRef(current, workInProgress), renderPriority !== OffscreenPriority$1 && !useSyncScheduling && shouldDeprioritizeSubtree(type, nextProps) ? (workInProgress.pendingWorkPriority = OffscreenPriority$1, null) : (reconcileChildren(current, workInProgress, nextChildren), memoizeProps(workInProgress, nextProps), workInProgress.child);
    }
    function updateHostText(current, workInProgress) {
        null === current && tryToClaimNextHydratableInstance(workInProgress);
        var nextProps = workInProgress.pendingProps;
        return null === nextProps && (nextProps = workInProgress.memoizedProps), memoizeProps(workInProgress, nextProps), null;
    }
    function mountIndeterminateComponent(current, workInProgress, priorityLevel) {
        invariant(null === current, "An indeterminate component should never have mounted. This error is " + "likely caused by a bug in React. Please file an issue.");
        var value,
            fn = workInProgress.type,
            props = workInProgress.pendingProps,
            unmaskedContext = getUnmaskedContext$1(workInProgress),
            context = getMaskedContext$1(workInProgress, unmaskedContext);
        if (value = fn(props, context), workInProgress.effectTag |= PerformedWork$1, "object" == typeof value && null !== value && "function" == typeof value.render) {
            workInProgress.tag = ClassComponent$6;
            var hasContext = pushContextProvider$1(workInProgress);
            return adoptClassInstance(workInProgress, value), mountClassInstance(workInProgress, priorityLevel), finishClassComponent(current, workInProgress, !0, hasContext);
        }
        return workInProgress.tag = FunctionalComponent$1, reconcileChildren(current, workInProgress, value), memoizeProps(workInProgress, props), workInProgress.child;
    }
    function updateCoroutineComponent(current, workInProgress) {
        var nextCoroutine = workInProgress.pendingProps;
        hasContextChanged$1() ? null === nextCoroutine && (nextCoroutine = current && current.memoizedProps, invariant(null !== nextCoroutine, "We should always have pending or current props. This error is " + "likely caused by a bug in React. Please file an issue.")) : null !== nextCoroutine && workInProgress.memoizedProps !== nextCoroutine || (nextCoroutine = workInProgress.memoizedProps);
        var nextChildren = nextCoroutine.children,
            priorityLevel = workInProgress.pendingWorkPriority;
        return null === current ? workInProgress.stateNode = mountChildFibersInPlace(workInProgress, workInProgress.stateNode, nextChildren, priorityLevel) : current.child === workInProgress.child ? workInProgress.stateNode = reconcileChildFibers(workInProgress, workInProgress.stateNode, nextChildren, priorityLevel) : workInProgress.stateNode = reconcileChildFibersInPlace(workInProgress, workInProgress.stateNode, nextChildren, priorityLevel), memoizeProps(workInProgress, nextCoroutine), workInProgress.stateNode;
    }
    function updatePortalComponent(current, workInProgress) {
        pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
        var priorityLevel = workInProgress.pendingWorkPriority,
            nextChildren = workInProgress.pendingProps;
        if (hasContextChanged$1()) null === nextChildren && (nextChildren = current && current.memoizedProps, invariant(null != nextChildren, "We should always have pending or current props. This error is " + "likely caused by a bug in React. Please file an issue."));else if (null === nextChildren || workInProgress.memoizedProps === nextChildren) return bailoutOnAlreadyFinishedWork(current, workInProgress);
        return null === current ? (workInProgress.child = reconcileChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, priorityLevel), memoizeProps(workInProgress, nextChildren)) : (reconcileChildren(current, workInProgress, nextChildren), memoizeProps(workInProgress, nextChildren)), workInProgress.child;
    }
    function bailoutOnAlreadyFinishedWork(current, workInProgress) {
        return cloneChildFibers(current, workInProgress), workInProgress.child;
    }
    function bailoutOnLowPriority(current, workInProgress) {
        switch (workInProgress.tag) {
            case HostRoot$5:
                pushHostRootContext(workInProgress);
                break;

            case ClassComponent$6:
                pushContextProvider$1(workInProgress);
                break;

            case HostPortal$3:
                pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
        }
        return null;
    }
    function memoizeProps(workInProgress, nextProps) {
        workInProgress.memoizedProps = nextProps;
    }
    function memoizeState(workInProgress, nextState) {
        workInProgress.memoizedState = nextState;
    }
    function beginWork(current, workInProgress, priorityLevel) {
        if (workInProgress.pendingWorkPriority === NoWork$3 || workInProgress.pendingWorkPriority > priorityLevel) return bailoutOnLowPriority(current, workInProgress);
        switch (workInProgress.tag) {
            case IndeterminateComponent$2:
                return mountIndeterminateComponent(current, workInProgress, priorityLevel);

            case FunctionalComponent$1:
                return updateFunctionalComponent(current, workInProgress);

            case ClassComponent$6:
                return updateClassComponent(current, workInProgress, priorityLevel);

            case HostRoot$5:
                return updateHostRoot(current, workInProgress, priorityLevel);

            case HostComponent$5:
                return updateHostComponent(current, workInProgress, priorityLevel);

            case HostText$2:
                return updateHostText(current, workInProgress);

            case CoroutineHandlerPhase:
                workInProgress.tag = CoroutineComponent$1;

            case CoroutineComponent$1:
                return updateCoroutineComponent(current, workInProgress);

            case YieldComponent$1:
                return null;

            case HostPortal$3:
                return updatePortalComponent(current, workInProgress);

            case Fragment$1:
                return updateFragment(current, workInProgress);

            default:
                invariant(!1, "Unknown unit of work tag. This error is likely caused by a bug in " + "React. Please file an issue.");
        }
    }
    function beginFailedWork(current, workInProgress, priorityLevel) {
        switch (workInProgress.tag) {
            case ClassComponent$6:
                pushContextProvider$1(workInProgress);
                break;

            case HostRoot$5:
                pushHostRootContext(workInProgress);
                break;

            default:
                invariant(!1, "Invalid type of work. This error is likely caused by a bug in React. " + "Please file an issue.");
        }
        if (workInProgress.effectTag |= Err$1, null === current ? workInProgress.child = null : workInProgress.child !== current.child && (workInProgress.child = current.child), workInProgress.pendingWorkPriority === NoWork$3 || workInProgress.pendingWorkPriority > priorityLevel) return bailoutOnLowPriority(current, workInProgress);
        if (workInProgress.firstEffect = null, workInProgress.lastEffect = null, reconcileChildrenAtPriority(current, workInProgress, null, priorityLevel), workInProgress.tag === ClassComponent$6) {
            var instance = workInProgress.stateNode;
            workInProgress.memoizedProps = instance.props, workInProgress.memoizedState = instance.state;
        }
        return workInProgress.child;
    }
    return {
        beginWork: beginWork,
        beginFailedWork: beginFailedWork
    };
},
    reconcileChildFibers$2 = ReactChildFiber.reconcileChildFibers,
    popContextProvider$2 = ReactFiberContext.popContextProvider,
    popTopLevelContextObject$1 = ReactFiberContext.popTopLevelContextObject,
    IndeterminateComponent$3 = ReactTypeOfWork.IndeterminateComponent,
    FunctionalComponent$3 = ReactTypeOfWork.FunctionalComponent,
    ClassComponent$8 = ReactTypeOfWork.ClassComponent,
    HostRoot$6 = ReactTypeOfWork.HostRoot,
    HostComponent$6 = ReactTypeOfWork.HostComponent,
    HostText$4 = ReactTypeOfWork.HostText,
    HostPortal$5 = ReactTypeOfWork.HostPortal,
    CoroutineComponent$3 = ReactTypeOfWork.CoroutineComponent,
    CoroutineHandlerPhase$1 = ReactTypeOfWork.CoroutineHandlerPhase,
    YieldComponent$3 = ReactTypeOfWork.YieldComponent,
    Fragment$3 = ReactTypeOfWork.Fragment,
    Placement$4 = ReactTypeOfSideEffect.Placement,
    Ref$2 = ReactTypeOfSideEffect.Ref,
    Update$2 = ReactTypeOfSideEffect.Update,
    OffscreenPriority$2 = ReactPriorityLevel.OffscreenPriority,
    ReactFiberCompleteWork = function ReactFiberCompleteWork(config, hostContext, hydrationContext) {
    var createInstance = config.createInstance,
        createTextInstance = config.createTextInstance,
        appendInitialChild = config.appendInitialChild,
        finalizeInitialChildren = config.finalizeInitialChildren,
        prepareUpdate = config.prepareUpdate,
        getRootHostContainer = hostContext.getRootHostContainer,
        popHostContext = hostContext.popHostContext,
        getHostContext = hostContext.getHostContext,
        popHostContainer = hostContext.popHostContainer,
        prepareToHydrateHostInstance = hydrationContext.prepareToHydrateHostInstance,
        prepareToHydrateHostTextInstance = hydrationContext.prepareToHydrateHostTextInstance,
        popHydrationState = hydrationContext.popHydrationState;
    function markUpdate(workInProgress) {
        workInProgress.effectTag |= Update$2;
    }
    function markRef(workInProgress) {
        workInProgress.effectTag |= Ref$2;
    }
    function appendAllYields(yields, workInProgress) {
        var node = workInProgress.stateNode;
        for (node && (node.return = workInProgress); null !== node;) {
            if (node.tag === HostComponent$6 || node.tag === HostText$4 || node.tag === HostPortal$5) invariant(!1, "A coroutine cannot have host component children.");else if (node.tag === YieldComponent$3) yields.push(node.type);else if (null !== node.child) {
                node.child.return = node, node = node.child;
                continue;
            }
            for (; null === node.sibling;) {
                if (null === node.return || node.return === workInProgress) return;
                node = node.return;
            }
            node.sibling.return = node.return, node = node.sibling;
        }
    }
    function moveCoroutineToHandlerPhase(current, workInProgress) {
        var coroutine = workInProgress.memoizedProps;
        invariant(coroutine, "Should be resolved by now. This error is likely caused by a bug in " + "React. Please file an issue."), workInProgress.tag = CoroutineHandlerPhase$1;
        var yields = [];
        appendAllYields(yields, workInProgress);
        var fn = coroutine.handler,
            props = coroutine.props,
            nextChildren = fn(props, yields),
            currentFirstChild = null !== current ? current.child : null,
            priority = workInProgress.pendingWorkPriority;
        return workInProgress.child = reconcileChildFibers$2(workInProgress, currentFirstChild, nextChildren, priority), workInProgress.child;
    }
    function appendAllChildren(parent, workInProgress) {
        for (var node = workInProgress.child; null !== node;) {
            if (node.tag === HostComponent$6 || node.tag === HostText$4) appendInitialChild(parent, node.stateNode);else if (node.tag === HostPortal$5) ;else if (null !== node.child) {
                node = node.child;
                continue;
            }
            if (node === workInProgress) return;
            for (; null === node.sibling;) {
                if (null === node.return || node.return === workInProgress) return;
                node = node.return;
            }
            node = node.sibling;
        }
    }
    function completeWork(current, workInProgress, renderPriority) {
        var newProps = workInProgress.pendingProps;
        switch (null === newProps ? newProps = workInProgress.memoizedProps : workInProgress.pendingWorkPriority === OffscreenPriority$2 && renderPriority !== OffscreenPriority$2 || (workInProgress.pendingProps = null), workInProgress.tag) {
            case FunctionalComponent$3:
                return null;

            case ClassComponent$8:
                return popContextProvider$2(workInProgress), null;

            case HostRoot$6:
                popHostContainer(workInProgress), popTopLevelContextObject$1(workInProgress);
                var fiberRoot = workInProgress.stateNode;
                return fiberRoot.pendingContext && (fiberRoot.context = fiberRoot.pendingContext, fiberRoot.pendingContext = null), null !== current && null !== current.child || (popHydrationState(workInProgress), workInProgress.effectTag &= ~Placement$4), null;

            case HostComponent$6:
                popHostContext(workInProgress);
                var rootContainerInstance = getRootHostContainer(),
                    type = workInProgress.type;
                if (null !== current && null != workInProgress.stateNode) {
                    var oldProps = current.memoizedProps,
                        instance = workInProgress.stateNode,
                        currentHostContext = getHostContext(),
                        updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);
                    workInProgress.updateQueue = updatePayload, updatePayload && markUpdate(workInProgress), current.ref !== workInProgress.ref && markRef(workInProgress);
                } else {
                    if (!newProps) return invariant(null !== workInProgress.stateNode, "We must have new props for new mounts. This error is likely " + "caused by a bug in React. Please file an issue."), null;
                    var _currentHostContext = getHostContext();
                    if (popHydrationState(workInProgress)) prepareToHydrateHostInstance(workInProgress, rootContainerInstance, _currentHostContext) && markUpdate(workInProgress);else {
                        var _instance = createInstance(type, newProps, rootContainerInstance, _currentHostContext, workInProgress);
                        appendAllChildren(_instance, workInProgress), finalizeInitialChildren(_instance, type, newProps, rootContainerInstance) && markUpdate(workInProgress), workInProgress.stateNode = _instance;
                    }
                    null !== workInProgress.ref && markRef(workInProgress);
                }
                return null;

            case HostText$4:
                var newText = newProps;
                if (current && null != workInProgress.stateNode) {
                    current.memoizedProps !== newText && markUpdate(workInProgress);
                } else {
                    if ("string" != typeof newText) return invariant(null !== workInProgress.stateNode, "We must have new props for new mounts. This error is likely " + "caused by a bug in React. Please file an issue."), null;
                    var _rootContainerInstance = getRootHostContainer(),
                        _currentHostContext2 = getHostContext();
                    popHydrationState(workInProgress) ? prepareToHydrateHostTextInstance(workInProgress) && markUpdate(workInProgress) : workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext2, workInProgress);
                }
                return null;

            case CoroutineComponent$3:
                return moveCoroutineToHandlerPhase(current, workInProgress);

            case CoroutineHandlerPhase$1:
                return workInProgress.tag = CoroutineComponent$3, null;

            case YieldComponent$3:
            case Fragment$3:
                return null;

            case HostPortal$5:
                return markUpdate(workInProgress), popHostContainer(workInProgress), null;

            case IndeterminateComponent$3:
                invariant(!1, "An indeterminate component should have become determinate before " + "completing. This error is likely caused by a bug in React. Please " + "file an issue.");

            default:
                invariant(!1, "Unknown unit of work tag. This error is likely caused by a bug in " + "React. Please file an issue.");
        }
    }
    return {
        completeWork: completeWork
    };
},
    onCommitFiberRoot = null,
    onCommitFiberUnmount = null,
    hasLoggedError = !1;

function catchErrors(fn) {
    return function (arg) {
        try {
            return fn(arg);
        } catch (err) {
            1 || hasLoggedError || (hasLoggedError = !0);
        }
    };
}

function injectInternals$1(internals) {
    if ("undefined" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;
    var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (!hook.supportsFiber) return !0;
    try {
        var rendererID = hook.inject(internals);
        onCommitFiberRoot = catchErrors(function (root) {
            return hook.onCommitFiberRoot(rendererID, root);
        }), onCommitFiberUnmount = catchErrors(function (fiber) {
            return hook.onCommitFiberUnmount(rendererID, fiber);
        });
    } catch (err) {}
    return !0;
}

function onCommitRoot$1(root) {
    "function" == typeof onCommitFiberRoot && onCommitFiberRoot(root);
}

function onCommitUnmount$1(fiber) {
    "function" == typeof onCommitFiberUnmount && onCommitFiberUnmount(fiber);
}

var injectInternals_1 = injectInternals$1,
    onCommitRoot_1 = onCommitRoot$1,
    onCommitUnmount_1 = onCommitUnmount$1,
    ReactFiberDevToolsHook = {
    injectInternals: injectInternals_1,
    onCommitRoot: onCommitRoot_1,
    onCommitUnmount: onCommitUnmount_1
},
    ClassComponent$9 = ReactTypeOfWork.ClassComponent,
    HostRoot$7 = ReactTypeOfWork.HostRoot,
    HostComponent$7 = ReactTypeOfWork.HostComponent,
    HostText$5 = ReactTypeOfWork.HostText,
    HostPortal$6 = ReactTypeOfWork.HostPortal,
    CoroutineComponent$4 = ReactTypeOfWork.CoroutineComponent,
    commitCallbacks$1 = ReactFiberUpdateQueue.commitCallbacks,
    onCommitUnmount = ReactFiberDevToolsHook.onCommitUnmount,
    Placement$5 = ReactTypeOfSideEffect.Placement,
    Update$3 = ReactTypeOfSideEffect.Update,
    Callback$1 = ReactTypeOfSideEffect.Callback,
    ContentReset$2 = ReactTypeOfSideEffect.ContentReset,
    ReactFiberCommitWork = function ReactFiberCommitWork(config, captureError) {
    var commitMount = config.commitMount,
        commitUpdate = config.commitUpdate,
        resetTextContent = config.resetTextContent,
        commitTextUpdate = config.commitTextUpdate,
        appendChild = config.appendChild,
        appendChildToContainer = config.appendChildToContainer,
        insertBefore = config.insertBefore,
        insertInContainerBefore = config.insertInContainerBefore,
        removeChild = config.removeChild,
        removeChildFromContainer = config.removeChildFromContainer,
        getPublicInstance = config.getPublicInstance;
    function safelyCallComponentWillUnmount(current, instance) {
        try {
            instance.props = current.memoizedProps, instance.state = current.memoizedState, instance.componentWillUnmount();
        } catch (unmountError) {
            captureError(current, unmountError);
        }
    }
    function safelyDetachRef(current) {
        var ref = current.ref;
        if (null !== ref) {
            try {
                ref(null);
            } catch (refError) {
                captureError(current, refError);
            }
        }
    }
    function getHostParentFiber(fiber) {
        for (var parent = fiber.return; null !== parent;) {
            if (isHostParent(parent)) return parent;
            parent = parent.return;
        }
        invariant(!1, "Expected to find a host parent. This error is likely caused by a bug " + "in React. Please file an issue.");
    }
    function isHostParent(fiber) {
        return fiber.tag === HostComponent$7 || fiber.tag === HostRoot$7 || fiber.tag === HostPortal$6;
    }
    function getHostSibling(fiber) {
        var node = fiber;
        siblings: for (; !0;) {
            for (; null === node.sibling;) {
                if (null === node.return || isHostParent(node.return)) return null;
                node = node.return;
            }
            for (node.sibling.return = node.return, node = node.sibling; node.tag !== HostComponent$7 && node.tag !== HostText$5;) {
                if (node.effectTag & Placement$5) continue siblings;
                if (null === node.child || node.tag === HostPortal$6) continue siblings;
                node.child.return = node, node = node.child;
            }
            if (!(node.effectTag & Placement$5)) return node.stateNode;
        }
    }
    function commitPlacement(finishedWork) {
        var parentFiber = getHostParentFiber(finishedWork),
            parent = void 0,
            isContainer = void 0;
        switch (parentFiber.tag) {
            case HostComponent$7:
                parent = parentFiber.stateNode, isContainer = !1;
                break;

            case HostRoot$7:
            case HostPortal$6:
                parent = parentFiber.stateNode.containerInfo, isContainer = !0;
                break;

            default:
                invariant(!1, "Invalid host parent fiber. This error is likely caused by a bug " + "in React. Please file an issue.");
        }
        parentFiber.effectTag & ContentReset$2 && (resetTextContent(parent), parentFiber.effectTag &= ~ContentReset$2);
        for (var before = getHostSibling(finishedWork), node = finishedWork; !0;) {
            if (node.tag === HostComponent$7 || node.tag === HostText$5) before ? isContainer ? insertInContainerBefore(parent, node.stateNode, before) : insertBefore(parent, node.stateNode, before) : isContainer ? appendChildToContainer(parent, node.stateNode) : appendChild(parent, node.stateNode);else if (node.tag === HostPortal$6) ;else if (null !== node.child) {
                node.child.return = node, node = node.child;
                continue;
            }
            if (node === finishedWork) return;
            for (; null === node.sibling;) {
                if (null === node.return || node.return === finishedWork) return;
                node = node.return;
            }
            node.sibling.return = node.return, node = node.sibling;
        }
    }
    function commitNestedUnmounts(root) {
        for (var node = root; !0;) {
            if (commitUnmount(node), null === node.child || node.tag === HostPortal$6) {
                if (node === root) return;
                for (; null === node.sibling;) {
                    if (null === node.return || node.return === root) return;
                    node = node.return;
                }
                node.sibling.return = node.return, node = node.sibling;
            } else node.child.return = node, node = node.child;
        }
    }
    function unmountHostComponents(current) {
        for (var node = current, currentParentIsValid = !1, currentParent = void 0, currentParentIsContainer = void 0; !0;) {
            if (!currentParentIsValid) {
                var parent = node.return;
                findParent: for (; !0;) {
                    switch (invariant(null !== parent, "Expected to find a host parent. This error is likely caused by " + "a bug in React. Please file an issue."), parent.tag) {
                        case HostComponent$7:
                            currentParent = parent.stateNode, currentParentIsContainer = !1;
                            break findParent;

                        case HostRoot$7:
                        case HostPortal$6:
                            currentParent = parent.stateNode.containerInfo, currentParentIsContainer = !0;
                            break findParent;
                    }
                    parent = parent.return;
                }
                currentParentIsValid = !0;
            }
            if (node.tag === HostComponent$7 || node.tag === HostText$5) commitNestedUnmounts(node), currentParentIsContainer ? removeChildFromContainer(currentParent, node.stateNode) : removeChild(currentParent, node.stateNode);else if (node.tag === HostPortal$6) {
                if (currentParent = node.stateNode.containerInfo, null !== node.child) {
                    node.child.return = node, node = node.child;
                    continue;
                }
            } else if (commitUnmount(node), null !== node.child) {
                node.child.return = node, node = node.child;
                continue;
            }
            if (node === current) return;
            for (; null === node.sibling;) {
                if (null === node.return || node.return === current) return;
                node = node.return, node.tag === HostPortal$6 && (currentParentIsValid = !1);
            }
            node.sibling.return = node.return, node = node.sibling;
        }
    }
    function commitDeletion(current) {
        unmountHostComponents(current), current.return = null, current.child = null, current.alternate && (current.alternate.child = null, current.alternate.return = null);
    }
    function commitUnmount(current) {
        switch ("function" == typeof onCommitUnmount && onCommitUnmount(current), current.tag) {
            case ClassComponent$9:
                safelyDetachRef(current);
                var instance = current.stateNode;
                return void ("function" == typeof instance.componentWillUnmount && safelyCallComponentWillUnmount(current, instance));

            case HostComponent$7:
                return void safelyDetachRef(current);

            case CoroutineComponent$4:
                return void commitNestedUnmounts(current.stateNode);

            case HostPortal$6:
                return void unmountHostComponents(current);
        }
    }
    function commitWork(current, finishedWork) {
        switch (finishedWork.tag) {
            case ClassComponent$9:
                return;

            case HostComponent$7:
                var instance = finishedWork.stateNode;
                if (null != instance) {
                    var newProps = finishedWork.memoizedProps,
                        oldProps = null !== current ? current.memoizedProps : newProps,
                        type = finishedWork.type,
                        updatePayload = finishedWork.updateQueue;
                    finishedWork.updateQueue = null, null !== updatePayload && commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);
                }
                return;

            case HostText$5:
                invariant(null !== finishedWork.stateNode, "This should have a text node initialized. This error is likely " + "caused by a bug in React. Please file an issue.");
                var textInstance = finishedWork.stateNode,
                    newText = finishedWork.memoizedProps,
                    oldText = null !== current ? current.memoizedProps : newText;
                return void commitTextUpdate(textInstance, oldText, newText);

            case HostRoot$7:
            case HostPortal$6:
                return;

            default:
                invariant(!1, "This unit of work tag should not have side-effects. This error is " + "likely caused by a bug in React. Please file an issue.");
        }
    }
    function commitLifeCycles(current, finishedWork) {
        switch (finishedWork.tag) {
            case ClassComponent$9:
                var instance = finishedWork.stateNode;
                if (finishedWork.effectTag & Update$3) if (null === current) instance.props = finishedWork.memoizedProps, instance.state = finishedWork.memoizedState, instance.componentDidMount();else {
                    var prevProps = current.memoizedProps,
                        prevState = current.memoizedState;
                    instance.props = finishedWork.memoizedProps, instance.state = finishedWork.memoizedState, instance.componentDidUpdate(prevProps, prevState);
                }
                return void (finishedWork.effectTag & Callback$1 && null !== finishedWork.updateQueue && commitCallbacks$1(finishedWork, finishedWork.updateQueue, instance));

            case HostRoot$7:
                var updateQueue = finishedWork.updateQueue;
                if (null !== updateQueue) {
                    var _instance = finishedWork.child && finishedWork.child.stateNode;
                    commitCallbacks$1(finishedWork, updateQueue, _instance);
                }
                return;

            case HostComponent$7:
                var _instance2 = finishedWork.stateNode;
                if (null === current && finishedWork.effectTag & Update$3) {
                    var type = finishedWork.type,
                        props = finishedWork.memoizedProps;
                    commitMount(_instance2, type, props, finishedWork);
                }
                return;

            case HostText$5:
            case HostPortal$6:
                return;

            default:
                invariant(!1, "This unit of work tag should not have side-effects. This error is " + "likely caused by a bug in React. Please file an issue.");
        }
    }
    function commitAttachRef(finishedWork) {
        var ref = finishedWork.ref;
        if (null !== ref) {
            var instance = finishedWork.stateNode;
            switch (finishedWork.tag) {
                case HostComponent$7:
                    ref(getPublicInstance(instance));
                    break;

                default:
                    ref(instance);
            }
        }
    }
    function commitDetachRef(current) {
        var currentRef = current.ref;
        null !== currentRef && currentRef(null);
    }
    return {
        commitPlacement: commitPlacement,
        commitDeletion: commitDeletion,
        commitWork: commitWork,
        commitLifeCycles: commitLifeCycles,
        commitAttachRef: commitAttachRef,
        commitDetachRef: commitDetachRef
    };
},
    createCursor$2 = ReactFiberStack.createCursor,
    pop$2 = ReactFiberStack.pop,
    push$2 = ReactFiberStack.push,
    NO_CONTEXT = {},
    ReactFiberHostContext = function ReactFiberHostContext(config) {
    var getChildHostContext = config.getChildHostContext,
        getRootHostContext = config.getRootHostContext,
        contextStackCursor = createCursor$2(NO_CONTEXT),
        contextFiberStackCursor = createCursor$2(NO_CONTEXT),
        rootInstanceStackCursor = createCursor$2(NO_CONTEXT);
    function requiredContext(c) {
        return invariant(c !== NO_CONTEXT, "Expected host context to exist. This error is likely caused by a bug " + "in React. Please file an issue."), c;
    }
    function getRootHostContainer() {
        return requiredContext(rootInstanceStackCursor.current);
    }
    function pushHostContainer(fiber, nextRootInstance) {
        push$2(rootInstanceStackCursor, nextRootInstance, fiber);
        var nextRootContext = getRootHostContext(nextRootInstance);
        push$2(contextFiberStackCursor, fiber, fiber), push$2(contextStackCursor, nextRootContext, fiber);
    }
    function popHostContainer(fiber) {
        pop$2(contextStackCursor, fiber), pop$2(contextFiberStackCursor, fiber), pop$2(rootInstanceStackCursor, fiber);
    }
    function getHostContext() {
        return requiredContext(contextStackCursor.current);
    }
    function pushHostContext(fiber) {
        var rootInstance = requiredContext(rootInstanceStackCursor.current),
            context = requiredContext(contextStackCursor.current),
            nextContext = getChildHostContext(context, fiber.type, rootInstance);
        context !== nextContext && (push$2(contextFiberStackCursor, fiber, fiber), push$2(contextStackCursor, nextContext, fiber));
    }
    function popHostContext(fiber) {
        contextFiberStackCursor.current === fiber && (pop$2(contextStackCursor, fiber), pop$2(contextFiberStackCursor, fiber));
    }
    function resetHostContainer() {
        contextStackCursor.current = NO_CONTEXT, rootInstanceStackCursor.current = NO_CONTEXT;
    }
    return {
        getHostContext: getHostContext,
        getRootHostContainer: getRootHostContainer,
        popHostContainer: popHostContainer,
        popHostContext: popHostContext,
        pushHostContainer: pushHostContainer,
        pushHostContext: pushHostContext,
        resetHostContainer: resetHostContainer
    };
},
    HostComponent$8 = ReactTypeOfWork.HostComponent,
    HostText$6 = ReactTypeOfWork.HostText,
    HostRoot$8 = ReactTypeOfWork.HostRoot,
    Deletion$2 = ReactTypeOfSideEffect.Deletion,
    Placement$6 = ReactTypeOfSideEffect.Placement,
    createFiberFromHostInstanceForDeletion$1 = ReactFiber.createFiberFromHostInstanceForDeletion,
    ReactFiberHydrationContext = function ReactFiberHydrationContext(config) {
    var shouldSetTextContent = config.shouldSetTextContent,
        canHydrateInstance = config.canHydrateInstance,
        canHydrateTextInstance = config.canHydrateTextInstance,
        getNextHydratableSibling = config.getNextHydratableSibling,
        getFirstHydratableChild = config.getFirstHydratableChild,
        hydrateInstance = config.hydrateInstance,
        hydrateTextInstance = config.hydrateTextInstance,
        didNotHydrateInstance = config.didNotHydrateInstance,
        didNotFindHydratableInstance = config.didNotFindHydratableInstance,
        didNotFindHydratableTextInstance = config.didNotFindHydratableTextInstance;
    if (!(canHydrateInstance && canHydrateTextInstance && getNextHydratableSibling && getFirstHydratableChild && hydrateInstance && hydrateTextInstance && didNotHydrateInstance && didNotFindHydratableInstance && didNotFindHydratableTextInstance)) return {
        enterHydrationState: function enterHydrationState() {
            return !1;
        },
        resetHydrationState: function resetHydrationState() {},
        tryToClaimNextHydratableInstance: function tryToClaimNextHydratableInstance() {},
        prepareToHydrateHostInstance: function prepareToHydrateHostInstance() {
            invariant(!1, "Expected prepareToHydrateHostInstance() to never be called. " + "This error is likely caused by a bug in React. Please file an issue.");
        },
        prepareToHydrateHostTextInstance: function prepareToHydrateHostTextInstance() {
            invariant(!1, "Expected prepareToHydrateHostTextInstance() to never be called. " + "This error is likely caused by a bug in React. Please file an issue.");
        },
        popHydrationState: function popHydrationState(fiber) {
            return !1;
        }
    };
    var hydrationParentFiber = null,
        nextHydratableInstance = null,
        isHydrating = !1;
    function enterHydrationState(fiber) {
        var parentInstance = fiber.stateNode.containerInfo;
        return nextHydratableInstance = getFirstHydratableChild(parentInstance), hydrationParentFiber = fiber, isHydrating = !0, !0;
    }
    function deleteHydratableInstance(returnFiber, instance) {
        var childToDelete = createFiberFromHostInstanceForDeletion$1();
        childToDelete.stateNode = instance, childToDelete.return = returnFiber, childToDelete.effectTag = Deletion$2, null !== returnFiber.lastEffect ? (returnFiber.lastEffect.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
    }
    function insertNonHydratedInstance(returnFiber, fiber) {
        fiber.effectTag |= Placement$6;
    }
    function canHydrate(fiber, nextInstance) {
        switch (fiber.tag) {
            case HostComponent$8:
                var type = fiber.type,
                    props = fiber.pendingProps;
                return canHydrateInstance(nextInstance, type, props);

            case HostText$6:
                var text = fiber.pendingProps;
                return canHydrateTextInstance(nextInstance, text);

            default:
                return !1;
        }
    }
    function tryToClaimNextHydratableInstance(fiber) {
        if (isHydrating) {
            var nextInstance = nextHydratableInstance;
            if (!nextInstance) return insertNonHydratedInstance(hydrationParentFiber, fiber), isHydrating = !1, void (hydrationParentFiber = fiber);
            if (!canHydrate(fiber, nextInstance)) {
                if (!(nextInstance = getNextHydratableSibling(nextInstance)) || !canHydrate(fiber, nextInstance)) return insertNonHydratedInstance(hydrationParentFiber, fiber), isHydrating = !1, void (hydrationParentFiber = fiber);
                deleteHydratableInstance(hydrationParentFiber, nextHydratableInstance);
            }
            fiber.stateNode = nextInstance, hydrationParentFiber = fiber, nextHydratableInstance = getFirstHydratableChild(nextInstance);
        }
    }
    function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
        var instance = fiber.stateNode,
            updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber);
        return fiber.updateQueue = updatePayload, null !== updatePayload;
    }
    function prepareToHydrateHostTextInstance(fiber) {
        var textInstance = fiber.stateNode;
        return hydrateTextInstance(textInstance, fiber.memoizedProps, fiber);
    }
    function popToNextHostParent(fiber) {
        for (var parent = fiber.return; null !== parent && parent.tag !== HostComponent$8 && parent.tag !== HostRoot$8;) {
            parent = parent.return;
        }hydrationParentFiber = parent;
    }
    function popHydrationState(fiber) {
        if (fiber !== hydrationParentFiber) return !1;
        if (!isHydrating) return popToNextHostParent(fiber), isHydrating = !0, !1;
        var type = fiber.type;
        if (fiber.tag !== HostComponent$8 || "head" !== type && "body" !== type && !shouldSetTextContent(type, fiber.memoizedProps)) for (var nextInstance = nextHydratableInstance; nextInstance;) {
            deleteHydratableInstance(fiber, nextInstance), nextInstance = getNextHydratableSibling(nextInstance);
        }return popToNextHostParent(fiber), nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null, !0;
    }
    function resetHydrationState() {
        hydrationParentFiber = null, nextHydratableInstance = null, isHydrating = !1;
    }
    return {
        enterHydrationState: enterHydrationState,
        resetHydrationState: resetHydrationState,
        tryToClaimNextHydratableInstance: tryToClaimNextHydratableInstance,
        prepareToHydrateHostInstance: prepareToHydrateHostInstance,
        prepareToHydrateHostTextInstance: prepareToHydrateHostTextInstance,
        popHydrationState: popHydrationState
    };
},
    popContextProvider$1 = ReactFiberContext.popContextProvider,
    reset$1 = ReactFiberStack.reset,
    getStackAddendumByWorkInProgressFiber = ReactFiberComponentTreeHook.getStackAddendumByWorkInProgressFiber,
    logCapturedError$1 = ReactFiberErrorLogger.logCapturedError,
    ReactCurrentOwner$1 = ReactGlobalSharedState_1.ReactCurrentOwner,
    createWorkInProgress$1 = ReactFiber.createWorkInProgress,
    largerPriority$1 = ReactFiber.largerPriority,
    onCommitRoot = ReactFiberDevToolsHook.onCommitRoot,
    NoWork$2 = ReactPriorityLevel.NoWork,
    SynchronousPriority$1 = ReactPriorityLevel.SynchronousPriority,
    TaskPriority$1 = ReactPriorityLevel.TaskPriority,
    HighPriority = ReactPriorityLevel.HighPriority,
    LowPriority = ReactPriorityLevel.LowPriority,
    OffscreenPriority = ReactPriorityLevel.OffscreenPriority,
    AsyncUpdates = ReactTypeOfInternalContext.AsyncUpdates,
    PerformedWork = ReactTypeOfSideEffect.PerformedWork,
    Placement$1 = ReactTypeOfSideEffect.Placement,
    Update = ReactTypeOfSideEffect.Update,
    PlacementAndUpdate = ReactTypeOfSideEffect.PlacementAndUpdate,
    Deletion = ReactTypeOfSideEffect.Deletion,
    ContentReset = ReactTypeOfSideEffect.ContentReset,
    Callback = ReactTypeOfSideEffect.Callback,
    Err = ReactTypeOfSideEffect.Err,
    Ref = ReactTypeOfSideEffect.Ref,
    HostRoot$4 = ReactTypeOfWork.HostRoot,
    HostComponent$3 = ReactTypeOfWork.HostComponent,
    HostPortal$2 = ReactTypeOfWork.HostPortal,
    ClassComponent$4 = ReactTypeOfWork.ClassComponent,
    getUpdatePriority$1 = ReactFiberUpdateQueue.getUpdatePriority,
    _require14 = ReactFiberContext,
    resetContext$1 = _require14.resetContext,
    ReactFiberInstrumentation$1,
    timeHeuristicForUnitOfWork = 1,
    ReactFiberScheduler = function ReactFiberScheduler(config) {
    var hostContext = ReactFiberHostContext(config),
        hydrationContext = ReactFiberHydrationContext(config),
        popHostContainer = hostContext.popHostContainer,
        popHostContext = hostContext.popHostContext,
        resetHostContainer = hostContext.resetHostContainer,
        _ReactFiberBeginWork = ReactFiberBeginWork(config, hostContext, hydrationContext, scheduleUpdate, getPriorityContext),
        beginWork = _ReactFiberBeginWork.beginWork,
        beginFailedWork = _ReactFiberBeginWork.beginFailedWork,
        _ReactFiberCompleteWo = ReactFiberCompleteWork(config, hostContext, hydrationContext),
        completeWork = _ReactFiberCompleteWo.completeWork,
        _ReactFiberCommitWork = ReactFiberCommitWork(config, captureError),
        commitPlacement = _ReactFiberCommitWork.commitPlacement,
        commitDeletion = _ReactFiberCommitWork.commitDeletion,
        commitWork = _ReactFiberCommitWork.commitWork,
        commitLifeCycles = _ReactFiberCommitWork.commitLifeCycles,
        commitAttachRef = _ReactFiberCommitWork.commitAttachRef,
        commitDetachRef = _ReactFiberCommitWork.commitDetachRef,
        scheduleDeferredCallback = config.scheduleDeferredCallback,
        useSyncScheduling = config.useSyncScheduling,
        prepareForCommit = config.prepareForCommit,
        resetAfterCommit = config.resetAfterCommit,
        priorityContext = NoWork$2,
        isPerformingWork = !1,
        deadlineHasExpired = !1,
        isBatchingUpdates = !1,
        isUnbatchingUpdates = !1,
        nextUnitOfWork = null,
        nextPriorityLevel = NoWork$2,
        nextEffect = null,
        pendingCommit = null,
        nextScheduledRoot = null,
        lastScheduledRoot = null,
        isCallbackScheduled = !1,
        capturedErrors = null,
        failedBoundaries = null,
        commitPhaseBoundaries = null,
        firstUncaughtError = null,
        didFatal = !1,
        isCommitting = !1,
        isUnmounting = !1,
        NESTED_UPDATE_LIMIT = 1e3,
        nestedUpdateCount = 0,
        nextRenderedTree = null;
    function resetContextStack() {
        reset$1(), resetContext$1(), resetHostContainer();
    }
    function resetNextUnitOfWork() {
        for (; null !== nextScheduledRoot && nextScheduledRoot.current.pendingWorkPriority === NoWork$2;) {
            nextScheduledRoot.isScheduled = !1;
            var next = nextScheduledRoot.nextScheduledRoot;
            if (nextScheduledRoot.nextScheduledRoot = null, nextScheduledRoot === lastScheduledRoot) return nextScheduledRoot = null, lastScheduledRoot = null, nextPriorityLevel = NoWork$2, null;
            nextScheduledRoot = next;
        }
        for (var root = nextScheduledRoot, highestPriorityRoot = null, highestPriorityLevel = NoWork$2; null !== root;) {
            root.current.pendingWorkPriority !== NoWork$2 && (highestPriorityLevel === NoWork$2 || highestPriorityLevel > root.current.pendingWorkPriority) && (highestPriorityLevel = root.current.pendingWorkPriority, highestPriorityRoot = root), root = root.nextScheduledRoot;
        }if (null !== highestPriorityRoot) return nextPriorityLevel = highestPriorityLevel, resetContextStack(), nextUnitOfWork = createWorkInProgress$1(highestPriorityRoot.current, highestPriorityLevel), void (highestPriorityRoot !== nextRenderedTree && (nestedUpdateCount = 0, nextRenderedTree = highestPriorityRoot));
        nextPriorityLevel = NoWork$2, nextUnitOfWork = null, nextRenderedTree = null;
    }
    function commitAllHostEffects() {
        for (; null !== nextEffect;) {
            var effectTag = nextEffect.effectTag;
            if (effectTag & ContentReset && config.resetTextContent(nextEffect.stateNode), effectTag & Ref) {
                var current = nextEffect.alternate;
                null !== current && commitDetachRef(current);
            }
            switch (effectTag & ~(Callback | Err | ContentReset | Ref | PerformedWork)) {
                case Placement$1:
                    commitPlacement(nextEffect), nextEffect.effectTag &= ~Placement$1;
                    break;

                case PlacementAndUpdate:
                    commitPlacement(nextEffect), nextEffect.effectTag &= ~Placement$1;
                    var _current = nextEffect.alternate;
                    commitWork(_current, nextEffect);
                    break;

                case Update:
                    var _current2 = nextEffect.alternate;
                    commitWork(_current2, nextEffect);
                    break;

                case Deletion:
                    isUnmounting = !0, commitDeletion(nextEffect), isUnmounting = !1;
            }
            nextEffect = nextEffect.nextEffect;
        }
    }
    function commitAllLifeCycles() {
        for (; null !== nextEffect;) {
            var effectTag = nextEffect.effectTag;
            if (effectTag & (Update | Callback)) {
                var current = nextEffect.alternate;
                commitLifeCycles(current, nextEffect);
            }
            effectTag & Ref && commitAttachRef(nextEffect), effectTag & Err && commitErrorHandling(nextEffect);
            var next = nextEffect.nextEffect;
            nextEffect.nextEffect = null, nextEffect = next;
        }
    }
    function commitAllWork(finishedWork) {
        isCommitting = !0, pendingCommit = null;
        var root = finishedWork.stateNode;
        invariant(root.current !== finishedWork, "Cannot commit the same tree as before. This is probably a bug " + "related to the return field. This error is likely caused by a bug " + "in React. Please file an issue."), nextPriorityLevel !== SynchronousPriority$1 && nextPriorityLevel !== TaskPriority$1 || nestedUpdateCount++, ReactCurrentOwner$1.current = null;
        var firstEffect = void 0;
        for (finishedWork.effectTag > PerformedWork ? null !== finishedWork.lastEffect ? (finishedWork.lastEffect.nextEffect = finishedWork, firstEffect = finishedWork.firstEffect) : firstEffect = finishedWork : firstEffect = finishedWork.firstEffect, prepareForCommit(), nextEffect = firstEffect; null !== nextEffect;) {
            var didError = !1,
                _error = void 0;
            try {
                commitAllHostEffects();
            } catch (e) {
                didError = !0, _error = e;
            }
            didError && (invariant(null !== nextEffect, "Should have next effect. This error is likely caused by a bug " + "in React. Please file an issue."), captureError(nextEffect, _error), null !== nextEffect && (nextEffect = nextEffect.nextEffect));
        }
        for (resetAfterCommit(), root.current = finishedWork, nextEffect = firstEffect; null !== nextEffect;) {
            var _didError = !1,
                _error2 = void 0;
            try {
                commitAllLifeCycles();
            } catch (e) {
                _didError = !0, _error2 = e;
            }
            _didError && (invariant(null !== nextEffect, "Should have next effect. This error is likely caused by a bug " + "in React. Please file an issue."), captureError(nextEffect, _error2), null !== nextEffect && (nextEffect = nextEffect.nextEffect));
        }
        isCommitting = !1, "function" == typeof onCommitRoot && onCommitRoot(finishedWork.stateNode), !1 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onCommitWork(finishedWork), commitPhaseBoundaries && (commitPhaseBoundaries.forEach(scheduleErrorRecovery), commitPhaseBoundaries = null), resetNextUnitOfWork();
    }
    function resetWorkPriority(workInProgress, renderPriority) {
        if (!(workInProgress.pendingWorkPriority !== NoWork$2 && workInProgress.pendingWorkPriority > renderPriority)) {
            for (var newPriority = getUpdatePriority$1(workInProgress), child = workInProgress.child; null !== child;) {
                newPriority = largerPriority$1(newPriority, child.pendingWorkPriority), child = child.sibling;
            }workInProgress.pendingWorkPriority = newPriority;
        }
    }
    function completeUnitOfWork(workInProgress) {
        for (; !0;) {
            var current = workInProgress.alternate,
                next = completeWork(current, workInProgress, nextPriorityLevel),
                returnFiber = workInProgress.return,
                siblingFiber = workInProgress.sibling;
            if (resetWorkPriority(workInProgress, nextPriorityLevel), null !== next) return !1 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onCompleteWork(workInProgress), next;
            if (null !== returnFiber) {
                null === returnFiber.firstEffect && (returnFiber.firstEffect = workInProgress.firstEffect), null !== workInProgress.lastEffect && (null !== returnFiber.lastEffect && (returnFiber.lastEffect.nextEffect = workInProgress.firstEffect), returnFiber.lastEffect = workInProgress.lastEffect);
                workInProgress.effectTag > PerformedWork && (null !== returnFiber.lastEffect ? returnFiber.lastEffect.nextEffect = workInProgress : returnFiber.firstEffect = workInProgress, returnFiber.lastEffect = workInProgress);
            }
            if (!1 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onCompleteWork(workInProgress), null !== siblingFiber) return siblingFiber;
            if (null === returnFiber) return pendingCommit = workInProgress, null;
            workInProgress = returnFiber;
        }
        return null;
    }
    function performUnitOfWork(workInProgress) {
        var current = workInProgress.alternate,
            next = beginWork(current, workInProgress, nextPriorityLevel);
        return !1 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onBeginWork(workInProgress), null === next && (next = completeUnitOfWork(workInProgress)), ReactCurrentOwner$1.current = null, next;
    }
    function performFailedUnitOfWork(workInProgress) {
        var current = workInProgress.alternate,
            next = beginFailedWork(current, workInProgress, nextPriorityLevel);
        return !1 && ReactFiberInstrumentation$1.debugTool && ReactFiberInstrumentation$1.debugTool.onBeginWork(workInProgress), null === next && (next = completeUnitOfWork(workInProgress)), ReactCurrentOwner$1.current = null, next;
    }
    function performDeferredWork(deadline) {
        performWork(OffscreenPriority, deadline);
    }
    function handleCommitPhaseErrors() {
        if (null !== capturedErrors && capturedErrors.size > 0 && nextPriorityLevel === TaskPriority$1) for (; null !== nextUnitOfWork && (null !== (nextUnitOfWork = hasCapturedError(nextUnitOfWork) ? performFailedUnitOfWork(nextUnitOfWork) : performUnitOfWork(nextUnitOfWork)) || (invariant(null !== pendingCommit, "Should have a pending commit. This error is likely caused by " + "a bug in React. Please file an issue."), priorityContext = TaskPriority$1, commitAllWork(pendingCommit), priorityContext = nextPriorityLevel, null !== capturedErrors && 0 !== capturedErrors.size && nextPriorityLevel === TaskPriority$1));) {}
    }
    function workLoop(minPriorityLevel, deadline) {
        if (null !== pendingCommit ? (priorityContext = TaskPriority$1, commitAllWork(pendingCommit), handleCommitPhaseErrors()) : null === nextUnitOfWork && resetNextUnitOfWork(), !(nextPriorityLevel === NoWork$2 || nextPriorityLevel > minPriorityLevel)) {
            priorityContext = nextPriorityLevel;
            loop: do {
                if (nextPriorityLevel <= TaskPriority$1) for (; null !== nextUnitOfWork && !(null === (nextUnitOfWork = performUnitOfWork(nextUnitOfWork)) && (invariant(null !== pendingCommit, "Should have a pending commit. This error is likely caused by " + "a bug in React. Please file an issue."), priorityContext = TaskPriority$1, commitAllWork(pendingCommit), priorityContext = nextPriorityLevel, handleCommitPhaseErrors(), nextPriorityLevel === NoWork$2 || nextPriorityLevel > minPriorityLevel || nextPriorityLevel > TaskPriority$1));) {} else if (null !== deadline) for (; null !== nextUnitOfWork && !deadlineHasExpired;) {
                    if (deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
                        if (null === (nextUnitOfWork = performUnitOfWork(nextUnitOfWork))) if (invariant(null !== pendingCommit, "Should have a pending commit. This error is likely caused by " + "a bug in React. Please file an issue."), deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
                            if (priorityContext = TaskPriority$1, commitAllWork(pendingCommit), priorityContext = nextPriorityLevel, handleCommitPhaseErrors(), nextPriorityLevel === NoWork$2 || nextPriorityLevel > minPriorityLevel || nextPriorityLevel < HighPriority) break;
                        } else deadlineHasExpired = !0;
                    } else deadlineHasExpired = !0;
                }switch (nextPriorityLevel) {
                    case SynchronousPriority$1:
                    case TaskPriority$1:
                        if (nextPriorityLevel <= minPriorityLevel) continue loop;
                        break loop;

                    case HighPriority:
                    case LowPriority:
                    case OffscreenPriority:
                        if (null === deadline) break loop;
                        if (!deadlineHasExpired && nextPriorityLevel <= minPriorityLevel) continue loop;
                        break loop;

                    case NoWork$2:
                        break loop;

                    default:
                        invariant(!1, "Switch statement should be exhuastive. " + "This error is likely caused by a bug in React. Please file an issue.");
                }
            } while (!0);
        }
    }
    function performWorkCatchBlock(failedWork, boundary, minPriorityLevel, deadline) {
        unwindContexts(failedWork, boundary), nextUnitOfWork = performFailedUnitOfWork(boundary), workLoop(minPriorityLevel, deadline);
    }
    function performWork(minPriorityLevel, deadline) {
        invariant(!isPerformingWork, "performWork was called recursively. This error is likely caused " + "by a bug in React. Please file an issue."), isPerformingWork = !0;
        var previousPriorityContext = priorityContext,
            didError = !1,
            error = null;
        try {
            workLoop(minPriorityLevel, deadline);
        } catch (e) {
            didError = !0, error = e;
        }
        for (; didError;) {
            if (didFatal) {
                firstUncaughtError = error;
                break;
            }
            var failedWork = nextUnitOfWork;
            if (null !== failedWork) {
                var boundary = captureError(failedWork, error);
                if (invariant(null !== boundary, "Should have found an error boundary. This error is likely " + "caused by a bug in React. Please file an issue."), !didFatal) {
                    didError = !1, error = null;
                    try {
                        performWorkCatchBlock(failedWork, boundary, minPriorityLevel, deadline), error = null;
                    } catch (e) {
                        didError = !0, error = e;
                        continue;
                    }
                    break;
                }
            } else didFatal = !0;
        }
        priorityContext = previousPriorityContext, null !== deadline && (isCallbackScheduled = !1), nextPriorityLevel > TaskPriority$1 && !isCallbackScheduled && (scheduleDeferredCallback(performDeferredWork), isCallbackScheduled = !0);
        var errorToThrow = firstUncaughtError;
        if (isPerformingWork = !1, deadlineHasExpired = !1, didFatal = !1, firstUncaughtError = null, capturedErrors = null, failedBoundaries = null, nextRenderedTree = null, nestedUpdateCount = 0, null !== errorToThrow) throw errorToThrow;
    }
    function captureError(failedWork, error) {
        ReactCurrentOwner$1.current = null;
        var boundary = null,
            errorBoundaryFound = !1,
            willRetry = !1,
            errorBoundaryName = null;
        if (failedWork.tag === HostRoot$4) boundary = failedWork, isFailedBoundary(failedWork) && (didFatal = !0);else for (var node = failedWork.return; null !== node && null === boundary;) {
            if (node.tag === ClassComponent$4) {
                var instance = node.stateNode;
                "function" == typeof instance.componentDidCatch && (errorBoundaryFound = !0, errorBoundaryName = getComponentName_1(node), boundary = node, willRetry = !0);
            } else node.tag === HostRoot$4 && (boundary = node);
            if (isFailedBoundary(node)) {
                if (isUnmounting) return null;
                if (null !== commitPhaseBoundaries && (commitPhaseBoundaries.has(node) || null !== node.alternate && commitPhaseBoundaries.has(node.alternate))) return null;
                boundary = null, willRetry = !1;
            }
            node = node.return;
        }
        if (null !== boundary) {
            null === failedBoundaries && (failedBoundaries = new Set()), failedBoundaries.add(boundary);
            var _componentStack = getStackAddendumByWorkInProgressFiber(failedWork),
                _componentName = getComponentName_1(failedWork);
            null === capturedErrors && (capturedErrors = new Map());
            var capturedError = {
                componentName: _componentName,
                componentStack: _componentStack,
                error: error,
                errorBoundary: errorBoundaryFound ? boundary.stateNode : null,
                errorBoundaryFound: errorBoundaryFound,
                errorBoundaryName: errorBoundaryName,
                willRetry: willRetry
            };
            capturedErrors.set(boundary, capturedError);
            try {
                logCapturedError$1(capturedError);
            } catch (e) {
                console.error(e);
            }
            return isCommitting ? (null === commitPhaseBoundaries && (commitPhaseBoundaries = new Set()), commitPhaseBoundaries.add(boundary)) : scheduleErrorRecovery(boundary), boundary;
        }
        return null === firstUncaughtError && (firstUncaughtError = error), null;
    }
    function hasCapturedError(fiber) {
        return null !== capturedErrors && (capturedErrors.has(fiber) || null !== fiber.alternate && capturedErrors.has(fiber.alternate));
    }
    function isFailedBoundary(fiber) {
        return null !== failedBoundaries && (failedBoundaries.has(fiber) || null !== fiber.alternate && failedBoundaries.has(fiber.alternate));
    }
    function commitErrorHandling(effectfulFiber) {
        var capturedError = void 0;
        switch (null !== capturedErrors && (capturedError = capturedErrors.get(effectfulFiber), capturedErrors.delete(effectfulFiber), null == capturedError && null !== effectfulFiber.alternate && (effectfulFiber = effectfulFiber.alternate, capturedError = capturedErrors.get(effectfulFiber), capturedErrors.delete(effectfulFiber))), invariant(null != capturedError, "No error for given unit of work. This error is likely caused by a " + "bug in React. Please file an issue."), effectfulFiber.tag) {
            case ClassComponent$4:
                var instance = effectfulFiber.stateNode,
                    info = {
                    componentStack: capturedError.componentStack
                };
                return void instance.componentDidCatch(capturedError.error, info);

            case HostRoot$4:
                return void (null === firstUncaughtError && (firstUncaughtError = capturedError.error));

            default:
                invariant(!1, "Invalid type of work. This error is likely caused by a bug in " + "React. Please file an issue.");
        }
    }
    function unwindContexts(from, to) {
        for (var node = from; null !== node;) {
            switch (node.tag) {
                case ClassComponent$4:
                    popContextProvider$1(node);
                    break;

                case HostComponent$3:
                    popHostContext(node);
                    break;

                case HostRoot$4:
                case HostPortal$2:
                    popHostContainer(node);
            }
            if (node === to || node.alternate === to) break;
            node = node.return;
        }
    }
    function scheduleRoot(root, priorityLevel) {
        priorityLevel !== NoWork$2 && (root.isScheduled || (root.isScheduled = !0, lastScheduledRoot ? (lastScheduledRoot.nextScheduledRoot = root, lastScheduledRoot = root) : (nextScheduledRoot = root, lastScheduledRoot = root)));
    }
    function scheduleUpdate(fiber, priorityLevel) {
        return scheduleUpdateImpl(fiber, priorityLevel, !1);
    }
    function scheduleUpdateImpl(fiber, priorityLevel, isErrorRecovery) {
        nestedUpdateCount > NESTED_UPDATE_LIMIT && (didFatal = !0, invariant(!1, "Maximum update depth exceeded. This can happen when a " + "component repeatedly calls setState inside componentWillUpdate or " + "componentDidUpdate. React limits the number of nested updates to " + "prevent infinite loops.")), !isPerformingWork && priorityLevel <= nextPriorityLevel && (nextUnitOfWork = null);
        for (var node = fiber, shouldContinue = !0; null !== node && shouldContinue;) {
            if (shouldContinue = !1, (node.pendingWorkPriority === NoWork$2 || node.pendingWorkPriority > priorityLevel) && (shouldContinue = !0, node.pendingWorkPriority = priorityLevel), null !== node.alternate && (node.alternate.pendingWorkPriority === NoWork$2 || node.alternate.pendingWorkPriority > priorityLevel) && (shouldContinue = !0, node.alternate.pendingWorkPriority = priorityLevel), null === node.return) {
                if (node.tag !== HostRoot$4) return;
                if (scheduleRoot(node.stateNode, priorityLevel), !isPerformingWork) switch (priorityLevel) {
                    case SynchronousPriority$1:
                        isUnbatchingUpdates ? performWork(SynchronousPriority$1, null) : performWork(TaskPriority$1, null);
                        break;

                    case TaskPriority$1:
                        invariant(isBatchingUpdates, "Task updates can only be scheduled as a nested update or " + "inside batchedUpdates.");
                        break;

                    default:
                        isCallbackScheduled || (scheduleDeferredCallback(performDeferredWork), isCallbackScheduled = !0);
                }
            }
            node = node.return;
        }
    }
    function getPriorityContext(fiber, forceAsync) {
        var priorityLevel = priorityContext;
        return priorityLevel === NoWork$2 && (priorityLevel = !useSyncScheduling || fiber.internalContextTag & AsyncUpdates || forceAsync ? LowPriority : SynchronousPriority$1), priorityLevel === SynchronousPriority$1 && (isPerformingWork || isBatchingUpdates) ? TaskPriority$1 : priorityLevel;
    }
    function scheduleErrorRecovery(fiber) {
        scheduleUpdateImpl(fiber, TaskPriority$1, !0);
    }
    function batchedUpdates(fn, a) {
        var previousIsBatchingUpdates = isBatchingUpdates;
        isBatchingUpdates = !0;
        try {
            return fn(a);
        } finally {
            isBatchingUpdates = previousIsBatchingUpdates, isPerformingWork || isBatchingUpdates || performWork(TaskPriority$1, null);
        }
    }
    function unbatchedUpdates(fn) {
        var previousIsUnbatchingUpdates = isUnbatchingUpdates,
            previousIsBatchingUpdates = isBatchingUpdates;
        isUnbatchingUpdates = isBatchingUpdates, isBatchingUpdates = !1;
        try {
            return fn();
        } finally {
            isBatchingUpdates = previousIsBatchingUpdates, isUnbatchingUpdates = previousIsUnbatchingUpdates;
        }
    }
    function flushSync(batch) {
        var previousIsBatchingUpdates = isBatchingUpdates,
            previousPriorityContext = priorityContext;
        isBatchingUpdates = !0, priorityContext = SynchronousPriority$1;
        try {
            return batch();
        } finally {
            isBatchingUpdates = previousIsBatchingUpdates, priorityContext = previousPriorityContext, invariant(!isPerformingWork, "flushSync was called from inside a lifecycle method. It cannot be " + "called when React is already rendering."), performWork(TaskPriority$1, null);
        }
    }
    function deferredUpdates(fn) {
        var previousPriorityContext = priorityContext;
        priorityContext = LowPriority;
        try {
            return fn();
        } finally {
            priorityContext = previousPriorityContext;
        }
    }
    return {
        scheduleUpdate: scheduleUpdate,
        getPriorityContext: getPriorityContext,
        batchedUpdates: batchedUpdates,
        unbatchedUpdates: unbatchedUpdates,
        flushSync: flushSync,
        deferredUpdates: deferredUpdates
    };
},
    addTopLevelUpdate = ReactFiberUpdateQueue.addTopLevelUpdate,
    findCurrentUnmaskedContext = ReactFiberContext.findCurrentUnmaskedContext,
    isContextProvider = ReactFiberContext.isContextProvider,
    processChildContext = ReactFiberContext.processChildContext,
    createFiberRoot = ReactFiberRoot.createFiberRoot,
    HostComponent = ReactTypeOfWork.HostComponent,
    findCurrentHostFiber = ReactFiberTreeReflection.findCurrentHostFiber,
    findCurrentHostFiberWithNoPortals = ReactFiberTreeReflection.findCurrentHostFiberWithNoPortals;

function getContextForSubtree(parentComponent) {
    if (!parentComponent) return emptyObject;
    var fiber = ReactInstanceMap_1.get(parentComponent),
        parentContext = findCurrentUnmaskedContext(fiber);
    return isContextProvider(fiber) ? processChildContext(fiber, parentContext) : parentContext;
}

var ReactFiberReconciler = function ReactFiberReconciler(config) {
    var getPublicInstance = config.getPublicInstance,
        _ReactFiberScheduler = ReactFiberScheduler(config),
        scheduleUpdate = _ReactFiberScheduler.scheduleUpdate,
        getPriorityContext = _ReactFiberScheduler.getPriorityContext,
        batchedUpdates = _ReactFiberScheduler.batchedUpdates,
        unbatchedUpdates = _ReactFiberScheduler.unbatchedUpdates,
        flushSync = _ReactFiberScheduler.flushSync,
        deferredUpdates = _ReactFiberScheduler.deferredUpdates;
    function scheduleTopLevelUpdate(current, element, callback) {
        var forceAsync = ReactFeatureFlags_1.enableAsyncSubtreeAPI && null != element && null != element.type && null != element.type.prototype && !0 === element.type.prototype.unstable_isAsyncReactComponent,
            priorityLevel = getPriorityContext(current, forceAsync),
            nextState = {
            element: element
        };
        callback = void 0 === callback ? null : callback, addTopLevelUpdate(current, nextState, callback, priorityLevel), scheduleUpdate(current, priorityLevel);
    }
    return {
        createContainer: function createContainer(containerInfo) {
            return createFiberRoot(containerInfo);
        },
        updateContainer: function updateContainer(element, container, parentComponent, callback) {
            var current = container.current,
                context = getContextForSubtree(parentComponent);
            null === container.context ? container.context = context : container.pendingContext = context, scheduleTopLevelUpdate(current, element, callback);
        },
        batchedUpdates: batchedUpdates,
        unbatchedUpdates: unbatchedUpdates,
        deferredUpdates: deferredUpdates,
        flushSync: flushSync,
        getPublicRootInstance: function getPublicRootInstance(container) {
            var containerFiber = container.current;
            if (!containerFiber.child) return null;
            switch (containerFiber.child.tag) {
                case HostComponent:
                    return getPublicInstance(containerFiber.child.stateNode);

                default:
                    return containerFiber.child.stateNode;
            }
        },
        findHostInstance: function findHostInstance(fiber) {
            var hostFiber = findCurrentHostFiber(fiber);
            return null === hostFiber ? null : hostFiber.stateNode;
        },
        findHostInstanceWithNoPortals: function findHostInstanceWithNoPortals(fiber) {
            var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
            return null === hostFiber ? null : hostFiber.stateNode;
        }
    };
};

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}

var objects = {},
    uniqueID = 1,
    emptyObject$3 = {},
    ReactNativePropRegistry = function () {
    function ReactNativePropRegistry() {
        _classCallCheck(this, ReactNativePropRegistry);
    }
    return ReactNativePropRegistry.register = function (object) {
        var id = ++uniqueID;
        return objects[id] = object, id;
    }, ReactNativePropRegistry.getByID = function (id) {
        if (!id) return emptyObject$3;
        var object = objects[id];
        return object || (console.warn("Invalid style with id `" + id + "`. Skipping ..."), emptyObject$3);
    }, ReactNativePropRegistry;
}(),
    ReactNativePropRegistry_1 = ReactNativePropRegistry,
    emptyObject$2 = {},
    removedKeys = null,
    removedKeyCount = 0;

function defaultDiffer(prevProp, nextProp) {
    return "object" != typeof nextProp || null === nextProp || deepDiffer(prevProp, nextProp);
}

function resolveObject(idOrObject) {
    return "number" == typeof idOrObject ? ReactNativePropRegistry_1.getByID(idOrObject) : idOrObject;
}

function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
    if (Array.isArray(node)) for (var i = node.length; i-- && removedKeyCount > 0;) {
        restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
    } else if (node && removedKeyCount > 0) {
        var obj = resolveObject(node);
        for (var propKey in removedKeys) {
            if (removedKeys[propKey]) {
                var nextProp = obj[propKey];
                if (void 0 !== nextProp) {
                    var attributeConfig = validAttributes[propKey];
                    if (attributeConfig) {
                        if ("function" == typeof nextProp && (nextProp = !0), void 0 === nextProp && (nextProp = null), "object" != typeof attributeConfig) updatePayload[propKey] = nextProp;else if ("function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process) {
                            var nextValue = "function" == typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp;
                            updatePayload[propKey] = nextValue;
                        }
                        removedKeys[propKey] = !1, removedKeyCount--;
                    }
                }
            }
        }
    }
}

function diffNestedArrayProperty(updatePayload, prevArray, nextArray, validAttributes) {
    var i,
        minLength = prevArray.length < nextArray.length ? prevArray.length : nextArray.length;
    for (i = 0; i < minLength; i++) {
        updatePayload = diffNestedProperty(updatePayload, prevArray[i], nextArray[i], validAttributes);
    }for (; i < prevArray.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevArray[i], validAttributes);
    }for (; i < nextArray.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextArray[i], validAttributes);
    }return updatePayload;
}

function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
    return updatePayload || prevProp !== nextProp ? prevProp && nextProp ? Array.isArray(prevProp) || Array.isArray(nextProp) ? Array.isArray(prevProp) && Array.isArray(nextProp) ? diffNestedArrayProperty(updatePayload, prevProp, nextProp, validAttributes) : Array.isArray(prevProp) ? diffProperties(updatePayload, flattenStyle(prevProp), resolveObject(nextProp), validAttributes) : diffProperties(updatePayload, resolveObject(prevProp), flattenStyle(nextProp), validAttributes) : diffProperties(updatePayload, resolveObject(prevProp), resolveObject(nextProp), validAttributes) : nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload : updatePayload;
}

function addNestedProperty(updatePayload, nextProp, validAttributes) {
    if (!nextProp) return updatePayload;
    if (!Array.isArray(nextProp)) return addProperties(updatePayload, resolveObject(nextProp), validAttributes);
    for (var i = 0; i < nextProp.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
    }return updatePayload;
}

function clearNestedProperty(updatePayload, prevProp, validAttributes) {
    if (!prevProp) return updatePayload;
    if (!Array.isArray(prevProp)) return clearProperties(updatePayload, resolveObject(prevProp), validAttributes);
    for (var i = 0; i < prevProp.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
    }return updatePayload;
}

function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
    var attributeConfig, nextProp, prevProp;
    for (var propKey in nextProps) {
        if (attributeConfig = validAttributes[propKey]) if (prevProp = prevProps[propKey], nextProp = nextProps[propKey], "function" == typeof nextProp && (nextProp = !0, "function" == typeof prevProp && (prevProp = !0)), void 0 === nextProp && (nextProp = null, void 0 === prevProp && (prevProp = null)), removedKeys && (removedKeys[propKey] = !1), updatePayload && void 0 !== updatePayload[propKey]) {
            if ("object" != typeof attributeConfig) updatePayload[propKey] = nextProp;else if ("function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process) {
                var nextValue = "function" == typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp;
                updatePayload[propKey] = nextValue;
            }
        } else if (prevProp !== nextProp) if ("object" != typeof attributeConfig) defaultDiffer(prevProp, nextProp) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp);else if ("function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process) {
            var shouldUpdate = void 0 === prevProp || ("function" == typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : defaultDiffer(prevProp, nextProp));
            shouldUpdate && (nextValue = "function" == typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = nextValue);
        } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), removedKeyCount > 0 && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
    }for (propKey in prevProps) {
        void 0 === nextProps[propKey] && (attributeConfig = validAttributes[propKey]) && (updatePayload && void 0 !== updatePayload[propKey] || void 0 !== (prevProp = prevProps[propKey]) && ("object" != typeof attributeConfig || "function" == typeof attributeConfig.diff || "function" == typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[propKey] = null, removedKeys || (removedKeys = {}), removedKeys[propKey] || (removedKeys[propKey] = !0, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig)));
    }return updatePayload;
}

function addProperties(updatePayload, props, validAttributes) {
    return diffProperties(updatePayload, emptyObject$2, props, validAttributes);
}

function clearProperties(updatePayload, prevProps, validAttributes) {
    return diffProperties(updatePayload, prevProps, emptyObject$2, validAttributes);
}

var ReactNativeAttributePayload = {
    create: function create(props, validAttributes) {
        return addProperties(null, props, validAttributes);
    },
    diff: function diff(prevProps, nextProps, validAttributes) {
        return diffProperties(null, prevProps, nextProps, validAttributes);
    }
},
    ReactNativeAttributePayload_1 = ReactNativeAttributePayload;

function mountSafeCallback$1(context, callback) {
    return function () {
        if (callback) {
            if ("boolean" == typeof context.__isMounted) {
                if (!context.__isMounted) return;
            } else if ("function" == typeof context.isMounted && !context.isMounted()) return;
            return callback.apply(context, arguments);
        }
    };
}

function throwOnStylesProp(component, props) {
    if (void 0 !== props.styles) {
        var owner = component._owner || null,
            name = component.constructor.displayName,
            msg = "`styles` is not a supported property of `" + name + "`, did " + "you mean `style` (singular)?";
        throw owner && owner.constructor && owner.constructor.displayName && (msg += "\n\nCheck the `" + owner.constructor.displayName + "` parent " + " component."), new Error(msg);
    }
}

function warnForStyleProps$1(props, validAttributes) {
    for (var key in validAttributes.style) {
        validAttributes[key] || void 0 === props[key] || console.error("You are setting the style `{ " + key + ": ... }` as a prop. You " + "should nest it in a style object. " + "E.g. `{ style: { " + key + ": ... } }`");
    }
}

var NativeMethodsMixinUtils = {
    mountSafeCallback: mountSafeCallback$1,
    throwOnStylesProp: throwOnStylesProp,
    warnForStyleProps: warnForStyleProps$1
};

function _classCallCheck$1(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}

var mountSafeCallback = NativeMethodsMixinUtils.mountSafeCallback,
    ReactNativeFiberHostComponent = function () {
    function ReactNativeFiberHostComponent(tag, viewConfig) {
        _classCallCheck$1(this, ReactNativeFiberHostComponent), this._nativeTag = tag, this._children = [], this.viewConfig = viewConfig;
    }
    return ReactNativeFiberHostComponent.prototype.blur = function () {
        TextInputState.blurTextInput(this._nativeTag);
    }, ReactNativeFiberHostComponent.prototype.focus = function () {
        TextInputState.focusTextInput(this._nativeTag);
    }, ReactNativeFiberHostComponent.prototype.measure = function (callback) {
        UIManager.measure(this._nativeTag, mountSafeCallback(this, callback));
    }, ReactNativeFiberHostComponent.prototype.measureInWindow = function (callback) {
        UIManager.measureInWindow(this._nativeTag, mountSafeCallback(this, callback));
    }, ReactNativeFiberHostComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
        UIManager.measureLayout(this._nativeTag, relativeToNativeNode, mountSafeCallback(this, onFail), mountSafeCallback(this, onSuccess));
    }, ReactNativeFiberHostComponent.prototype.setNativeProps = function (nativeProps) {
        var updatePayload = ReactNativeAttributePayload_1.create(nativeProps, this.viewConfig.validAttributes);
        null != updatePayload && UIManager.updateView(this._nativeTag, this.viewConfig.uiViewClassName, updatePayload);
    }, ReactNativeFiberHostComponent;
}(),
    ReactNativeFiberHostComponent_1 = ReactNativeFiberHostComponent,
    INITIAL_TAG_COUNT = 1,
    ReactNativeTagHandles = {
    tagsStartAt: INITIAL_TAG_COUNT,
    tagCount: INITIAL_TAG_COUNT,
    allocateTag: function allocateTag() {
        for (; this.reactTagIsNativeTopRootID(ReactNativeTagHandles.tagCount);) {
            ReactNativeTagHandles.tagCount++;
        }var tag = ReactNativeTagHandles.tagCount;
        return ReactNativeTagHandles.tagCount++, tag;
    },
    assertRootTag: function assertRootTag(tag) {
        invariant(this.reactTagIsNativeTopRootID(tag), "Expect a native root tag, instead got %s", tag);
    },
    reactTagIsNativeTopRootID: function reactTagIsNativeTopRootID(reactTag) {
        return reactTag % 10 == 1;
    }
},
    ReactNativeTagHandles_1 = ReactNativeTagHandles,
    viewConfigCallbacks = new Map(),
    viewConfigs = new Map(),
    ReactNativeViewConfigRegistry = {
    register: function register(name, callback) {
        return invariant(!viewConfigCallbacks.has(name), "Tried to register two views with the same name %s", name), viewConfigCallbacks.set(name, callback), name;
    },
    get: function get(name) {
        var viewConfig = void 0;
        if (viewConfigs.has(name)) viewConfig = viewConfigs.get(name);else {
            var callback = viewConfigCallbacks.get(name);
            invariant("function" == typeof callback, "View config not found for name %s", name), viewConfigCallbacks.set(name, null), viewConfig = callback(), viewConfigs.set(name, viewConfig);
        }
        return invariant(viewConfig, "View config not found for name %s", name), viewConfig;
    }
},
    ReactNativeViewConfigRegistry_1 = ReactNativeViewConfigRegistry,
    precacheFiberNode$1 = ReactNativeComponentTree_1.precacheFiberNode,
    uncacheFiberNode$1 = ReactNativeComponentTree_1.uncacheFiberNode,
    updateFiberProps$1 = ReactNativeComponentTree_1.updateFiberProps;

function recursivelyUncacheFiberNode(node) {
    "number" == typeof node ? uncacheFiberNode$1(node) : (uncacheFiberNode$1(node._nativeTag), node._children.forEach(recursivelyUncacheFiberNode));
}

var NativeRenderer = ReactFiberReconciler({
    appendChild: function appendChild(parentInstance, child) {
        var childTag = "number" == typeof child ? child : child._nativeTag,
            children = parentInstance._children,
            index = children.indexOf(child);
        index >= 0 ? (children.splice(index, 1), children.push(child), UIManager.manageChildren(parentInstance._nativeTag, [index], [children.length - 1], [], [], [])) : (children.push(child), UIManager.manageChildren(parentInstance._nativeTag, [], [], [childTag], [children.length - 1], []));
    },
    appendChildToContainer: function appendChildToContainer(parentInstance, child) {
        var childTag = "number" == typeof child ? child : child._nativeTag;
        UIManager.setChildren(parentInstance, [childTag]);
    },
    appendInitialChild: function appendInitialChild(parentInstance, child) {
        parentInstance._children.push(child);
    },
    commitTextUpdate: function commitTextUpdate(textInstance, oldText, newText) {
        UIManager.updateView(textInstance, "RCTRawText", {
            text: newText
        });
    },
    commitMount: function commitMount(instance, type, newProps, internalInstanceHandle) {},
    commitUpdate: function commitUpdate(instance, updatePayloadTODO, type, oldProps, newProps, internalInstanceHandle) {
        var viewConfig = instance.viewConfig;
        updateFiberProps$1(instance._nativeTag, newProps);
        var updatePayload = ReactNativeAttributePayload_1.diff(oldProps, newProps, viewConfig.validAttributes);
        null != updatePayload && UIManager.updateView(instance._nativeTag, viewConfig.uiViewClassName, updatePayload);
    },
    createInstance: function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
        var tag = ReactNativeTagHandles_1.allocateTag(),
            viewConfig = ReactNativeViewConfigRegistry_1.get(type),
            updatePayload = ReactNativeAttributePayload_1.create(props, viewConfig.validAttributes);
        UIManager.createView(tag, viewConfig.uiViewClassName, rootContainerInstance, updatePayload);
        var component = new ReactNativeFiberHostComponent_1(tag, viewConfig);
        return precacheFiberNode$1(internalInstanceHandle, tag), updateFiberProps$1(tag, props), component;
    },
    createTextInstance: function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
        var tag = ReactNativeTagHandles_1.allocateTag();
        return UIManager.createView(tag, "RCTRawText", rootContainerInstance, {
            text: text
        }), precacheFiberNode$1(internalInstanceHandle, tag), tag;
    },
    finalizeInitialChildren: function finalizeInitialChildren(parentInstance, type, props, rootContainerInstance) {
        if (0 === parentInstance._children.length) return !1;
        var nativeTags = parentInstance._children.map(function (child) {
            return "number" == typeof child ? child : child._nativeTag;
        });
        return UIManager.setChildren(parentInstance._nativeTag, nativeTags), !1;
    },
    getRootHostContext: function getRootHostContext() {
        return emptyObject;
    },
    getChildHostContext: function getChildHostContext() {
        return emptyObject;
    },
    getPublicInstance: function getPublicInstance(instance) {
        return instance;
    },
    insertBefore: function insertBefore(parentInstance, child, beforeChild) {
        var children = parentInstance._children,
            index = children.indexOf(child);
        if (index >= 0) {
            children.splice(index, 1);
            var beforeChildIndex = children.indexOf(beforeChild);
            children.splice(beforeChildIndex, 0, child), UIManager.manageChildren(parentInstance._nativeTag, [index], [beforeChildIndex], [], [], []);
        } else {
            var _beforeChildIndex = children.indexOf(beforeChild);
            children.splice(_beforeChildIndex, 0, child);
            var childTag = "number" == typeof child ? child : child._nativeTag;
            UIManager.manageChildren(parentInstance._nativeTag, [], [], [childTag], [_beforeChildIndex], []);
        }
    },
    insertInContainerBefore: function insertInContainerBefore(parentInstance, child, beforeChild) {
        invariant("number" != typeof parentInstance, "Container does not support insertBefore operation");
    },
    prepareForCommit: function prepareForCommit() {},
    prepareUpdate: function prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, hostContext) {
        return emptyObject;
    },
    removeChild: function removeChild(parentInstance, child) {
        recursivelyUncacheFiberNode(child);
        var children = parentInstance._children,
            index = children.indexOf(child);
        children.splice(index, 1), UIManager.manageChildren(parentInstance._nativeTag, [], [], [], [], [index]);
    },
    removeChildFromContainer: function removeChildFromContainer(parentInstance, child) {
        recursivelyUncacheFiberNode(child), UIManager.manageChildren(parentInstance, [], [], [], [], [0]);
    },
    resetAfterCommit: function resetAfterCommit() {},
    resetTextContent: function resetTextContent(instance) {},
    shouldDeprioritizeSubtree: function shouldDeprioritizeSubtree(type, props) {
        return !1;
    },
    scheduleDeferredCallback: commonjsGlobal.requestIdleCallback,
    shouldSetTextContent: function shouldSetTextContent(type, props) {
        return !1;
    },
    useSyncScheduling: !0
}),
    ReactNativeFiberRenderer = NativeRenderer,
    getInspectorDataForViewTag = void 0;

getInspectorDataForViewTag = function getInspectorDataForViewTag() {
    invariant(!1, "getInspectorDataForViewTag() is not available in production");
};

var ReactNativeFiberInspector = {
    getInspectorDataForViewTag: getInspectorDataForViewTag
},
    ReactVersion = "16.0.0";

function findNodeHandle(componentOrHandle) {
    if (null == componentOrHandle) return null;
    if ("number" == typeof componentOrHandle) return componentOrHandle;
    var component = componentOrHandle,
        internalInstance = ReactInstanceMap_1.get(component);
    return internalInstance ? ReactNativeFiberRenderer.findHostInstance(internalInstance) : component || (invariant("object" == typeof component && "_nativeTag" in component || null != component.render && "function" == typeof component.render, "findNodeHandle(...): Argument is not a component " + "(type: %s, keys: %s)", typeof component, Object.keys(component)), void invariant(!1, "findNodeHandle(...): Unable to find node handle for unmounted " + "component."));
}

var findNodeHandle_1 = findNodeHandle,
    findNumericNodeHandle = function findNumericNodeHandle(componentOrHandle) {
    var instance = findNodeHandle_1(componentOrHandle);
    return null == instance || "number" == typeof instance ? instance : instance._nativeTag;
},
    eventPluginOrder = null,
    namesToPlugins = {};

function recomputePluginOrdering() {
    if (eventPluginOrder) for (var pluginName in namesToPlugins) {
        var pluginModule = namesToPlugins[pluginName],
            pluginIndex = eventPluginOrder.indexOf(pluginName);
        if (invariant(pluginIndex > -1, "EventPluginRegistry: Cannot inject event plugins that do not exist in " + "the plugin ordering, `%s`.", pluginName), !EventPluginRegistry.plugins[pluginIndex]) {
            invariant(pluginModule.extractEvents, "EventPluginRegistry: Event plugins must implement an `extractEvents` " + "method, but `%s` does not.", pluginName), EventPluginRegistry.plugins[pluginIndex] = pluginModule;
            var publishedEvents = pluginModule.eventTypes;
            for (var eventName in publishedEvents) {
                invariant(publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName), "EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.", eventName, pluginName);
            }
        }
    }
}

function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
    invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName), "EventPluginHub: More than one plugin attempted to publish the same " + "event name, `%s`.", eventName), EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
    var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
    if (phasedRegistrationNames) {
        for (var phaseName in phasedRegistrationNames) {
            if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
                var phasedRegistrationName = phasedRegistrationNames[phaseName];
                publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
            }
        }return !0;
    }
    return !!dispatchConfig.registrationName && (publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName), !0);
}

function publishRegistrationName(registrationName, pluginModule, eventName) {
    invariant(!EventPluginRegistry.registrationNameModules[registrationName], "EventPluginHub: More than one plugin attempted to publish the same " + "registration name, `%s`.", registrationName), EventPluginRegistry.registrationNameModules[registrationName] = pluginModule, EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;
}

var EventPluginRegistry = {
    plugins: [],
    eventNameDispatchConfigs: {},
    registrationNameModules: {},
    registrationNameDependencies: {},
    possibleRegistrationNames: null,
    injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
        invariant(!eventPluginOrder, "EventPluginRegistry: Cannot inject event plugin ordering more than " + "once. You are likely trying to load more than one copy of React."), eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder), recomputePluginOrdering();
    },
    injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
        var isOrderingDirty = !1;
        for (var pluginName in injectedNamesToPlugins) {
            if (injectedNamesToPlugins.hasOwnProperty(pluginName)) {
                var pluginModule = injectedNamesToPlugins[pluginName];
                namesToPlugins.hasOwnProperty(pluginName) && namesToPlugins[pluginName] === pluginModule || (invariant(!namesToPlugins[pluginName], "EventPluginRegistry: Cannot inject two different event plugins " + "using the same name, `%s`.", pluginName), namesToPlugins[pluginName] = pluginModule, isOrderingDirty = !0);
            }
        }isOrderingDirty && recomputePluginOrdering();
    }
},
    EventPluginRegistry_1 = EventPluginRegistry;

function accumulateInto(current, next) {
    return invariant(null != next, "accumulateInto(...): Accumulated items must not be null or undefined."), null == current ? next : Array.isArray(current) ? Array.isArray(next) ? (current.push.apply(current, next), current) : (current.push(next), current) : Array.isArray(next) ? [current].concat(next) : [current, next];
}

var accumulateInto_1 = accumulateInto;

function forEachAccumulated(arr, cb, scope) {
    Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
}

var forEachAccumulated_1 = forEachAccumulated,
    eventQueue = null,
    executeDispatchesAndRelease = function executeDispatchesAndRelease(event, simulated) {
    event && (EventPluginUtils_1.executeDispatchesInOrder(event, simulated), event.isPersistent() || event.constructor.release(event));
},
    executeDispatchesAndReleaseSimulated = function executeDispatchesAndReleaseSimulated(e) {
    return executeDispatchesAndRelease(e, !0);
},
    executeDispatchesAndReleaseTopLevel = function executeDispatchesAndReleaseTopLevel(e) {
    return executeDispatchesAndRelease(e, !1);
};

function isInteractive(tag) {
    return "button" === tag || "input" === tag || "select" === tag || "textarea" === tag;
}

function shouldPreventMouseEvent(name, type, props) {
    switch (name) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
            return !(!props.disabled || !isInteractive(type));

        default:
            return !1;
    }
}

var EventPluginHub = {
    injection: {
        injectEventPluginOrder: EventPluginRegistry_1.injectEventPluginOrder,
        injectEventPluginsByName: EventPluginRegistry_1.injectEventPluginsByName
    },
    getListener: function getListener(inst, registrationName) {
        var listener,
            stateNode = inst.stateNode;
        if (!stateNode) return null;
        var props = EventPluginUtils_1.getFiberCurrentPropsFromNode(stateNode);
        return props ? (listener = props[registrationName], shouldPreventMouseEvent(registrationName, inst.type, props) ? null : (invariant(!listener || "function" == typeof listener, "Expected `%s` listener to be a function, instead got a value of `%s` type.", registrationName, typeof listener), listener)) : null;
    },
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        for (var events, plugins = EventPluginRegistry_1.plugins, i = 0; i < plugins.length; i++) {
            var possiblePlugin = plugins[i];
            if (possiblePlugin) {
                var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
                extractedEvents && (events = accumulateInto_1(events, extractedEvents));
            }
        }
        return events;
    },
    enqueueEvents: function enqueueEvents(events) {
        events && (eventQueue = accumulateInto_1(eventQueue, events));
    },
    processEventQueue: function processEventQueue(simulated) {
        var processingEventQueue = eventQueue;
        eventQueue = null, simulated ? forEachAccumulated_1(processingEventQueue, executeDispatchesAndReleaseSimulated) : forEachAccumulated_1(processingEventQueue, executeDispatchesAndReleaseTopLevel), invariant(!eventQueue, "processEventQueue(): Additional events were enqueued while processing " + "an event queue. Support for this has not yet been implemented."), ReactErrorUtils_1.rethrowCaughtError();
    }
},
    EventPluginHub_1 = EventPluginHub,
    HostComponent$10 = ReactTypeOfWork.HostComponent;

function getParent(inst) {
    do {
        inst = inst.return;
    } while (inst && inst.tag !== HostComponent$10);
    return inst || null;
}

function getLowestCommonAncestor(instA, instB) {
    for (var depthA = 0, tempA = instA; tempA; tempA = getParent(tempA)) {
        depthA++;
    }for (var depthB = 0, tempB = instB; tempB; tempB = getParent(tempB)) {
        depthB++;
    }for (; depthA - depthB > 0;) {
        instA = getParent(instA), depthA--;
    }for (; depthB - depthA > 0;) {
        instB = getParent(instB), depthB--;
    }for (var depth = depthA; depth--;) {
        if (instA === instB || instA === instB.alternate) return instA;
        instA = getParent(instA), instB = getParent(instB);
    }
    return null;
}

function isAncestor(instA, instB) {
    for (; instB;) {
        if (instA === instB || instA === instB.alternate) return !0;
        instB = getParent(instB);
    }
    return !1;
}

function getParentInstance(inst) {
    return getParent(inst);
}

function traverseTwoPhase(inst, fn, arg) {
    for (var path = []; inst;) {
        path.push(inst), inst = getParent(inst);
    }var i;
    for (i = path.length; i-- > 0;) {
        fn(path[i], "captured", arg);
    }for (i = 0; i < path.length; i++) {
        fn(path[i], "bubbled", arg);
    }
}

function traverseEnterLeave(from, to, fn, argFrom, argTo) {
    for (var common = from && to ? getLowestCommonAncestor(from, to) : null, pathFrom = []; from && from !== common;) {
        pathFrom.push(from), from = getParent(from);
    }for (var pathTo = []; to && to !== common;) {
        pathTo.push(to), to = getParent(to);
    }var i;
    for (i = 0; i < pathFrom.length; i++) {
        fn(pathFrom[i], "bubbled", argFrom);
    }for (i = pathTo.length; i-- > 0;) {
        fn(pathTo[i], "captured", argTo);
    }
}

var ReactTreeTraversal = {
    isAncestor: isAncestor,
    getLowestCommonAncestor: getLowestCommonAncestor,
    getParentInstance: getParentInstance,
    traverseTwoPhase: traverseTwoPhase,
    traverseEnterLeave: traverseEnterLeave
},
    getListener = EventPluginHub_1.getListener;

function listenerAtPhase(inst, event, propagationPhase) {
    var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
    return getListener(inst, registrationName);
}

function accumulateDirectionalDispatches(inst, phase, event) {
    var listener = listenerAtPhase(inst, event, phase);
    listener && (event._dispatchListeners = accumulateInto_1(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto_1(event._dispatchInstances, inst));
}

function accumulateTwoPhaseDispatchesSingle(event) {
    event && event.dispatchConfig.phasedRegistrationNames && ReactTreeTraversal.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
}

function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
        var targetInst = event._targetInst,
            parentInst = targetInst ? ReactTreeTraversal.getParentInstance(targetInst) : null;
        ReactTreeTraversal.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
    }
}

function accumulateDispatches(inst, ignoredDirection, event) {
    if (inst && event && event.dispatchConfig.registrationName) {
        var registrationName = event.dispatchConfig.registrationName,
            listener = getListener(inst, registrationName);
        listener && (event._dispatchListeners = accumulateInto_1(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto_1(event._dispatchInstances, inst));
    }
}

function accumulateDirectDispatchesSingle(event) {
    event && event.dispatchConfig.registrationName && accumulateDispatches(event._targetInst, null, event);
}

function accumulateTwoPhaseDispatches(events) {
    forEachAccumulated_1(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
    forEachAccumulated_1(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
    ReactTreeTraversal.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
    forEachAccumulated_1(events, accumulateDirectDispatchesSingle);
}

var EventPropagators = {
    accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
    accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
    accumulateDirectDispatches: accumulateDirectDispatches,
    accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
},
    EventPropagators_1 = EventPropagators,
    EVENT_POOL_SIZE = 10,
    shouldBeReleasedProperties = ["dispatchConfig", "_targetInst", "nativeEvent", "isDefaultPrevented", "isPropagationStopped", "_dispatchListeners", "_dispatchInstances"],
    EventInterface = {
    type: null,
    target: null,
    currentTarget: emptyFunction.thatReturnsNull,
    eventPhase: null,
    bubbles: null,
    cancelable: null,
    timeStamp: function timeStamp(event) {
        return event.timeStamp || Date.now();
    },
    defaultPrevented: null,
    isTrusted: null
};

function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
    this.dispatchConfig = dispatchConfig, this._targetInst = targetInst, this.nativeEvent = nativeEvent;
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
        if (Interface.hasOwnProperty(propName)) {
            var normalize = Interface[propName];
            normalize ? this[propName] = normalize(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName];
        }
    }var defaultPrevented = null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : !1 === nativeEvent.returnValue;
    return this.isDefaultPrevented = defaultPrevented ? emptyFunction.thatReturnsTrue : emptyFunction.thatReturnsFalse, this.isPropagationStopped = emptyFunction.thatReturnsFalse, this;
}

babelHelpers.extends(SyntheticEvent.prototype, {
    preventDefault: function preventDefault() {
        this.defaultPrevented = !0;
        var event = this.nativeEvent;
        event && (event.preventDefault ? event.preventDefault() : "unknown" != typeof event.returnValue && (event.returnValue = !1), this.isDefaultPrevented = emptyFunction.thatReturnsTrue);
    },
    stopPropagation: function stopPropagation() {
        var event = this.nativeEvent;
        event && (event.stopPropagation ? event.stopPropagation() : "unknown" != typeof event.cancelBubble && (event.cancelBubble = !0), this.isPropagationStopped = emptyFunction.thatReturnsTrue);
    },
    persist: function persist() {
        this.isPersistent = emptyFunction.thatReturnsTrue;
    },
    isPersistent: emptyFunction.thatReturnsFalse,
    destructor: function destructor() {
        var Interface = this.constructor.Interface;
        for (var propName in Interface) {
            this[propName] = null;
        }for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
            this[shouldBeReleasedProperties[i]] = null;
        }
    }
}), SyntheticEvent.Interface = EventInterface, SyntheticEvent.augmentClass = function (Class, Interface) {
    var Super = this,
        E = function E() {};
    E.prototype = Super.prototype;
    var prototype = new E();
    babelHelpers.extends(prototype, Class.prototype), Class.prototype = prototype, Class.prototype.constructor = Class, Class.Interface = babelHelpers.extends({}, Super.Interface, Interface), Class.augmentClass = Super.augmentClass, addEventPoolingTo(Class);
}, addEventPoolingTo(SyntheticEvent);

var SyntheticEvent_1 = SyntheticEvent;

function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
    var EventConstructor = this;
    if (EventConstructor.eventPool.length) {
        var instance = EventConstructor.eventPool.pop();
        return EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst), instance;
    }
    return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);
}

function releasePooledEvent(event) {
    var EventConstructor = this;
    invariant(event instanceof EventConstructor, "Trying to release an event instance  into a pool of a different type."), event.destructor(), EventConstructor.eventPool.length < EVENT_POOL_SIZE && EventConstructor.eventPool.push(event);
}

function addEventPoolingTo(EventConstructor) {
    EventConstructor.eventPool = [], EventConstructor.getPooled = getPooledEvent, EventConstructor.release = releasePooledEvent;
}

var customBubblingEventTypes = {},
    customDirectEventTypes = {},
    ReactNativeBridgeEventPlugin = {
    eventTypes: {},
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
            directDispatchConfig = customDirectEventTypes[topLevelType];
        invariant(bubbleDispatchConfig || directDispatchConfig, 'Unsupported top level event type "%s" dispatched', topLevelType);
        var event = SyntheticEvent_1.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
        if (bubbleDispatchConfig) EventPropagators_1.accumulateTwoPhaseDispatches(event);else {
            if (!directDispatchConfig) return null;
            EventPropagators_1.accumulateDirectDispatches(event);
        }
        return event;
    },
    processEventTypes: function processEventTypes(viewConfig) {
        var bubblingEventTypes = viewConfig.bubblingEventTypes,
            directEventTypes = viewConfig.directEventTypes;
        if (null != bubblingEventTypes) for (var _topLevelType in bubblingEventTypes) {
            null == customBubblingEventTypes[_topLevelType] && (ReactNativeBridgeEventPlugin.eventTypes[_topLevelType] = customBubblingEventTypes[_topLevelType] = bubblingEventTypes[_topLevelType]);
        }if (null != directEventTypes) for (var _topLevelType2 in directEventTypes) {
            null == customDirectEventTypes[_topLevelType2] && (ReactNativeBridgeEventPlugin.eventTypes[_topLevelType2] = customDirectEventTypes[_topLevelType2] = directEventTypes[_topLevelType2]);
        }
    }
},
    ReactNativeBridgeEventPlugin_1 = ReactNativeBridgeEventPlugin;

function runEventQueueInBatch(events) {
    EventPluginHub_1.enqueueEvents(events), EventPluginHub_1.processEventQueue(!1);
}

var ReactEventEmitterMixin = {
    handleTopLevel: function handleTopLevel(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        runEventQueueInBatch(EventPluginHub_1.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget));
    }
},
    ReactEventEmitterMixin_1 = ReactEventEmitterMixin,
    EMPTY_NATIVE_EVENT = {},
    touchSubsequence = function touchSubsequence(touches, indices) {
    for (var ret = [], i = 0; i < indices.length; i++) {
        ret.push(touches[indices[i]]);
    }return ret;
},
    removeTouchesAtIndices = function removeTouchesAtIndices(touches, indices) {
    for (var rippedOut = [], temp = touches, i = 0; i < indices.length; i++) {
        var index = indices[i];
        rippedOut.push(touches[index]), temp[index] = null;
    }
    for (var fillAt = 0, j = 0; j < temp.length; j++) {
        var cur = temp[j];
        null !== cur && (temp[fillAt++] = cur);
    }
    return temp.length = fillAt, rippedOut;
},
    ReactNativeEventEmitter = babelHelpers.extends({}, ReactEventEmitterMixin_1, {
    registrationNames: EventPluginRegistry_1.registrationNameModules,
    getListener: EventPluginHub_1.getListener,
    _receiveRootNodeIDEvent: function _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {
        var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT,
            inst = ReactNativeComponentTree_1.getInstanceFromNode(rootNodeID);
        ReactGenericBatching_1.batchedUpdates(function () {
            ReactNativeEventEmitter.handleTopLevel(topLevelType, inst, nativeEvent, nativeEvent.target);
        });
    },
    receiveEvent: function receiveEvent(rootNodeID, topLevelType, nativeEventParam) {
        ReactNativeEventEmitter._receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);
    },
    receiveTouches: function receiveTouches(eventTopLevelType, touches, changedIndices) {
        for (var changedTouches = "topTouchEnd" === eventTopLevelType || "topTouchCancel" === eventTopLevelType ? removeTouchesAtIndices(touches, changedIndices) : touchSubsequence(touches, changedIndices), jj = 0; jj < changedTouches.length; jj++) {
            var touch = changedTouches[jj];
            touch.changedTouches = changedTouches, touch.touches = touches;
            var nativeEvent = touch,
                rootNodeID = null,
                target = nativeEvent.target;
            null !== target && void 0 !== target && (target < ReactNativeTagHandles_1.tagsStartAt || (rootNodeID = target)), ReactNativeEventEmitter._receiveRootNodeIDEvent(rootNodeID, eventTopLevelType, nativeEvent);
        }
    }
}),
    ReactNativeEventEmitter_1 = ReactNativeEventEmitter,
    ReactNativeEventPluginOrder = ["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"],
    ReactNativeEventPluginOrder_1 = ReactNativeEventPluginOrder,
    ReactNativeGlobalResponderHandler = {
    onChange: function onChange(from, to, blockNativeResponder) {
        if (null !== to) {
            var tag = to.stateNode._nativeTag;
            UIManager.setJSResponder(tag, blockNativeResponder);
        } else UIManager.clearJSResponder();
    }
},
    ReactNativeGlobalResponderHandler_1 = ReactNativeGlobalResponderHandler,
    ResponderEventInterface = {
    touchHistory: function touchHistory(nativeEvent) {
        return null;
    }
};

function ResponderSyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent_1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent_1.augmentClass(ResponderSyntheticEvent, ResponderEventInterface);

var ResponderSyntheticEvent_1 = ResponderSyntheticEvent,
    isEndish$2 = EventPluginUtils_1.isEndish,
    isMoveish$2 = EventPluginUtils_1.isMoveish,
    isStartish$2 = EventPluginUtils_1.isStartish,
    MAX_TOUCH_BANK = 20,
    touchBank = [],
    touchHistory = {
    touchBank: touchBank,
    numberActiveTouches: 0,
    indexOfSingleActiveTouch: -1,
    mostRecentTimeStamp: 0
};

function timestampForTouch(touch) {
    return touch.timeStamp || touch.timestamp;
}

function createTouchRecord(touch) {
    return {
        touchActive: !0,
        startPageX: touch.pageX,
        startPageY: touch.pageY,
        startTimeStamp: timestampForTouch(touch),
        currentPageX: touch.pageX,
        currentPageY: touch.pageY,
        currentTimeStamp: timestampForTouch(touch),
        previousPageX: touch.pageX,
        previousPageY: touch.pageY,
        previousTimeStamp: timestampForTouch(touch)
    };
}

function resetTouchRecord(touchRecord, touch) {
    touchRecord.touchActive = !0, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch);
}

function getTouchIdentifier(_ref) {
    var identifier = _ref.identifier;
    return invariant(null != identifier, "Touch object is missing identifier."), identifier;
}

function recordTouchStart(touch) {
    var identifier = getTouchIdentifier(touch),
        touchRecord = touchBank[identifier];
    touchRecord ? resetTouchRecord(touchRecord, touch) : touchBank[identifier] = createTouchRecord(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
}

function recordTouchMove(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = !0, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : console.error("Cannot record touch move without a touch start.\n" + "Touch Move: %s\n", "Touch Bank: %s", printTouch(touch), printTouchBank());
}

function recordTouchEnd(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = !1, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : console.error("Cannot record touch end without a touch start.\n" + "Touch End: %s\n", "Touch Bank: %s", printTouch(touch), printTouchBank());
}

function printTouch(touch) {
    return JSON.stringify({
        identifier: touch.identifier,
        pageX: touch.pageX,
        pageY: touch.pageY,
        timestamp: timestampForTouch(touch)
    });
}

function printTouchBank() {
    var printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));
    return touchBank.length > MAX_TOUCH_BANK && (printed += " (original size: " + touchBank.length + ")"), printed;
}

var ResponderTouchHistoryStore = {
    recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
        if (isMoveish$2(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove);else if (isStartish$2(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier);else if (isEndish$2(topLevelType) && (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches)) for (var i = 0; i < touchBank.length; i++) {
            var touchTrackToCheck = touchBank[i];
            if (null != touchTrackToCheck && touchTrackToCheck.touchActive) {
                touchHistory.indexOfSingleActiveTouch = i;
                break;
            }
        }
    },
    touchHistory: touchHistory
},
    ResponderTouchHistoryStore_1 = ResponderTouchHistoryStore;

function accumulate(current, next) {
    return invariant(null != next, "accumulate(...): Accumulated items must be not be null or undefined."), null == current ? next : Array.isArray(current) ? current.concat(next) : Array.isArray(next) ? [current].concat(next) : [current, next];
}

var accumulate_1 = accumulate,
    isStartish$1 = EventPluginUtils_1.isStartish,
    isMoveish$1 = EventPluginUtils_1.isMoveish,
    isEndish$1 = EventPluginUtils_1.isEndish,
    executeDirectDispatch$1 = EventPluginUtils_1.executeDirectDispatch,
    hasDispatches$1 = EventPluginUtils_1.hasDispatches,
    executeDispatchesInOrderStopAtTrue$1 = EventPluginUtils_1.executeDispatchesInOrderStopAtTrue,
    responderInst = null,
    trackedTouchCount = 0,
    previousActiveTouches = 0,
    changeResponder = function changeResponder(nextResponderInst, blockHostResponder) {
    var oldResponderInst = responderInst;
    responderInst = nextResponderInst, null !== ResponderEventPlugin.GlobalResponderHandler && ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
},
    eventTypes = {
    startShouldSetResponder: {
        phasedRegistrationNames: {
            bubbled: "onStartShouldSetResponder",
            captured: "onStartShouldSetResponderCapture"
        }
    },
    scrollShouldSetResponder: {
        phasedRegistrationNames: {
            bubbled: "onScrollShouldSetResponder",
            captured: "onScrollShouldSetResponderCapture"
        }
    },
    selectionChangeShouldSetResponder: {
        phasedRegistrationNames: {
            bubbled: "onSelectionChangeShouldSetResponder",
            captured: "onSelectionChangeShouldSetResponderCapture"
        }
    },
    moveShouldSetResponder: {
        phasedRegistrationNames: {
            bubbled: "onMoveShouldSetResponder",
            captured: "onMoveShouldSetResponderCapture"
        }
    },
    responderStart: {
        registrationName: "onResponderStart"
    },
    responderMove: {
        registrationName: "onResponderMove"
    },
    responderEnd: {
        registrationName: "onResponderEnd"
    },
    responderRelease: {
        registrationName: "onResponderRelease"
    },
    responderTerminationRequest: {
        registrationName: "onResponderTerminationRequest"
    },
    responderGrant: {
        registrationName: "onResponderGrant"
    },
    responderReject: {
        registrationName: "onResponderReject"
    },
    responderTerminate: {
        registrationName: "onResponderTerminate"
    }
};

function setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var shouldSetEventType = isStartish$1(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish$1(topLevelType) ? eventTypes.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder,
        bubbleShouldSetFrom = responderInst ? ReactTreeTraversal.getLowestCommonAncestor(responderInst, targetInst) : targetInst,
        skipOverBubbleShouldSetFrom = bubbleShouldSetFrom === responderInst,
        shouldSetEvent = ResponderSyntheticEvent_1.getPooled(shouldSetEventType, bubbleShouldSetFrom, nativeEvent, nativeEventTarget);
    shouldSetEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, skipOverBubbleShouldSetFrom ? EventPropagators_1.accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent) : EventPropagators_1.accumulateTwoPhaseDispatches(shouldSetEvent);
    var wantsResponderInst = executeDispatchesInOrderStopAtTrue$1(shouldSetEvent);
    if (shouldSetEvent.isPersistent() || shouldSetEvent.constructor.release(shouldSetEvent), !wantsResponderInst || wantsResponderInst === responderInst) return null;
    var extracted,
        grantEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderGrant, wantsResponderInst, nativeEvent, nativeEventTarget);
    grantEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(grantEvent);
    var blockHostResponder = !0 === executeDirectDispatch$1(grantEvent);
    if (responderInst) {
        var terminationRequestEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget);
        terminationRequestEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(terminationRequestEvent);
        var shouldSwitch = !hasDispatches$1(terminationRequestEvent) || executeDirectDispatch$1(terminationRequestEvent);
        if (terminationRequestEvent.isPersistent() || terminationRequestEvent.constructor.release(terminationRequestEvent), shouldSwitch) {
            var terminateEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget);
            terminateEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(terminateEvent), extracted = accumulate_1(extracted, [grantEvent, terminateEvent]), changeResponder(wantsResponderInst, blockHostResponder);
        } else {
            var rejectEvent = ResponderSyntheticEvent_1.getPooled(eventTypes.responderReject, wantsResponderInst, nativeEvent, nativeEventTarget);
            rejectEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(rejectEvent), extracted = accumulate_1(extracted, rejectEvent);
        }
    } else extracted = accumulate_1(extracted, grantEvent), changeResponder(wantsResponderInst, blockHostResponder);
    return extracted;
}

function canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {
    return topLevelInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || trackedTouchCount > 0 && "topSelectionChange" === topLevelType || isStartish$1(topLevelType) || isMoveish$1(topLevelType));
}

function noResponderTouches(nativeEvent) {
    var touches = nativeEvent.touches;
    if (!touches || 0 === touches.length) return !0;
    for (var i = 0; i < touches.length; i++) {
        var activeTouch = touches[i],
            target = activeTouch.target;
        if (null !== target && void 0 !== target && 0 !== target) {
            var targetInst = EventPluginUtils_1.getInstanceFromNode(target);
            if (ReactTreeTraversal.isAncestor(responderInst, targetInst)) return !1;
        }
    }
    return !0;
}

var ResponderEventPlugin = {
    _getResponder: function _getResponder() {
        return responderInst;
    },
    eventTypes: eventTypes,
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        if (isStartish$1(topLevelType)) trackedTouchCount += 1;else if (isEndish$1(topLevelType)) {
            if (!(trackedTouchCount >= 0)) return console.error("Ended a touch event which was not counted in `trackedTouchCount`."), null;
            trackedTouchCount -= 1;
        }
        ResponderTouchHistoryStore_1.recordTouchTrack(topLevelType, nativeEvent);
        var extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent) ? setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) : null,
            isResponderTouchStart = responderInst && isStartish$1(topLevelType),
            isResponderTouchMove = responderInst && isMoveish$1(topLevelType),
            isResponderTouchEnd = responderInst && isEndish$1(topLevelType),
            incrementalTouch = isResponderTouchStart ? eventTypes.responderStart : isResponderTouchMove ? eventTypes.responderMove : isResponderTouchEnd ? eventTypes.responderEnd : null;
        if (incrementalTouch) {
            var gesture = ResponderSyntheticEvent_1.getPooled(incrementalTouch, responderInst, nativeEvent, nativeEventTarget);
            gesture.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(gesture), extracted = accumulate_1(extracted, gesture);
        }
        var isResponderTerminate = responderInst && "topTouchCancel" === topLevelType,
            isResponderRelease = responderInst && !isResponderTerminate && isEndish$1(topLevelType) && noResponderTouches(nativeEvent),
            finalTouch = isResponderTerminate ? eventTypes.responderTerminate : isResponderRelease ? eventTypes.responderRelease : null;
        if (finalTouch) {
            var finalEvent = ResponderSyntheticEvent_1.getPooled(finalTouch, responderInst, nativeEvent, nativeEventTarget);
            finalEvent.touchHistory = ResponderTouchHistoryStore_1.touchHistory, EventPropagators_1.accumulateDirectDispatches(finalEvent), extracted = accumulate_1(extracted, finalEvent), changeResponder(null);
        }
        var numberActiveTouches = ResponderTouchHistoryStore_1.touchHistory.numberActiveTouches;
        return ResponderEventPlugin.GlobalInteractionHandler && numberActiveTouches !== previousActiveTouches && ResponderEventPlugin.GlobalInteractionHandler.onChange(numberActiveTouches), previousActiveTouches = numberActiveTouches, extracted;
    },
    GlobalResponderHandler: null,
    GlobalInteractionHandler: null,
    injection: {
        injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
            ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
        },
        injectGlobalInteractionHandler: function injectGlobalInteractionHandler(GlobalInteractionHandler) {
            ResponderEventPlugin.GlobalInteractionHandler = GlobalInteractionHandler;
        }
    }
},
    ResponderEventPlugin_1 = ResponderEventPlugin;

RCTEventEmitter.register(ReactNativeEventEmitter_1), EventPluginHub_1.injection.injectEventPluginOrder(ReactNativeEventPluginOrder_1), EventPluginUtils_1.injection.injectComponentTree(ReactNativeComponentTree_1), ResponderEventPlugin_1.injection.injectGlobalResponderHandler(ReactNativeGlobalResponderHandler_1), EventPluginHub_1.injection.injectEventPluginsByName({
    ResponderEventPlugin: ResponderEventPlugin_1,
    ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin_1
});

function _classCallCheck$2(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}

function _possibleConstructorReturn(self, call) {
    if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return !call || "object" != typeof call && "function" != typeof call ? self : call;
}

function _inherits(subClass, superClass) {
    if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: !1,
            writable: !0,
            configurable: !0
        }
    }), superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
}

var mountSafeCallback$2 = NativeMethodsMixinUtils.mountSafeCallback,
    ReactNativeComponent = function (_React$Component) {
    _inherits(ReactNativeComponent, _React$Component);
    function ReactNativeComponent() {
        return _classCallCheck$2(this, ReactNativeComponent), _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }
    return ReactNativeComponent.prototype.blur = function () {
        TextInputState.blurTextInput(findNumericNodeHandle(this));
    }, ReactNativeComponent.prototype.focus = function () {
        TextInputState.focusTextInput(findNumericNodeHandle(this));
    }, ReactNativeComponent.prototype.measure = function (callback) {
        UIManager.measure(findNumericNodeHandle(this), mountSafeCallback$2(this, callback));
    }, ReactNativeComponent.prototype.measureInWindow = function (callback) {
        UIManager.measureInWindow(findNumericNodeHandle(this), mountSafeCallback$2(this, callback));
    }, ReactNativeComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
        UIManager.measureLayout(findNumericNodeHandle(this), relativeToNativeNode, mountSafeCallback$2(this, onFail), mountSafeCallback$2(this, onSuccess));
    }, ReactNativeComponent.prototype.setNativeProps = function (nativeProps) {
        var maybeInstance = void 0;
        try {
            maybeInstance = findNodeHandle_1(this);
        } catch (error) {}
        if (null != maybeInstance) {
            var viewConfig = maybeInstance.viewConfig,
                updatePayload = ReactNativeAttributePayload_1.create(nativeProps, viewConfig.validAttributes);
            null != updatePayload && UIManager.updateView(maybeInstance._nativeTag, viewConfig.uiViewClassName, updatePayload);
        }
    }, ReactNativeComponent;
}(react.Component),
    ReactNativeComponent_1 = ReactNativeComponent,
    mountSafeCallback$3 = NativeMethodsMixinUtils.mountSafeCallback,
    NativeMethodsMixin = {
    measure: function measure(callback) {
        UIManager.measure(findNumericNodeHandle(this), mountSafeCallback$3(this, callback));
    },
    measureInWindow: function measureInWindow(callback) {
        UIManager.measureInWindow(findNumericNodeHandle(this), mountSafeCallback$3(this, callback));
    },
    measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
        UIManager.measureLayout(findNumericNodeHandle(this), relativeToNativeNode, mountSafeCallback$3(this, onFail), mountSafeCallback$3(this, onSuccess));
    },
    setNativeProps: function setNativeProps(nativeProps) {
        var maybeInstance = void 0;
        try {
            maybeInstance = findNodeHandle_1(this);
        } catch (error) {}
        if (null != maybeInstance) {
            var viewConfig = maybeInstance.viewConfig,
                updatePayload = ReactNativeAttributePayload_1.create(nativeProps, viewConfig.validAttributes);
            null != updatePayload && UIManager.updateView(maybeInstance._nativeTag, viewConfig.uiViewClassName, updatePayload);
        }
    },
    focus: function focus() {
        TextInputState.focusTextInput(findNumericNodeHandle(this));
    },
    blur: function blur() {
        TextInputState.blurTextInput(findNumericNodeHandle(this));
    }
},
    NativeMethodsMixin_1 = NativeMethodsMixin,
    TouchHistoryMath = {
    centroidDimension: function centroidDimension(touchHistory, touchesChangedAfter, isXAxis, ofCurrent) {
        var touchBank = touchHistory.touchBank,
            total = 0,
            count = 0,
            oneTouchData = 1 === touchHistory.numberActiveTouches ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch] : null;
        if (null !== oneTouchData) oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter && (total += ofCurrent && isXAxis ? oneTouchData.currentPageX : ofCurrent && !isXAxis ? oneTouchData.currentPageY : !ofCurrent && isXAxis ? oneTouchData.previousPageX : oneTouchData.previousPageY, count = 1);else for (var i = 0; i < touchBank.length; i++) {
            var touchTrack = touchBank[i];
            if (null !== touchTrack && void 0 !== touchTrack && touchTrack.touchActive && touchTrack.currentTimeStamp >= touchesChangedAfter) {
                var toAdd;
                toAdd = ofCurrent && isXAxis ? touchTrack.currentPageX : ofCurrent && !isXAxis ? touchTrack.currentPageY : !ofCurrent && isXAxis ? touchTrack.previousPageX : touchTrack.previousPageY, total += toAdd, count++;
            }
        }
        return count > 0 ? total / count : TouchHistoryMath.noCentroid;
    },
    currentCentroidXOfTouchesChangedAfter: function currentCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
        return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !0, !0);
    },
    currentCentroidYOfTouchesChangedAfter: function currentCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
        return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !1, !0);
    },
    previousCentroidXOfTouchesChangedAfter: function previousCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
        return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !0, !1);
    },
    previousCentroidYOfTouchesChangedAfter: function previousCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
        return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, !1, !1);
    },
    currentCentroidX: function currentCentroidX(touchHistory) {
        return TouchHistoryMath.centroidDimension(touchHistory, 0, !0, !0);
    },
    currentCentroidY: function currentCentroidY(touchHistory) {
        return TouchHistoryMath.centroidDimension(touchHistory, 0, !1, !0);
    },
    noCentroid: -1
},
    TouchHistoryMath_1 = TouchHistoryMath,
    createReactNativeComponentClass = function createReactNativeComponentClass(name, callback) {
    return ReactNativeViewConfigRegistry_1.register(name, callback);
},
    createReactNativeComponentClass_1 = createReactNativeComponentClass;

function takeSnapshot(view, options) {
    return "number" != typeof view && "window" !== view && (view = findNumericNodeHandle(view) || "window"), UIManager.__takeSnapshot(view, options);
}

var takeSnapshot_1 = takeSnapshot,
    injectInternals = ReactFiberDevToolsHook.injectInternals;

ReactGenericBatching_1.injection.injectFiberBatchedUpdates(ReactNativeFiberRenderer.batchedUpdates);

var roots = new Map();

ReactFiberErrorLogger.injection.injectDialog(ReactNativeFiberErrorDialog_1.showDialog);

var ReactNativeFiber = {
    NativeComponent: ReactNativeComponent_1,
    findNodeHandle: findNumericNodeHandle,
    render: function render(element, containerTag, callback) {
        var root = roots.get(containerTag);
        return root || (root = ReactNativeFiberRenderer.createContainer(containerTag), roots.set(containerTag, root)), ReactNativeFiberRenderer.updateContainer(element, root, null, callback), ReactNativeFiberRenderer.getPublicRootInstance(root);
    },
    unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
        var root = roots.get(containerTag);
        root && ReactNativeFiberRenderer.updateContainer(null, root, null, function () {
            roots.delete(containerTag);
        });
    },
    unmountComponentAtNodeAndRemoveContainer: function unmountComponentAtNodeAndRemoveContainer(containerTag) {
        ReactNativeFiber.unmountComponentAtNode(containerTag), UIManager.removeRootView(containerTag);
    },
    createPortal: function createPortal(children, containerTag) {
        var key = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
        return ReactPortal.createPortal(children, containerTag, null, key);
    },
    unstable_batchedUpdates: ReactGenericBatching_1.batchedUpdates,
    flushSync: ReactNativeFiberRenderer.flushSync,
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
        NativeMethodsMixin: NativeMethodsMixin_1,
        ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin_1,
        ReactGlobalSharedState: ReactGlobalSharedState_1,
        ReactNativeComponentTree: ReactNativeComponentTree_1,
        ReactNativePropRegistry: ReactNativePropRegistry_1,
        TouchHistoryMath: TouchHistoryMath_1,
        createReactNativeComponentClass: createReactNativeComponentClass_1,
        takeSnapshot: takeSnapshot_1
    }
};

injectInternals({
    findFiberByHostInstance: ReactNativeComponentTree_1.getClosestInstanceFromNode,
    findHostInstanceByFiber: ReactNativeFiberRenderer.findHostInstance,
    getInspectorDataForViewTag: ReactNativeFiberInspector.getInspectorDataForViewTag,
    bundleType: 0,
    version: ReactVersion,
    rendererPackageName: "react-native"
});

var ReactNativeFiberEntry = ReactNativeFiber;

module.exports = ReactNativeFiberEntry;
}, 119, null, "ReactNativeFiber-prod");
__d(/* ReactDebugTool */function(global, require, module, exports) {

'use strict';

var _require = require(21           ), // 21 = ReactNative
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = _require.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

module.exports = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactDebugTool;
}, 120, null, "ReactDebugTool");
__d(/* ActivityIndicator */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/ActivityIndicator/ActivityIndicator.js';
var ColorPropType = require(122            ); // 122 = ColorPropType
var NativeMethodsMixin = require(124                 ); // 124 = NativeMethodsMixin
var Platform = require(46        ); // 46 = Platform
var ProgressBarAndroid = require(125                 ); // 125 = ProgressBarAndroid
var PropTypes = require(126         ); // 126 = prop-types
var React = require(129    ); // 129 = React
var StyleSheet = require(167         ); // 167 = StyleSheet
var View = require(169   ); // 169 = View
var ViewPropTypes = require(130            ); // 130 = ViewPropTypes

var createReactClass = require(171                 ); // 171 = create-react-class
var requireNativeComponent = require(144                     ); // 144 = requireNativeComponent

var GRAY = '#999999';

var ActivityIndicator = createReactClass({
  displayName: 'ActivityIndicator',
  mixins: [NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    animating: PropTypes.bool,

    color: ColorPropType,

    size: PropTypes.oneOfType([PropTypes.oneOf(['small', 'large']), PropTypes.number]),

    hidesWhenStopped: PropTypes.bool
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      animating: true,
      color: Platform.OS === 'ios' ? GRAY : undefined,
      hidesWhenStopped: true,
      size: 'small'
    };
  },
  render: function render() {
    var _props = this.props,
        onLayout = _props.onLayout,
        style = _props.style,
        props = babelHelpers.objectWithoutProperties(_props, ['onLayout', 'style']);

    var sizeStyle = void 0;

    switch (props.size) {
      case 'small':
        sizeStyle = styles.sizeSmall;
        break;
      case 'large':
        sizeStyle = styles.sizeLarge;
        break;
      default:
        sizeStyle = { height: props.size, width: props.size };
        break;
    }

    var nativeProps = babelHelpers.extends({}, props, {
      style: sizeStyle,
      styleAttr: 'Normal',
      indeterminate: true
    });

    return React.createElement(
      View,
      { onLayout: onLayout, style: [styles.container, style], __source: {
          fileName: _jsxFileName,
          lineNumber: 147
        }
      },
      Platform.OS === 'ios' ? React.createElement(RCTActivityIndicator, babelHelpers.extends({}, nativeProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 149
        }
      })) : React.createElement(ProgressBarAndroid, babelHelpers.extends({}, nativeProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 151
        }
      }))
    );
  }
});

var styles = StyleSheet.create({
  container: {
    alignItems: 'center',
    justifyContent: 'center'
  },
  sizeSmall: {
    width: 20,
    height: 20
  },
  sizeLarge: {
    width: 36,
    height: 36
  }
});

if (Platform.OS === 'ios') {
  var RCTActivityIndicator = requireNativeComponent('RCTActivityIndicatorView', ActivityIndicator, { nativeOnly: { activityIndicatorViewStyle: true } });
}

module.exports = ActivityIndicator;
}, 121, null, "ActivityIndicator");
__d(/* ColorPropType */function(global, require, module, exports) {
'use strict';

var normalizeColor = require(123             ); // 123 = normalizeColor

var colorPropType = function colorPropType(isRequired, props, propName, componentName, location, propFullName) {
  var color = props[propName];
  if (color === undefined || color === null) {
    if (isRequired) {
      return new Error('Required ' + location + ' `' + (propFullName || propName) + '` was not specified in `' + componentName + '`.');
    }
    return;
  }

  if (typeof color === 'number') {
    return;
  }

  if (normalizeColor(color) === null) {
    return new Error('Invalid ' + location + ' `' + (propFullName || propName) + '` supplied to `' + componentName + '`: ' + color + '\n' + 'Valid color formats are\n  - \'#f0f\' (#rgb)\n  - \'#f0fc\' (#rgba)\n  - \'#ff00ff\' (#rrggbb)\n  - \'#ff00ff00\' (#rrggbbaa)\n  - \'rgb(255, 255, 255)\'\n  - \'rgba(255, 255, 255, 1.0)\'\n  - \'hsl(360, 100%, 100%)\'\n  - \'hsla(360, 100%, 100%, 1.0)\'\n  - \'transparent\'\n  - \'red\'\n  - 0xff00ff00 (0xrrggbbaa)\n');
  }
};

var ColorPropType = colorPropType.bind(null, false);
ColorPropType.isRequired = colorPropType.bind(null, true);

module.exports = ColorPropType;
}, 122, null, "ColorPropType");
__d(/* normalizeColor */function(global, require, module, exports) {
'use strict';

function normalizeColor(color) {
  var match;

  if (typeof color === 'number') {
    if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
      return color;
    }
    return null;
  }

  if (match = matchers.hex6.exec(color)) {
    return parseInt(match[1] + 'ff', 16) >>> 0;
  }

  if (names.hasOwnProperty(color)) {
    return names[color];
  }

  if (match = matchers.rgb.exec(color)) {
    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | 0x000000ff) >>> 0;
  }

  if (match = matchers.rgba.exec(color)) {
    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | parse1(match[4])) >>> 0;
  }

  if (match = matchers.hex3.exec(color)) {
    return parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + 'ff', 16) >>> 0;
  }

  if (match = matchers.hex8.exec(color)) {
    return parseInt(match[1], 16) >>> 0;
  }

  if (match = matchers.hex4.exec(color)) {
    return parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + match[4] + match[4], 16) >>> 0;
  }

  if (match = matchers.hsl.exec(color)) {
    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | 0x000000ff) >>> 0;
  }

  if (match = matchers.hsla.exec(color)) {
    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | parse1(match[4])) >>> 0;
  }

  return null;
}

function hue2rgb(p, q, t) {
  if (t < 0) {
    t += 1;
  }
  if (t > 1) {
    t -= 1;
  }
  if (t < 1 / 6) {
    return p + (q - p) * 6 * t;
  }
  if (t < 1 / 2) {
    return q;
  }
  if (t < 2 / 3) {
    return p + (q - p) * (2 / 3 - t) * 6;
  }
  return p;
}

function hslToRgb(h, s, l) {
  var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
  var p = 2 * l - q;
  var r = hue2rgb(p, q, h + 1 / 3);
  var g = hue2rgb(p, q, h);
  var b = hue2rgb(p, q, h - 1 / 3);

  return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;
}

var NUMBER = '[-+]?\\d*\\.?\\d+';
var PERCENTAGE = NUMBER + '%';

function call() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return '\\(\\s*(' + args.join(')\\s*,\\s*(') + ')\\s*\\)';
}

var matchers = {
  rgb: new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER)),
  rgba: new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER)),
  hsl: new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE)),
  hsla: new RegExp('hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)),
  hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex6: /^#([0-9a-fA-F]{6})$/,
  hex8: /^#([0-9a-fA-F]{8})$/
};

function parse255(str) {
  var int = parseInt(str, 10);
  if (int < 0) {
    return 0;
  }
  if (int > 255) {
    return 255;
  }
  return int;
}

function parse360(str) {
  var int = parseFloat(str);
  return (int % 360 + 360) % 360 / 360;
}

function parse1(str) {
  var num = parseFloat(str);
  if (num < 0) {
    return 0;
  }
  if (num > 1) {
    return 255;
  }
  return Math.round(num * 255);
}

function parsePercentage(str) {
  var int = parseFloat(str);
  if (int < 0) {
    return 0;
  }
  if (int > 100) {
    return 1;
  }
  return int / 100;
}

var names = {
  transparent: 0x00000000,

  aliceblue: 0xf0f8ffff,
  antiquewhite: 0xfaebd7ff,
  aqua: 0x00ffffff,
  aquamarine: 0x7fffd4ff,
  azure: 0xf0ffffff,
  beige: 0xf5f5dcff,
  bisque: 0xffe4c4ff,
  black: 0x000000ff,
  blanchedalmond: 0xffebcdff,
  blue: 0x0000ffff,
  blueviolet: 0x8a2be2ff,
  brown: 0xa52a2aff,
  burlywood: 0xdeb887ff,
  burntsienna: 0xea7e5dff,
  cadetblue: 0x5f9ea0ff,
  chartreuse: 0x7fff00ff,
  chocolate: 0xd2691eff,
  coral: 0xff7f50ff,
  cornflowerblue: 0x6495edff,
  cornsilk: 0xfff8dcff,
  crimson: 0xdc143cff,
  cyan: 0x00ffffff,
  darkblue: 0x00008bff,
  darkcyan: 0x008b8bff,
  darkgoldenrod: 0xb8860bff,
  darkgray: 0xa9a9a9ff,
  darkgreen: 0x006400ff,
  darkgrey: 0xa9a9a9ff,
  darkkhaki: 0xbdb76bff,
  darkmagenta: 0x8b008bff,
  darkolivegreen: 0x556b2fff,
  darkorange: 0xff8c00ff,
  darkorchid: 0x9932ccff,
  darkred: 0x8b0000ff,
  darksalmon: 0xe9967aff,
  darkseagreen: 0x8fbc8fff,
  darkslateblue: 0x483d8bff,
  darkslategray: 0x2f4f4fff,
  darkslategrey: 0x2f4f4fff,
  darkturquoise: 0x00ced1ff,
  darkviolet: 0x9400d3ff,
  deeppink: 0xff1493ff,
  deepskyblue: 0x00bfffff,
  dimgray: 0x696969ff,
  dimgrey: 0x696969ff,
  dodgerblue: 0x1e90ffff,
  firebrick: 0xb22222ff,
  floralwhite: 0xfffaf0ff,
  forestgreen: 0x228b22ff,
  fuchsia: 0xff00ffff,
  gainsboro: 0xdcdcdcff,
  ghostwhite: 0xf8f8ffff,
  gold: 0xffd700ff,
  goldenrod: 0xdaa520ff,
  gray: 0x808080ff,
  green: 0x008000ff,
  greenyellow: 0xadff2fff,
  grey: 0x808080ff,
  honeydew: 0xf0fff0ff,
  hotpink: 0xff69b4ff,
  indianred: 0xcd5c5cff,
  indigo: 0x4b0082ff,
  ivory: 0xfffff0ff,
  khaki: 0xf0e68cff,
  lavender: 0xe6e6faff,
  lavenderblush: 0xfff0f5ff,
  lawngreen: 0x7cfc00ff,
  lemonchiffon: 0xfffacdff,
  lightblue: 0xadd8e6ff,
  lightcoral: 0xf08080ff,
  lightcyan: 0xe0ffffff,
  lightgoldenrodyellow: 0xfafad2ff,
  lightgray: 0xd3d3d3ff,
  lightgreen: 0x90ee90ff,
  lightgrey: 0xd3d3d3ff,
  lightpink: 0xffb6c1ff,
  lightsalmon: 0xffa07aff,
  lightseagreen: 0x20b2aaff,
  lightskyblue: 0x87cefaff,
  lightslategray: 0x778899ff,
  lightslategrey: 0x778899ff,
  lightsteelblue: 0xb0c4deff,
  lightyellow: 0xffffe0ff,
  lime: 0x00ff00ff,
  limegreen: 0x32cd32ff,
  linen: 0xfaf0e6ff,
  magenta: 0xff00ffff,
  maroon: 0x800000ff,
  mediumaquamarine: 0x66cdaaff,
  mediumblue: 0x0000cdff,
  mediumorchid: 0xba55d3ff,
  mediumpurple: 0x9370dbff,
  mediumseagreen: 0x3cb371ff,
  mediumslateblue: 0x7b68eeff,
  mediumspringgreen: 0x00fa9aff,
  mediumturquoise: 0x48d1ccff,
  mediumvioletred: 0xc71585ff,
  midnightblue: 0x191970ff,
  mintcream: 0xf5fffaff,
  mistyrose: 0xffe4e1ff,
  moccasin: 0xffe4b5ff,
  navajowhite: 0xffdeadff,
  navy: 0x000080ff,
  oldlace: 0xfdf5e6ff,
  olive: 0x808000ff,
  olivedrab: 0x6b8e23ff,
  orange: 0xffa500ff,
  orangered: 0xff4500ff,
  orchid: 0xda70d6ff,
  palegoldenrod: 0xeee8aaff,
  palegreen: 0x98fb98ff,
  paleturquoise: 0xafeeeeff,
  palevioletred: 0xdb7093ff,
  papayawhip: 0xffefd5ff,
  peachpuff: 0xffdab9ff,
  peru: 0xcd853fff,
  pink: 0xffc0cbff,
  plum: 0xdda0ddff,
  powderblue: 0xb0e0e6ff,
  purple: 0x800080ff,
  rebeccapurple: 0x663399ff,
  red: 0xff0000ff,
  rosybrown: 0xbc8f8fff,
  royalblue: 0x4169e1ff,
  saddlebrown: 0x8b4513ff,
  salmon: 0xfa8072ff,
  sandybrown: 0xf4a460ff,
  seagreen: 0x2e8b57ff,
  seashell: 0xfff5eeff,
  sienna: 0xa0522dff,
  silver: 0xc0c0c0ff,
  skyblue: 0x87ceebff,
  slateblue: 0x6a5acdff,
  slategray: 0x708090ff,
  slategrey: 0x708090ff,
  snow: 0xfffafaff,
  springgreen: 0x00ff7fff,
  steelblue: 0x4682b4ff,
  tan: 0xd2b48cff,
  teal: 0x008080ff,
  thistle: 0xd8bfd8ff,
  tomato: 0xff6347ff,
  turquoise: 0x40e0d0ff,
  violet: 0xee82eeff,
  wheat: 0xf5deb3ff,
  white: 0xffffffff,
  whitesmoke: 0xf5f5f5ff,
  yellow: 0xffff00ff,
  yellowgreen: 0x9acd32ff
};

module.exports = normalizeColor;
}, 123, null, "normalizeColor");
__d(/* NativeMethodsMixin */function(global, require, module, exports) {

'use strict';

var _require = require(21           ), // 21 = ReactNative
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = _require.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

var NativeMethodsMixin = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.NativeMethodsMixin;


module.exports = NativeMethodsMixin;
}, 124, null, "NativeMethodsMixin");
__d(/* ProgressBarAndroid */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/ProgressBarAndroid/ProgressBarAndroid.android.js';
var ColorPropType = require(122            ); // 122 = ColorPropType
var PropTypes = require(126         ); // 126 = prop-types
var React = require(129    ); // 129 = React
var ReactNative = require(21           ); // 21 = ReactNative
var ViewPropTypes = require(130            ); // 130 = ViewPropTypes

var requireNativeComponent = require(144                     ); // 144 = requireNativeComponent

var STYLE_ATTRIBUTES = ['Horizontal', 'Normal', 'Small', 'Large', 'Inverse', 'SmallInverse', 'LargeInverse'];

var indeterminateType = function indeterminateType(props, propName, componentName) {
  var checker = function checker() {
    var indeterminate = props[propName];
    var styleAttr = props.styleAttr;
    if (!indeterminate && styleAttr !== 'Horizontal') {
      return new Error('indeterminate=false is only valid for styleAttr=Horizontal');
    }
  };

  for (var _len = arguments.length, rest = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
    rest[_key - 3] = arguments[_key];
  }

  return PropTypes.bool.apply(PropTypes, [props, propName, componentName].concat(rest)) || checker();
};

var ProgressBarAndroid = function (_ReactNative$NativeCo) {
  babelHelpers.inherits(ProgressBarAndroid, _ReactNative$NativeCo);

  function ProgressBarAndroid() {
    babelHelpers.classCallCheck(this, ProgressBarAndroid);
    return babelHelpers.possibleConstructorReturn(this, (ProgressBarAndroid.__proto__ || Object.getPrototypeOf(ProgressBarAndroid)).apply(this, arguments));
  }

  babelHelpers.createClass(ProgressBarAndroid, [{
    key: 'render',
    value: function render() {
      return React.createElement(AndroidProgressBar, babelHelpers.extends({}, this.props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 112
        }
      }));
    }
  }]);
  return ProgressBarAndroid;
}(ReactNative.NativeComponent);

ProgressBarAndroid.propTypes = babelHelpers.extends({}, ViewPropTypes, {
  styleAttr: PropTypes.oneOf(STYLE_ATTRIBUTES),

  animating: PropTypes.bool,

  indeterminate: indeterminateType,

  progress: PropTypes.number,

  color: ColorPropType,

  testID: PropTypes.string
});
ProgressBarAndroid.defaultProps = {
  styleAttr: 'Normal',
  indeterminate: true,
  animating: true
};


var AndroidProgressBar = requireNativeComponent('AndroidProgressBar', ProgressBarAndroid, {
  nativeOnly: {
    animating: true
  }
});

module.exports = ProgressBarAndroid;
}, 125, null, "ProgressBarAndroid");
__d(/* prop-types/index.js */function(global, require, module, exports) {

if (process.env.NODE_ENV !== 'production') {
  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.for : '@@for') && (typeof Symbol === 'function' ? Symbol.for : '@@for')('react.element') || 0xeac7;

  var isValidElement = function isValidElement(object) {
    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
  };

  var throwOnDirectAccess = true;
  module.exports = require(127                        )(isValidElement, throwOnDirectAccess); // 127 = ./factoryWithTypeCheckers
} else {
  module.exports = require(128                         )(); // 128 = ./factoryWithThrowingShims
}
}, 126, null, "prop-types/index.js");
__d(/* prop-types/factoryWithTypeCheckers.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(24                      ); // 24 = fbjs/lib/emptyFunction
var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var warning = require(23                ); // 23 = fbjs/lib/warning
var assign = require(37             ); // 37 = object-assign

var ReactPropTypesSecret = require(40                          ); // 40 = ./lib/ReactPropTypesSecret
var checkPropTypes = require(39                ); // 39 = ./checkPropTypes

module.exports = function (isValidElement, throwOnDirectAccess) {
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator');
  var FAUX_ITERATOR_SYMBOL = '@@iterator';
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  var ANONYMOUS = '<<anonymous>>';

  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker
  };

  function is(x, y) {
    if (x === y) {
      return x !== 0 || 1 / x === 1 / y;
    } else {
      return x !== x && y !== y;
    }
  }

  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }

  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          var cacheKey = componentName + ':' + propName;
          if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
            warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName);
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        warning(false, 'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received %s at index %s.', getPostfixForTypeWarning(checker), i);
        return emptyFunction.thatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }

      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    if (propType === 'symbol') {
      return true;
    }

    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};
}, 127, null, "prop-types/factoryWithTypeCheckers.js");
__d(/* prop-types/factoryWithThrowingShims.js */function(global, require, module, exports) {

'use strict';

var emptyFunction = require(24                      ); // 24 = fbjs/lib/emptyFunction
var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var ReactPropTypesSecret = require(40                          ); // 40 = ./lib/ReactPropTypesSecret

module.exports = function () {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      return;
    }
    invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };

  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};
}, 128, null, "prop-types/factoryWithThrowingShims.js");
__d(/* React */function(global, require, module, exports) {

'use strict';

module.exports = require(35     ); // 35 = react
}, 129, null, "React");
__d(/* ViewPropTypes */function(global, require, module, exports) {
'use strict';

var EdgeInsetsPropType = require(131                 ); // 131 = EdgeInsetsPropType
var PlatformViewPropTypes = require(136                    ); // 136 = PlatformViewPropTypes
var PropTypes = require(126         ); // 126 = prop-types
var StyleSheetPropType = require(137                 ); // 137 = StyleSheetPropType
var ViewStylePropTypes = require(138                 ); // 138 = ViewStylePropTypes

var _require = require(143                ), // 143 = ViewAccessibility
    AccessibilityComponentTypes = _require.AccessibilityComponentTypes,
    AccessibilityTraits = _require.AccessibilityTraits;

var stylePropType = StyleSheetPropType(ViewStylePropTypes);

module.exports = babelHelpers.extends({}, PlatformViewPropTypes, {
  accessible: PropTypes.bool,

  accessibilityLabel: PropTypes.node,

  accessibilityComponentType: PropTypes.oneOf(AccessibilityComponentTypes),

  accessibilityLiveRegion: PropTypes.oneOf(['none', 'polite', 'assertive']),

  importantForAccessibility: PropTypes.oneOf(['auto', 'yes', 'no', 'no-hide-descendants']),

  accessibilityTraits: PropTypes.oneOfType([PropTypes.oneOf(AccessibilityTraits), PropTypes.arrayOf(PropTypes.oneOf(AccessibilityTraits))]),

  accessibilityViewIsModal: PropTypes.bool,

  onAccessibilityTap: PropTypes.func,

  onMagicTap: PropTypes.func,

  testID: PropTypes.string,

  nativeID: PropTypes.string,

  onResponderGrant: PropTypes.func,

  onResponderMove: PropTypes.func,

  onResponderReject: PropTypes.func,

  onResponderRelease: PropTypes.func,

  onResponderTerminate: PropTypes.func,

  onResponderTerminationRequest: PropTypes.func,

  onStartShouldSetResponder: PropTypes.func,

  onStartShouldSetResponderCapture: PropTypes.func,

  onMoveShouldSetResponder: PropTypes.func,

  onMoveShouldSetResponderCapture: PropTypes.func,

  hitSlop: EdgeInsetsPropType,

  onLayout: PropTypes.func,

  pointerEvents: PropTypes.oneOf(['box-none', 'none', 'box-only', 'auto']),
  style: stylePropType,

  removeClippedSubviews: PropTypes.bool,

  renderToHardwareTextureAndroid: PropTypes.bool,

  shouldRasterizeIOS: PropTypes.bool,

  collapsable: PropTypes.bool,

  needsOffscreenAlphaCompositing: PropTypes.bool
});
}, 130, null, "ViewPropTypes");
__d(/* EdgeInsetsPropType */function(global, require, module, exports) {
'use strict';

var PropTypes = require(126         ); // 126 = prop-types

var createStrictShapeTypeChecker = require(132                           ); // 132 = createStrictShapeTypeChecker

var EdgeInsetsPropType = createStrictShapeTypeChecker({
  top: PropTypes.number,
  left: PropTypes.number,
  bottom: PropTypes.number,
  right: PropTypes.number
});

module.exports = EdgeInsetsPropType;
}, 131, null, "EdgeInsetsPropType");
__d(/* createStrictShapeTypeChecker */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var merge = require(133    ); // 133 = merge

function createStrictShapeTypeChecker(shapeTypes) {
  function checkType(isRequired, props, propName, componentName, location) {
    if (!props[propName]) {
      if (isRequired) {
        invariant(false, 'Required object `' + propName + '` was not specified in ' + ('`' + componentName + '`.'));
      }
      return;
    }
    var propValue = props[propName];
    var propType = typeof propValue;
    var locationName = location || '(unknown)';
    if (propType !== 'object') {
      invariant(false, 'Invalid ' + locationName + ' `' + propName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
    }

    var allKeys = merge(props[propName], shapeTypes);

    for (var _len = arguments.length, rest = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
      rest[_key - 5] = arguments[_key];
    }

    for (var key in allKeys) {
      var checker = shapeTypes[key];
      if (!checker) {
        invariant(false, 'Invalid props.' + propName + ' key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
      }
      var error = checker.apply(undefined, [propValue, key, componentName, location].concat(rest));
      if (error) {
        invariant(false, error.message + '\nBad object: ' + JSON.stringify(props[propName], null, '  '));
      }
    }
  }
  function chainedCheckType(props, propName, componentName, location) {
    for (var _len2 = arguments.length, rest = Array(_len2 > 4 ? _len2 - 4 : 0), _key2 = 4; _key2 < _len2; _key2++) {
      rest[_key2 - 4] = arguments[_key2];
    }

    return checkType.apply(undefined, [false, props, propName, componentName, location].concat(rest));
  }
  chainedCheckType.isRequired = checkType.bind(null, true);
  return chainedCheckType;
}

module.exports = createStrictShapeTypeChecker;
}, 132, null, "createStrictShapeTypeChecker");
__d(/* merge */function(global, require, module, exports) {

"use strict";

var mergeInto = require(134        ); // 134 = mergeInto

var merge = function merge(one, two) {
  var result = {};
  mergeInto(result, one);
  mergeInto(result, two);
  return result;
};

module.exports = merge;
}, 133, null, "merge");
__d(/* mergeInto */function(global, require, module, exports) {

"use strict";

var mergeHelpers = require(135           ); // 135 = mergeHelpers

var checkMergeObjectArg = mergeHelpers.checkMergeObjectArg;
var checkMergeIntoObjectArg = mergeHelpers.checkMergeIntoObjectArg;

function mergeInto(one, two) {
  checkMergeIntoObjectArg(one);
  if (two != null) {
    checkMergeObjectArg(two);
    for (var key in two) {
      if (!two.hasOwnProperty(key)) {
        continue;
      }
      one[key] = two[key];
    }
  }
}

module.exports = mergeInto;
}, 134, null, "mergeInto");
__d(/* mergeHelpers */function(global, require, module, exports) {

'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var MAX_MERGE_DEPTH = 36;

var isTerminal = function isTerminal(o) {
  return typeof o !== 'object' || o instanceof Date || o === null;
};

var mergeHelpers = {

  MAX_MERGE_DEPTH: MAX_MERGE_DEPTH,

  isTerminal: isTerminal,

  normalizeMergeArg: function normalizeMergeArg(arg) {
    return arg === undefined || arg === null ? {} : arg;
  },

  checkMergeArrayArgs: function checkMergeArrayArgs(one, two) {
    invariant(Array.isArray(one) && Array.isArray(two), 'Tried to merge arrays, instead got %s and %s.', one, two);
  },

  checkMergeObjectArgs: function checkMergeObjectArgs(one, two) {
    mergeHelpers.checkMergeObjectArg(one);
    mergeHelpers.checkMergeObjectArg(two);
  },

  checkMergeObjectArg: function checkMergeObjectArg(arg) {
    invariant(!isTerminal(arg) && !Array.isArray(arg), 'Tried to merge an object, instead got %s.', arg);
  },

  checkMergeIntoObjectArg: function checkMergeIntoObjectArg(arg) {
    invariant((!isTerminal(arg) || typeof arg === 'function') && !Array.isArray(arg), 'Tried to merge into an object, instead got %s.', arg);
  },

  checkMergeLevel: function checkMergeLevel(level) {
    invariant(level < MAX_MERGE_DEPTH, 'Maximum deep merge depth exceeded. You may be attempting to merge ' + 'circular structures in an unsupported way.');
  },

  checkArrayStrategy: function checkArrayStrategy(strategy) {
    invariant(strategy === undefined || strategy in mergeHelpers.ArrayStrategies, 'You must provide an array strategy to deep merge functions to ' + 'instruct the deep merge how to resolve merging two arrays.');
  },

  ArrayStrategies: {
    Clobber: 'Clobber',
    Concat: 'Concat',
    IndexByIndex: 'IndexByIndex'
  }

};

module.exports = mergeHelpers;
}, 135, null, "mergeHelpers");
__d(/* PlatformViewPropTypes */function(global, require, module, exports) {

module.export = {};
}, 136, null, "PlatformViewPropTypes");
__d(/* StyleSheetPropType */function(global, require, module, exports) {
'use strict';

var createStrictShapeTypeChecker = require(132                           ); // 132 = createStrictShapeTypeChecker
var flattenStyle = require(43            ); // 43 = flattenStyle

function StyleSheetPropType(shape) {
  var shapePropType = createStrictShapeTypeChecker(shape);
  return function (props, propName, componentName, location) {
    var newProps = props;
    if (props[propName]) {
      newProps = {};
      newProps[propName] = flattenStyle(props[propName]);
    }

    for (var _len = arguments.length, rest = Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
      rest[_key - 4] = arguments[_key];
    }

    return shapePropType.apply(undefined, [newProps, propName, componentName, location].concat(rest));
  };
}

module.exports = StyleSheetPropType;
}, 137, null, "StyleSheetPropType");
__d(/* ViewStylePropTypes */function(global, require, module, exports) {
'use strict';

var ColorPropType = require(122            ); // 122 = ColorPropType
var LayoutPropTypes = require(139              ); // 139 = LayoutPropTypes
var ReactPropTypes = require(126         ); // 126 = prop-types
var ShadowPropTypesIOS = require(140                 ); // 140 = ShadowPropTypesIOS
var TransformPropTypes = require(141                 ); // 141 = TransformPropTypes

var ViewStylePropTypes = babelHelpers.extends({}, LayoutPropTypes, ShadowPropTypesIOS, TransformPropTypes, {
  backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
  backgroundColor: ColorPropType,
  borderColor: ColorPropType,
  borderTopColor: ColorPropType,
  borderRightColor: ColorPropType,
  borderBottomColor: ColorPropType,
  borderLeftColor: ColorPropType,
  borderRadius: ReactPropTypes.number,
  borderTopLeftRadius: ReactPropTypes.number,
  borderTopRightRadius: ReactPropTypes.number,
  borderBottomLeftRadius: ReactPropTypes.number,
  borderBottomRightRadius: ReactPropTypes.number,
  borderStyle: ReactPropTypes.oneOf(['solid', 'dotted', 'dashed']),
  borderWidth: ReactPropTypes.number,
  borderTopWidth: ReactPropTypes.number,
  borderRightWidth: ReactPropTypes.number,
  borderBottomWidth: ReactPropTypes.number,
  borderLeftWidth: ReactPropTypes.number,
  opacity: ReactPropTypes.number,

  elevation: ReactPropTypes.number
});

module.exports = ViewStylePropTypes;
}, 138, null, "ViewStylePropTypes");
__d(/* LayoutPropTypes */function(global, require, module, exports) {
'use strict';

var ReactPropTypes = require(126         ); // 126 = prop-types

var LayoutPropTypes = {
  display: ReactPropTypes.oneOf(['none', 'flex']),

  width: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  height: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  top: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  left: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  right: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  bottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  minWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  maxWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  minHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  maxHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  margin: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  marginRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  padding: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  paddingRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  borderWidth: ReactPropTypes.number,

  borderTopWidth: ReactPropTypes.number,

  borderRightWidth: ReactPropTypes.number,

  borderBottomWidth: ReactPropTypes.number,

  borderLeftWidth: ReactPropTypes.number,

  position: ReactPropTypes.oneOf(['absolute', 'relative']),

  flexDirection: ReactPropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),

  flexWrap: ReactPropTypes.oneOf(['wrap', 'nowrap']),

  justifyContent: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'space-between', 'space-around']),

  alignItems: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'baseline']),

  alignSelf: ReactPropTypes.oneOf(['auto', 'flex-start', 'flex-end', 'center', 'stretch', 'baseline']),

  alignContent: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'space-between', 'space-around']),

  overflow: ReactPropTypes.oneOf(['visible', 'hidden', 'scroll']),

  flex: ReactPropTypes.number,
  flexGrow: ReactPropTypes.number,
  flexShrink: ReactPropTypes.number,
  flexBasis: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),

  aspectRatio: ReactPropTypes.number,

  zIndex: ReactPropTypes.number,

  direction: ReactPropTypes.oneOf(['inherit', 'ltr', 'rtl'])
};

module.exports = LayoutPropTypes;
}, 139, null, "LayoutPropTypes");
__d(/* ShadowPropTypesIOS */function(global, require, module, exports) {
'use strict';

var ColorPropType = require(122            ); // 122 = ColorPropType
var ReactPropTypes = require(126         ); // 126 = prop-types

var ShadowPropTypesIOS = {
  shadowColor: ColorPropType,

  shadowOffset: ReactPropTypes.shape({
    width: ReactPropTypes.number,
    height: ReactPropTypes.number
  }),

  shadowOpacity: ReactPropTypes.number,

  shadowRadius: ReactPropTypes.number
};

module.exports = ShadowPropTypesIOS;
}, 140, null, "ShadowPropTypesIOS");
__d(/* TransformPropTypes */function(global, require, module, exports) {
'use strict';

var ReactPropTypes = require(126         ); // 126 = prop-types

var deprecatedPropType = require(142                 ); // 142 = deprecatedPropType

var TransformMatrixPropType = function TransformMatrixPropType(props, propName, componentName) {
  if (props[propName]) {
    return new Error('The transformMatrix style property is deprecated. ' + 'Use `transform: [{ matrix: ... }]` instead.');
  }
};

var DecomposedMatrixPropType = function DecomposedMatrixPropType(props, propName, componentName) {
  if (props[propName]) {
    return new Error('The decomposedMatrix style property is deprecated. ' + 'Use `transform: [...]` instead.');
  }
};

var TransformPropTypes = {
  transform: ReactPropTypes.arrayOf(ReactPropTypes.oneOfType([ReactPropTypes.shape({ perspective: ReactPropTypes.number }), ReactPropTypes.shape({ rotate: ReactPropTypes.string }), ReactPropTypes.shape({ rotateX: ReactPropTypes.string }), ReactPropTypes.shape({ rotateY: ReactPropTypes.string }), ReactPropTypes.shape({ rotateZ: ReactPropTypes.string }), ReactPropTypes.shape({ scale: ReactPropTypes.number }), ReactPropTypes.shape({ scaleX: ReactPropTypes.number }), ReactPropTypes.shape({ scaleY: ReactPropTypes.number }), ReactPropTypes.shape({ translateX: ReactPropTypes.number }), ReactPropTypes.shape({ translateY: ReactPropTypes.number }), ReactPropTypes.shape({ skewX: ReactPropTypes.string }), ReactPropTypes.shape({ skewY: ReactPropTypes.string })])),

  transformMatrix: TransformMatrixPropType,

  decomposedMatrix: DecomposedMatrixPropType,

  scaleX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
  scaleY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
  rotation: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
  translateX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
  translateY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.')
};

module.exports = TransformPropTypes;
}, 141, null, "TransformPropTypes");
__d(/* deprecatedPropType */function(global, require, module, exports) {
'use strict';

var UIManager = require(47         ); // 47 = UIManager

function deprecatedPropType(propType, explanation) {
  return function validate(props, propName, componentName) {
    if (!UIManager[componentName] && props[propName] !== undefined) {
      console.warn('`' + propName + '` supplied to `' + componentName + '` has been deprecated. ' + explanation);
    }

    for (var _len = arguments.length, rest = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
      rest[_key - 3] = arguments[_key];
    }

    return propType.apply(undefined, [props, propName, componentName].concat(rest));
  };
}

module.exports = deprecatedPropType;
}, 142, null, "deprecatedPropType");
__d(/* ViewAccessibility */function(global, require, module, exports) {
'use strict';

module.exports = {
  AccessibilityTraits: ['none', 'button', 'link', 'header', 'search', 'image', 'selected', 'plays', 'key', 'text', 'summary', 'disabled', 'frequentUpdates', 'startsMedia', 'adjustable', 'allowsDirectInteraction', 'pageTurn'],
  AccessibilityComponentTypes: ['none', 'button', 'radiobutton_checked', 'radiobutton_unchecked']
};
}, 143, null, "ViewAccessibility");
__d(/* requireNativeComponent */function(global, require, module, exports) {
'use strict';

var Platform = require(46        ); // 46 = Platform
var ReactNativeBridgeEventPlugin = require(145                           ); // 145 = ReactNativeBridgeEventPlugin
var ReactNativeStyleAttributes = require(146                         ); // 146 = ReactNativeStyleAttributes
var UIManager = require(47         ); // 47 = UIManager

var createReactNativeComponentClass = require(155                              ); // 155 = createReactNativeComponentClass
var insetsDiffer = require(156           ); // 156 = insetsDiffer
var matricesDiffer = require(157             ); // 157 = matricesDiffer
var pointsDiffer = require(158           ); // 158 = pointsDiffer
var processColor = require(151           ); // 151 = processColor
var resolveAssetSource = require(159                 ); // 159 = resolveAssetSource
var sizesDiffer = require(154          ); // 154 = sizesDiffer
var verifyPropTypes = require(166              ); // 166 = verifyPropTypes

var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var warning = require(23                ); // 23 = fbjs/lib/warning

var hasAttachedDefaultEventTypes = false;

function requireNativeComponent(viewName, componentInterface, extraConfig) {
  function attachDefaultEventTypes(viewConfig) {
    if (Platform.OS === 'android') {
      if (UIManager.ViewManagerNames) {
        viewConfig = merge(viewConfig, UIManager.getDefaultEventTypes());
      } else {
        viewConfig.bubblingEventTypes = merge(viewConfig.bubblingEventTypes, UIManager.genericBubblingEventTypes);
        viewConfig.directEventTypes = merge(viewConfig.directEventTypes, UIManager.genericDirectEventTypes);
      }
    }
  }

  function merge(destination, source) {
    if (!source) {
      return destination;
    }
    if (!destination) {
      return source;
    }

    for (var key in source) {
      if (!source.hasOwnProperty(key)) {
        continue;
      }

      var sourceValue = source[key];
      if (destination.hasOwnProperty(key)) {
        var destinationValue = destination[key];
        if (typeof sourceValue === 'object' && typeof destinationValue === 'object') {
          sourceValue = merge(destinationValue, sourceValue);
        }
      }
      destination[key] = sourceValue;
    }
    return destination;
  }

  function getViewConfig() {
    var viewConfig = UIManager[viewName];

    invariant(viewConfig != null && !viewConfig.NativeProps != null, 'Native component for "%s" does not exist', viewName);

    viewConfig.uiViewClassName = viewName;
    viewConfig.validAttributes = {};

    if (componentInterface) {
      viewConfig.propTypes = typeof componentInterface.__propTypesSecretDontUseThesePlease === 'object' ? componentInterface.__propTypesSecretDontUseThesePlease : componentInterface.propTypes;
    } else {
      viewConfig.propTypes = null;
    }

    var baseModuleName = viewConfig.baseModuleName;
    var nativeProps = babelHelpers.extends({}, viewConfig.NativeProps);
    while (baseModuleName) {
      var baseModule = UIManager[baseModuleName];
      if (!baseModule) {
        warning(false, 'Base module "%s" does not exist', baseModuleName);
        baseModuleName = null;
      } else {
        nativeProps = babelHelpers.extends({}, nativeProps, baseModule.NativeProps);
        baseModuleName = baseModule.baseModuleName;
      }
    }

    for (var key in nativeProps) {
      var useAttribute = false;
      var attribute = {};

      var differ = TypeToDifferMap[nativeProps[key]];
      if (differ) {
        attribute.diff = differ;
        useAttribute = true;
      }

      var processor = TypeToProcessorMap[nativeProps[key]];
      if (processor) {
        attribute.process = processor;
        useAttribute = true;
      }

      viewConfig.validAttributes[key] = useAttribute ? attribute : true;
    }

    viewConfig.validAttributes.style = ReactNativeStyleAttributes;

    if (__DEV__) {
      componentInterface && verifyPropTypes(componentInterface, viewConfig, extraConfig && extraConfig.nativeOnly);
    }

    if (!hasAttachedDefaultEventTypes) {
      attachDefaultEventTypes(viewConfig);
      hasAttachedDefaultEventTypes = true;
    }

    ReactNativeBridgeEventPlugin.processEventTypes(viewConfig);

    return viewConfig;
  }

  return createReactNativeComponentClass(viewName, getViewConfig);
}

var TypeToDifferMap = {
  CATransform3D: matricesDiffer,
  CGPoint: pointsDiffer,
  CGSize: sizesDiffer,
  UIEdgeInsets: insetsDiffer
};

function processColorArray(colors) {
  return colors && colors.map(processColor);
}

var TypeToProcessorMap = {
  CGColor: processColor,
  CGColorArray: processColorArray,
  UIColor: processColor,
  UIColorArray: processColorArray,
  CGImage: resolveAssetSource,
  UIImage: resolveAssetSource,
  RCTImageSource: resolveAssetSource,

  Color: processColor,
  ColorArray: processColorArray
};

module.exports = requireNativeComponent;
}, 144, null, "requireNativeComponent");
__d(/* ReactNativeBridgeEventPlugin */function(global, require, module, exports) {

'use strict';

var _require = require(21           ), // 21 = ReactNative
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = _require.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

module.exports = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactNativeBridgeEventPlugin;
}, 145, null, "ReactNativeBridgeEventPlugin");
__d(/* ReactNativeStyleAttributes */function(global, require, module, exports) {

'use strict';

var ImageStylePropTypes = require(147                  ); // 147 = ImageStylePropTypes
var TextStylePropTypes = require(150                 ); // 150 = TextStylePropTypes
var ViewStylePropTypes = require(138                 ); // 138 = ViewStylePropTypes

var keyMirror = require(149                 ); // 149 = fbjs/lib/keyMirror
var processColor = require(151           ); // 151 = processColor
var processTransform = require(152               ); // 152 = processTransform
var sizesDiffer = require(154          ); // 154 = sizesDiffer

var ReactNativeStyleAttributes = babelHelpers.extends({}, keyMirror(ViewStylePropTypes), keyMirror(TextStylePropTypes), keyMirror(ImageStylePropTypes));

ReactNativeStyleAttributes.transform = { process: processTransform };
ReactNativeStyleAttributes.shadowOffset = { diff: sizesDiffer };

var colorAttributes = { process: processColor };
ReactNativeStyleAttributes.backgroundColor = colorAttributes;
ReactNativeStyleAttributes.borderBottomColor = colorAttributes;
ReactNativeStyleAttributes.borderColor = colorAttributes;
ReactNativeStyleAttributes.borderLeftColor = colorAttributes;
ReactNativeStyleAttributes.borderRightColor = colorAttributes;
ReactNativeStyleAttributes.borderTopColor = colorAttributes;
ReactNativeStyleAttributes.color = colorAttributes;
ReactNativeStyleAttributes.shadowColor = colorAttributes;
ReactNativeStyleAttributes.textDecorationColor = colorAttributes;
ReactNativeStyleAttributes.tintColor = colorAttributes;
ReactNativeStyleAttributes.textShadowColor = colorAttributes;
ReactNativeStyleAttributes.overlayColor = colorAttributes;

module.exports = ReactNativeStyleAttributes;
}, 146, null, "ReactNativeStyleAttributes");
__d(/* ImageStylePropTypes */function(global, require, module, exports) {
'use strict';

var ColorPropType = require(122            ); // 122 = ColorPropType
var ImageResizeMode = require(148              ); // 148 = ImageResizeMode
var LayoutPropTypes = require(139              ); // 139 = LayoutPropTypes
var ReactPropTypes = require(126         ); // 126 = prop-types
var ShadowPropTypesIOS = require(140                 ); // 140 = ShadowPropTypesIOS
var TransformPropTypes = require(141                 ); // 141 = TransformPropTypes

var ImageStylePropTypes = babelHelpers.extends({}, LayoutPropTypes, ShadowPropTypesIOS, TransformPropTypes, {
  resizeMode: ReactPropTypes.oneOf(Object.keys(ImageResizeMode)),
  backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
  backgroundColor: ColorPropType,
  borderColor: ColorPropType,
  borderWidth: ReactPropTypes.number,
  borderRadius: ReactPropTypes.number,
  overflow: ReactPropTypes.oneOf(['visible', 'hidden']),

  tintColor: ColorPropType,
  opacity: ReactPropTypes.number,

  overlayColor: ReactPropTypes.string,

  borderTopLeftRadius: ReactPropTypes.number,
  borderTopRightRadius: ReactPropTypes.number,
  borderBottomLeftRadius: ReactPropTypes.number,
  borderBottomRightRadius: ReactPropTypes.number
});

module.exports = ImageStylePropTypes;
}, 147, null, "ImageStylePropTypes");
__d(/* ImageResizeMode */function(global, require, module, exports) {
'use strict';

var keyMirror = require(149                 ); // 149 = fbjs/lib/keyMirror

var ImageResizeMode = keyMirror({
  contain: null,

  cover: null,

  stretch: null,

  center: null,

  repeat: null
});

module.exports = ImageResizeMode;
}, 148, null, "ImageResizeMode");
__d(/* fbjs/lib/keyMirror.js */function(global, require, module, exports) {

'use strict';

var invariant = require(13           ); // 13 = ./invariant

var keyMirror = function keyMirror(obj) {
  var ret = {};
  var key;
  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;
  for (key in obj) {
    if (!obj.hasOwnProperty(key)) {
      continue;
    }
    ret[key] = key;
  }
  return ret;
};

module.exports = keyMirror;
}, 149, null, "fbjs/lib/keyMirror.js");
__d(/* TextStylePropTypes */function(global, require, module, exports) {
'use strict';

var ColorPropType = require(122            ); // 122 = ColorPropType
var ReactPropTypes = require(126         ); // 126 = prop-types
var ViewStylePropTypes = require(138                 ); // 138 = ViewStylePropTypes

var TextStylePropTypes = babelHelpers.extends({}, ViewStylePropTypes, {

  color: ColorPropType,
  fontFamily: ReactPropTypes.string,
  fontSize: ReactPropTypes.number,
  fontStyle: ReactPropTypes.oneOf(['normal', 'italic']),

  fontWeight: ReactPropTypes.oneOf(['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900']),

  fontVariant: ReactPropTypes.arrayOf(ReactPropTypes.oneOf(['small-caps', 'oldstyle-nums', 'lining-nums', 'tabular-nums', 'proportional-nums'])),
  textShadowOffset: ReactPropTypes.shape({ width: ReactPropTypes.number, height: ReactPropTypes.number }),
  textShadowRadius: ReactPropTypes.number,
  textShadowColor: ColorPropType,

  letterSpacing: ReactPropTypes.number,
  lineHeight: ReactPropTypes.number,

  textAlign: ReactPropTypes.oneOf(['auto', 'left', 'right', 'center', 'justify']),

  textAlignVertical: ReactPropTypes.oneOf(['auto', 'top', 'bottom', 'center']),

  includeFontPadding: ReactPropTypes.bool,
  textDecorationLine: ReactPropTypes.oneOf(['none', 'underline', 'line-through', 'underline line-through']),

  textDecorationStyle: ReactPropTypes.oneOf(['solid', 'double', 'dotted', 'dashed']),

  textDecorationColor: ColorPropType,

  writingDirection: ReactPropTypes.oneOf(['auto', 'ltr', 'rtl'])
});

module.exports = TextStylePropTypes;
}, 150, null, "TextStylePropTypes");
__d(/* processColor */function(global, require, module, exports) {
'use strict';

var Platform = require(46        ); // 46 = Platform

var normalizeColor = require(123             ); // 123 = normalizeColor

function processColor(color) {
  if (color === undefined || color === null) {
    return color;
  }

  var int32Color = normalizeColor(color);
  if (int32Color === null || int32Color === undefined) {
    return undefined;
  }

  int32Color = (int32Color << 24 | int32Color >>> 8) >>> 0;

  if (Platform.OS === 'android') {
    int32Color = int32Color | 0x0;
  }
  return int32Color;
}

module.exports = processColor;
}, 151, null, "processColor");
__d(/* processTransform */function(global, require, module, exports) {
'use strict';

var MatrixMath = require(153         ); // 153 = MatrixMath
var Platform = require(46        ); // 46 = Platform

var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var stringifySafe = require(33             ); // 33 = stringifySafe

function processTransform(transform) {
  if (__DEV__) {
    _validateTransforms(transform);
  }

  if (Platform.OS === 'android' || Platform.OS === 'ios') {
    return transform;
  }

  var result = MatrixMath.createIdentityMatrix();

  transform.forEach(function (transformation) {
    var key = Object.keys(transformation)[0];
    var value = transformation[key];

    switch (key) {
      case 'matrix':
        MatrixMath.multiplyInto(result, result, value);
        break;
      case 'perspective':
        _multiplyTransform(result, MatrixMath.reusePerspectiveCommand, [value]);
        break;
      case 'rotateX':
        _multiplyTransform(result, MatrixMath.reuseRotateXCommand, [_convertToRadians(value)]);
        break;
      case 'rotateY':
        _multiplyTransform(result, MatrixMath.reuseRotateYCommand, [_convertToRadians(value)]);
        break;
      case 'rotate':
      case 'rotateZ':
        _multiplyTransform(result, MatrixMath.reuseRotateZCommand, [_convertToRadians(value)]);
        break;
      case 'scale':
        _multiplyTransform(result, MatrixMath.reuseScaleCommand, [value]);
        break;
      case 'scaleX':
        _multiplyTransform(result, MatrixMath.reuseScaleXCommand, [value]);
        break;
      case 'scaleY':
        _multiplyTransform(result, MatrixMath.reuseScaleYCommand, [value]);
        break;
      case 'translate':
        _multiplyTransform(result, MatrixMath.reuseTranslate3dCommand, [value[0], value[1], value[2] || 0]);
        break;
      case 'translateX':
        _multiplyTransform(result, MatrixMath.reuseTranslate2dCommand, [value, 0]);
        break;
      case 'translateY':
        _multiplyTransform(result, MatrixMath.reuseTranslate2dCommand, [0, value]);
        break;
      case 'skewX':
        _multiplyTransform(result, MatrixMath.reuseSkewXCommand, [_convertToRadians(value)]);
        break;
      case 'skewY':
        _multiplyTransform(result, MatrixMath.reuseSkewYCommand, [_convertToRadians(value)]);
        break;
      default:
        throw new Error('Invalid transform name: ' + key);
    }
  });

  return result;
}

function _multiplyTransform(result, matrixMathFunction, args) {
  var matrixToApply = MatrixMath.createIdentityMatrix();
  var argsWithIdentity = [matrixToApply].concat(args);
  matrixMathFunction.apply(this, argsWithIdentity);
  MatrixMath.multiplyInto(result, result, matrixToApply);
}

function _convertToRadians(value) {
  var floatValue = parseFloat(value);
  return value.indexOf('rad') > -1 ? floatValue : floatValue * Math.PI / 180;
}

function _validateTransforms(transform) {
  transform.forEach(function (transformation) {
    var keys = Object.keys(transformation);
    invariant(keys.length === 1, 'You must specify exactly one property per transform object. Passed properties: %s', stringifySafe(transformation));
    var key = keys[0];
    var value = transformation[key];
    _validateTransform(key, value, transformation);
  });
}

function _validateTransform(key, value, transformation) {
  invariant(!value.getValue, 'You passed an Animated.Value to a normal component. ' + 'You need to wrap that component in an Animated. For example, ' + 'replace <View /> by <Animated.View />.');

  var multivalueTransforms = ['matrix', 'translate'];
  if (multivalueTransforms.indexOf(key) !== -1) {
    invariant(Array.isArray(value), 'Transform with key of %s must have an array as the value: %s', key, stringifySafe(transformation));
  }
  switch (key) {
    case 'matrix':
      invariant(value.length === 9 || value.length === 16, 'Matrix transform must have a length of 9 (2d) or 16 (3d). ' + 'Provided matrix has a length of %s: %s', value.length, stringifySafe(transformation));
      break;
    case 'translate':
      invariant(value.length === 2 || value.length === 3, 'Transform with key translate must be an array of length 2 or 3, found %s: %s', value.length, stringifySafe(transformation));
      break;
    case 'rotateX':
    case 'rotateY':
    case 'rotateZ':
    case 'rotate':
    case 'skewX':
    case 'skewY':
      invariant(typeof value === 'string', 'Transform with key of "%s" must be a string: %s', key, stringifySafe(transformation));
      invariant(value.indexOf('deg') > -1 || value.indexOf('rad') > -1, 'Rotate transform must be expressed in degrees (deg) or radians ' + '(rad): %s', stringifySafe(transformation));
      break;
    case 'perspective':
      invariant(typeof value === 'number', 'Transform with key of "%s" must be a number: %s', key, stringifySafe(transformation));
      invariant(value !== 0, 'Transform with key of "%s" cannot be zero: %s', key, stringifySafe(transformation));
      break;
    case 'translateX':
    case 'translateY':
    case 'scale':
    case 'scaleX':
    case 'scaleY':
      invariant(typeof value === 'number', 'Transform with key of "%s" must be a number: %s', key, stringifySafe(transformation));
      break;
    default:
      invariant(false, 'Invalid transform %s: %s', key, stringifySafe(transformation));
  }
}

module.exports = processTransform;
}, 152, null, "processTransform");
__d(/* MatrixMath */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var MatrixMath = {
  createIdentityMatrix: function createIdentityMatrix() {
    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
  },

  createCopy: function createCopy(m) {
    return [m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8], m[9], m[10], m[11], m[12], m[13], m[14], m[15]];
  },

  createOrthographic: function createOrthographic(left, right, bottom, top, near, far) {
    var a = 2 / (right - left);
    var b = 2 / (top - bottom);
    var c = -2 / (far - near);

    var tx = -(right + left) / (right - left);
    var ty = -(top + bottom) / (top - bottom);
    var tz = -(far + near) / (far - near);

    return [a, 0, 0, 0, 0, b, 0, 0, 0, 0, c, 0, tx, ty, tz, 1];
  },

  createFrustum: function createFrustum(left, right, bottom, top, near, far) {
    var r_width = 1 / (right - left);
    var r_height = 1 / (top - bottom);
    var r_depth = 1 / (near - far);
    var x = 2 * (near * r_width);
    var y = 2 * (near * r_height);
    var A = (right + left) * r_width;
    var B = (top + bottom) * r_height;
    var C = (far + near) * r_depth;
    var D = 2 * (far * near * r_depth);
    return [x, 0, 0, 0, 0, y, 0, 0, A, B, C, -1, 0, 0, D, 0];
  },

  createPerspective: function createPerspective(fovInRadians, aspect, near, far) {
    var h = 1 / Math.tan(fovInRadians / 2);
    var r_depth = 1 / (near - far);
    var C = (far + near) * r_depth;
    var D = 2 * (far * near * r_depth);
    return [h / aspect, 0, 0, 0, 0, h, 0, 0, 0, 0, C, -1, 0, 0, D, 0];
  },

  createTranslate2d: function createTranslate2d(x, y) {
    var mat = MatrixMath.createIdentityMatrix();
    MatrixMath.reuseTranslate2dCommand(mat, x, y);
    return mat;
  },

  reuseTranslate2dCommand: function reuseTranslate2dCommand(matrixCommand, x, y) {
    matrixCommand[12] = x;
    matrixCommand[13] = y;
  },

  reuseTranslate3dCommand: function reuseTranslate3dCommand(matrixCommand, x, y, z) {
    matrixCommand[12] = x;
    matrixCommand[13] = y;
    matrixCommand[14] = z;
  },

  createScale: function createScale(factor) {
    var mat = MatrixMath.createIdentityMatrix();
    MatrixMath.reuseScaleCommand(mat, factor);
    return mat;
  },

  reuseScaleCommand: function reuseScaleCommand(matrixCommand, factor) {
    matrixCommand[0] = factor;
    matrixCommand[5] = factor;
  },

  reuseScale3dCommand: function reuseScale3dCommand(matrixCommand, x, y, z) {
    matrixCommand[0] = x;
    matrixCommand[5] = y;
    matrixCommand[10] = z;
  },

  reusePerspectiveCommand: function reusePerspectiveCommand(matrixCommand, p) {
    matrixCommand[11] = -1 / p;
  },

  reuseScaleXCommand: function reuseScaleXCommand(matrixCommand, factor) {
    matrixCommand[0] = factor;
  },
  reuseScaleYCommand: function reuseScaleYCommand(matrixCommand, factor) {
    matrixCommand[5] = factor;
  },
  reuseScaleZCommand: function reuseScaleZCommand(matrixCommand, factor) {
    matrixCommand[10] = factor;
  },


  reuseRotateXCommand: function reuseRotateXCommand(matrixCommand, radians) {
    matrixCommand[5] = Math.cos(radians);
    matrixCommand[6] = Math.sin(radians);
    matrixCommand[9] = -Math.sin(radians);
    matrixCommand[10] = Math.cos(radians);
  },

  reuseRotateYCommand: function reuseRotateYCommand(matrixCommand, amount) {
    matrixCommand[0] = Math.cos(amount);
    matrixCommand[2] = -Math.sin(amount);
    matrixCommand[8] = Math.sin(amount);
    matrixCommand[10] = Math.cos(amount);
  },

  reuseRotateZCommand: function reuseRotateZCommand(matrixCommand, radians) {
    matrixCommand[0] = Math.cos(radians);
    matrixCommand[1] = Math.sin(radians);
    matrixCommand[4] = -Math.sin(radians);
    matrixCommand[5] = Math.cos(radians);
  },

  createRotateZ: function createRotateZ(radians) {
    var mat = MatrixMath.createIdentityMatrix();
    MatrixMath.reuseRotateZCommand(mat, radians);
    return mat;
  },

  reuseSkewXCommand: function reuseSkewXCommand(matrixCommand, radians) {
    matrixCommand[4] = Math.tan(radians);
  },

  reuseSkewYCommand: function reuseSkewYCommand(matrixCommand, radians) {
    matrixCommand[1] = Math.tan(radians);
  },

  multiplyInto: function multiplyInto(out, a, b) {
    var a00 = a[0],
        a01 = a[1],
        a02 = a[2],
        a03 = a[3],
        a10 = a[4],
        a11 = a[5],
        a12 = a[6],
        a13 = a[7],
        a20 = a[8],
        a21 = a[9],
        a22 = a[10],
        a23 = a[11],
        a30 = a[12],
        a31 = a[13],
        a32 = a[14],
        a33 = a[15];

    var b0 = b[0],
        b1 = b[1],
        b2 = b[2],
        b3 = b[3];
    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

    b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];
    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

    b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];
    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

    b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];
    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
  },

  determinant: function determinant(matrix) {
    var _matrix = babelHelpers.slicedToArray(matrix, 16),
        m00 = _matrix[0],
        m01 = _matrix[1],
        m02 = _matrix[2],
        m03 = _matrix[3],
        m10 = _matrix[4],
        m11 = _matrix[5],
        m12 = _matrix[6],
        m13 = _matrix[7],
        m20 = _matrix[8],
        m21 = _matrix[9],
        m22 = _matrix[10],
        m23 = _matrix[11],
        m30 = _matrix[12],
        m31 = _matrix[13],
        m32 = _matrix[14],
        m33 = _matrix[15];

    return m03 * m12 * m21 * m30 - m02 * m13 * m21 * m30 - m03 * m11 * m22 * m30 + m01 * m13 * m22 * m30 + m02 * m11 * m23 * m30 - m01 * m12 * m23 * m30 - m03 * m12 * m20 * m31 + m02 * m13 * m20 * m31 + m03 * m10 * m22 * m31 - m00 * m13 * m22 * m31 - m02 * m10 * m23 * m31 + m00 * m12 * m23 * m31 + m03 * m11 * m20 * m32 - m01 * m13 * m20 * m32 - m03 * m10 * m21 * m32 + m00 * m13 * m21 * m32 + m01 * m10 * m23 * m32 - m00 * m11 * m23 * m32 - m02 * m11 * m20 * m33 + m01 * m12 * m20 * m33 + m02 * m10 * m21 * m33 - m00 * m12 * m21 * m33 - m01 * m10 * m22 * m33 + m00 * m11 * m22 * m33;
  },
  inverse: function inverse(matrix) {
    var det = MatrixMath.determinant(matrix);
    if (!det) {
      return matrix;
    }

    var _matrix2 = babelHelpers.slicedToArray(matrix, 16),
        m00 = _matrix2[0],
        m01 = _matrix2[1],
        m02 = _matrix2[2],
        m03 = _matrix2[3],
        m10 = _matrix2[4],
        m11 = _matrix2[5],
        m12 = _matrix2[6],
        m13 = _matrix2[7],
        m20 = _matrix2[8],
        m21 = _matrix2[9],
        m22 = _matrix2[10],
        m23 = _matrix2[11],
        m30 = _matrix2[12],
        m31 = _matrix2[13],
        m32 = _matrix2[14],
        m33 = _matrix2[15];

    return [(m12 * m23 * m31 - m13 * m22 * m31 + m13 * m21 * m32 - m11 * m23 * m32 - m12 * m21 * m33 + m11 * m22 * m33) / det, (m03 * m22 * m31 - m02 * m23 * m31 - m03 * m21 * m32 + m01 * m23 * m32 + m02 * m21 * m33 - m01 * m22 * m33) / det, (m02 * m13 * m31 - m03 * m12 * m31 + m03 * m11 * m32 - m01 * m13 * m32 - m02 * m11 * m33 + m01 * m12 * m33) / det, (m03 * m12 * m21 - m02 * m13 * m21 - m03 * m11 * m22 + m01 * m13 * m22 + m02 * m11 * m23 - m01 * m12 * m23) / det, (m13 * m22 * m30 - m12 * m23 * m30 - m13 * m20 * m32 + m10 * m23 * m32 + m12 * m20 * m33 - m10 * m22 * m33) / det, (m02 * m23 * m30 - m03 * m22 * m30 + m03 * m20 * m32 - m00 * m23 * m32 - m02 * m20 * m33 + m00 * m22 * m33) / det, (m03 * m12 * m30 - m02 * m13 * m30 - m03 * m10 * m32 + m00 * m13 * m32 + m02 * m10 * m33 - m00 * m12 * m33) / det, (m02 * m13 * m20 - m03 * m12 * m20 + m03 * m10 * m22 - m00 * m13 * m22 - m02 * m10 * m23 + m00 * m12 * m23) / det, (m11 * m23 * m30 - m13 * m21 * m30 + m13 * m20 * m31 - m10 * m23 * m31 - m11 * m20 * m33 + m10 * m21 * m33) / det, (m03 * m21 * m30 - m01 * m23 * m30 - m03 * m20 * m31 + m00 * m23 * m31 + m01 * m20 * m33 - m00 * m21 * m33) / det, (m01 * m13 * m30 - m03 * m11 * m30 + m03 * m10 * m31 - m00 * m13 * m31 - m01 * m10 * m33 + m00 * m11 * m33) / det, (m03 * m11 * m20 - m01 * m13 * m20 - m03 * m10 * m21 + m00 * m13 * m21 + m01 * m10 * m23 - m00 * m11 * m23) / det, (m12 * m21 * m30 - m11 * m22 * m30 - m12 * m20 * m31 + m10 * m22 * m31 + m11 * m20 * m32 - m10 * m21 * m32) / det, (m01 * m22 * m30 - m02 * m21 * m30 + m02 * m20 * m31 - m00 * m22 * m31 - m01 * m20 * m32 + m00 * m21 * m32) / det, (m02 * m11 * m30 - m01 * m12 * m30 - m02 * m10 * m31 + m00 * m12 * m31 + m01 * m10 * m32 - m00 * m11 * m32) / det, (m01 * m12 * m20 - m02 * m11 * m20 + m02 * m10 * m21 - m00 * m12 * m21 - m01 * m10 * m22 + m00 * m11 * m22) / det];
  },
  transpose: function transpose(m) {
    return [m[0], m[4], m[8], m[12], m[1], m[5], m[9], m[13], m[2], m[6], m[10], m[14], m[3], m[7], m[11], m[15]];
  },
  multiplyVectorByMatrix: function multiplyVectorByMatrix(v, m) {
    var _v = babelHelpers.slicedToArray(v, 4),
        vx = _v[0],
        vy = _v[1],
        vz = _v[2],
        vw = _v[3];

    return [vx * m[0] + vy * m[4] + vz * m[8] + vw * m[12], vx * m[1] + vy * m[5] + vz * m[9] + vw * m[13], vx * m[2] + vy * m[6] + vz * m[10] + vw * m[14], vx * m[3] + vy * m[7] + vz * m[11] + vw * m[15]];
  },
  v3Length: function v3Length(a) {
    return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);
  },
  v3Normalize: function v3Normalize(vector, v3Length) {
    var im = 1 / (v3Length || MatrixMath.v3Length(vector));
    return [vector[0] * im, vector[1] * im, vector[2] * im];
  },
  v3Dot: function v3Dot(a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
  },
  v3Combine: function v3Combine(a, b, aScale, bScale) {
    return [aScale * a[0] + bScale * b[0], aScale * a[1] + bScale * b[1], aScale * a[2] + bScale * b[2]];
  },
  v3Cross: function v3Cross(a, b) {
    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
  },
  quaternionToDegreesXYZ: function quaternionToDegreesXYZ(q, matrix, row) {
    var _q = babelHelpers.slicedToArray(q, 4),
        qx = _q[0],
        qy = _q[1],
        qz = _q[2],
        qw = _q[3];

    var qw2 = qw * qw;
    var qx2 = qx * qx;
    var qy2 = qy * qy;
    var qz2 = qz * qz;
    var test = qx * qy + qz * qw;
    var unit = qw2 + qx2 + qy2 + qz2;
    var conv = 180 / Math.PI;

    if (test > 0.49999 * unit) {
      return [0, 2 * Math.atan2(qx, qw) * conv, 90];
    }
    if (test < -0.49999 * unit) {
      return [0, -2 * Math.atan2(qx, qw) * conv, -90];
    }

    return [MatrixMath.roundTo3Places(Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx2 - 2 * qz2) * conv), MatrixMath.roundTo3Places(Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy2 - 2 * qz2) * conv), MatrixMath.roundTo3Places(Math.asin(2 * qx * qy + 2 * qz * qw) * conv)];
  },
  roundTo3Places: function roundTo3Places(n) {
    var arr = n.toString().split('e');
    return Math.round(arr[0] + 'e' + (arr[1] ? +arr[1] - 3 : 3)) * 0.001;
  },
  decomposeMatrix: function decomposeMatrix(transformMatrix) {

    invariant(transformMatrix.length === 16, 'Matrix decomposition needs a list of 3d matrix values, received %s', transformMatrix);

    var perspective = [];
    var quaternion = [];
    var scale = [];
    var skew = [];
    var translation = [];

    if (!transformMatrix[15]) {
      return;
    }
    var matrix = [];
    var perspectiveMatrix = [];
    for (var i = 0; i < 4; i++) {
      matrix.push([]);
      for (var j = 0; j < 4; j++) {
        var value = transformMatrix[i * 4 + j] / transformMatrix[15];
        matrix[i].push(value);
        perspectiveMatrix.push(j === 3 ? 0 : value);
      }
    }
    perspectiveMatrix[15] = 1;

    if (!MatrixMath.determinant(perspectiveMatrix)) {
      return;
    }

    if (matrix[0][3] !== 0 || matrix[1][3] !== 0 || matrix[2][3] !== 0) {
      var rightHandSide = [matrix[0][3], matrix[1][3], matrix[2][3], matrix[3][3]];

      var inversePerspectiveMatrix = MatrixMath.inverse(perspectiveMatrix);
      var transposedInversePerspectiveMatrix = MatrixMath.transpose(inversePerspectiveMatrix);
      var perspective = MatrixMath.multiplyVectorByMatrix(rightHandSide, transposedInversePerspectiveMatrix);
    } else {
      perspective[0] = perspective[1] = perspective[2] = 0;
      perspective[3] = 1;
    }

    for (var i = 0; i < 3; i++) {
      translation[i] = matrix[3][i];
    }

    var row = [];
    for (i = 0; i < 3; i++) {
      row[i] = [matrix[i][0], matrix[i][1], matrix[i][2]];
    }

    scale[0] = MatrixMath.v3Length(row[0]);
    row[0] = MatrixMath.v3Normalize(row[0], scale[0]);

    skew[0] = MatrixMath.v3Dot(row[0], row[1]);
    row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);

    skew[0] = MatrixMath.v3Dot(row[0], row[1]);
    row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);

    scale[1] = MatrixMath.v3Length(row[1]);
    row[1] = MatrixMath.v3Normalize(row[1], scale[1]);
    skew[0] /= scale[1];

    skew[1] = MatrixMath.v3Dot(row[0], row[2]);
    row[2] = MatrixMath.v3Combine(row[2], row[0], 1.0, -skew[1]);
    skew[2] = MatrixMath.v3Dot(row[1], row[2]);
    row[2] = MatrixMath.v3Combine(row[2], row[1], 1.0, -skew[2]);

    scale[2] = MatrixMath.v3Length(row[2]);
    row[2] = MatrixMath.v3Normalize(row[2], scale[2]);
    skew[1] /= scale[2];
    skew[2] /= scale[2];

    var pdum3 = MatrixMath.v3Cross(row[1], row[2]);
    if (MatrixMath.v3Dot(row[0], pdum3) < 0) {
      for (i = 0; i < 3; i++) {
        scale[i] *= -1;
        row[i][0] *= -1;
        row[i][1] *= -1;
        row[i][2] *= -1;
      }
    }

    quaternion[0] = 0.5 * Math.sqrt(Math.max(1 + row[0][0] - row[1][1] - row[2][2], 0));
    quaternion[1] = 0.5 * Math.sqrt(Math.max(1 - row[0][0] + row[1][1] - row[2][2], 0));
    quaternion[2] = 0.5 * Math.sqrt(Math.max(1 - row[0][0] - row[1][1] + row[2][2], 0));
    quaternion[3] = 0.5 * Math.sqrt(Math.max(1 + row[0][0] + row[1][1] + row[2][2], 0));

    if (row[2][1] > row[1][2]) {
      quaternion[0] = -quaternion[0];
    }
    if (row[0][2] > row[2][0]) {
      quaternion[1] = -quaternion[1];
    }
    if (row[1][0] > row[0][1]) {
      quaternion[2] = -quaternion[2];
    }

    var rotationDegrees;
    if (quaternion[0] < 0.001 && quaternion[0] >= 0 && quaternion[1] < 0.001 && quaternion[1] >= 0) {
      rotationDegrees = [0, 0, MatrixMath.roundTo3Places(Math.atan2(row[0][1], row[0][0]) * 180 / Math.PI)];
    } else {
      rotationDegrees = MatrixMath.quaternionToDegreesXYZ(quaternion, matrix, row);
    }

    return {
      rotationDegrees: rotationDegrees,
      perspective: perspective,
      quaternion: quaternion,
      scale: scale,
      skew: skew,
      translation: translation,

      rotate: rotationDegrees[2],
      rotateX: rotationDegrees[0],
      rotateY: rotationDegrees[1],
      scaleX: scale[0],
      scaleY: scale[1],
      translateX: translation[0],
      translateY: translation[1]
    };
  }
};

module.exports = MatrixMath;
}, 153, null, "MatrixMath");
__d(/* sizesDiffer */function(global, require, module, exports) {
'use strict';

var dummySize = { width: undefined, height: undefined };

var sizesDiffer = function sizesDiffer(one, two) {
  one = one || dummySize;
  two = two || dummySize;
  return one !== two && (one.width !== two.width || one.height !== two.height);
};

module.exports = sizesDiffer;
}, 154, null, "sizesDiffer");
__d(/* createReactNativeComponentClass */function(global, require, module, exports) {

'use strict';

var _require = require(21           ), // 21 = ReactNative
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = _require.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

module.exports = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.createReactNativeComponentClass;
}, 155, null, "createReactNativeComponentClass");
__d(/* insetsDiffer */function(global, require, module, exports) {
'use strict';

var dummyInsets = {
  top: undefined,
  left: undefined,
  right: undefined,
  bottom: undefined
};

var insetsDiffer = function insetsDiffer(one, two) {
  one = one || dummyInsets;
  two = two || dummyInsets;
  return one !== two && (one.top !== two.top || one.left !== two.left || one.right !== two.right || one.bottom !== two.bottom);
};

module.exports = insetsDiffer;
}, 156, null, "insetsDiffer");
__d(/* matricesDiffer */function(global, require, module, exports) {
'use strict';

var matricesDiffer = function matricesDiffer(one, two) {
  if (one === two) {
    return false;
  }
  return !one || !two || one[12] !== two[12] || one[13] !== two[13] || one[14] !== two[14] || one[5] !== two[5] || one[10] !== two[10] || one[1] !== two[1] || one[2] !== two[2] || one[3] !== two[3] || one[4] !== two[4] || one[6] !== two[6] || one[7] !== two[7] || one[8] !== two[8] || one[9] !== two[9] || one[11] !== two[11] || one[15] !== two[15];
};

module.exports = matricesDiffer;
}, 157, null, "matricesDiffer");
__d(/* pointsDiffer */function(global, require, module, exports) {
'use strict';

var dummyPoint = { x: undefined, y: undefined };

var pointsDiffer = function pointsDiffer(one, two) {
  one = one || dummyPoint;
  two = two || dummyPoint;
  return one !== two && (one.x !== two.x || one.y !== two.y);
};

module.exports = pointsDiffer;
}, 158, null, "pointsDiffer");
__d(/* resolveAssetSource */function(global, require, module, exports) {
'use strict';

var AssetRegistry = require(160            ); // 160 = AssetRegistry
var AssetSourceResolver = require(161                  ); // 161 = AssetSourceResolver
var NativeModules = require(15             ); // 15 = NativeModules

var _customSourceTransformer = void 0,
    _serverURL = void 0,
    _bundleSourceURL = void 0;

function getDevServerURL() {
  if (_serverURL === undefined) {
    var scriptURL = NativeModules.SourceCode.scriptURL;
    var match = scriptURL && scriptURL.match(/^https?:\/\/.*?\//);
    if (match) {
      _serverURL = match[0];
    } else {
      _serverURL = null;
    }
  }
  return _serverURL;
}

function getBundleSourceURL() {
  if (_bundleSourceURL === undefined) {
    var scriptURL = NativeModules.SourceCode.scriptURL;
    if (!scriptURL) {
      _bundleSourceURL = null;
      return _bundleSourceURL;
    }
    if (scriptURL.startsWith('assets://')) {
      _bundleSourceURL = null;
      return _bundleSourceURL;
    }
    _bundleSourceURL = scriptURL.substring(0, scriptURL.lastIndexOf('/') + 1);
    if (!scriptURL.startsWith('file://')) {
      _bundleSourceURL = 'file://' + _bundleSourceURL;
    }
  }

  return _bundleSourceURL;
}

function setCustomSourceTransformer(transformer) {
  _customSourceTransformer = transformer;
}

function resolveAssetSource(source) {
  if (typeof source === 'object') {
    return source;
  }

  var asset = AssetRegistry.getAssetByID(source);
  if (!asset) {
    return null;
  }

  var resolver = new AssetSourceResolver(getDevServerURL(), getBundleSourceURL(), asset);
  if (_customSourceTransformer) {
    return _customSourceTransformer(resolver);
  }
  return resolver.defaultAsset();
}

module.exports = resolveAssetSource;
module.exports.pickScale = AssetSourceResolver.pickScale;
module.exports.setCustomSourceTransformer = setCustomSourceTransformer;
}, 159, null, "resolveAssetSource");
__d(/* AssetRegistry */function(global, require, module, exports) {
'use strict';

var assets = [];

function registerAsset(asset) {
  return assets.push(asset);
}

function getAssetByID(assetId) {
  return assets[assetId - 1];
}

module.exports = { registerAsset: registerAsset, getAssetByID: getAssetByID };
}, 160, null, "AssetRegistry");
__d(/* AssetSourceResolver */function(global, require, module, exports) {
'use strict';

var PixelRatio = require(162         ); // 162 = PixelRatio
var Platform = require(46        ); // 46 = Platform

var assetPathUtils = require(165                                    ); // 165 = ../../local-cli/bundle/assetPathUtils
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

function getScaledAssetPath(asset) {
  var scale = AssetSourceResolver.pickScale(asset.scales, PixelRatio.get());
  var scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';
  var assetDir = assetPathUtils.getBasePath(asset);
  return assetDir + '/' + asset.name + scaleSuffix + '.' + asset.type;
}

function getAssetPathInDrawableFolder(asset) {
  var scale = AssetSourceResolver.pickScale(asset.scales, PixelRatio.get());
  var drawbleFolder = assetPathUtils.getAndroidDrawableFolderName(asset, scale);
  var fileName = assetPathUtils.getAndroidResourceIdentifier(asset);
  return drawbleFolder + '/' + fileName + '.' + asset.type;
}

var AssetSourceResolver = function () {
  function AssetSourceResolver(serverUrl, bundleUrl, asset) {
    babelHelpers.classCallCheck(this, AssetSourceResolver);

    this.serverUrl = serverUrl;
    this.bundleUrl = bundleUrl;
    this.asset = asset;
  }

  babelHelpers.createClass(AssetSourceResolver, [{
    key: 'isLoadedFromServer',
    value: function isLoadedFromServer() {
      return !!this.serverUrl;
    }
  }, {
    key: 'isLoadedFromFileSystem',
    value: function isLoadedFromFileSystem() {
      return !!this.bundleUrl;
    }
  }, {
    key: 'defaultAsset',
    value: function defaultAsset() {
      if (this.isLoadedFromServer()) {
        return this.assetServerURL();
      }

      if (Platform.OS === 'android') {
        return this.isLoadedFromFileSystem() ? this.drawableFolderInBundle() : this.resourceIdentifierWithoutScale();
      } else {
        return this.scaledAssetURLInBundle();
      }
    }
  }, {
    key: 'assetServerURL',
    value: function assetServerURL() {
      invariant(!!this.serverUrl, 'need server to load from');
      return this.fromSource(this.serverUrl + getScaledAssetPath(this.asset) + '?platform=' + Platform.OS + '&hash=' + this.asset.hash);
    }
  }, {
    key: 'scaledAssetPath',
    value: function scaledAssetPath() {
      return this.fromSource(getScaledAssetPath(this.asset));
    }
  }, {
    key: 'scaledAssetURLInBundle',
    value: function scaledAssetURLInBundle() {
      var path = this.bundleUrl || 'file://';
      return this.fromSource(path + getScaledAssetPath(this.asset));
    }
  }, {
    key: 'resourceIdentifierWithoutScale',
    value: function resourceIdentifierWithoutScale() {
      invariant(Platform.OS === 'android', 'resource identifiers work on Android');
      return this.fromSource(assetPathUtils.getAndroidResourceIdentifier(this.asset));
    }
  }, {
    key: 'drawableFolderInBundle',
    value: function drawableFolderInBundle() {
      var path = this.bundleUrl || 'file://';
      return this.fromSource(path + getAssetPathInDrawableFolder(this.asset));
    }
  }, {
    key: 'fromSource',
    value: function fromSource(source) {
      return {
        __packager_asset: true,
        width: this.asset.width,
        height: this.asset.height,
        uri: source,
        scale: AssetSourceResolver.pickScale(this.asset.scales, PixelRatio.get())
      };
    }
  }], [{
    key: 'pickScale',
    value: function pickScale(scales, deviceScale) {
      for (var i = 0; i < scales.length; i++) {
        if (scales[i] >= deviceScale) {
          return scales[i];
        }
      }

      return scales[scales.length - 1] || 1;
    }
  }]);
  return AssetSourceResolver;
}();

module.exports = AssetSourceResolver;
}, 161, null, "AssetSourceResolver");
__d(/* PixelRatio */function(global, require, module, exports) {
'use strict';

var Dimensions = require(163         ); // 163 = Dimensions

var PixelRatio = function () {
  function PixelRatio() {
    babelHelpers.classCallCheck(this, PixelRatio);
  }

  babelHelpers.createClass(PixelRatio, null, [{
    key: 'get',
    value: function get() {
      return Dimensions.get('window').scale;
    }
  }, {
    key: 'getFontScale',
    value: function getFontScale() {
      return Dimensions.get('window').fontScale || PixelRatio.get();
    }
  }, {
    key: 'getPixelSizeForLayoutSize',
    value: function getPixelSizeForLayoutSize(layoutSize) {
      return Math.round(layoutSize * PixelRatio.get());
    }
  }, {
    key: 'roundToNearestPixel',
    value: function roundToNearestPixel(layoutSize) {
      var ratio = PixelRatio.get();
      return Math.round(layoutSize * ratio) / ratio;
    }
  }, {
    key: 'startDetecting',
    value: function startDetecting() {}
  }]);
  return PixelRatio;
}();

module.exports = PixelRatio;
}, 162, null, "PixelRatio");
__d(/* Dimensions */function(global, require, module, exports) {
'use strict';

var DeviceInfo = require(164         ); // 164 = DeviceInfo
var EventEmitter = require(81            ); // 81 = EventEmitter
var Platform = require(46        ); // 46 = Platform
var RCTDeviceEventEmitter = require(84                     ); // 84 = RCTDeviceEventEmitter

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var eventEmitter = new EventEmitter();
var dimensionsInitialized = false;
var dimensions = {};

var Dimensions = function () {
  function Dimensions() {
    babelHelpers.classCallCheck(this, Dimensions);
  }

  babelHelpers.createClass(Dimensions, null, [{
    key: 'set',
    value: function set(dims) {
      if (dims && dims.windowPhysicalPixels) {
        dims = JSON.parse(JSON.stringify(dims));

        var windowPhysicalPixels = dims.windowPhysicalPixels;
        dims.window = {
          width: windowPhysicalPixels.width / windowPhysicalPixels.scale,
          height: windowPhysicalPixels.height / windowPhysicalPixels.scale,
          scale: windowPhysicalPixels.scale,
          fontScale: windowPhysicalPixels.fontScale
        };
        if (Platform.OS === 'android') {
          var screenPhysicalPixels = dims.screenPhysicalPixels;
          dims.screen = {
            width: screenPhysicalPixels.width / screenPhysicalPixels.scale,
            height: screenPhysicalPixels.height / screenPhysicalPixels.scale,
            scale: screenPhysicalPixels.scale,
            fontScale: screenPhysicalPixels.fontScale
          };

          delete dims.screenPhysicalPixels;
        } else {
          dims.screen = dims.window;
        }

        delete dims.windowPhysicalPixels;
      }

      babelHelpers.extends(dimensions, dims);
      if (dimensionsInitialized) {
        eventEmitter.emit('change', {
          window: dimensions.window,
          screen: dimensions.screen
        });
      } else {
        dimensionsInitialized = true;
      }
    }
  }, {
    key: 'get',
    value: function get(dim) {
      invariant(dimensions[dim], 'No dimension set for key ' + dim);
      return dimensions[dim];
    }
  }, {
    key: 'addEventListener',
    value: function addEventListener(type, handler) {
      invariant('change' === type, 'Trying to subscribe to unknown event: "%s"', type);
      eventEmitter.addListener(type, handler);
    }
  }, {
    key: 'removeEventListener',
    value: function removeEventListener(type, handler) {
      invariant('change' === type, 'Trying to remove listener for unknown event: "%s"', type);
      eventEmitter.removeListener(type, handler);
    }
  }]);
  return Dimensions;
}();

Dimensions.set(DeviceInfo.Dimensions);
RCTDeviceEventEmitter.addListener('didUpdateDimensions', function (update) {
  Dimensions.set(update);
});

module.exports = Dimensions;
}, 163, null, "Dimensions");
__d(/* DeviceInfo */function(global, require, module, exports) {
'use strict';

var DeviceInfo = require(15             ).DeviceInfo; // 15 = NativeModules

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

invariant(DeviceInfo, 'DeviceInfo native module is not installed correctly');

module.exports = DeviceInfo;
}, 164, null, "DeviceInfo");
__d(/* react-native/local-cli/bundle/assetPathUtils.js */function(global, require, module, exports) {

'use strict';

function getAndroidAssetSuffix(scale) {
  switch (scale) {
    case 0.75:
      return 'ldpi';
    case 1:
      return 'mdpi';
    case 1.5:
      return 'hdpi';
    case 2:
      return 'xhdpi';
    case 3:
      return 'xxhdpi';
    case 4:
      return 'xxxhdpi';
  }
  throw new Error('no such scale');
}

function getAndroidDrawableFolderName(asset, scale) {
  var suffix = getAndroidAssetSuffix(scale);
  if (!suffix) {
    throw new Error('Don\'t know which android drawable suffix to use for asset: ' + JSON.stringify(asset));
  }
  var androidFolder = 'drawable-' + suffix;
  return androidFolder;
}

function getAndroidResourceIdentifier(asset) {
  var folderPath = getBasePath(asset);
  return (folderPath + '/' + asset.name).toLowerCase().replace(/\//g, '_').replace(/([^a-z0-9_])/g, '').replace(/^assets_/, '');
}

function getBasePath(asset) {
  var basePath = asset.httpServerLocation;
  if (basePath[0] === '/') {
    basePath = basePath.substr(1);
  }
  return basePath;
}

module.exports = {
  getAndroidAssetSuffix: getAndroidAssetSuffix,
  getAndroidDrawableFolderName: getAndroidDrawableFolderName,
  getAndroidResourceIdentifier: getAndroidResourceIdentifier,
  getBasePath: getBasePath
};
}, 165, null, "react-native/local-cli/bundle/assetPathUtils.js");
__d(/* verifyPropTypes */function(global, require, module, exports) {
'use strict';

var ReactNativeStyleAttributes = require(146                         ); // 146 = ReactNativeStyleAttributes

function verifyPropTypes(componentInterface, viewConfig, nativePropsToIgnore) {
  if (!viewConfig) {
    return;
  }
  var componentName = componentInterface.displayName || componentInterface.name || 'unknown';

  var propTypes = componentInterface.__propTypesSecretDontUseThesePlease || componentInterface.propTypes;

  if (!propTypes) {
    throw new Error('`' + componentName + '` has no propTypes defined`');
  }

  var nativeProps = viewConfig.NativeProps;
  for (var prop in nativeProps) {
    if (!propTypes[prop] && !ReactNativeStyleAttributes[prop] && (!nativePropsToIgnore || !nativePropsToIgnore[prop])) {
      var message;
      if (propTypes.hasOwnProperty(prop)) {
        message = '`' + componentName + '` has incorrectly defined propType for native prop `' + viewConfig.uiViewClassName + '.' + prop + '` of native type `' + nativeProps[prop];
      } else {
        message = '`' + componentName + '` has no propType for native prop `' + viewConfig.uiViewClassName + '.' + prop + '` of native type `' + nativeProps[prop] + '`';
      }
      message += "\nIf you haven't changed this prop yourself, this usually means that " + 'your versions of the native code and JavaScript code are out of sync. Updating both ' + 'should make this error go away.';
      throw new Error(message);
    }
  }
}

module.exports = verifyPropTypes;
}, 166, null, "verifyPropTypes");
__d(/* StyleSheet */function(global, require, module, exports) {
'use strict';

var PixelRatio = require(162         ); // 162 = PixelRatio
var ReactNativePropRegistry = require(44                       ); // 44 = ReactNativePropRegistry
var ReactNativeStyleAttributes = require(146                         ); // 146 = ReactNativeStyleAttributes
var StyleSheetValidation = require(168                   ); // 168 = StyleSheetValidation

var flatten = require(43            ); // 43 = flattenStyle

var hairlineWidth = PixelRatio.roundToNearestPixel(0.4);
if (hairlineWidth === 0) {
  hairlineWidth = 1 / PixelRatio.get();
}

var absoluteFillObject = {
  position: 'absolute',
  left: 0,
  right: 0,
  top: 0,
  bottom: 0
};
var absoluteFill = ReactNativePropRegistry.register(absoluteFillObject);
module.exports = {
  hairlineWidth: hairlineWidth,

  absoluteFill: absoluteFill,

  absoluteFillObject: absoluteFillObject,

  flatten: flatten,

  setStyleAttributePreprocessor: function setStyleAttributePreprocessor(property, process) {
    var value = void 0;

    if (typeof ReactNativeStyleAttributes[property] === 'string') {
      value = {};
    } else if (typeof ReactNativeStyleAttributes[property] === 'object') {
      value = ReactNativeStyleAttributes[property];
    } else {
      console.error(property + ' is not a valid style attribute');
      return;
    }

    if (__DEV__ && typeof value.process === 'function') {
      console.warn('Overwriting ' + property + ' style attribute preprocessor');
    }

    ReactNativeStyleAttributes[property] = babelHelpers.extends({}, value, { process: process });
  },
  create: function create(obj) {
    var result = {};
    for (var _key in obj) {
      StyleSheetValidation.validateStyle(_key, obj);
      result[_key] = obj[_key] && ReactNativePropRegistry.register(obj[_key]);
    }
    return result;
  }
};
}, 167, null, "StyleSheet");
__d(/* StyleSheetValidation */function(global, require, module, exports) {
'use strict';

var ImageStylePropTypes = require(147                  ); // 147 = ImageStylePropTypes
var TextStylePropTypes = require(150                 ); // 150 = TextStylePropTypes
var ViewStylePropTypes = require(138                 ); // 138 = ViewStylePropTypes

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

var StyleSheetValidation = function () {
  function StyleSheetValidation() {
    babelHelpers.classCallCheck(this, StyleSheetValidation);
  }

  babelHelpers.createClass(StyleSheetValidation, null, [{
    key: 'validateStyleProp',
    value: function validateStyleProp(prop, style, caller) {
      if (!__DEV__) {
        return;
      }
      if (allStylePropTypes[prop] === undefined) {
        var message1 = '"' + prop + '" is not a valid style property.';
        var message2 = '\nValid style props: ' + JSON.stringify(Object.keys(allStylePropTypes).sort(), null, '  ');

        styleError(message1, style, caller, message2);
      }
      var error = allStylePropTypes[prop](style, prop, caller, 'prop', null, ReactPropTypesSecret);
      if (error) {
        styleError(error.message, style, caller);
      }
    }
  }, {
    key: 'validateStyle',
    value: function validateStyle(name, styles) {
      if (!__DEV__) {
        return;
      }
      for (var prop in styles[name]) {
        StyleSheetValidation.validateStyleProp(prop, styles[name], 'StyleSheet ' + name);
      }
    }
  }, {
    key: 'addValidStylePropTypes',
    value: function addValidStylePropTypes(stylePropTypes) {
      for (var key in stylePropTypes) {
        allStylePropTypes[key] = stylePropTypes[key];
      }
    }
  }]);
  return StyleSheetValidation;
}();

var styleError = function styleError(message1, style, caller, message2) {
  invariant(false, message1 + '\n' + (caller || '<<unknown>>') + ': ' + JSON.stringify(style, null, '  ') + (message2 || ''));
};

var allStylePropTypes = {};

StyleSheetValidation.addValidStylePropTypes(ImageStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(TextStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(ViewStylePropTypes);

module.exports = StyleSheetValidation;
}, 168, null, "StyleSheetValidation");
__d(/* View */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/View/View.js';
var NativeMethodsMixin = require(124                 ); // 124 = NativeMethodsMixin
var Platform = require(46        ); // 46 = Platform
var PropTypes = require(126         ); // 126 = prop-types
var React = require(129    ); // 129 = React
var ReactNativeStyleAttributes = require(146                         ); // 146 = ReactNativeStyleAttributes
var ReactNativeViewAttributes = require(170                        ); // 170 = ReactNativeViewAttributes
var ViewPropTypes = require(130            ); // 130 = ViewPropTypes

var createReactClass = require(171                 ); // 171 = create-react-class
var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var requireNativeComponent = require(144                     ); // 144 = requireNativeComponent

var View = createReactClass({
  displayName: 'View',

  mixins: [NativeMethodsMixin],

  propTypes: ViewPropTypes,

  viewConfig: {
    uiViewClassName: 'RCTView',
    validAttributes: ReactNativeViewAttributes.RCTView
  },

  contextTypes: {
    isInAParentText: PropTypes.bool
  },

  render: function render() {
    invariant(!(this.context.isInAParentText && Platform.OS === 'android'), 'Nesting of <View> within <Text> is not supported on Android.');

    return React.createElement(RCTView, babelHelpers.extends({}, this.props, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 113
      }
    }));
  }
});

var RCTView = requireNativeComponent('RCTView', View, {
  nativeOnly: {
    nativeBackgroundAndroid: true,
    nativeForegroundAndroid: true
  }
});

if (__DEV__) {
  var UIManager = require(47         ); // 47 = UIManager
  var viewConfig = UIManager.viewConfigs && UIManager.viewConfigs.RCTView || {};
  for (var prop in viewConfig.nativeProps) {
    var viewAny = View;
    if (!viewAny.propTypes[prop] && !ReactNativeStyleAttributes[prop]) {
      throw new Error('View is missing propType for native prop `' + prop + '`');
    }
  }
}

var ViewToExport = RCTView;
if (__DEV__) {
  ViewToExport = View;
}

module.exports = ViewToExport;
}, 169, null, "View");
__d(/* ReactNativeViewAttributes */function(global, require, module, exports) {
'use strict';

var ReactNativeStyleAttributes = require(146                         ); // 146 = ReactNativeStyleAttributes

var ReactNativeViewAttributes = {};

ReactNativeViewAttributes.UIView = {
  pointerEvents: true,
  accessible: true,
  accessibilityLabel: true,
  accessibilityComponentType: true,
  accessibilityLiveRegion: true,
  accessibilityTraits: true,
  importantForAccessibility: true,
  nativeID: true,
  testID: true,
  renderToHardwareTextureAndroid: true,
  shouldRasterizeIOS: true,
  onLayout: true,
  onAccessibilityTap: true,
  onMagicTap: true,
  collapsable: true,
  needsOffscreenAlphaCompositing: true,
  style: ReactNativeStyleAttributes
};

ReactNativeViewAttributes.RCTView = babelHelpers.extends({}, ReactNativeViewAttributes.UIView, {
  removeClippedSubviews: true
});

module.exports = ReactNativeViewAttributes;
}, 170, null, "ReactNativeViewAttributes");
__d(/* create-react-class/index.js */function(global, require, module, exports) {

'use strict';

var React = require(35     ); // 35 = react
var factory = require(172        ); // 172 = ./factory

if (typeof React === 'undefined') {
  throw Error('create-react-class could not find the React object. If you are using script tags, ' + 'make sure that React is being loaded before create-react-class.');
}

var ReactNoopUpdateQueue = new React.Component().updater;

module.exports = factory(React.Component, React.isValidElement, ReactNoopUpdateQueue);
}, 171, null, "create-react-class/index.js");
__d(/* create-react-class/factory.js */function(global, require, module, exports) {

'use strict';

var _assign = require(37             ); // 37 = object-assign

var emptyObject = require(34                    ); // 34 = fbjs/lib/emptyObject
var _invariant = require(13                  ); // 13 = fbjs/lib/invariant

if (process.env.NODE_ENV !== 'production') {
  var warning = require(23                ); // 23 = fbjs/lib/warning
}

var MIXINS_KEY = 'mixins';

function identity(fn) {
  return fn;
}

var ReactPropTypeLocationNames;
if (process.env.NODE_ENV !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
} else {
  ReactPropTypeLocationNames = {};
}

function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {

  var injectedMixins = [];

  var ReactClassInterface = {
    mixins: 'DEFINE_MANY',

    statics: 'DEFINE_MANY',

    propTypes: 'DEFINE_MANY',

    contextTypes: 'DEFINE_MANY',

    childContextTypes: 'DEFINE_MANY',

    getDefaultProps: 'DEFINE_MANY_MERGED',

    getInitialState: 'DEFINE_MANY_MERGED',

    getChildContext: 'DEFINE_MANY_MERGED',

    render: 'DEFINE_ONCE',

    componentWillMount: 'DEFINE_MANY',

    componentDidMount: 'DEFINE_MANY',

    componentWillReceiveProps: 'DEFINE_MANY',

    shouldComponentUpdate: 'DEFINE_ONCE',

    componentWillUpdate: 'DEFINE_MANY',

    componentDidUpdate: 'DEFINE_MANY',

    componentWillUnmount: 'DEFINE_MANY',

    updateComponent: 'OVERRIDE_BASE'
  };

  var RESERVED_SPEC_KEYS = {
    displayName: function displayName(Constructor, _displayName) {
      Constructor.displayName = _displayName;
    },
    mixins: function mixins(Constructor, _mixins) {
      if (_mixins) {
        for (var i = 0; i < _mixins.length; i++) {
          mixSpecIntoComponent(Constructor, _mixins[i]);
        }
      }
    },
    childContextTypes: function childContextTypes(Constructor, _childContextTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, _childContextTypes, 'childContext');
      }
      Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, _childContextTypes);
    },
    contextTypes: function contextTypes(Constructor, _contextTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, _contextTypes, 'context');
      }
      Constructor.contextTypes = _assign({}, Constructor.contextTypes, _contextTypes);
    },

    getDefaultProps: function getDefaultProps(Constructor, _getDefaultProps) {
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, _getDefaultProps);
      } else {
        Constructor.getDefaultProps = _getDefaultProps;
      }
    },
    propTypes: function propTypes(Constructor, _propTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, _propTypes, 'prop');
      }
      Constructor.propTypes = _assign({}, Constructor.propTypes, _propTypes);
    },
    statics: function statics(Constructor, _statics) {
      mixStaticSpecIntoComponent(Constructor, _statics);
    },
    autobind: function autobind() {}
  };

  function validateTypeDef(Constructor, typeDef, location) {
    for (var propName in typeDef) {
      if (typeDef.hasOwnProperty(propName)) {
        if (process.env.NODE_ENV !== 'production') {
          warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName);
        }
      }
    }
  }

  function validateMethodOverride(isAlreadyDefined, name) {
    var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

    if (ReactClassMixin.hasOwnProperty(name)) {
      _invariant(specPolicy === 'OVERRIDE_BASE', 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name);
    }

    if (isAlreadyDefined) {
      _invariant(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED', 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name);
    }
  }

  function mixSpecIntoComponent(Constructor, spec) {
    if (!spec) {
      if (process.env.NODE_ENV !== 'production') {
        var typeofSpec = typeof spec;
        var isMixinValid = typeofSpec === 'object' && spec !== null;

        if (process.env.NODE_ENV !== 'production') {
          warning(isMixinValid, "%s: You're attempting to include a mixin that is either null " + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec);
        }
      }

      return;
    }

    _invariant(typeof spec !== 'function', "ReactClass: You're attempting to " + 'use a component class or function as a mixin. Instead, just use a ' + 'regular object.');
    _invariant(!isValidElement(spec), "ReactClass: You're attempting to " + 'use a component as a mixin. Instead, just use a regular object.');

    var proto = Constructor.prototype;
    var autoBindPairs = proto.__reactAutoBindPairs;

    if (spec.hasOwnProperty(MIXINS_KEY)) {
      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
    }

    for (var name in spec) {
      if (!spec.hasOwnProperty(name)) {
        continue;
      }

      if (name === MIXINS_KEY) {
        continue;
      }

      var property = spec[name];
      var isAlreadyDefined = proto.hasOwnProperty(name);
      validateMethodOverride(isAlreadyDefined, name);

      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
        RESERVED_SPEC_KEYS[name](Constructor, property);
      } else {
        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
        var isFunction = typeof property === 'function';
        var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

        if (shouldAutoBind) {
          autoBindPairs.push(name, property);
          proto[name] = property;
        } else {
          if (isAlreadyDefined) {
            var specPolicy = ReactClassInterface[name];

            _invariant(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY'), 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name);

            if (specPolicy === 'DEFINE_MANY_MERGED') {
              proto[name] = createMergedResultFunction(proto[name], property);
            } else if (specPolicy === 'DEFINE_MANY') {
              proto[name] = createChainedFunction(proto[name], property);
            }
          } else {
            proto[name] = property;
            if (process.env.NODE_ENV !== 'production') {
              if (typeof property === 'function' && spec.displayName) {
                proto[name].displayName = spec.displayName + '_' + name;
              }
            }
          }
        }
      }
    }
  }

  function mixStaticSpecIntoComponent(Constructor, statics) {
    if (!statics) {
      return;
    }
    for (var name in statics) {
      var property = statics[name];
      if (!statics.hasOwnProperty(name)) {
        continue;
      }

      var isReserved = name in RESERVED_SPEC_KEYS;
      _invariant(!isReserved, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name);

      var isInherited = name in Constructor;
      _invariant(!isInherited, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name);
      Constructor[name] = property;
    }
  }

  function mergeIntoWithNoDuplicateKeys(one, two) {
    _invariant(one && two && typeof one === 'object' && typeof two === 'object', 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');

    for (var key in two) {
      if (two.hasOwnProperty(key)) {
        _invariant(one[key] === undefined, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key);
        one[key] = two[key];
      }
    }
    return one;
  }

  function createMergedResultFunction(one, two) {
    return function mergedResult() {
      var a = one.apply(this, arguments);
      var b = two.apply(this, arguments);
      if (a == null) {
        return b;
      } else if (b == null) {
        return a;
      }
      var c = {};
      mergeIntoWithNoDuplicateKeys(c, a);
      mergeIntoWithNoDuplicateKeys(c, b);
      return c;
    };
  }

  function createChainedFunction(one, two) {
    return function chainedFunction() {
      one.apply(this, arguments);
      two.apply(this, arguments);
    };
  }

  function bindAutoBindMethod(component, method) {
    var boundMethod = method.bind(component);
    if (process.env.NODE_ENV !== 'production') {
      boundMethod.__reactBoundContext = component;
      boundMethod.__reactBoundMethod = method;
      boundMethod.__reactBoundArguments = null;
      var componentName = component.constructor.displayName;
      var _bind = boundMethod.bind;
      boundMethod.bind = function (newThis) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        if (newThis !== component && newThis !== null) {
          if (process.env.NODE_ENV !== 'production') {
            warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName);
          }
        } else if (!args.length) {
          if (process.env.NODE_ENV !== 'production') {
            warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName);
          }
          return boundMethod;
        }
        var reboundMethod = _bind.apply(boundMethod, arguments);
        reboundMethod.__reactBoundContext = component;
        reboundMethod.__reactBoundMethod = method;
        reboundMethod.__reactBoundArguments = args;
        return reboundMethod;
      };
    }
    return boundMethod;
  }

  function bindAutoBindMethods(component) {
    var pairs = component.__reactAutoBindPairs;
    for (var i = 0; i < pairs.length; i += 2) {
      var autoBindKey = pairs[i];
      var method = pairs[i + 1];
      component[autoBindKey] = bindAutoBindMethod(component, method);
    }
  }

  var IsMountedPreMixin = {
    componentDidMount: function componentDidMount() {
      this.__isMounted = true;
    }
  };

  var IsMountedPostMixin = {
    componentWillUnmount: function componentWillUnmount() {
      this.__isMounted = false;
    }
  };

  var ReactClassMixin = {
    replaceState: function replaceState(newState, callback) {
      this.updater.enqueueReplaceState(this, newState, callback);
    },

    isMounted: function isMounted() {
      if (process.env.NODE_ENV !== 'production') {
        warning(this.__didWarnIsMounted, '%s: isMounted is deprecated. Instead, make sure to clean up ' + 'subscriptions and pending requests in componentWillUnmount to ' + 'prevent memory leaks.', this.constructor && this.constructor.displayName || this.name || 'Component');
        this.__didWarnIsMounted = true;
      }
      return !!this.__isMounted;
    }
  };

  var ReactClassComponent = function ReactClassComponent() {};
  _assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

  function createClass(spec) {
    var Constructor = identity(function (props, context, updater) {

      if (process.env.NODE_ENV !== 'production') {
        warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory');
      }

      if (this.__reactAutoBindPairs.length) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        if (initialState === undefined && this.getInitialState._isMockFunction) {
          initialState = null;
        }
      }
      _invariant(typeof initialState === 'object' && !Array.isArray(initialState), '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent');

      this.state = initialState;
    });
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;
    Constructor.prototype.__reactAutoBindPairs = [];

    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

    mixSpecIntoComponent(Constructor, IsMountedPreMixin);
    mixSpecIntoComponent(Constructor, spec);
    mixSpecIntoComponent(Constructor, IsMountedPostMixin);

    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if (process.env.NODE_ENV !== 'production') {
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    _invariant(Constructor.prototype.render, 'createClass(...): Class specification must implement a `render` method.');

    if (process.env.NODE_ENV !== 'production') {
      warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component');
      warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component');
    }

    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    return Constructor;
  }

  return createClass;
}

module.exports = factory;
}, 172, null, "create-react-class/factory.js");
__d(/* ReactNativeART */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/ART/ReactNativeART.js';
var Color = require(174             ); // 174 = art/core/color
var Path = require(175                  ); // 175 = ARTSerializablePath
var Transform = require(178                 ); // 178 = art/core/transform

var React = require(129    ); // 129 = React
var PropTypes = require(126         ); // 126 = prop-types
var ReactNativeViewAttributes = require(170                        ); // 170 = ReactNativeViewAttributes

var createReactNativeComponentClass = require(155                              ); // 155 = createReactNativeComponentClass
var merge = require(133    ); // 133 = merge
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

function arrayDiffer(a, b) {
  if (a == null || b == null) {
    return true;
  }
  if (a.length !== b.length) {
    return true;
  }
  for (var i = 0; i < a.length; i++) {
    if (a[i] !== b[i]) {
      return true;
    }
  }
  return false;
}

function fontAndLinesDiffer(a, b) {
  if (a === b) {
    return false;
  }
  if (a.font !== b.font) {
    if (a.font === null) {
      return true;
    }
    if (b.font === null) {
      return true;
    }

    if (a.font.fontFamily !== b.font.fontFamily || a.font.fontSize !== b.font.fontSize || a.font.fontWeight !== b.font.fontWeight || a.font.fontStyle !== b.font.fontStyle) {
      return true;
    }
  }
  return arrayDiffer(a.lines, b.lines);
}

var SurfaceViewAttributes = merge(ReactNativeViewAttributes.UIView, {});

var NodeAttributes = {
  transform: { diff: arrayDiffer },
  opacity: true
};

var GroupAttributes = merge(NodeAttributes, {
  clipping: { diff: arrayDiffer }
});

var RenderableAttributes = merge(NodeAttributes, {
  fill: { diff: arrayDiffer },
  stroke: { diff: arrayDiffer },
  strokeWidth: true,
  strokeCap: true,
  strokeJoin: true,
  strokeDash: { diff: arrayDiffer }
});

var ShapeAttributes = merge(RenderableAttributes, {
  d: { diff: arrayDiffer }
});

var TextAttributes = merge(RenderableAttributes, {
  alignment: true,
  frame: { diff: fontAndLinesDiffer },
  path: { diff: arrayDiffer }
});

var NativeSurfaceView = createReactNativeComponentClass('ARTSurfaceView', function () {
  return {
    validAttributes: SurfaceViewAttributes,
    uiViewClassName: 'ARTSurfaceView'
  };
});

var NativeGroup = createReactNativeComponentClass('ARTGroup', function () {
  return {
    validAttributes: GroupAttributes,
    uiViewClassName: 'ARTGroup'
  };
});

var NativeShape = createReactNativeComponentClass('ARTShape', function () {
  return {
    validAttributes: ShapeAttributes,
    uiViewClassName: 'ARTShape'
  };
});

var NativeText = createReactNativeComponentClass('ARTText', function () {
  return {
    validAttributes: TextAttributes,
    uiViewClassName: 'ARTText'
  };
});

function childrenAsString(children) {
  if (!children) {
    return '';
  }
  if (typeof children === 'string') {
    return children;
  }
  if (children.length) {
    return children.join('\n');
  }
  return '';
}

var Surface = function (_React$Component) {
  babelHelpers.inherits(Surface, _React$Component);

  function Surface() {
    babelHelpers.classCallCheck(this, Surface);
    return babelHelpers.possibleConstructorReturn(this, (Surface.__proto__ || Object.getPrototypeOf(Surface)).apply(this, arguments));
  }

  babelHelpers.createClass(Surface, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return { isInSurface: true };
    }
  }, {
    key: 'render',
    value: function render() {
      var props = this.props;
      var w = extractNumber(props.width, 0);
      var h = extractNumber(props.height, 0);
      return React.createElement(
        NativeSurfaceView,
        { style: [props.style, { width: w, height: h }], __source: {
            fileName: _jsxFileName,
            lineNumber: 159
          }
        },
        this.props.children
      );
    }
  }]);
  return Surface;
}(React.Component);

Surface.childContextTypes = {
  isInSurface: PropTypes.bool
};


function extractNumber(value, defaultValue) {
  if (value == null) {
    return defaultValue;
  }
  return +value;
}

var pooledTransform = new Transform();

function extractTransform(props) {
  var scaleX = props.scaleX != null ? props.scaleX : props.scale != null ? props.scale : 1;
  var scaleY = props.scaleY != null ? props.scaleY : props.scale != null ? props.scale : 1;

  pooledTransform.transformTo(1, 0, 0, 1, 0, 0).move(props.x || 0, props.y || 0).rotate(props.rotation || 0, props.originX, props.originY).scale(scaleX, scaleY, props.originX, props.originY);

  if (props.transform != null) {
    pooledTransform.transform(props.transform);
  }

  return [pooledTransform.xx, pooledTransform.yx, pooledTransform.xy, pooledTransform.yy, pooledTransform.x, pooledTransform.y];
}

function extractOpacity(props) {
  if (props.visible === false) {
    return 0;
  }
  if (props.opacity == null) {
    return 1;
  }
  return +props.opacity;
}

var Group = function (_React$Component2) {
  babelHelpers.inherits(Group, _React$Component2);

  function Group() {
    babelHelpers.classCallCheck(this, Group);
    return babelHelpers.possibleConstructorReturn(this, (Group.__proto__ || Object.getPrototypeOf(Group)).apply(this, arguments));
  }

  babelHelpers.createClass(Group, [{
    key: 'render',
    value: function render() {
      var props = this.props;
      invariant(this.context.isInSurface, 'ART: <Group /> must be a child of a <Surface />');
      return React.createElement(
        NativeGroup,
        {
          opacity: extractOpacity(props),
          transform: extractTransform(props), __source: {
            fileName: _jsxFileName,
            lineNumber: 231
          }
        },
        this.props.children
      );
    }
  }]);
  return Group;
}(React.Component);

Group.contextTypes = {
  isInSurface: PropTypes.bool.isRequired
};

var ClippingRectangle = function (_React$Component3) {
  babelHelpers.inherits(ClippingRectangle, _React$Component3);

  function ClippingRectangle() {
    babelHelpers.classCallCheck(this, ClippingRectangle);
    return babelHelpers.possibleConstructorReturn(this, (ClippingRectangle.__proto__ || Object.getPrototypeOf(ClippingRectangle)).apply(this, arguments));
  }

  babelHelpers.createClass(ClippingRectangle, [{
    key: 'render',
    value: function render() {
      var props = this.props;
      var x = extractNumber(props.x, 0);
      var y = extractNumber(props.y, 0);
      var w = extractNumber(props.width, 0);
      var h = extractNumber(props.height, 0);
      var clipping = [x, y, w, h];

      var propsExcludingXAndY = merge(props);
      delete propsExcludingXAndY.x;
      delete propsExcludingXAndY.y;
      return React.createElement(
        NativeGroup,
        {
          clipping: clipping,
          opacity: extractOpacity(props),
          transform: extractTransform(propsExcludingXAndY), __source: {
            fileName: _jsxFileName,
            lineNumber: 253
          }
        },
        this.props.children
      );
    }
  }]);
  return ClippingRectangle;
}(React.Component);

var SOLID_COLOR = 0;
var LINEAR_GRADIENT = 1;
var RADIAL_GRADIENT = 2;
var PATTERN = 3;

function insertColorIntoArray(color, targetArray, atIndex) {
  var c = new Color(color);
  targetArray[atIndex + 0] = c.red / 255;
  targetArray[atIndex + 1] = c.green / 255;
  targetArray[atIndex + 2] = c.blue / 255;
  targetArray[atIndex + 3] = c.alpha;
}

function insertColorsIntoArray(stops, targetArray, atIndex) {
  var i = 0;
  if ('length' in stops) {
    while (i < stops.length) {
      insertColorIntoArray(stops[i], targetArray, atIndex + i * 4);
      i++;
    }
  } else {
    for (var offset in stops) {
      insertColorIntoArray(stops[offset], targetArray, atIndex + i * 4);
      i++;
    }
  }
  return atIndex + i * 4;
}

function insertOffsetsIntoArray(stops, targetArray, atIndex, multi, reverse) {
  var offsetNumber;
  var i = 0;
  if ('length' in stops) {
    while (i < stops.length) {
      offsetNumber = i / (stops.length - 1) * multi;
      targetArray[atIndex + i] = reverse ? 1 - offsetNumber : offsetNumber;
      i++;
    }
  } else {
    for (var offsetString in stops) {
      offsetNumber = +offsetString * multi;
      targetArray[atIndex + i] = reverse ? 1 - offsetNumber : offsetNumber;
      i++;
    }
  }
  return atIndex + i;
}

function insertColorStopsIntoArray(stops, targetArray, atIndex) {
  var lastIndex = insertColorsIntoArray(stops, targetArray, atIndex);
  insertOffsetsIntoArray(stops, targetArray, lastIndex, 1, false);
}

function insertDoubleColorStopsIntoArray(stops, targetArray, atIndex) {
  var lastIndex = insertColorsIntoArray(stops, targetArray, atIndex);
  lastIndex = insertColorsIntoArray(stops, targetArray, lastIndex);
  lastIndex = insertOffsetsIntoArray(stops, targetArray, lastIndex, 0.5, false);
  insertOffsetsIntoArray(stops, targetArray, lastIndex, 0.5, true);
}

function applyBoundingBoxToBrushData(brushData, props) {
  var type = brushData[0];
  var width = +props.width;
  var height = +props.height;
  if (type === LINEAR_GRADIENT) {
    brushData[1] *= width;
    brushData[2] *= height;
    brushData[3] *= width;
    brushData[4] *= height;
  } else if (type === RADIAL_GRADIENT) {
    brushData[1] *= width;
    brushData[2] *= height;
    brushData[3] *= width;
    brushData[4] *= height;
    brushData[5] *= width;
    brushData[6] *= height;
  } else if (type === PATTERN) {}
}

function extractBrush(colorOrBrush, props) {
  if (colorOrBrush == null) {
    return null;
  }
  if (colorOrBrush._brush) {
    if (colorOrBrush._bb) {
      applyBoundingBoxToBrushData(colorOrBrush._brush, props);
      colorOrBrush._bb = false;
    }
    return colorOrBrush._brush;
  }
  var c = new Color(colorOrBrush);
  return [SOLID_COLOR, c.red / 255, c.green / 255, c.blue / 255, c.alpha];
}

function extractColor(color) {
  if (color == null) {
    return null;
  }
  var c = new Color(color);
  return [c.red / 255, c.green / 255, c.blue / 255, c.alpha];
}

function extractStrokeCap(strokeCap) {
  switch (strokeCap) {
    case 'butt':
      return 0;
    case 'square':
      return 2;
    default:
      return 1;}
}

function extractStrokeJoin(strokeJoin) {
  switch (strokeJoin) {
    case 'miter':
      return 0;
    case 'bevel':
      return 2;
    default:
      return 1;}
}

var Shape = function (_React$Component4) {
  babelHelpers.inherits(Shape, _React$Component4);

  function Shape() {
    babelHelpers.classCallCheck(this, Shape);
    return babelHelpers.possibleConstructorReturn(this, (Shape.__proto__ || Object.getPrototypeOf(Shape)).apply(this, arguments));
  }

  babelHelpers.createClass(Shape, [{
    key: 'render',
    value: function render() {
      var props = this.props;
      var path = props.d || childrenAsString(props.children);
      var d = (path instanceof Path ? path : new Path(path)).toJSON();
      return React.createElement(NativeShape, {
        fill: extractBrush(props.fill, props),
        opacity: extractOpacity(props),
        stroke: extractColor(props.stroke),
        strokeCap: extractStrokeCap(props.strokeCap),
        strokeDash: props.strokeDash || null,
        strokeJoin: extractStrokeJoin(props.strokeJoin),
        strokeWidth: extractNumber(props.strokeWidth, 1),
        transform: extractTransform(props),

        d: d,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 401
        }
      });
    }
  }]);
  return Shape;
}(React.Component);

var cachedFontObjectsFromString = {};

var fontFamilyPrefix = /^[\s"']*/;
var fontFamilySuffix = /[\s"']*$/;

function extractSingleFontFamily(fontFamilyString) {
  return fontFamilyString.split(',')[0].replace(fontFamilyPrefix, '').replace(fontFamilySuffix, '');
}

function parseFontString(font) {
  if (cachedFontObjectsFromString.hasOwnProperty(font)) {
    return cachedFontObjectsFromString[font];
  }
  var regexp = /^\s*((?:(?:normal|bold|italic)\s+)*)(?:(\d+(?:\.\d+)?)[ptexm\%]*(?:\s*\/.*?)?\s+)?\s*\"?([^\"]*)/i;
  var match = regexp.exec(font);
  if (!match) {
    return null;
  }
  var fontFamily = extractSingleFontFamily(match[3]);
  var fontSize = +match[2] || 12;
  var isBold = /bold/.exec(match[1]);
  var isItalic = /italic/.exec(match[1]);
  cachedFontObjectsFromString[font] = {
    fontFamily: fontFamily,
    fontSize: fontSize,
    fontWeight: isBold ? 'bold' : 'normal',
    fontStyle: isItalic ? 'italic' : 'normal'
  };
  return cachedFontObjectsFromString[font];
}

function extractFont(font) {
  if (font == null) {
    return null;
  }
  if (typeof font === 'string') {
    return parseFontString(font);
  }
  var fontFamily = extractSingleFontFamily(font.fontFamily);
  var fontSize = +font.fontSize || 12;
  var fontWeight = font.fontWeight != null ? font.fontWeight.toString() : '400';
  return {
    fontFamily: fontFamily,
    fontSize: fontSize,
    fontWeight: fontWeight,
    fontStyle: font.fontStyle
  };
}

var newLine = /\n/g;
function extractFontAndLines(font, text) {
  return { font: extractFont(font), lines: text.split(newLine) };
}

function extractAlignment(alignment) {
  switch (alignment) {
    case 'right':
      return 1;
    case 'center':
      return 2;
    default:
      return 0;
  }
}

var Text = function (_React$Component5) {
  babelHelpers.inherits(Text, _React$Component5);

  function Text() {
    babelHelpers.classCallCheck(this, Text);
    return babelHelpers.possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).apply(this, arguments));
  }

  babelHelpers.createClass(Text, [{
    key: 'render',
    value: function render() {
      var props = this.props;
      var path = props.path;
      var textPath = path ? (path instanceof Path ? path : new Path(path)).toJSON() : null;
      var textFrame = extractFontAndLines(props.font, childrenAsString(props.children));
      return React.createElement(NativeText, {
        fill: extractBrush(props.fill, props),
        opacity: extractOpacity(props),
        stroke: extractColor(props.stroke),
        strokeCap: extractStrokeCap(props.strokeCap),
        strokeDash: props.strokeDash || null,
        strokeJoin: extractStrokeJoin(props.strokeJoin),
        strokeWidth: extractNumber(props.strokeWidth, 1),
        transform: extractTransform(props),

        alignment: extractAlignment(props.alignment),
        frame: textFrame,
        path: textPath,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 500
        }
      });
    }
  }]);
  return Text;
}(React.Component);

function LinearGradient(stops, x1, y1, x2, y2) {
  var type = LINEAR_GRADIENT;

  if (arguments.length < 5) {
    var angle = (x1 == null ? 270 : x1) * Math.PI / 180;

    var x = Math.cos(angle);
    var y = -Math.sin(angle);
    var l = (Math.abs(x) + Math.abs(y)) / 2;

    x *= l;y *= l;

    x1 = 0.5 - x;
    x2 = 0.5 + x;
    y1 = 0.5 - y;
    y2 = 0.5 + y;
    this._bb = true;
  } else {
    this._bb = false;
  }

  var brushData = [type, +x1, +y1, +x2, +y2];
  insertColorStopsIntoArray(stops, brushData, 5);
  this._brush = brushData;
}

function RadialGradient(stops, fx, fy, rx, ry, cx, cy) {
  if (ry == null) {
    ry = rx;
  }
  if (cx == null) {
    cx = fx;
  }
  if (cy == null) {
    cy = fy;
  }
  if (fx == null) {
    fx = fy = rx = ry = cx = cy = 0.5;
    this._bb = true;
  } else {
    this._bb = false;
  }

  var brushData = [RADIAL_GRADIENT, +fx, +fy, +rx * 2, +ry * 2, +cx, +cy];
  insertDoubleColorStopsIntoArray(stops, brushData, 7);
  this._brush = brushData;
}

function Pattern(url, width, height, left, top) {
  this._brush = [PATTERN, url, +left || 0, +top || 0, +width, +height];
}

var ReactART = {
  LinearGradient: LinearGradient,
  RadialGradient: RadialGradient,
  Pattern: Pattern,
  Transform: Transform,
  Path: Path,
  Surface: Surface,
  Group: Group,
  ClippingRectangle: ClippingRectangle,
  Shape: Shape,
  Text: Text
};

module.exports = ReactART;
}, 173, null, "ReactNativeART");
__d(/* art/core/color.js */function(global, require, module, exports) {var colors = {
	maroon: '#800000', red: '#ff0000', orange: '#ffA500', yellow: '#ffff00', olive: '#808000',
	purple: '#800080', fuchsia: "#ff00ff", white: '#ffffff', lime: '#00ff00', green: '#008000',
	navy: '#000080', blue: '#0000ff', aqua: '#00ffff', teal: '#008080',
	black: '#000000', silver: '#c0c0c0', gray: '#808080'
};

var map = function map(array, fn) {
	var results = [];
	for (var i = 0, l = array.length; i < l; i++) {
		results[i] = fn(array[i], i);
	}return results;
};

var Color = function Color(color, type) {

	if (color.isColor) {

		this.red = color.red;
		this.green = color.green;
		this.blue = color.blue;
		this.alpha = color.alpha;
	} else {

		var namedColor = colors[color];
		if (namedColor) {
			color = namedColor;
			type = 'hex';
		}

		switch (typeof color) {
			case 'string':
				if (!type) type = (type = color.match(/^rgb|^hsb|^hsl/)) ? type[0] : 'hex';break;
			case 'object':
				type = type || 'rgb';color = color.toString();break;
			case 'number':
				type = 'hex';color = color.toString(16);break;
		}

		color = Color['parse' + type.toUpperCase()](color);
		this.red = color[0];
		this.green = color[1];
		this.blue = color[2];
		this.alpha = color[3];
	}

	this.isColor = true;
};

var limit = function limit(number, min, max) {
	return Math.min(max, Math.max(min, number));
};

var listMatch = /([-.\d]+\%?)\s*,\s*([-.\d]+\%?)\s*,\s*([-.\d]+\%?)\s*,?\s*([-.\d]*\%?)/;
var hexMatch = /^#?([a-f0-9]{1,2})([a-f0-9]{1,2})([a-f0-9]{1,2})([a-f0-9]{0,2})$/i;

Color.parseRGB = function (color) {
	return map(color.match(listMatch).slice(1), function (bit, i) {
		if (bit) bit = parseFloat(bit) * (bit[bit.length - 1] == '%' ? 2.55 : 1);
		return i < 3 ? Math.round((bit %= 256) < 0 ? bit + 256 : bit) : limit(bit === '' ? 1 : Number(bit), 0, 1);
	});
};

Color.parseHEX = function (color) {
	if (color.length == 1) color = color + color + color;
	return map(color.match(hexMatch).slice(1), function (bit, i) {
		if (i == 3) return bit ? parseInt(bit, 16) / 255 : 1;
		return parseInt(bit.length == 1 ? bit + bit : bit, 16);
	});
};

Color.parseHSB = function (color) {
	var hsb = map(color.match(listMatch).slice(1), function (bit, i) {
		if (bit) bit = parseFloat(bit);
		if (i === 0) return Math.round((bit %= 360) < 0 ? bit + 360 : bit);else if (i < 3) return limit(Math.round(bit), 0, 100);else return limit(bit === '' ? 1 : Number(bit), 0, 1);
	});

	var a = hsb[3];
	var br = Math.round(hsb[2] / 100 * 255);
	if (hsb[1] == 0) return [br, br, br, a];

	var hue = hsb[0];
	var f = hue % 60;
	var p = Math.round(hsb[2] * (100 - hsb[1]) / 10000 * 255);
	var q = Math.round(hsb[2] * (6000 - hsb[1] * f) / 600000 * 255);
	var t = Math.round(hsb[2] * (6000 - hsb[1] * (60 - f)) / 600000 * 255);

	switch (Math.floor(hue / 60)) {
		case 0:
			return [br, t, p, a];
		case 1:
			return [q, br, p, a];
		case 2:
			return [p, br, t, a];
		case 3:
			return [p, q, br, a];
		case 4:
			return [t, p, br, a];
		default:
			return [br, p, q, a];
	}
};

Color.parseHSL = function (color) {
	var hsb = map(color.match(listMatch).slice(1), function (bit, i) {
		if (bit) bit = parseFloat(bit);
		if (i === 0) return Math.round((bit %= 360) < 0 ? bit + 360 : bit);else if (i < 3) return limit(Math.round(bit), 0, 100);else return limit(bit === '' ? 1 : Number(bit), 0, 1);
	});

	var h = hsb[0] / 60;
	var s = hsb[1] / 100;
	var l = hsb[2] / 100;
	var a = hsb[3];

	var c = (1 - Math.abs(2 * l - 1)) * s;
	var x = c * (1 - Math.abs(h % 2 - 1));
	var m = l - c / 2;

	var p = Math.round((c + m) * 255);
	var q = Math.round((x + m) * 255);
	var t = Math.round(m * 255);

	switch (Math.floor(h)) {
		case 0:
			return [p, q, t, a];
		case 1:
			return [q, p, t, a];
		case 2:
			return [t, p, q, a];
		case 3:
			return [t, q, p, a];
		case 4:
			return [q, t, p, a];
		default:
			return [p, t, q, a];
	}
};

var toString = function toString(type, array) {
	if (array[3] != 1) type += 'a';else array.pop();
	return type + '(' + array.join(', ') + ')';
};

Color.prototype = {

	toHSB: function toHSB(array) {
		var red = this.red,
		    green = this.green,
		    blue = this.blue,
		    alpha = this.alpha;

		var max = Math.max(red, green, blue),
		    min = Math.min(red, green, blue),
		    delta = max - min;
		var hue = 0,
		    saturation = delta != 0 ? delta / max : 0,
		    brightness = max / 255;
		if (saturation) {
			var rr = (max - red) / delta,
			    gr = (max - green) / delta,
			    br = (max - blue) / delta;
			hue = red == max ? br - gr : green == max ? 2 + rr - br : 4 + gr - rr;
			if ((hue /= 6) < 0) hue++;
		}

		var hsb = [Math.round(hue * 360), Math.round(saturation * 100), Math.round(brightness * 100), alpha];

		return array ? hsb : toString('hsb', hsb);
	},

	toHSL: function toHSL(array) {
		var red = this.red,
		    green = this.green,
		    blue = this.blue,
		    alpha = this.alpha;

		var max = Math.max(red, green, blue),
		    min = Math.min(red, green, blue),
		    delta = max - min;
		var hue = 0,
		    saturation = delta != 0 ? delta / (255 - Math.abs(max + min - 255)) : 0,
		    lightness = (max + min) / 512;
		if (saturation) {
			var rr = (max - red) / delta,
			    gr = (max - green) / delta,
			    br = (max - blue) / delta;
			hue = red == max ? br - gr : green == max ? 2 + rr - br : 4 + gr - rr;
			if ((hue /= 6) < 0) hue++;
		}

		var hsl = [Math.round(hue * 360), Math.round(saturation * 100), Math.round(lightness * 100), alpha];

		return array ? hsl : toString('hsl', hsl);
	},

	toHEX: function toHEX(array) {

		var a = this.alpha;
		var alpha = (a = Math.round(a * 255).toString(16)).length == 1 ? a + a : a;

		var hex = map([this.red, this.green, this.blue], function (bit) {
			bit = bit.toString(16);
			return bit.length == 1 ? '0' + bit : bit;
		});

		return array ? hex.concat(alpha) : '#' + hex.join('') + (alpha == 'ff' ? '' : alpha);
	},

	toRGB: function toRGB(array) {
		var rgb = [this.red, this.green, this.blue, this.alpha];
		return array ? rgb : toString('rgb', rgb);
	}

};

Color.prototype.toString = Color.prototype.toRGB;

Color.hex = function (hex) {
	return new Color(hex, 'hex');
};

if (this.hex == null) this.hex = Color.hex;

Color.hsb = function (h, s, b, a) {
	return new Color([h || 0, s || 0, b || 0, a == null ? 1 : a], 'hsb');
};

if (this.hsb == null) this.hsb = Color.hsb;

Color.hsl = function (h, s, l, a) {
	return new Color([h || 0, s || 0, l || 0, a == null ? 1 : a], 'hsl');
};

if (this.hsl == null) this.hsl = Color.hsl;

Color.rgb = function (r, g, b, a) {
	return new Color([r || 0, g || 0, b || 0, a == null ? 1 : a], 'rgb');
};

if (this.rgb == null) this.rgb = Color.rgb;

Color.detach = function (color) {
	color = new Color(color);
	return [Color.rgb(color.red, color.green, color.blue).toString(), color.alpha];
};

module.exports = Color;
}, 174, null, "art/core/color.js");
__d(/* ARTSerializablePath */function(global, require, module, exports) {
'use strict';

var Class = require(176                ); // 176 = art/core/class.js
var Path = require(177               ); // 177 = art/core/path.js

var MOVE_TO = 0;
var CLOSE = 1;
var LINE_TO = 2;
var CURVE_TO = 3;
var ARC = 4;

var SerializablePath = Class(Path, {

  initialize: function initialize(path) {
    this.reset();
    if (path instanceof SerializablePath) {
      this.path = path.path.slice(0);
    } else if (path) {
      if (path.applyToPath) {
        path.applyToPath(this);
      } else {
        this.push(path);
      }
    }
  },

  onReset: function onReset() {
    this.path = [];
  },

  onMove: function onMove(sx, sy, x, y) {
    this.path.push(MOVE_TO, x, y);
  },

  onLine: function onLine(sx, sy, x, y) {
    this.path.push(LINE_TO, x, y);
  },

  onBezierCurve: function onBezierCurve(sx, sy, p1x, p1y, p2x, p2y, x, y) {
    this.path.push(CURVE_TO, p1x, p1y, p2x, p2y, x, y);
  },

  _arcToBezier: Path.prototype.onArc,

  onArc: function onArc(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation) {
    if (rx !== ry || rotation) {
      return this._arcToBezier(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation);
    }
    this.path.push(ARC, cx, cy, rx, sa, ea, ccw ? 0 : 1);
  },

  onClose: function onClose() {
    this.path.push(CLOSE);
  },

  toJSON: function toJSON() {
    return this.path;
  }

});

module.exports = SerializablePath;
}, 175, null, "ARTSerializablePath");
__d(/* art/core/class.js */function(global, require, module, exports) {module.exports = function (mixins) {
	var proto = {};
	for (var i = 0, l = arguments.length; i < l; i++) {
		var mixin = arguments[i];
		if (typeof mixin == 'function') mixin = mixin.prototype;
		for (var key in mixin) {
			proto[key] = mixin[key];
		}
	}
	if (!proto.initialize) proto.initialize = function () {};
	proto.constructor = function (a, b, c, d, e, f, g, h) {
		return new proto.initialize(a, b, c, d, e, f, g, h);
	};
	proto.constructor.prototype = proto.initialize.prototype = proto;
	return proto.constructor;
};
}, 176, null, "art/core/class.js");
__d(/* art/core/path.js */function(global, require, module, exports) {var Class = require(176      ); // 176 = ./class

module.exports = Class({

	initialize: function initialize(path) {
		this.reset().push(path);
	},

	push: function push() {
		var p = Array.prototype.join.call(arguments, ' ').match(/[a-df-z]|[\-+]?(?:[\d\.]e[\-+]?|[^\s\-+,a-z])+/ig);
		if (!p) return this;

		var last,
		    cmd = p[0],
		    i = 1;
		while (cmd) {
			switch (cmd) {
				case 'm':
					this.move(p[i++], p[i++]);break;
				case 'l':
					this.line(p[i++], p[i++]);break;
				case 'c':
					this.curve(p[i++], p[i++], p[i++], p[i++], p[i++], p[i++]);break;
				case 's':
					this.curve(p[i++], p[i++], null, null, p[i++], p[i++]);break;
				case 'q':
					this.curve(p[i++], p[i++], p[i++], p[i++]);break;
				case 't':
					this.curve(p[i++], p[i++]);break;
				case 'a':
					this.arc(p[i + 5], p[i + 6], p[i], p[i + 1], p[i + 3], !+p[i + 4], p[i + 2]);i += 7;break;
				case 'h':
					this.line(p[i++], 0);break;
				case 'v':
					this.line(0, p[i++]);break;

				case 'M':
					this.moveTo(p[i++], p[i++]);break;
				case 'L':
					this.lineTo(p[i++], p[i++]);break;
				case 'C':
					this.curveTo(p[i++], p[i++], p[i++], p[i++], p[i++], p[i++]);break;
				case 'S':
					this.curveTo(p[i++], p[i++], null, null, p[i++], p[i++]);break;
				case 'Q':
					this.curveTo(p[i++], p[i++], p[i++], p[i++]);break;
				case 'T':
					this.curveTo(p[i++], p[i++]);break;
				case 'A':
					this.arcTo(p[i + 5], p[i + 6], p[i], p[i + 1], p[i + 3], !+p[i + 4], p[i + 2]);i += 7;break;
				case 'H':
					this.lineTo(p[i++], this.penY);break;
				case 'V':
					this.lineTo(this.penX, p[i++]);break;

				case 'Z':case 'z':
					this.close();break;
				default:
					cmd = last;i--;continue;
			}

			last = cmd;
			if (last == 'm') last = 'l';else if (last == 'M') last = 'L';
			cmd = p[i++];
		}
		return this;
	},

	reset: function reset() {
		this.penX = this.penY = 0;
		this.penDownX = this.penDownY = null;
		this._pivotX = this._pivotY = 0;
		this.onReset();
		return this;
	},

	move: function move(x, y) {
		this.onMove(this.penX, this.penY, this._pivotX = this.penX += +x, this._pivotY = this.penY += +y);
		return this;
	},
	moveTo: function moveTo(x, y) {
		this.onMove(this.penX, this.penY, this._pivotX = this.penX = +x, this._pivotY = this.penY = +y);
		return this;
	},

	line: function line(x, y) {
		return this.lineTo(this.penX + +x, this.penY + +y);
	},
	lineTo: function lineTo(x, y) {
		if (this.penDownX == null) {
			this.penDownX = this.penX;this.penDownY = this.penY;
		}
		this.onLine(this.penX, this.penY, this._pivotX = this.penX = +x, this._pivotY = this.penY = +y);
		return this;
	},

	curve: function curve(c1x, c1y, c2x, c2y, ex, ey) {
		var x = this.penX,
		    y = this.penY;
		return this.curveTo(x + +c1x, y + +c1y, c2x == null ? null : x + +c2x, c2y == null ? null : y + +c2y, ex == null ? null : x + +ex, ey == null ? null : y + +ey);
	},
	curveTo: function curveTo(c1x, c1y, c2x, c2y, ex, ey) {
		var x = this.penX,
		    y = this.penY;
		if (c2x == null) {
			c2x = +c1x;c2y = +c1y;
			c1x = x * 2 - (this._pivotX || 0);c1y = y * 2 - (this._pivotY || 0);
		}
		if (ex == null) {
			this._pivotX = +c1x;this._pivotY = +c1y;
			ex = +c2x;ey = +c2y;
			c2x = (ex + +c1x * 2) / 3;c2y = (ey + +c1y * 2) / 3;
			c1x = (x + +c1x * 2) / 3;c1y = (y + +c1y * 2) / 3;
		} else {
			this._pivotX = +c2x;this._pivotY = +c2y;
		}
		if (this.penDownX == null) {
			this.penDownX = x;this.penDownY = y;
		}
		this.onBezierCurve(x, y, +c1x, +c1y, +c2x, +c2y, this.penX = +ex, this.penY = +ey);
		return this;
	},

	arc: function arc(x, y, rx, ry, outer, counterClockwise, rotation) {
		return this.arcTo(this.penX + +x, this.penY + +y, rx, ry, outer, counterClockwise, rotation);
	},
	arcTo: function arcTo(x, y, rx, ry, outer, counterClockwise, rotation) {
		ry = Math.abs(+ry || +rx || +y - this.penY);
		rx = Math.abs(+rx || +x - this.penX);

		if (!rx || !ry || x == this.penX && y == this.penY) return this.lineTo(x, y);

		var tX = this.penX,
		    tY = this.penY,
		    clockwise = !+counterClockwise,
		    large = !!+outer;

		var rad = rotation ? rotation * Math.PI / 180 : 0,
		    cos = Math.cos(rad),
		    sin = Math.sin(rad);
		x -= tX;y -= tY;

		var cx = cos * x / 2 + sin * y / 2,
		    cy = -sin * x / 2 + cos * y / 2,
		    rxry = rx * rx * ry * ry,
		    rycx = ry * ry * cx * cx,
		    rxcy = rx * rx * cy * cy,
		    a = rxry - rxcy - rycx;

		if (a < 0) {
			a = Math.sqrt(1 - a / rxry);
			rx *= a;ry *= a;
			cx = x / 2;cy = y / 2;
		} else {
			a = Math.sqrt(a / (rxcy + rycx));
			if (large == clockwise) a = -a;
			var cxd = -a * cy * rx / ry,
			    cyd = a * cx * ry / rx;
			cx = cos * cxd - sin * cyd + x / 2;
			cy = sin * cxd + cos * cyd + y / 2;
		}

		var xx = cos / rx,
		    yx = sin / rx,
		    xy = -sin / ry,
		    yy = cos / ry;

		var sa = Math.atan2(xy * -cx + yy * -cy, xx * -cx + yx * -cy),
		    ea = Math.atan2(xy * (x - cx) + yy * (y - cy), xx * (x - cx) + yx * (y - cy));

		cx += tX;cy += tY;
		x += tX;y += tY;

		if (this.penDownX == null) {
			this.penDownX = this.penX;this.penDownY = this.penY;
		}
		this.onArc(tX, tY, this._pivotX = this.penX = x, this._pivotY = this.penY = y, cx, cy, rx, ry, sa, ea, !clockwise, rotation);
		return this;
	},

	counterArc: function counterArc(x, y, rx, ry, outer) {
		return this.arc(x, y, rx, ry, outer, true);
	},
	counterArcTo: function counterArcTo(x, y, rx, ry, outer) {
		return this.arcTo(x, y, rx, ry, outer, true);
	},

	close: function close() {
		if (this.penDownX != null) {
			this.onClose(this.penX, this.penY, this.penX = this.penDownX, this.penY = this.penDownY);
			this.penDownX = null;
		}
		return this;
	},

	onReset: function onReset() {},

	onMove: function onMove(sx, sy, ex, ey) {},

	onLine: function onLine(sx, sy, ex, ey) {
		this.onBezierCurve(sx, sy, sx, sy, ex, ey, ex, ey);
	},

	onBezierCurve: function onBezierCurve(sx, sy, c1x, c1y, c2x, c2y, ex, ey) {
		var gx = ex - sx,
		    gy = ey - sy,
		    g = gx * gx + gy * gy,
		    v1,
		    v2,
		    cx,
		    cy,
		    u;

		cx = c1x - sx;cy = c1y - sy;
		u = cx * gx + cy * gy;

		if (u > g) {
			cx -= gx;
			cy -= gy;
		} else if (u > 0 && g != 0) {
			cx -= u / g * gx;
			cy -= u / g * gy;
		}

		v1 = cx * cx + cy * cy;

		cx = c2x - sx;cy = c2y - sy;
		u = cx * gx + cy * gy;

		if (u > g) {
			cx -= gx;
			cy -= gy;
		} else if (u > 0 && g != 0) {
			cx -= u / g * gx;
			cy -= u / g * gy;
		}

		v2 = cx * cx + cy * cy;

		if (v1 < 0.01 && v2 < 0.01) {
			this.onLine(sx, sy, ex, ey);
			return;
		}

		if (isNaN(v1) || isNaN(v2)) {
			throw new Error('Bad input');
		}

		var s1x = (c1x + c2x) * 0.5,
		    s1y = (c1y + c2y) * 0.5,
		    l1x = (c1x + sx) * 0.5,
		    l1y = (c1y + sy) * 0.5,
		    l2x = (l1x + s1x) * 0.5,
		    l2y = (l1y + s1y) * 0.5,
		    r2x = (ex + c2x) * 0.5,
		    r2y = (ey + c2y) * 0.5,
		    r1x = (r2x + s1x) * 0.5,
		    r1y = (r2y + s1y) * 0.5,
		    l2r1x = (l2x + r1x) * 0.5,
		    l2r1y = (l2y + r1y) * 0.5;

		this.onBezierCurve(sx, sy, l1x, l1y, l2x, l2y, l2r1x, l2r1y);
		this.onBezierCurve(l2r1x, l2r1y, r1x, r1y, r2x, r2y, ex, ey);
	},

	onArc: function onArc(sx, sy, ex, ey, cx, cy, rx, ry, sa, ea, ccw, rotation) {
		var rad = rotation ? rotation * Math.PI / 180 : 0,
		    cos = Math.cos(rad),
		    sin = Math.sin(rad),
		    xx = cos * rx,
		    yx = -sin * ry,
		    xy = sin * rx,
		    yy = cos * ry;

		var arc = ea - sa;
		if (arc < 0 && !ccw) arc += Math.PI * 2;else if (arc > 0 && ccw) arc -= Math.PI * 2;

		var n = Math.ceil(Math.abs(arc / (Math.PI / 2))),
		    step = arc / n,
		    k = 4 / 3 * Math.tan(step / 4);

		var x = Math.cos(sa),
		    y = Math.sin(sa);

		for (var i = 0; i < n; i++) {
			var cp1x = x - k * y,
			    cp1y = y + k * x;

			sa += step;
			x = Math.cos(sa);y = Math.sin(sa);

			var cp2x = x + k * y,
			    cp2y = y - k * x;

			this.onBezierCurve(sx, sy, cx + xx * cp1x + yx * cp1y, cy + xy * cp1x + yy * cp1y, cx + xx * cp2x + yx * cp2y, cy + xy * cp2x + yy * cp2y, sx = cx + xx * x + yx * y, sy = cy + xy * x + yy * y);
		}
	},

	onClose: function onClose(sx, sy, ex, ey) {
		this.onLine(sx, sy, ex, ey);
	}

});
}, 177, null, "art/core/path.js");
__d(/* art/core/transform.js */function(global, require, module, exports) {var Class = require(176      ); // 176 = ./class

function Transform(xx, yx, xy, yy, x, y) {
	if (xx && typeof xx == 'object') {
		yx = xx.yx;yy = xx.yy;y = xx.y;
		xy = xx.xy;x = xx.x;xx = xx.xx;
	}
	this.xx = xx == null ? 1 : xx;
	this.yx = yx || 0;
	this.xy = xy || 0;
	this.yy = yy == null ? 1 : yy;
	this.x = (x == null ? this.x : x) || 0;
	this.y = (y == null ? this.y : y) || 0;
	this._transform();
	return this;
};

module.exports = Class({

	initialize: Transform,

	_transform: function _transform() {},

	xx: 1, yx: 0, x: 0,
	xy: 0, yy: 1, y: 0,

	transform: function transform(xx, yx, xy, yy, x, y) {
		var m = this;
		if (xx && typeof xx == 'object') {
			yx = xx.yx;yy = xx.yy;y = xx.y;
			xy = xx.xy;x = xx.x;xx = xx.xx;
		}
		if (!x) x = 0;
		if (!y) y = 0;
		return this.transformTo(m.xx * xx + m.xy * yx, m.yx * xx + m.yy * yx, m.xx * xy + m.xy * yy, m.yx * xy + m.yy * yy, m.xx * x + m.xy * y + m.x, m.yx * x + m.yy * y + m.y);
	},

	transformTo: Transform,

	translate: function translate(x, y) {
		return this.transform(1, 0, 0, 1, x, y);
	},

	move: function move(x, y) {
		this.x += x || 0;
		this.y += y || 0;
		this._transform();
		return this;
	},

	scale: function scale(x, y) {
		if (y == null) y = x;
		return this.transform(x, 0, 0, y, 0, 0);
	},

	rotate: function rotate(deg, x, y) {
		if (x == null || y == null) {
			x = (this.left || 0) + (this.width || 0) / 2;
			y = (this.top || 0) + (this.height || 0) / 2;
		}

		var rad = deg * Math.PI / 180,
		    sin = Math.sin(rad),
		    cos = Math.cos(rad);

		this.transform(1, 0, 0, 1, x, y);
		var m = this;

		return this.transformTo(cos * m.xx - sin * m.yx, sin * m.xx + cos * m.yx, cos * m.xy - sin * m.yy, sin * m.xy + cos * m.yy, m.x, m.y).transform(1, 0, 0, 1, -x, -y);
	},

	moveTo: function moveTo(x, y) {
		var m = this;
		return this.transformTo(m.xx, m.yx, m.xy, m.yy, x, y);
	},

	rotateTo: function rotateTo(deg, x, y) {
		var m = this;
		var flip = m.yx / m.xx > m.yy / m.xy ? -1 : 1;
		if (m.xx < 0 ? m.xy >= 0 : m.xy < 0) flip = -flip;
		return this.rotate(deg - Math.atan2(flip * m.yx, flip * m.xx) * 180 / Math.PI, x, y);
	},

	scaleTo: function scaleTo(x, y) {
		var m = this;

		var h = Math.sqrt(m.xx * m.xx + m.yx * m.yx);
		m.xx /= h;m.yx /= h;

		h = Math.sqrt(m.yy * m.yy + m.xy * m.xy);
		m.yy /= h;m.xy /= h;

		return this.scale(x, y);
	},

	resizeTo: function resizeTo(width, height) {
		var w = this.width,
		    h = this.height;
		if (!w || !h) return this;
		return this.scaleTo(width / w, height / h);
	},

	inversePoint: function inversePoint(x, y) {
		var a = this.xx,
		    b = this.yx,
		    c = this.xy,
		    d = this.yy,
		    e = this.x,
		    f = this.y;
		var det = b * c - a * d;
		if (det == 0) return null;
		return {
			x: (d * (e - x) + c * (y - f)) / det,
			y: (a * (f - y) + b * (x - e)) / det
		};
	},

	point: function point(x, y) {
		var m = this;
		return {
			x: m.xx * x + m.xy * y + m.x,
			y: m.yx * x + m.yy * y + m.y
		};
	}

});
}, 178, null, "art/core/transform.js");
__d(/* Button */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/Button.js';
var ColorPropType = require(122            ); // 122 = ColorPropType
var Platform = require(46        ); // 46 = Platform
var React = require(129    ); // 129 = React
var PropTypes = require(126         ); // 126 = prop-types
var StyleSheet = require(167         ); // 167 = StyleSheet
var Text = require(180   ); // 180 = Text
var TouchableNativeFeedback = require(188                      ); // 188 = TouchableNativeFeedback
var TouchableOpacity = require(192               ); // 192 = TouchableOpacity
var View = require(169   ); // 169 = View

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var Button = function (_React$Component) {
  babelHelpers.inherits(Button, _React$Component);

  function Button() {
    babelHelpers.classCallCheck(this, Button);
    return babelHelpers.possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).apply(this, arguments));
  }

  babelHelpers.createClass(Button, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          accessibilityLabel = _props.accessibilityLabel,
          color = _props.color,
          onPress = _props.onPress,
          title = _props.title,
          disabled = _props.disabled,
          testID = _props.testID;

      var buttonStyles = [styles.button];
      var textStyles = [styles.text];
      if (color) {
        if (Platform.OS === 'ios') {
          textStyles.push({ color: color });
        } else {
          buttonStyles.push({ backgroundColor: color });
        }
      }
      var accessibilityTraits = ['button'];
      if (disabled) {
        buttonStyles.push(styles.buttonDisabled);
        textStyles.push(styles.textDisabled);
        accessibilityTraits.push('disabled');
      }
      invariant(typeof title === 'string', 'The title prop of a Button must be a string');
      var formattedTitle = Platform.OS === 'android' ? title.toUpperCase() : title;
      var Touchable = Platform.OS === 'android' ? TouchableNativeFeedback : TouchableOpacity;
      return React.createElement(
        Touchable,
        {
          accessibilityComponentType: 'button',
          accessibilityLabel: accessibilityLabel,
          accessibilityTraits: accessibilityTraits,
          testID: testID,
          disabled: disabled,
          onPress: onPress, __source: {
            fileName: _jsxFileName,
            lineNumber: 120
          }
        },
        React.createElement(
          View,
          { style: buttonStyles, __source: {
              fileName: _jsxFileName,
              lineNumber: 127
            }
          },
          React.createElement(
            Text,
            { style: textStyles, disabled: disabled, __source: {
                fileName: _jsxFileName,
                lineNumber: 128
              }
            },
            formattedTitle
          )
        )
      );
    }
  }]);
  return Button;
}(React.Component);

Button.propTypes = {
  title: PropTypes.string.isRequired,

  accessibilityLabel: PropTypes.string,

  color: ColorPropType,

  disabled: PropTypes.bool,

  onPress: PropTypes.func.isRequired,

  testID: PropTypes.string
};


var styles = StyleSheet.create({
  button: Platform.select({
    ios: {},
    android: {
      elevation: 4,

      backgroundColor: '#2196F3',
      borderRadius: 2
    }
  }),
  text: Platform.select({
    ios: {
      color: '#007AFF',
      textAlign: 'center',
      padding: 8,
      fontSize: 18
    },
    android: {
      color: 'white',
      textAlign: 'center',
      padding: 8,
      fontWeight: '500'
    }
  }),
  buttonDisabled: Platform.select({
    ios: {},
    android: {
      elevation: 0,
      backgroundColor: '#dfdfdf'
    }
  }),
  textDisabled: Platform.select({
    ios: {
      color: '#cdcdcd'
    },
    android: {
      color: '#a1a1a1'
    }
  })
});

module.exports = Button;
}, 179, null, "Button");
__d(/* Text */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Text/Text.js';
var ColorPropType = require(122            ); // 122 = ColorPropType
var EdgeInsetsPropType = require(131                 ); // 131 = EdgeInsetsPropType
var NativeMethodsMixin = require(124                 ); // 124 = NativeMethodsMixin
var Platform = require(46        ); // 46 = Platform
var React = require(129    ); // 129 = React
var PropTypes = require(126         ); // 126 = prop-types
var ReactNativeViewAttributes = require(170                        ); // 170 = ReactNativeViewAttributes
var StyleSheetPropType = require(137                 ); // 137 = StyleSheetPropType
var TextStylePropTypes = require(150                 ); // 150 = TextStylePropTypes
var Touchable = require(181        ); // 181 = Touchable

var createReactClass = require(171                 ); // 171 = create-react-class
var createReactNativeComponentClass = require(155                              ); // 155 = createReactNativeComponentClass
var mergeFast = require(187        ); // 187 = mergeFast
var processColor = require(151           ); // 151 = processColor

var stylePropType = StyleSheetPropType(TextStylePropTypes);

var viewConfig = {
  validAttributes: mergeFast(ReactNativeViewAttributes.UIView, {
    isHighlighted: true,
    numberOfLines: true,
    ellipsizeMode: true,
    allowFontScaling: true,
    disabled: true,
    selectable: true,
    selectionColor: true,
    adjustsFontSizeToFit: true,
    minimumFontScale: true,
    textBreakStrategy: true
  }),
  uiViewClassName: 'RCTText'
};

var Text = createReactClass({
  displayName: 'Text',
  propTypes: {
    ellipsizeMode: PropTypes.oneOf(['head', 'middle', 'tail', 'clip']),

    numberOfLines: PropTypes.number,

    textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),

    onLayout: PropTypes.func,

    onPress: PropTypes.func,

    onLongPress: PropTypes.func,

    pressRetentionOffset: EdgeInsetsPropType,

    selectable: PropTypes.bool,

    selectionColor: ColorPropType,

    suppressHighlighting: PropTypes.bool,
    style: stylePropType,

    testID: PropTypes.string,

    nativeID: PropTypes.string,

    allowFontScaling: PropTypes.bool,

    accessible: PropTypes.bool,

    adjustsFontSizeToFit: PropTypes.bool,

    minimumFontScale: PropTypes.number,

    disabled: PropTypes.bool
  },
  getDefaultProps: function getDefaultProps() {
    return {
      accessible: true,
      allowFontScaling: true,
      ellipsizeMode: 'tail'
    };
  },

  getInitialState: function getInitialState() {
    return mergeFast(Touchable.Mixin.touchableGetInitialState(), {
      isHighlighted: false
    });
  },
  mixins: [NativeMethodsMixin],
  viewConfig: viewConfig,
  getChildContext: function getChildContext() {
    return { isInAParentText: true };
  },

  childContextTypes: {
    isInAParentText: PropTypes.bool
  },
  contextTypes: {
    isInAParentText: PropTypes.bool
  },

  _handlers: null,
  _hasPressHandler: function _hasPressHandler() {
    return !!this.props.onPress || !!this.props.onLongPress;
  },

  touchableHandleActivePressIn: null,
  touchableHandleActivePressOut: null,
  touchableHandlePress: null,
  touchableHandleLongPress: null,
  touchableGetPressRectOffset: null,
  render: function render() {
    var _this = this;

    var newProps = this.props;
    if (this.props.onStartShouldSetResponder || this._hasPressHandler()) {
      if (!this._handlers) {
        this._handlers = {
          onStartShouldSetResponder: function onStartShouldSetResponder() {
            var shouldSetFromProps = _this.props.onStartShouldSetResponder && _this.props.onStartShouldSetResponder();
            var setResponder = shouldSetFromProps || _this._hasPressHandler();
            if (setResponder && !_this.touchableHandleActivePressIn) {
              for (var key in Touchable.Mixin) {
                if (typeof Touchable.Mixin[key] === 'function') {
                  _this[key] = Touchable.Mixin[key].bind(_this);
                }
              }
              _this.touchableHandleActivePressIn = function () {
                if (_this.props.suppressHighlighting || !_this._hasPressHandler()) {
                  return;
                }
                _this.setState({
                  isHighlighted: true
                });
              };

              _this.touchableHandleActivePressOut = function () {
                if (_this.props.suppressHighlighting || !_this._hasPressHandler()) {
                  return;
                }
                _this.setState({
                  isHighlighted: false
                });
              };

              _this.touchableHandlePress = function (e) {
                _this.props.onPress && _this.props.onPress(e);
              };

              _this.touchableHandleLongPress = function (e) {
                _this.props.onLongPress && _this.props.onLongPress(e);
              };

              _this.touchableGetPressRectOffset = function () {
                return this.props.pressRetentionOffset || PRESS_RECT_OFFSET;
              };
            }

            return setResponder;
          },
          onResponderGrant: function (e, dispatchID) {
            this.touchableHandleResponderGrant(e, dispatchID);
            this.props.onResponderGrant && this.props.onResponderGrant.apply(this, arguments);
          }.bind(this),
          onResponderMove: function (e) {
            this.touchableHandleResponderMove(e);
            this.props.onResponderMove && this.props.onResponderMove.apply(this, arguments);
          }.bind(this),
          onResponderRelease: function (e) {
            this.touchableHandleResponderRelease(e);
            this.props.onResponderRelease && this.props.onResponderRelease.apply(this, arguments);
          }.bind(this),
          onResponderTerminate: function (e) {
            this.touchableHandleResponderTerminate(e);
            this.props.onResponderTerminate && this.props.onResponderTerminate.apply(this, arguments);
          }.bind(this),
          onResponderTerminationRequest: function () {
            var allowTermination = this.touchableHandleResponderTerminationRequest();
            if (allowTermination && this.props.onResponderTerminationRequest) {
              allowTermination = this.props.onResponderTerminationRequest.apply(this, arguments);
            }
            return allowTermination;
          }.bind(this)
        };
      }
      newProps = babelHelpers.extends({}, this.props, this._handlers, {
        isHighlighted: this.state.isHighlighted
      });
    }
    if (newProps.selectionColor != null) {
      newProps = babelHelpers.extends({}, newProps, {
        selectionColor: processColor(newProps.selectionColor)
      });
    }
    if (Touchable.TOUCH_TARGET_DEBUG && newProps.onPress) {
      newProps = babelHelpers.extends({}, newProps, {
        style: [this.props.style, { color: 'magenta' }]
      });
    }
    if (this.context.isInAParentText) {
      return React.createElement(RCTVirtualText, babelHelpers.extends({}, newProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 556
        }
      }));
    } else {
      return React.createElement(RCTText, babelHelpers.extends({}, newProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 558
        }
      }));
    }
  }
});

var PRESS_RECT_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };

var RCTText = createReactNativeComponentClass(viewConfig.uiViewClassName, function () {
  return viewConfig;
});
var RCTVirtualText = RCTText;

if (Platform.OS === 'android') {
  RCTVirtualText = createReactNativeComponentClass('RCTVirtualText', function () {
    return {
      validAttributes: mergeFast(ReactNativeViewAttributes.UIView, {
        isHighlighted: true
      }),
      uiViewClassName: 'RCTVirtualText'
    };
  });
}

module.exports = Text;
}, 180, null, "Text");
__d(/* Touchable */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/Touchable/Touchable.js';
var BoundingDimensions = require(182                 ); // 182 = BoundingDimensions
var Platform = require(46        ); // 46 = Platform
var Position = require(184       ); // 184 = Position
var React = require(129    ); // 129 = React
var ReactNative = require(21           ); // 21 = ReactNative
var TVEventHandler = require(185             ); // 185 = TVEventHandler
var TouchEventUtils = require(186                       ); // 186 = fbjs/lib/TouchEventUtils
var UIManager = require(47         ); // 47 = UIManager
var View = require(169   ); // 169 = View

var keyMirror = require(149                 ); // 149 = fbjs/lib/keyMirror
var normalizeColor = require(123             ); // 123 = normalizeColor

var States = keyMirror({
  NOT_RESPONDER: null,
  RESPONDER_INACTIVE_PRESS_IN: null,
  RESPONDER_INACTIVE_PRESS_OUT: null,
  RESPONDER_ACTIVE_PRESS_IN: null,
  RESPONDER_ACTIVE_PRESS_OUT: null,
  RESPONDER_ACTIVE_LONG_PRESS_IN: null,
  RESPONDER_ACTIVE_LONG_PRESS_OUT: null,
  ERROR: null
});

var IsActive = {
  RESPONDER_ACTIVE_PRESS_OUT: true,
  RESPONDER_ACTIVE_PRESS_IN: true
};

var IsPressingIn = {
  RESPONDER_INACTIVE_PRESS_IN: true,
  RESPONDER_ACTIVE_PRESS_IN: true,
  RESPONDER_ACTIVE_LONG_PRESS_IN: true
};

var IsLongPressingIn = {
  RESPONDER_ACTIVE_LONG_PRESS_IN: true
};

var Signals = keyMirror({
  DELAY: null,
  RESPONDER_GRANT: null,
  RESPONDER_RELEASE: null,
  RESPONDER_TERMINATED: null,
  ENTER_PRESS_RECT: null,
  LEAVE_PRESS_RECT: null,
  LONG_PRESS_DETECTED: null
});

var Transitions = {
  NOT_RESPONDER: {
    DELAY: States.ERROR,
    RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,
    RESPONDER_RELEASE: States.ERROR,
    RESPONDER_TERMINATED: States.ERROR,
    ENTER_PRESS_RECT: States.ERROR,
    LEAVE_PRESS_RECT: States.ERROR,
    LONG_PRESS_DETECTED: States.ERROR
  },
  RESPONDER_INACTIVE_PRESS_IN: {
    DELAY: States.RESPONDER_ACTIVE_PRESS_IN,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,
    LONG_PRESS_DETECTED: States.ERROR
  },
  RESPONDER_INACTIVE_PRESS_OUT: {
    DELAY: States.RESPONDER_ACTIVE_PRESS_OUT,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,
    LONG_PRESS_DETECTED: States.ERROR
  },
  RESPONDER_ACTIVE_PRESS_IN: {
    DELAY: States.ERROR,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,
    LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN
  },
  RESPONDER_ACTIVE_PRESS_OUT: {
    DELAY: States.ERROR,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,
    LONG_PRESS_DETECTED: States.ERROR
  },
  RESPONDER_ACTIVE_LONG_PRESS_IN: {
    DELAY: States.ERROR,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
    LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN
  },
  RESPONDER_ACTIVE_LONG_PRESS_OUT: {
    DELAY: States.ERROR,
    RESPONDER_GRANT: States.ERROR,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,
    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
    LONG_PRESS_DETECTED: States.ERROR
  },
  error: {
    DELAY: States.NOT_RESPONDER,
    RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,
    RESPONDER_RELEASE: States.NOT_RESPONDER,
    RESPONDER_TERMINATED: States.NOT_RESPONDER,
    ENTER_PRESS_RECT: States.NOT_RESPONDER,
    LEAVE_PRESS_RECT: States.NOT_RESPONDER,
    LONG_PRESS_DETECTED: States.NOT_RESPONDER
  }
};

var HIGHLIGHT_DELAY_MS = 130;

var PRESS_EXPAND_PX = 20;

var LONG_PRESS_THRESHOLD = 500;

var LONG_PRESS_DELAY_MS = LONG_PRESS_THRESHOLD - HIGHLIGHT_DELAY_MS;

var LONG_PRESS_ALLOWED_MOVEMENT = 10;

var TouchableMixin = {
  componentDidMount: function componentDidMount() {
    if (!Platform.isTVOS) {
      return;
    }

    this._tvEventHandler = new TVEventHandler();
    this._tvEventHandler.enable(this, function (cmp, evt) {
      var myTag = ReactNative.findNodeHandle(cmp);
      evt.dispatchConfig = {};
      if (myTag === evt.tag) {
        if (evt.eventType === 'focus') {
          cmp.touchableHandleActivePressIn && cmp.touchableHandleActivePressIn(evt);
        } else if (evt.eventType === 'blur') {
          cmp.touchableHandleActivePressOut && cmp.touchableHandleActivePressOut(evt);
        } else if (evt.eventType === 'select') {
          cmp.touchableHandlePress && cmp.touchableHandlePress(evt);
        }
      }
    });
  },

  componentWillUnmount: function componentWillUnmount() {
    if (this._tvEventHandler) {
      this._tvEventHandler.disable();
      delete this._tvEventHandler;
    }
    this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);
    this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);
    this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);
  },

  touchableGetInitialState: function touchableGetInitialState() {
    return {
      touchable: { touchState: undefined, responderID: null }
    };
  },

  touchableHandleResponderTerminationRequest: function touchableHandleResponderTerminationRequest() {
    return !this.props.rejectResponderTermination;
  },

  touchableHandleStartShouldSetResponder: function touchableHandleStartShouldSetResponder() {
    return !this.props.disabled;
  },

  touchableLongPressCancelsPress: function touchableLongPressCancelsPress() {
    return true;
  },

  touchableHandleResponderGrant: function touchableHandleResponderGrant(e) {
    var dispatchID = e.currentTarget;

    e.persist();

    this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);
    this.pressOutDelayTimeout = null;

    this.state.touchable.touchState = States.NOT_RESPONDER;
    this.state.touchable.responderID = dispatchID;
    this._receiveSignal(Signals.RESPONDER_GRANT, e);
    var delayMS = this.touchableGetHighlightDelayMS !== undefined ? Math.max(this.touchableGetHighlightDelayMS(), 0) : HIGHLIGHT_DELAY_MS;
    delayMS = isNaN(delayMS) ? HIGHLIGHT_DELAY_MS : delayMS;
    if (delayMS !== 0) {
      this.touchableDelayTimeout = setTimeout(this._handleDelay.bind(this, e), delayMS);
    } else {
      this._handleDelay(e);
    }

    var longDelayMS = this.touchableGetLongPressDelayMS !== undefined ? Math.max(this.touchableGetLongPressDelayMS(), 10) : LONG_PRESS_DELAY_MS;
    longDelayMS = isNaN(longDelayMS) ? LONG_PRESS_DELAY_MS : longDelayMS;
    this.longPressDelayTimeout = setTimeout(this._handleLongDelay.bind(this, e), longDelayMS + delayMS);
  },

  touchableHandleResponderRelease: function touchableHandleResponderRelease(e) {
    this._receiveSignal(Signals.RESPONDER_RELEASE, e);
  },

  touchableHandleResponderTerminate: function touchableHandleResponderTerminate(e) {
    this._receiveSignal(Signals.RESPONDER_TERMINATED, e);
  },

  touchableHandleResponderMove: function touchableHandleResponderMove(e) {
    if (this.state.touchable.touchState === States.RESPONDER_INACTIVE_PRESS_IN) {
      return;
    }

    if (!this.state.touchable.positionOnActivate) {
      return;
    }

    var positionOnActivate = this.state.touchable.positionOnActivate;
    var dimensionsOnActivate = this.state.touchable.dimensionsOnActivate;
    var pressRectOffset = this.touchableGetPressRectOffset ? this.touchableGetPressRectOffset() : {
      left: PRESS_EXPAND_PX,
      right: PRESS_EXPAND_PX,
      top: PRESS_EXPAND_PX,
      bottom: PRESS_EXPAND_PX
    };

    var pressExpandLeft = pressRectOffset.left;
    var pressExpandTop = pressRectOffset.top;
    var pressExpandRight = pressRectOffset.right;
    var pressExpandBottom = pressRectOffset.bottom;

    var hitSlop = this.touchableGetHitSlop ? this.touchableGetHitSlop() : null;

    if (hitSlop) {
      pressExpandLeft += hitSlop.left;
      pressExpandTop += hitSlop.top;
      pressExpandRight += hitSlop.right;
      pressExpandBottom += hitSlop.bottom;
    }

    var touch = TouchEventUtils.extractSingleTouch(e.nativeEvent);
    var pageX = touch && touch.pageX;
    var pageY = touch && touch.pageY;

    if (this.pressInLocation) {
      var movedDistance = this._getDistanceBetweenPoints(pageX, pageY, this.pressInLocation.pageX, this.pressInLocation.pageY);
      if (movedDistance > LONG_PRESS_ALLOWED_MOVEMENT) {
        this._cancelLongPressDelayTimeout();
      }
    }

    var isTouchWithinActive = pageX > positionOnActivate.left - pressExpandLeft && pageY > positionOnActivate.top - pressExpandTop && pageX < positionOnActivate.left + dimensionsOnActivate.width + pressExpandRight && pageY < positionOnActivate.top + dimensionsOnActivate.height + pressExpandBottom;
    if (isTouchWithinActive) {
      this._receiveSignal(Signals.ENTER_PRESS_RECT, e);
      var curState = this.state.touchable.touchState;
      if (curState === States.RESPONDER_INACTIVE_PRESS_IN) {
        this._cancelLongPressDelayTimeout();
      }
    } else {
      this._cancelLongPressDelayTimeout();
      this._receiveSignal(Signals.LEAVE_PRESS_RECT, e);
    }
  },

  _remeasureMetricsOnActivation: function _remeasureMetricsOnActivation() {
    var tag = this.state.touchable.responderID;
    if (tag == null) {
      return;
    }

    UIManager.measure(tag, this._handleQueryLayout);
  },

  _handleQueryLayout: function _handleQueryLayout(l, t, w, h, globalX, globalY) {
    if (!l && !t && !w && !h && !globalX && !globalY) {
      return;
    }
    this.state.touchable.positionOnActivate && Position.release(this.state.touchable.positionOnActivate);
    this.state.touchable.dimensionsOnActivate && BoundingDimensions.release(this.state.touchable.dimensionsOnActivate);
    this.state.touchable.positionOnActivate = Position.getPooled(globalX, globalY);
    this.state.touchable.dimensionsOnActivate = BoundingDimensions.getPooled(w, h);
  },

  _handleDelay: function _handleDelay(e) {
    this.touchableDelayTimeout = null;
    this._receiveSignal(Signals.DELAY, e);
  },

  _handleLongDelay: function _handleLongDelay(e) {
    this.longPressDelayTimeout = null;
    var curState = this.state.touchable.touchState;
    if (curState !== States.RESPONDER_ACTIVE_PRESS_IN && curState !== States.RESPONDER_ACTIVE_LONG_PRESS_IN) {
      console.error('Attempted to transition from state `' + curState + '` to `' + States.RESPONDER_ACTIVE_LONG_PRESS_IN + '`, which is not supported. This is ' + 'most likely due to `Touchable.longPressDelayTimeout` not being cancelled.');
    } else {
      this._receiveSignal(Signals.LONG_PRESS_DETECTED, e);
    }
  },

  _receiveSignal: function _receiveSignal(signal, e) {
    var responderID = this.state.touchable.responderID;
    var curState = this.state.touchable.touchState;
    var nextState = Transitions[curState] && Transitions[curState][signal];
    if (!responderID && signal === Signals.RESPONDER_RELEASE) {
      return;
    }
    if (!nextState) {
      throw new Error('Unrecognized signal `' + signal + '` or state `' + curState + '` for Touchable responder `' + responderID + '`');
    }
    if (nextState === States.ERROR) {
      throw new Error('Touchable cannot transition from `' + curState + '` to `' + signal + '` for responder `' + responderID + '`');
    }
    if (curState !== nextState) {
      this._performSideEffectsForTransition(curState, nextState, signal, e);
      this.state.touchable.touchState = nextState;
    }
  },

  _cancelLongPressDelayTimeout: function _cancelLongPressDelayTimeout() {
    this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);
    this.longPressDelayTimeout = null;
  },

  _isHighlight: function _isHighlight(state) {
    return state === States.RESPONDER_ACTIVE_PRESS_IN || state === States.RESPONDER_ACTIVE_LONG_PRESS_IN;
  },

  _savePressInLocation: function _savePressInLocation(e) {
    var touch = TouchEventUtils.extractSingleTouch(e.nativeEvent);
    var pageX = touch && touch.pageX;
    var pageY = touch && touch.pageY;
    var locationX = touch && touch.locationX;
    var locationY = touch && touch.locationY;
    this.pressInLocation = { pageX: pageX, pageY: pageY, locationX: locationX, locationY: locationY };
  },

  _getDistanceBetweenPoints: function _getDistanceBetweenPoints(aX, aY, bX, bY) {
    var deltaX = aX - bX;
    var deltaY = aY - bY;
    return Math.sqrt(deltaX * deltaX + deltaY * deltaY);
  },

  _performSideEffectsForTransition: function _performSideEffectsForTransition(curState, nextState, signal, e) {
    var curIsHighlight = this._isHighlight(curState);
    var newIsHighlight = this._isHighlight(nextState);

    var isFinalSignal = signal === Signals.RESPONDER_TERMINATED || signal === Signals.RESPONDER_RELEASE;

    if (isFinalSignal) {
      this._cancelLongPressDelayTimeout();
    }

    if (!IsActive[curState] && IsActive[nextState]) {
      this._remeasureMetricsOnActivation();
    }

    if (IsPressingIn[curState] && signal === Signals.LONG_PRESS_DETECTED) {
      this.touchableHandleLongPress && this.touchableHandleLongPress(e);
    }

    if (newIsHighlight && !curIsHighlight) {
      this._startHighlight(e);
    } else if (!newIsHighlight && curIsHighlight) {
      this._endHighlight(e);
    }

    if (IsPressingIn[curState] && signal === Signals.RESPONDER_RELEASE) {
      var hasLongPressHandler = !!this.props.onLongPress;
      var pressIsLongButStillCallOnPress = IsLongPressingIn[curState] && (!hasLongPressHandler || !this.touchableLongPressCancelsPress());

      var shouldInvokePress = !IsLongPressingIn[curState] || pressIsLongButStillCallOnPress;
      if (shouldInvokePress && this.touchableHandlePress) {
        if (!newIsHighlight && !curIsHighlight) {
          this._startHighlight(e);
          this._endHighlight(e);
        }
        this.touchableHandlePress(e);
      }
    }

    this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);
    this.touchableDelayTimeout = null;
  },

  _startHighlight: function _startHighlight(e) {
    this._savePressInLocation(e);
    this.touchableHandleActivePressIn && this.touchableHandleActivePressIn(e);
  },

  _endHighlight: function _endHighlight(e) {
    var _this = this;

    if (this.touchableHandleActivePressOut) {
      if (this.touchableGetPressOutDelayMS && this.touchableGetPressOutDelayMS()) {
        this.pressOutDelayTimeout = setTimeout(function () {
          _this.touchableHandleActivePressOut(e);
        }, this.touchableGetPressOutDelayMS());
      } else {
        this.touchableHandleActivePressOut(e);
      }
    }
  }

};

var Touchable = {
  Mixin: TouchableMixin,
  TOUCH_TARGET_DEBUG: false,
  renderDebugView: function renderDebugView(_ref) {
    var color = _ref.color,
        hitSlop = _ref.hitSlop;

    if (!Touchable.TOUCH_TARGET_DEBUG) {
      return null;
    }
    if (!__DEV__) {
      throw Error('Touchable.TOUCH_TARGET_DEBUG should not be enabled in prod!');
    }
    var debugHitSlopStyle = {};
    hitSlop = hitSlop || { top: 0, bottom: 0, left: 0, right: 0 };
    for (var key in hitSlop) {
      debugHitSlopStyle[key] = -hitSlop[key];
    }
    var hexColor = '#' + ('00000000' + normalizeColor(color).toString(16)).substr(-8);
    return React.createElement(View, {
      pointerEvents: 'none',
      style: babelHelpers.extends({
        position: 'absolute',
        borderColor: hexColor.slice(0, -2) + '55',
        borderWidth: 1,
        borderStyle: 'dashed',
        backgroundColor: hexColor.slice(0, -2) + '0F' }, debugHitSlopStyle),
      __source: {
        fileName: _jsxFileName,
        lineNumber: 793
      }
    });
  }
};

module.exports = Touchable;
}, 181, null, "Touchable");
__d(/* BoundingDimensions */function(global, require, module, exports) {

'use strict';

var PooledClass = require(183          ); // 183 = PooledClass

var twoArgumentPooler = PooledClass.twoArgumentPooler;

function BoundingDimensions(width, height) {
  this.width = width;
  this.height = height;
}

BoundingDimensions.prototype.destructor = function () {
  this.width = null;
  this.height = null;
};

BoundingDimensions.getPooledFromElement = function (element) {
  return BoundingDimensions.getPooled(element.offsetWidth, element.offsetHeight);
};

PooledClass.addPoolingTo(BoundingDimensions, twoArgumentPooler);

module.exports = BoundingDimensions;
}, 182, null, "BoundingDimensions");
__d(/* PooledClass */function(global, require, module, exports) {

'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var oneArgumentPooler = function oneArgumentPooler(copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function twoArgumentPooler(a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function threeArgumentPooler(a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function fourArgumentPooler(a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function standardReleaser(instance) {
  var Klass = this;
  invariant(instance instanceof Klass, 'Trying to release an instance into a pool of a different type.');
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

var addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler
};

module.exports = PooledClass;
}, 183, null, "PooledClass");
__d(/* Position */function(global, require, module, exports) {

'use strict';

var PooledClass = require(183          ); // 183 = PooledClass

var twoArgumentPooler = PooledClass.twoArgumentPooler;

function Position(left, top) {
  this.left = left;
  this.top = top;
}

Position.prototype.destructor = function () {
  this.left = null;
  this.top = null;
};

PooledClass.addPoolingTo(Position, twoArgumentPooler);

module.exports = Position;
}, 184, null, "Position");
__d(/* TVEventHandler */function(global, require, module, exports) {
'use strict';

function TVEventHandler() {}

TVEventHandler.prototype.enable = function (component, callback) {};

TVEventHandler.prototype.disable = function () {};

module.exports = TVEventHandler;
}, 185, null, "TVEventHandler");
__d(/* fbjs/lib/TouchEventUtils.js */function(global, require, module, exports) {"use strict";

var TouchEventUtils = {
  extractSingleTouch: function extractSingleTouch(nativeEvent) {
    var touches = nativeEvent.touches;
    var changedTouches = nativeEvent.changedTouches;
    var hasTouches = touches && touches.length > 0;
    var hasChangedTouches = changedTouches && changedTouches.length > 0;

    return !hasTouches && hasChangedTouches ? changedTouches[0] : hasTouches ? touches[0] : nativeEvent;
  }
};

module.exports = TouchEventUtils;
}, 186, null, "fbjs/lib/TouchEventUtils.js");
__d(/* mergeFast */function(global, require, module, exports) {
'use strict';

var mergeFast = function mergeFast(one, two) {
  var ret = {};
  for (var keyOne in one) {
    ret[keyOne] = one[keyOne];
  }
  for (var keyTwo in two) {
    ret[keyTwo] = two[keyTwo];
  }
  return ret;
};

module.exports = mergeFast;
}, 187, null, "mergeFast");
__d(/* TouchableNativeFeedback */function(global, require, module, exports) {
'use strict';

var Platform = require(46        ); // 46 = Platform
var React = require(129    ); // 129 = React
var PropTypes = require(126         ); // 126 = prop-types
var ReactNative = require(21           ); // 21 = ReactNative
var Touchable = require(181        ); // 181 = Touchable
var TouchableWithoutFeedback = require(189                       ); // 189 = TouchableWithoutFeedback
var UIManager = require(47         ); // 47 = UIManager

var createReactClass = require(171                 ); // 171 = create-react-class
var ensurePositiveDelayProps = require(191                       ); // 191 = ensurePositiveDelayProps
var processColor = require(151           ); // 151 = processColor

var rippleBackgroundPropType = PropTypes.shape({
  type: PropTypes.oneOf(['RippleAndroid']),
  color: PropTypes.number,
  borderless: PropTypes.bool
});

var themeAttributeBackgroundPropType = PropTypes.shape({
  type: PropTypes.oneOf(['ThemeAttrAndroid']),
  attribute: PropTypes.string.isRequired
});

var backgroundPropType = PropTypes.oneOfType([rippleBackgroundPropType, themeAttributeBackgroundPropType]);

var PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };

var TouchableNativeFeedback = createReactClass({
  displayName: 'TouchableNativeFeedback',
  propTypes: babelHelpers.extends({}, TouchableWithoutFeedback.propTypes, {
    background: backgroundPropType,

    useForeground: PropTypes.bool
  }),

  statics: {
    SelectableBackground: function SelectableBackground() {
      return { type: 'ThemeAttrAndroid', attribute: 'selectableItemBackground' };
    },

    SelectableBackgroundBorderless: function SelectableBackgroundBorderless() {
      return { type: 'ThemeAttrAndroid', attribute: 'selectableItemBackgroundBorderless' };
    },

    Ripple: function Ripple(color, borderless) {
      return { type: 'RippleAndroid', color: processColor(color), borderless: borderless };
    },

    canUseNativeForeground: function canUseNativeForeground() {
      return Platform.OS === 'android' && Platform.Version >= 23;
    }
  },

  mixins: [Touchable.Mixin],

  getDefaultProps: function getDefaultProps() {
    return {
      background: this.SelectableBackground()
    };
  },

  getInitialState: function getInitialState() {
    return this.touchableGetInitialState();
  },

  componentDidMount: function componentDidMount() {
    ensurePositiveDelayProps(this.props);
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    ensurePositiveDelayProps(nextProps);
  },

  touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
    this.props.onPressIn && this.props.onPressIn(e);
    this._dispatchPressedStateChange(true);
    this._dispatchHotspotUpdate(this.pressInLocation.locationX, this.pressInLocation.locationY);
  },

  touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
    this.props.onPressOut && this.props.onPressOut(e);
    this._dispatchPressedStateChange(false);
  },

  touchableHandlePress: function touchableHandlePress(e) {
    this.props.onPress && this.props.onPress(e);
  },

  touchableHandleLongPress: function touchableHandleLongPress(e) {
    this.props.onLongPress && this.props.onLongPress(e);
  },

  touchableGetPressRectOffset: function touchableGetPressRectOffset() {
    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;
  },

  touchableGetHitSlop: function touchableGetHitSlop() {
    return this.props.hitSlop;
  },

  touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
    return this.props.delayPressIn;
  },

  touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
    return this.props.delayLongPress;
  },

  touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
    return this.props.delayPressOut;
  },

  _handleResponderMove: function _handleResponderMove(e) {
    this.touchableHandleResponderMove(e);
    this._dispatchHotspotUpdate(e.nativeEvent.locationX, e.nativeEvent.locationY);
  },

  _dispatchHotspotUpdate: function _dispatchHotspotUpdate(destX, destY) {
    UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(this), UIManager.RCTView.Commands.hotspotUpdate, [destX || 0, destY || 0]);
  },

  _dispatchPressedStateChange: function _dispatchPressedStateChange(pressed) {
    UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(this), UIManager.RCTView.Commands.setPressed, [pressed]);
  },

  render: function render() {
    var _babelHelpers$extends;

    var child = React.Children.only(this.props.children);
    var children = child.props.children;
    if (Touchable.TOUCH_TARGET_DEBUG && child.type.displayName === 'View') {
      if (!Array.isArray(children)) {
        children = [children];
      }
      children.push(Touchable.renderDebugView({ color: 'brown', hitSlop: this.props.hitSlop }));
    }
    if (this.props.useForeground && !TouchableNativeFeedback.canUseNativeForeground()) {
      console.warn('Requested foreground ripple, but it is not available on this version of Android. ' + 'Consider calling TouchableNativeFeedback.canUseNativeForeground() and using a different ' + 'Touchable if the result is false.');
    }
    var drawableProp = this.props.useForeground && TouchableNativeFeedback.canUseNativeForeground() ? 'nativeForegroundAndroid' : 'nativeBackgroundAndroid';
    var childProps = babelHelpers.extends({}, child.props, (_babelHelpers$extends = {}, babelHelpers.defineProperty(_babelHelpers$extends, drawableProp, this.props.background), babelHelpers.defineProperty(_babelHelpers$extends, 'accessible', this.props.accessible !== false), babelHelpers.defineProperty(_babelHelpers$extends, 'accessibilityLabel', this.props.accessibilityLabel), babelHelpers.defineProperty(_babelHelpers$extends, 'accessibilityComponentType', this.props.accessibilityComponentType), babelHelpers.defineProperty(_babelHelpers$extends, 'accessibilityTraits', this.props.accessibilityTraits), babelHelpers.defineProperty(_babelHelpers$extends, 'children', children), babelHelpers.defineProperty(_babelHelpers$extends, 'testID', this.props.testID), babelHelpers.defineProperty(_babelHelpers$extends, 'onLayout', this.props.onLayout), babelHelpers.defineProperty(_babelHelpers$extends, 'hitSlop', this.props.hitSlop), babelHelpers.defineProperty(_babelHelpers$extends, 'onStartShouldSetResponder', this.touchableHandleStartShouldSetResponder), babelHelpers.defineProperty(_babelHelpers$extends, 'onResponderTerminationRequest', this.touchableHandleResponderTerminationRequest), babelHelpers.defineProperty(_babelHelpers$extends, 'onResponderGrant', this.touchableHandleResponderGrant), babelHelpers.defineProperty(_babelHelpers$extends, 'onResponderMove', this._handleResponderMove), babelHelpers.defineProperty(_babelHelpers$extends, 'onResponderRelease', this.touchableHandleResponderRelease), babelHelpers.defineProperty(_babelHelpers$extends, 'onResponderTerminate', this.touchableHandleResponderTerminate), _babelHelpers$extends));

    return React.cloneElement(child, childProps);
  }
});

module.exports = TouchableNativeFeedback;
}, 188, null, "TouchableNativeFeedback");
__d(/* TouchableWithoutFeedback */function(global, require, module, exports) {
'use strict';

var EdgeInsetsPropType = require(131                 ); // 131 = EdgeInsetsPropType
var React = require(129    ); // 129 = React
var PropTypes = require(126         ); // 126 = prop-types

var TimerMixin = require(190                ); // 190 = react-timer-mixin
var Touchable = require(181        ); // 181 = Touchable

var createReactClass = require(171                 ); // 171 = create-react-class
var ensurePositiveDelayProps = require(191                       ); // 191 = ensurePositiveDelayProps

var warning = require(23                ); // 23 = fbjs/lib/warning

var _require = require(143                ), // 143 = ViewAccessibility
    AccessibilityComponentTypes = _require.AccessibilityComponentTypes,
    AccessibilityTraits = _require.AccessibilityTraits;

var PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };

var TouchableWithoutFeedback = createReactClass({
  displayName: 'TouchableWithoutFeedback',
  mixins: [TimerMixin, Touchable.Mixin],

  propTypes: {
    accessible: PropTypes.bool,
    accessibilityComponentType: PropTypes.oneOf(AccessibilityComponentTypes),
    accessibilityTraits: PropTypes.oneOfType([PropTypes.oneOf(AccessibilityTraits), PropTypes.arrayOf(PropTypes.oneOf(AccessibilityTraits))]),

    disabled: PropTypes.bool,

    onPress: PropTypes.func,

    onPressIn: PropTypes.func,

    onPressOut: PropTypes.func,

    onLayout: PropTypes.func,

    onLongPress: PropTypes.func,

    delayPressIn: PropTypes.number,

    delayPressOut: PropTypes.number,

    delayLongPress: PropTypes.number,

    pressRetentionOffset: EdgeInsetsPropType,

    hitSlop: EdgeInsetsPropType
  },

  getInitialState: function getInitialState() {
    return this.touchableGetInitialState();
  },

  componentDidMount: function componentDidMount() {
    ensurePositiveDelayProps(this.props);
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    ensurePositiveDelayProps(nextProps);
  },

  touchableHandlePress: function touchableHandlePress(e) {
    this.props.onPress && this.props.onPress(e);
  },

  touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
    this.props.onPressIn && this.props.onPressIn(e);
  },

  touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
    this.props.onPressOut && this.props.onPressOut(e);
  },

  touchableHandleLongPress: function touchableHandleLongPress(e) {
    this.props.onLongPress && this.props.onLongPress(e);
  },

  touchableGetPressRectOffset: function touchableGetPressRectOffset() {
    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;
  },

  touchableGetHitSlop: function touchableGetHitSlop() {
    return this.props.hitSlop;
  },

  touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
    return this.props.delayPressIn || 0;
  },

  touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
    return this.props.delayLongPress === 0 ? 0 : this.props.delayLongPress || 500;
  },

  touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
    return this.props.delayPressOut || 0;
  },

  render: function render() {
    var child = React.Children.only(this.props.children);
    var children = child.props.children;
    warning(!child.type || child.type.displayName !== 'Text', 'TouchableWithoutFeedback does not work well with Text children. Wrap children in a View instead. See ' + (child._owner && child._owner.getName && child._owner.getName() || '<unknown>'));
    if (Touchable.TOUCH_TARGET_DEBUG && child.type && child.type.displayName === 'View') {
      children = React.Children.toArray(children);
      children.push(Touchable.renderDebugView({ color: 'red', hitSlop: this.props.hitSlop }));
    }
    var style = Touchable.TOUCH_TARGET_DEBUG && child.type && child.type.displayName === 'Text' ? [child.props.style, { color: 'red' }] : child.props.style;
    return React.cloneElement(child, {
      accessible: this.props.accessible !== false,

      accessibilityLabel: this.props.accessibilityLabel,
      accessibilityComponentType: this.props.accessibilityComponentType,
      accessibilityTraits: this.props.accessibilityTraits,

      nativeID: this.props.nativeID,

      testID: this.props.testID,
      onLayout: this.props.onLayout,
      hitSlop: this.props.hitSlop,
      onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,
      onResponderTerminationRequest: this.touchableHandleResponderTerminationRequest,
      onResponderGrant: this.touchableHandleResponderGrant,
      onResponderMove: this.touchableHandleResponderMove,
      onResponderRelease: this.touchableHandleResponderRelease,
      onResponderTerminate: this.touchableHandleResponderTerminate,
      style: style,
      children: children
    });
  }
});

module.exports = TouchableWithoutFeedback;
}, 189, null, "TouchableWithoutFeedback");
__d(/* react-timer-mixin/TimerMixin.js */function(global, require, module, exports) {
'use strict';

var GLOBAL = typeof window === 'undefined' ? global : window;

var setter = function setter(_setter, _clearer, array) {
  return function (callback, delta) {
    var id = _setter(function () {
      _clearer.call(this, id);
      callback.apply(this, arguments);
    }.bind(this), delta);

    if (!this[array]) {
      this[array] = [id];
    } else {
      this[array].push(id);
    }
    return id;
  };
};

var clearer = function clearer(_clearer, array) {
  return function (id) {
    if (this[array]) {
      var index = this[array].indexOf(id);
      if (index !== -1) {
        this[array].splice(index, 1);
      }
    }
    _clearer(id);
  };
};

var _timeouts = 'TimerMixin_timeouts';
var _clearTimeout = clearer(GLOBAL.clearTimeout, _timeouts);
var _setTimeout = setter(GLOBAL.setTimeout, _clearTimeout, _timeouts);

var _intervals = 'TimerMixin_intervals';
var _clearInterval = clearer(GLOBAL.clearInterval, _intervals);
var _setInterval = setter(GLOBAL.setInterval, function () {}, _intervals);

var _immediates = 'TimerMixin_immediates';
var _clearImmediate = clearer(GLOBAL.clearImmediate, _immediates);
var _setImmediate = setter(GLOBAL.setImmediate, _clearImmediate, _immediates);

var _rafs = 'TimerMixin_rafs';
var _cancelAnimationFrame = clearer(GLOBAL.cancelAnimationFrame, _rafs);
var _requestAnimationFrame = setter(GLOBAL.requestAnimationFrame, _cancelAnimationFrame, _rafs);

var TimerMixin = {
  componentWillUnmount: function componentWillUnmount() {
    this[_timeouts] && this[_timeouts].forEach(function (id) {
      GLOBAL.clearTimeout(id);
    });
    this[_timeouts] = null;
    this[_intervals] && this[_intervals].forEach(function (id) {
      GLOBAL.clearInterval(id);
    });
    this[_intervals] = null;
    this[_immediates] && this[_immediates].forEach(function (id) {
      GLOBAL.clearImmediate(id);
    });
    this[_immediates] = null;
    this[_rafs] && this[_rafs].forEach(function (id) {
      GLOBAL.cancelAnimationFrame(id);
    });
    this[_rafs] = null;
  },

  setTimeout: _setTimeout,
  clearTimeout: _clearTimeout,

  setInterval: _setInterval,
  clearInterval: _clearInterval,

  setImmediate: _setImmediate,
  clearImmediate: _clearImmediate,

  requestAnimationFrame: _requestAnimationFrame,
  cancelAnimationFrame: _cancelAnimationFrame
};

module.exports = TimerMixin;
}, 190, null, "react-timer-mixin/TimerMixin.js");
__d(/* ensurePositiveDelayProps */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var ensurePositiveDelayProps = function ensurePositiveDelayProps(props) {
  invariant(!(props.delayPressIn < 0 || props.delayPressOut < 0 || props.delayLongPress < 0), 'Touchable components cannot have negative delay properties');
};

module.exports = ensurePositiveDelayProps;
}, 191, null, "ensurePositiveDelayProps");
__d(/* TouchableOpacity */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/Touchable/TouchableOpacity.js';


var Animated = require(193       ); // 193 = Animated
var Easing = require(218     ); // 218 = Easing
var NativeMethodsMixin = require(124                 ); // 124 = NativeMethodsMixin
var React = require(129    ); // 129 = React
var PropTypes = require(126         ); // 126 = prop-types
var TimerMixin = require(190                ); // 190 = react-timer-mixin
var Touchable = require(181        ); // 181 = Touchable
var TouchableWithoutFeedback = require(189                       ); // 189 = TouchableWithoutFeedback

var createReactClass = require(171                 ); // 171 = create-react-class
var ensurePositiveDelayProps = require(191                       ); // 191 = ensurePositiveDelayProps
var flattenStyle = require(43            ); // 43 = flattenStyle

var PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };

var TouchableOpacity = createReactClass({
  displayName: 'TouchableOpacity',
  mixins: [TimerMixin, Touchable.Mixin, NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, TouchableWithoutFeedback.propTypes, {
    activeOpacity: PropTypes.number,

    tvParallaxProperties: PropTypes.object
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      activeOpacity: 0.2
    };
  },

  getInitialState: function getInitialState() {
    return babelHelpers.extends({}, this.touchableGetInitialState(), {
      anim: new Animated.Value(this._getChildStyleOpacityWithDefault())
    });
  },

  componentDidMount: function componentDidMount() {
    ensurePositiveDelayProps(this.props);
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    ensurePositiveDelayProps(nextProps);
  },

  setOpacityTo: function setOpacityTo(value, duration) {
    Animated.timing(this.state.anim, {
      toValue: value,
      duration: duration,
      easing: Easing.inOut(Easing.quad),
      useNativeDriver: true
    }).start();
  },

  touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
    if (e.dispatchConfig.registrationName === 'onResponderGrant') {
      this._opacityActive(0);
    } else {
      this._opacityActive(150);
    }
    this.props.onPressIn && this.props.onPressIn(e);
  },

  touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
    this._opacityInactive(250);
    this.props.onPressOut && this.props.onPressOut(e);
  },

  touchableHandlePress: function touchableHandlePress(e) {
    this.props.onPress && this.props.onPress(e);
  },

  touchableHandleLongPress: function touchableHandleLongPress(e) {
    this.props.onLongPress && this.props.onLongPress(e);
  },

  touchableGetPressRectOffset: function touchableGetPressRectOffset() {
    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;
  },

  touchableGetHitSlop: function touchableGetHitSlop() {
    return this.props.hitSlop;
  },

  touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
    return this.props.delayPressIn || 0;
  },

  touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
    return this.props.delayLongPress === 0 ? 0 : this.props.delayLongPress || 500;
  },

  touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
    return this.props.delayPressOut;
  },

  _opacityActive: function _opacityActive(duration) {
    this.setOpacityTo(this.props.activeOpacity, duration);
  },

  _opacityInactive: function _opacityInactive(duration) {
    this.setOpacityTo(this._getChildStyleOpacityWithDefault(), duration);
  },

  _getChildStyleOpacityWithDefault: function _getChildStyleOpacityWithDefault() {
    var childStyle = flattenStyle(this.props.style) || {};
    return childStyle.opacity == undefined ? 1 : childStyle.opacity;
  },

  render: function render() {
    return React.createElement(
      Animated.View,
      {
        accessible: this.props.accessible !== false,
        accessibilityLabel: this.props.accessibilityLabel,
        accessibilityComponentType: this.props.accessibilityComponentType,
        accessibilityTraits: this.props.accessibilityTraits,
        style: [this.props.style, { opacity: this.state.anim }],
        nativeID: this.props.nativeID,
        testID: this.props.testID,
        onLayout: this.props.onLayout,
        isTVSelectable: true,
        tvParallaxProperties: this.props.tvParallaxProperties,
        hitSlop: this.props.hitSlop,
        onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,
        onResponderTerminationRequest: this.touchableHandleResponderTerminationRequest,
        onResponderGrant: this.touchableHandleResponderGrant,
        onResponderMove: this.touchableHandleResponderMove,
        onResponderRelease: this.touchableHandleResponderRelease,
        onResponderTerminate: this.touchableHandleResponderTerminate, __source: {
          fileName: _jsxFileName,
          lineNumber: 239
        }
      },
      this.props.children,
      Touchable.renderDebugView({ color: 'cyan', hitSlop: this.props.hitSlop })
    );
  }
});

module.exports = TouchableOpacity;
}, 192, null, "TouchableOpacity");
__d(/* Animated */function(global, require, module, exports) {
'use strict';

var AnimatedImplementation = require(194                     ); // 194 = AnimatedImplementation
var Image = require(221    ); // 221 = Image
var Text = require(180   ); // 180 = Text
var View = require(169   ); // 169 = View

var AnimatedScrollView = void 0;

var Animated = {
  View: AnimatedImplementation.createAnimatedComponent(View),
  Text: AnimatedImplementation.createAnimatedComponent(Text),
  Image: AnimatedImplementation.createAnimatedComponent(Image),
  get ScrollView() {
    if (!AnimatedScrollView) {
      AnimatedScrollView = AnimatedImplementation.createAnimatedComponent(require(223         )); // 223 = ScrollView
    }
    return AnimatedScrollView;
  }
};

babelHelpers.extends(Animated, AnimatedImplementation);

module.exports = Animated;
}, 193, null, "Animated");
__d(/* AnimatedImplementation */function(global, require, module, exports) {
'use strict';

var _require = require(195              ), // 195 = ./AnimatedEvent
    AnimatedEvent = _require.AnimatedEvent,
    attachNativeEvent = _require.attachNativeEvent;

var AnimatedAddition = require(203                       ); // 203 = ./nodes/AnimatedAddition
var AnimatedDiffClamp = require(204                        ); // 204 = ./nodes/AnimatedDiffClamp
var AnimatedDivision = require(205                       ); // 205 = ./nodes/AnimatedDivision
var AnimatedInterpolation = require(197                            ); // 197 = ./nodes/AnimatedInterpolation
var AnimatedModulo = require(206                     ); // 206 = ./nodes/AnimatedModulo
var AnimatedMultiplication = require(207                             ); // 207 = ./nodes/AnimatedMultiplication
var AnimatedNode = require(198                   ); // 198 = ./nodes/AnimatedNode
var AnimatedProps = require(208                    ); // 208 = ./nodes/AnimatedProps
var AnimatedTracking = require(211                       ); // 211 = ./nodes/AnimatedTracking
var AnimatedValue = require(196                    ); // 196 = ./nodes/AnimatedValue
var AnimatedValueXY = require(212                      ); // 212 = ./nodes/AnimatedValueXY
var DecayAnimation = require(213                          ); // 213 = ./animations/DecayAnimation
var SpringAnimation = require(215                           ); // 215 = ./animations/SpringAnimation
var TimingAnimation = require(217                           ); // 217 = ./animations/TimingAnimation

var createAnimatedComponent = require(220                        ); // 220 = ./createAnimatedComponent

var add = function add(a, b) {
  return new AnimatedAddition(a, b);
};

var divide = function divide(a, b) {
  return new AnimatedDivision(a, b);
};

var multiply = function multiply(a, b) {
  return new AnimatedMultiplication(a, b);
};

var modulo = function modulo(a, modulus) {
  return new AnimatedModulo(a, modulus);
};

var diffClamp = function diffClamp(a, min, max) {
  return new AnimatedDiffClamp(a, min, max);
};

var _combineCallbacks = function _combineCallbacks(callback, config) {
  if (callback && config.onComplete) {
    return function () {
      config.onComplete && config.onComplete.apply(config, arguments);
      callback && callback.apply(undefined, arguments);
    };
  } else {
    return callback || config.onComplete;
  }
};

var maybeVectorAnim = function maybeVectorAnim(value, config, anim) {
  if (value instanceof AnimatedValueXY) {
    var configX = babelHelpers.extends({}, config);
    var configY = babelHelpers.extends({}, config);
    for (var key in config) {
      var _config$key = config[key],
          x = _config$key.x,
          y = _config$key.y;

      if (x !== undefined && y !== undefined) {
        configX[key] = x;
        configY[key] = y;
      }
    }
    var aX = anim(value.x, configX);
    var aY = anim(value.y, configY);

    return parallel([aX, aY], { stopTogether: false });
  }
  return null;
};

var spring = function spring(value, config) {
  var start = function start(animatedValue, configuration, callback) {
    callback = _combineCallbacks(callback, configuration);
    var singleValue = animatedValue;
    var singleConfig = configuration;
    singleValue.stopTracking();
    if (configuration.toValue instanceof AnimatedNode) {
      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, SpringAnimation, singleConfig, callback));
    } else {
      singleValue.animate(new SpringAnimation(singleConfig), callback);
    }
  };
  return maybeVectorAnim(value, config, spring) || {
    start: function (_start) {
      function start(_x) {
        return _start.apply(this, arguments);
      }

      start.toString = function () {
        return _start.toString();
      };

      return start;
    }(function (callback) {
      start(value, config, callback);
    }),

    stop: function stop() {
      value.stopAnimation();
    },

    reset: function reset() {
      value.resetAnimation();
    },

    _startNativeLoop: function _startNativeLoop(iterations) {
      var singleConfig = babelHelpers.extends({}, config, { iterations: iterations });
      start(value, singleConfig);
    },

    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return config.useNativeDriver || false;
    }
  };
};

var timing = function timing(value, config) {
  var start = function start(animatedValue, configuration, callback) {
    callback = _combineCallbacks(callback, configuration);
    var singleValue = animatedValue;
    var singleConfig = configuration;
    singleValue.stopTracking();
    if (configuration.toValue instanceof AnimatedNode) {
      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, TimingAnimation, singleConfig, callback));
    } else {
      singleValue.animate(new TimingAnimation(singleConfig), callback);
    }
  };

  return maybeVectorAnim(value, config, timing) || {
    start: function (_start2) {
      function start(_x2) {
        return _start2.apply(this, arguments);
      }

      start.toString = function () {
        return _start2.toString();
      };

      return start;
    }(function (callback) {
      start(value, config, callback);
    }),

    stop: function stop() {
      value.stopAnimation();
    },

    reset: function reset() {
      value.resetAnimation();
    },

    _startNativeLoop: function _startNativeLoop(iterations) {
      var singleConfig = babelHelpers.extends({}, config, { iterations: iterations });
      start(value, singleConfig);
    },

    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return config.useNativeDriver || false;
    }
  };
};

var decay = function decay(value, config) {
  var start = function start(animatedValue, configuration, callback) {
    callback = _combineCallbacks(callback, configuration);
    var singleValue = animatedValue;
    var singleConfig = configuration;
    singleValue.stopTracking();
    singleValue.animate(new DecayAnimation(singleConfig), callback);
  };

  return maybeVectorAnim(value, config, decay) || {
    start: function (_start3) {
      function start(_x3) {
        return _start3.apply(this, arguments);
      }

      start.toString = function () {
        return _start3.toString();
      };

      return start;
    }(function (callback) {
      start(value, config, callback);
    }),

    stop: function stop() {
      value.stopAnimation();
    },

    reset: function reset() {
      value.resetAnimation();
    },

    _startNativeLoop: function _startNativeLoop(iterations) {
      var singleConfig = babelHelpers.extends({}, config, { iterations: iterations });
      start(value, singleConfig);
    },

    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return config.useNativeDriver || false;
    }
  };
};

var sequence = function sequence(animations) {
  var current = 0;
  return {
    start: function start(callback) {
      var onComplete = function onComplete(result) {
        if (!result.finished) {
          callback && callback(result);
          return;
        }

        current++;

        if (current === animations.length) {
          callback && callback(result);
          return;
        }

        animations[current].start(onComplete);
      };

      if (animations.length === 0) {
        callback && callback({ finished: true });
      } else {
        animations[current].start(onComplete);
      }
    },

    stop: function stop() {
      if (current < animations.length) {
        animations[current].stop();
      }
    },

    reset: function reset() {
      animations.forEach(function (animation, idx) {
        if (idx <= current) {
          animation.reset();
        }
      });
      current = 0;
    },

    _startNativeLoop: function _startNativeLoop() {
      throw new Error('Loops run using the native driver cannot contain Animated.sequence animations');
    },

    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return false;
    }
  };
};

var parallel = function parallel(animations, config) {
  var doneCount = 0;

  var hasEnded = {};
  var stopTogether = !(config && config.stopTogether === false);

  var result = {
    start: function start(callback) {
      if (doneCount === animations.length) {
        callback && callback({ finished: true });
        return;
      }

      animations.forEach(function (animation, idx) {
        var cb = function cb(endResult) {
          hasEnded[idx] = true;
          doneCount++;
          if (doneCount === animations.length) {
            doneCount = 0;
            callback && callback(endResult);
            return;
          }

          if (!endResult.finished && stopTogether) {
            result.stop();
          }
        };

        if (!animation) {
          cb({ finished: true });
        } else {
          animation.start(cb);
        }
      });
    },

    stop: function stop() {
      animations.forEach(function (animation, idx) {
        !hasEnded[idx] && animation.stop();
        hasEnded[idx] = true;
      });
    },

    reset: function reset() {
      animations.forEach(function (animation, idx) {
        animation.reset();
        hasEnded[idx] = false;
        doneCount = 0;
      });
    },

    _startNativeLoop: function _startNativeLoop() {
      throw new Error('Loops run using the native driver cannot contain Animated.parallel animations');
    },

    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return false;
    }
  };

  return result;
};

var delay = function delay(time) {
  return timing(new AnimatedValue(0), { toValue: 0, delay: time, duration: 0 });
};

var stagger = function stagger(time, animations) {
  return parallel(animations.map(function (animation, i) {
    return sequence([delay(time * i), animation]);
  }));
};

var loop = function loop(animation) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref$iterations = _ref.iterations,
      iterations = _ref$iterations === undefined ? -1 : _ref$iterations;

  var isFinished = false;
  var iterationsSoFar = 0;
  return {
    start: function start(callback) {
      var restart = function restart() {
        var result = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { finished: true };

        if (isFinished || iterationsSoFar === iterations || result.finished === false) {
          callback && callback(result);
        } else {
          iterationsSoFar++;
          animation.reset();
          animation.start(restart);
        }
      };
      if (!animation || iterations === 0) {
        callback && callback({ finished: true });
      } else {
        if (animation._isUsingNativeDriver()) {
          animation._startNativeLoop(iterations);
        } else {
          restart();
        }
      }
    },

    stop: function stop() {
      isFinished = true;
      animation.stop();
    },

    reset: function reset() {
      iterationsSoFar = 0;
      isFinished = false;
      animation.reset();
    },

    _startNativeLoop: function _startNativeLoop() {
      throw new Error('Loops run using the native driver cannot contain Animated.loop animations');
    },

    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return animation._isUsingNativeDriver();
    }
  };
};

function forkEvent(event, listener) {
  if (!event) {
    return listener;
  } else if (event instanceof AnimatedEvent) {
    event.__addListener(listener);
    return event;
  } else {
    return function () {
      typeof event === 'function' && event.apply(undefined, arguments);
      listener.apply(undefined, arguments);
    };
  }
}

function unforkEvent(event, listener) {
  if (event && event instanceof AnimatedEvent) {
    event.__removeListener(listener);
  }
}

var event = function event(argMapping, config) {
  var animatedEvent = new AnimatedEvent(argMapping, config);
  if (animatedEvent.__isNative) {
    return animatedEvent;
  } else {
    return animatedEvent.__getHandler();
  }
};

module.exports = {
  Value: AnimatedValue,

  ValueXY: AnimatedValueXY,

  Interpolation: AnimatedInterpolation,

  Node: AnimatedNode,

  decay: decay,

  timing: timing,

  spring: spring,

  add: add,

  divide: divide,

  multiply: multiply,

  modulo: modulo,

  diffClamp: diffClamp,

  delay: delay,

  sequence: sequence,

  parallel: parallel,

  stagger: stagger,

  loop: loop,

  event: event,

  createAnimatedComponent: createAnimatedComponent,

  attachNativeEvent: attachNativeEvent,

  forkEvent: forkEvent,
  unforkEvent: unforkEvent,

  __PropsOnlyForTests: AnimatedProps
};
}, 194, null, "AnimatedImplementation");
__d(/* AnimatedEvent */function(global, require, module, exports) {
'use strict';

var AnimatedValue = require(196                    ); // 196 = ./nodes/AnimatedValue
var NativeAnimatedHelper = require(199                     ); // 199 = ./NativeAnimatedHelper
var ReactNative = require(21           ); // 21 = ReactNative

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var _require = require(199                     ), // 199 = ./NativeAnimatedHelper
    shouldUseNativeDriver = _require.shouldUseNativeDriver;

function attachNativeEvent(viewRef, eventName, argMapping) {
  var eventMappings = [];

  var traverse = function traverse(value, path) {
    if (value instanceof AnimatedValue) {
      value.__makeNative();

      eventMappings.push({
        nativeEventPath: path,
        animatedValueTag: value.__getNativeTag()
      });
    } else if (typeof value === 'object') {
      for (var _key in value) {
        traverse(value[_key], path.concat(_key));
      }
    }
  };

  invariant(argMapping[0] && argMapping[0].nativeEvent, 'Native driven events only support animated values contained inside `nativeEvent`.');

  traverse(argMapping[0].nativeEvent, []);

  var viewTag = ReactNative.findNodeHandle(viewRef);

  eventMappings.forEach(function (mapping) {
    NativeAnimatedHelper.API.addAnimatedEventToView(viewTag, eventName, mapping);
  });

  return {
    detach: function detach() {
      eventMappings.forEach(function (mapping) {
        NativeAnimatedHelper.API.removeAnimatedEventFromView(viewTag, eventName, mapping.animatedValueTag);
      });
    }
  };
}

var AnimatedEvent = function () {
  function AnimatedEvent(argMapping) {
    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    babelHelpers.classCallCheck(this, AnimatedEvent);
    this._listeners = [];

    this._argMapping = argMapping;
    if (config.listener) {
      this.__addListener(config.listener);
    }
    this._callListeners = this._callListeners.bind(this);
    this._attachedEvent = null;
    this.__isNative = shouldUseNativeDriver(config);

    if (__DEV__) {
      this._validateMapping();
    }
  }

  babelHelpers.createClass(AnimatedEvent, [{
    key: '__addListener',
    value: function __addListener(callback) {
      this._listeners.push(callback);
    }
  }, {
    key: '__removeListener',
    value: function __removeListener(callback) {
      this._listeners = this._listeners.filter(function (listener) {
        return listener !== callback;
      });
    }
  }, {
    key: '__attach',
    value: function __attach(viewRef, eventName) {
      invariant(this.__isNative, 'Only native driven events need to be attached.');

      this._attachedEvent = attachNativeEvent(viewRef, eventName, this._argMapping);
    }
  }, {
    key: '__detach',
    value: function __detach(viewTag, eventName) {
      invariant(this.__isNative, 'Only native driven events need to be detached.');

      this._attachedEvent && this._attachedEvent.detach();
    }
  }, {
    key: '__getHandler',
    value: function __getHandler() {
      var _this = this;

      if (this.__isNative) {
        return this._callListeners;
      }

      return function () {
        for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {
          args[_key2] = arguments[_key2];
        }

        var traverse = function traverse(recMapping, recEvt, key) {
          if (typeof recEvt === 'number' && recMapping instanceof AnimatedValue) {
            recMapping.setValue(recEvt);
          } else if (typeof recMapping === 'object') {
            for (var mappingKey in recMapping) {
              traverse(recMapping[mappingKey], recEvt[mappingKey], mappingKey);
            }
          }
        };

        if (!_this.__isNative) {
          _this._argMapping.forEach(function (mapping, idx) {
            traverse(mapping, args[idx], 'arg' + idx);
          });
        }
        _this._callListeners.apply(_this, babelHelpers.toConsumableArray(args));
      };
    }
  }, {
    key: '_callListeners',
    value: function _callListeners() {
      for (var _len2 = arguments.length, args = Array(_len2), _key3 = 0; _key3 < _len2; _key3++) {
        args[_key3] = arguments[_key3];
      }

      this._listeners.forEach(function (listener) {
        return listener.apply(undefined, args);
      });
    }
  }, {
    key: '_validateMapping',
    value: function _validateMapping() {
      var traverse = function traverse(recMapping, recEvt, key) {
        if (typeof recEvt === 'number') {
          invariant(recMapping instanceof AnimatedValue, 'Bad mapping of type ' + typeof recMapping + ' for key ' + key + ', event value must map to AnimatedValue');
          return;
        }
        invariant(typeof recMapping === 'object', 'Bad mapping of type ' + typeof recMapping + ' for key ' + key);
        invariant(typeof recEvt === 'object', 'Bad event of type ' + typeof recEvt + ' for key ' + key);
        for (var mappingKey in recMapping) {
          traverse(recMapping[mappingKey], recEvt[mappingKey], mappingKey);
        }
      };
    }
  }]);
  return AnimatedEvent;
}();

module.exports = { AnimatedEvent: AnimatedEvent, attachNativeEvent: attachNativeEvent };
}, 195, null, "AnimatedEvent");
__d(/* AnimatedValue */function(global, require, module, exports) {
'use strict';

var AnimatedInterpolation = require(197                      ); // 197 = ./AnimatedInterpolation
var AnimatedNode = require(198             ); // 198 = ./AnimatedNode
var AnimatedWithChildren = require(200                     ); // 200 = ./AnimatedWithChildren
var InteractionManager = require(201                 ); // 201 = InteractionManager
var NativeAnimatedHelper = require(199                      ); // 199 = ../NativeAnimatedHelper

var NativeAnimatedAPI = NativeAnimatedHelper.API;

var _uniqueId = 1;

function _flush(rootNode) {
  var animatedStyles = new Set();
  function findAnimatedStyles(node) {
    if (typeof node.update === 'function') {
      animatedStyles.add(node);
    } else {
      node.__getChildren().forEach(findAnimatedStyles);
    }
  }
  findAnimatedStyles(rootNode);

  animatedStyles.forEach(function (animatedStyle) {
    return animatedStyle.update();
  });
}

var AnimatedValue = function (_AnimatedWithChildren) {
  babelHelpers.inherits(AnimatedValue, _AnimatedWithChildren);

  function AnimatedValue(value) {
    babelHelpers.classCallCheck(this, AnimatedValue);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedValue.__proto__ || Object.getPrototypeOf(AnimatedValue)).call(this));

    _this._startingValue = _this._value = value;
    _this._offset = 0;
    _this._animation = null;
    _this._listeners = {};
    return _this;
  }

  babelHelpers.createClass(AnimatedValue, [{
    key: '__detach',
    value: function __detach() {
      this.stopAnimation();
      babelHelpers.get(AnimatedValue.prototype.__proto__ || Object.getPrototypeOf(AnimatedValue.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return this._value + this._offset;
    }
  }, {
    key: '__makeNative',
    value: function __makeNative() {
      babelHelpers.get(AnimatedValue.prototype.__proto__ || Object.getPrototypeOf(AnimatedValue.prototype), '__makeNative', this).call(this);

      if (Object.keys(this._listeners).length) {
        this._startListeningToNativeValueUpdates();
      }
    }
  }, {
    key: 'setValue',
    value: function setValue(value) {
      if (this._animation) {
        this._animation.stop();
        this._animation = null;
      }
      this._updateValue(value, !this.__isNative);
      if (this.__isNative) {
        NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), value);
      }
    }
  }, {
    key: 'setOffset',
    value: function setOffset(offset) {
      this._offset = offset;
      if (this.__isNative) {
        NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);
      }
    }
  }, {
    key: 'flattenOffset',
    value: function flattenOffset() {
      this._value += this._offset;
      this._offset = 0;
      if (this.__isNative) {
        NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());
      }
    }
  }, {
    key: 'extractOffset',
    value: function extractOffset() {
      this._offset += this._value;
      this._value = 0;
      if (this.__isNative) {
        NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());
      }
    }
  }, {
    key: 'addListener',
    value: function addListener(callback) {
      var id = String(_uniqueId++);
      this._listeners[id] = callback;
      if (this.__isNative) {
        this._startListeningToNativeValueUpdates();
      }
      return id;
    }
  }, {
    key: 'removeListener',
    value: function removeListener(id) {
      delete this._listeners[id];
      if (this.__isNative && Object.keys(this._listeners).length === 0) {
        this._stopListeningForNativeValueUpdates();
      }
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners() {
      this._listeners = {};
      if (this.__isNative) {
        this._stopListeningForNativeValueUpdates();
      }
    }
  }, {
    key: '_startListeningToNativeValueUpdates',
    value: function _startListeningToNativeValueUpdates() {
      var _this2 = this;

      if (this.__nativeAnimatedValueListener) {
        return;
      }

      NativeAnimatedAPI.startListeningToAnimatedNodeValue(this.__getNativeTag());
      this.__nativeAnimatedValueListener = NativeAnimatedHelper.nativeEventEmitter.addListener('onAnimatedValueUpdate', function (data) {
        if (data.tag !== _this2.__getNativeTag()) {
          return;
        }
        _this2._updateValue(data.value, false);
      });
    }
  }, {
    key: '_stopListeningForNativeValueUpdates',
    value: function _stopListeningForNativeValueUpdates() {
      if (!this.__nativeAnimatedValueListener) {
        return;
      }

      this.__nativeAnimatedValueListener.remove();
      this.__nativeAnimatedValueListener = null;
      NativeAnimatedAPI.stopListeningToAnimatedNodeValue(this.__getNativeTag());
    }
  }, {
    key: 'stopAnimation',
    value: function stopAnimation(callback) {
      this.stopTracking();
      this._animation && this._animation.stop();
      this._animation = null;
      callback && callback(this.__getValue());
    }
  }, {
    key: 'resetAnimation',
    value: function resetAnimation(callback) {
      this.stopAnimation(callback);
      this._value = this._startingValue;
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: 'animate',
    value: function animate(animation, callback) {
      var _this3 = this;

      var handle = null;
      if (animation.__isInteraction) {
        handle = InteractionManager.createInteractionHandle();
      }
      var previousAnimation = this._animation;
      this._animation && this._animation.stop();
      this._animation = animation;
      animation.start(this._value, function (value) {
        _this3._updateValue(value, true);
      }, function (result) {
        _this3._animation = null;
        if (handle !== null) {
          InteractionManager.clearInteractionHandle(handle);
        }
        callback && callback(result);
      }, previousAnimation, this);
    }
  }, {
    key: 'stopTracking',
    value: function stopTracking() {
      this._tracking && this._tracking.__detach();
      this._tracking = null;
    }
  }, {
    key: 'track',
    value: function track(tracking) {
      this.stopTracking();
      this._tracking = tracking;
    }
  }, {
    key: '_updateValue',
    value: function _updateValue(value, flush) {
      this._value = value;
      if (flush) {
        _flush(this);
      }
      for (var _key in this._listeners) {
        this._listeners[_key]({ value: this.__getValue() });
      }
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'value',
        value: this._value,
        offset: this._offset
      };
    }
  }]);
  return AnimatedValue;
}(AnimatedWithChildren);

module.exports = AnimatedValue;
}, 196, null, "AnimatedValue");
__d(/* AnimatedInterpolation */function(global, require, module, exports) {
'use strict';

var AnimatedNode = require(198             ); // 198 = ./AnimatedNode
var AnimatedWithChildren = require(200                     ); // 200 = ./AnimatedWithChildren
var NativeAnimatedHelper = require(199                      ); // 199 = ../NativeAnimatedHelper

var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var normalizeColor = require(123             ); // 123 = normalizeColor

var linear = function linear(t) {
  return t;
};

function createInterpolation(config) {
  if (config.outputRange && typeof config.outputRange[0] === 'string') {
    return createInterpolationFromStringOutputRange(config);
  }

  var outputRange = config.outputRange;
  checkInfiniteRange('outputRange', outputRange);

  var inputRange = config.inputRange;
  checkInfiniteRange('inputRange', inputRange);
  checkValidInputRange(inputRange);

  invariant(inputRange.length === outputRange.length, 'inputRange (' + inputRange.length + ') and outputRange (' + outputRange.length + ') must have the same length');

  var easing = config.easing || linear;

  var extrapolateLeft = 'extend';
  if (config.extrapolateLeft !== undefined) {
    extrapolateLeft = config.extrapolateLeft;
  } else if (config.extrapolate !== undefined) {
    extrapolateLeft = config.extrapolate;
  }

  var extrapolateRight = 'extend';
  if (config.extrapolateRight !== undefined) {
    extrapolateRight = config.extrapolateRight;
  } else if (config.extrapolate !== undefined) {
    extrapolateRight = config.extrapolate;
  }

  return function (input) {
    invariant(typeof input === 'number', 'Cannot interpolation an input which is not a number');

    var range = findRange(input, inputRange);
    return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight);
  };
}

function interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight) {
  var result = input;

  if (result < inputMin) {
    if (extrapolateLeft === 'identity') {
      return result;
    } else if (extrapolateLeft === 'clamp') {
      result = inputMin;
    } else if (extrapolateLeft === 'extend') {}
  }

  if (result > inputMax) {
    if (extrapolateRight === 'identity') {
      return result;
    } else if (extrapolateRight === 'clamp') {
      result = inputMax;
    } else if (extrapolateRight === 'extend') {}
  }

  if (outputMin === outputMax) {
    return outputMin;
  }

  if (inputMin === inputMax) {
    if (input <= inputMin) {
      return outputMin;
    }
    return outputMax;
  }

  if (inputMin === -Infinity) {
    result = -result;
  } else if (inputMax === Infinity) {
    result = result - inputMin;
  } else {
    result = (result - inputMin) / (inputMax - inputMin);
  }

  result = easing(result);

  if (outputMin === -Infinity) {
    result = -result;
  } else if (outputMax === Infinity) {
    result = result + outputMin;
  } else {
    result = result * (outputMax - outputMin) + outputMin;
  }

  return result;
}

function colorToRgba(input) {
  var int32Color = normalizeColor(input);
  if (int32Color === null) {
    return input;
  }

  int32Color = int32Color || 0;

  var r = (int32Color & 0xff000000) >>> 24;
  var g = (int32Color & 0x00ff0000) >>> 16;
  var b = (int32Color & 0x0000ff00) >>> 8;
  var a = (int32Color & 0x000000ff) / 255;

  return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + a + ')';
}

var stringShapeRegex = /[0-9\.-]+/g;

function createInterpolationFromStringOutputRange(config) {
  var outputRange = config.outputRange;
  invariant(outputRange.length >= 2, 'Bad output range');
  outputRange = outputRange.map(colorToRgba);
  checkPattern(outputRange);

  var outputRanges = outputRange[0].match(stringShapeRegex).map(function () {
    return [];
  });
  outputRange.forEach(function (value) {
    value.match(stringShapeRegex).forEach(function (number, i) {
      outputRanges[i].push(+number);
    });
  });

  var interpolations = outputRange[0].match(stringShapeRegex).map(function (value, i) {
    return createInterpolation(babelHelpers.extends({}, config, {
      outputRange: outputRanges[i]
    }));
  });

  var shouldRound = isRgbOrRgba(outputRange[0]);

  return function (input) {
    var i = 0;

    return outputRange[0].replace(stringShapeRegex, function () {
      var val = +interpolations[i++](input);
      var rounded = shouldRound && i < 4 ? Math.round(val) : Math.round(val * 1000) / 1000;
      return String(rounded);
    });
  };
}

function isRgbOrRgba(range) {
  return typeof range === 'string' && range.startsWith('rgb');
}

function checkPattern(arr) {
  var pattern = arr[0].replace(stringShapeRegex, '');
  for (var i = 1; i < arr.length; ++i) {
    invariant(pattern === arr[i].replace(stringShapeRegex, ''), 'invalid pattern ' + arr[0] + ' and ' + arr[i]);
  }
}

function findRange(input, inputRange) {
  var i = void 0;
  for (i = 1; i < inputRange.length - 1; ++i) {
    if (inputRange[i] >= input) {
      break;
    }
  }
  return i - 1;
}

function checkValidInputRange(arr) {
  invariant(arr.length >= 2, 'inputRange must have at least 2 elements');
  for (var i = 1; i < arr.length; ++i) {
    invariant(arr[i] >= arr[i - 1], 'inputRange must be monotonically increasing ' + arr);
  }
}

function checkInfiniteRange(name, arr) {
  invariant(arr.length >= 2, name + ' must have at least 2 elements');
  invariant(arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity, name + 'cannot be ]-infinity;+infinity[ ' + arr);
}

var AnimatedInterpolation = function (_AnimatedWithChildren) {
  babelHelpers.inherits(AnimatedInterpolation, _AnimatedWithChildren);

  function AnimatedInterpolation(parent, config) {
    babelHelpers.classCallCheck(this, AnimatedInterpolation);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedInterpolation.__proto__ || Object.getPrototypeOf(AnimatedInterpolation)).call(this));

    _this._parent = parent;
    _this._config = config;
    _this._interpolation = createInterpolation(config);
    return _this;
  }

  babelHelpers.createClass(AnimatedInterpolation, [{
    key: '__makeNative',
    value: function __makeNative() {
      this._parent.__makeNative();
      babelHelpers.get(AnimatedInterpolation.prototype.__proto__ || Object.getPrototypeOf(AnimatedInterpolation.prototype), '__makeNative', this).call(this);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      var parentValue = this._parent.__getValue();
      invariant(typeof parentValue === 'number', 'Cannot interpolate an input which is not a number.');
      return this._interpolation(parentValue);
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._parent.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._parent.__removeChild(this);
      babelHelpers.get(AnimatedInterpolation.prototype.__proto__ || Object.getPrototypeOf(AnimatedInterpolation.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__transformDataType',
    value: function __transformDataType(range) {
      return range.map(function (value) {
        if (typeof value !== 'string') {
          return value;
        }
        if (/deg$/.test(value)) {
          var degrees = parseFloat(value) || 0;
          var radians = degrees * Math.PI / 180.0;
          return radians;
        } else {
          return parseFloat(value) || 0;
        }
      });
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      if (__DEV__) {
        NativeAnimatedHelper.validateInterpolation(this._config);
      }

      return {
        inputRange: this._config.inputRange,

        outputRange: this.__transformDataType(this._config.outputRange),
        extrapolateLeft: this._config.extrapolateLeft || this._config.extrapolate || 'extend',
        extrapolateRight: this._config.extrapolateRight || this._config.extrapolate || 'extend',
        type: 'interpolation'
      };
    }
  }]);
  return AnimatedInterpolation;
}(AnimatedWithChildren);

AnimatedInterpolation.__createInterpolation = createInterpolation;


module.exports = AnimatedInterpolation;
}, 197, null, "AnimatedInterpolation");
__d(/* AnimatedNode */function(global, require, module, exports) {
'use strict';

var NativeAnimatedHelper = require(199                      ); // 199 = ../NativeAnimatedHelper

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var AnimatedNode = function () {
  function AnimatedNode() {
    babelHelpers.classCallCheck(this, AnimatedNode);
  }

  babelHelpers.createClass(AnimatedNode, [{
    key: '__attach',
    value: function __attach() {}
  }, {
    key: '__detach',
    value: function __detach() {
      if (this.__isNative && this.__nativeTag != null) {
        NativeAnimatedHelper.API.dropAnimatedNode(this.__nativeTag);
        this.__nativeTag = undefined;
      }
    }
  }, {
    key: '__getValue',
    value: function __getValue() {}
  }, {
    key: '__getAnimatedValue',
    value: function __getAnimatedValue() {
      return this.__getValue();
    }
  }, {
    key: '__addChild',
    value: function __addChild(child) {}
  }, {
    key: '__removeChild',
    value: function __removeChild(child) {}
  }, {
    key: '__getChildren',
    value: function __getChildren() {
      return [];
    }
  }, {
    key: '__makeNative',
    value: function __makeNative() {
      if (!this.__isNative) {
        throw new Error('This node cannot be made a "native" animated node');
      }
    }
  }, {
    key: '__getNativeTag',
    value: function __getNativeTag() {
      NativeAnimatedHelper.assertNativeAnimatedModule();
      invariant(this.__isNative, 'Attempt to get native tag from node not marked as "native"');
      if (this.__nativeTag == null) {
        var nativeTag = NativeAnimatedHelper.generateNewNodeTag();
        NativeAnimatedHelper.API.createAnimatedNode(nativeTag, this.__getNativeConfig());
        this.__nativeTag = nativeTag;
      }
      return this.__nativeTag;
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      throw new Error('This JS animated node type cannot be used as native animated node');
    }
  }, {
    key: 'toJSON',
    value: function toJSON() {
      return this.__getValue();
    }
  }]);
  return AnimatedNode;
}();

module.exports = AnimatedNode;
}, 198, null, "AnimatedNode");
__d(/* NativeAnimatedHelper */function(global, require, module, exports) {
'use strict';

var NativeAnimatedModule = require(15             ).NativeAnimatedModule; // 15 = NativeModules
var NativeEventEmitter = require(83                  ); // 83 = NativeEventEmitter

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var __nativeAnimatedNodeTagCount = 1;
var __nativeAnimationIdCount = 1;

var nativeEventEmitter = void 0;

var API = {
  createAnimatedNode: function createAnimatedNode(tag, config) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.createAnimatedNode(tag, config);
  },
  startListeningToAnimatedNodeValue: function startListeningToAnimatedNodeValue(tag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.startListeningToAnimatedNodeValue(tag);
  },
  stopListeningToAnimatedNodeValue: function stopListeningToAnimatedNodeValue(tag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.stopListeningToAnimatedNodeValue(tag);
  },
  connectAnimatedNodes: function connectAnimatedNodes(parentTag, childTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.connectAnimatedNodes(parentTag, childTag);
  },
  disconnectAnimatedNodes: function disconnectAnimatedNodes(parentTag, childTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.disconnectAnimatedNodes(parentTag, childTag);
  },
  startAnimatingNode: function startAnimatingNode(animationId, nodeTag, config, endCallback) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.startAnimatingNode(animationId, nodeTag, config, endCallback);
  },
  stopAnimation: function stopAnimation(animationId) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.stopAnimation(animationId);
  },
  setAnimatedNodeValue: function setAnimatedNodeValue(nodeTag, value) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.setAnimatedNodeValue(nodeTag, value);
  },
  setAnimatedNodeOffset: function setAnimatedNodeOffset(nodeTag, offset) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.setAnimatedNodeOffset(nodeTag, offset);
  },
  flattenAnimatedNodeOffset: function flattenAnimatedNodeOffset(nodeTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.flattenAnimatedNodeOffset(nodeTag);
  },
  extractAnimatedNodeOffset: function extractAnimatedNodeOffset(nodeTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.extractAnimatedNodeOffset(nodeTag);
  },
  connectAnimatedNodeToView: function connectAnimatedNodeToView(nodeTag, viewTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.connectAnimatedNodeToView(nodeTag, viewTag);
  },
  disconnectAnimatedNodeFromView: function disconnectAnimatedNodeFromView(nodeTag, viewTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.disconnectAnimatedNodeFromView(nodeTag, viewTag);
  },
  dropAnimatedNode: function dropAnimatedNode(tag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.dropAnimatedNode(tag);
  },
  addAnimatedEventToView: function addAnimatedEventToView(viewTag, eventName, eventMapping) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.addAnimatedEventToView(viewTag, eventName, eventMapping);
  },
  removeAnimatedEventFromView: function removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag) {
    assertNativeAnimatedModule();
    NativeAnimatedModule.removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag);
  }
};

var STYLES_WHITELIST = {
  opacity: true,
  transform: true,

  scaleX: true,
  scaleY: true,
  translateX: true,
  translateY: true
};

var TRANSFORM_WHITELIST = {
  translateX: true,
  translateY: true,
  scale: true,
  scaleX: true,
  scaleY: true,
  rotate: true,
  rotateX: true,
  rotateY: true,
  perspective: true
};

function validateTransform(configs) {
  configs.forEach(function (config) {
    if (!TRANSFORM_WHITELIST.hasOwnProperty(config.property)) {
      throw new Error('Property \'' + config.property + '\' is not supported by native animated module');
    }
  });
}

function validateStyles(styles) {
  for (var key in styles) {
    if (!STYLES_WHITELIST.hasOwnProperty(key)) {
      throw new Error('Style property \'' + key + '\' is not supported by native animated module');
    }
  }
}

function validateInterpolation(config) {
  var SUPPORTED_INTERPOLATION_PARAMS = {
    inputRange: true,
    outputRange: true,
    extrapolate: true,
    extrapolateRight: true,
    extrapolateLeft: true
  };
  for (var key in config) {
    if (!SUPPORTED_INTERPOLATION_PARAMS.hasOwnProperty(key)) {
      throw new Error('Interpolation property \'' + key + '\' is not supported by native animated module');
    }
  }
}

function generateNewNodeTag() {
  return __nativeAnimatedNodeTagCount++;
}

function generateNewAnimationId() {
  return __nativeAnimationIdCount++;
}

function assertNativeAnimatedModule() {
  invariant(NativeAnimatedModule, 'Native animated module is not available');
}

var _warnedMissingNativeAnimated = false;

function shouldUseNativeDriver(config) {
  if (config.useNativeDriver && !NativeAnimatedModule) {
    if (!_warnedMissingNativeAnimated) {
      console.warn('Animated: `useNativeDriver` is not supported because the native ' + 'animated module is missing. Falling back to JS-based animation. To ' + 'resolve this, add `RCTAnimation` module to this app, or remove ' + '`useNativeDriver`. ' + 'More info: https://github.com/facebook/react-native/issues/11094#issuecomment-263240420');
      _warnedMissingNativeAnimated = true;
    }
    return false;
  }

  return config.useNativeDriver || false;
}

module.exports = {
  API: API,
  validateStyles: validateStyles,
  validateTransform: validateTransform,
  validateInterpolation: validateInterpolation,
  generateNewNodeTag: generateNewNodeTag,
  generateNewAnimationId: generateNewAnimationId,
  assertNativeAnimatedModule: assertNativeAnimatedModule,
  shouldUseNativeDriver: shouldUseNativeDriver,
  get nativeEventEmitter() {
    if (!nativeEventEmitter) {
      nativeEventEmitter = new NativeEventEmitter(NativeAnimatedModule);
    }
    return nativeEventEmitter;
  }
};
}, 199, null, "NativeAnimatedHelper");
__d(/* AnimatedWithChildren */function(global, require, module, exports) {
'use strict';

var AnimatedNode = require(198             ); // 198 = ./AnimatedNode
var NativeAnimatedHelper = require(199                      ); // 199 = ../NativeAnimatedHelper

var AnimatedWithChildren = function (_AnimatedNode) {
  babelHelpers.inherits(AnimatedWithChildren, _AnimatedNode);

  function AnimatedWithChildren() {
    babelHelpers.classCallCheck(this, AnimatedWithChildren);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedWithChildren.__proto__ || Object.getPrototypeOf(AnimatedWithChildren)).call(this));

    _this._children = [];
    return _this;
  }

  babelHelpers.createClass(AnimatedWithChildren, [{
    key: '__makeNative',
    value: function __makeNative() {
      if (!this.__isNative) {
        this.__isNative = true;
        for (var _iterator = this._children, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
          var _ref;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
          }

          var child = _ref;

          child.__makeNative();
          NativeAnimatedHelper.API.connectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());
        }
      }
    }
  }, {
    key: '__addChild',
    value: function __addChild(child) {
      if (this._children.length === 0) {
        this.__attach();
      }
      this._children.push(child);
      if (this.__isNative) {
        child.__makeNative();
        NativeAnimatedHelper.API.connectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());
      }
    }
  }, {
    key: '__removeChild',
    value: function __removeChild(child) {
      var index = this._children.indexOf(child);
      if (index === -1) {
        console.warn("Trying to remove a child that doesn't exist");
        return;
      }
      if (this.__isNative && child.__isNative) {
        NativeAnimatedHelper.API.disconnectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());
      }
      this._children.splice(index, 1);
      if (this._children.length === 0) {
        this.__detach();
      }
    }
  }, {
    key: '__getChildren',
    value: function __getChildren() {
      return this._children;
    }
  }]);
  return AnimatedWithChildren;
}(AnimatedNode);

module.exports = AnimatedWithChildren;
}, 200, null, "AnimatedWithChildren");
__d(/* InteractionManager */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(16             ); // 16 = BatchedBridge
var EventEmitter = require(81            ); // 81 = EventEmitter
var Set = require(58   ); // 58 = Set
var TaskQueue = require(202        ); // 202 = TaskQueue

var infoLog = require(108      ); // 108 = infoLog
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var keyMirror = require(149                 ); // 149 = fbjs/lib/keyMirror

var _emitter = new EventEmitter();

var DEBUG_DELAY = 0;
var DEBUG = false;

var InteractionManager = {
  Events: keyMirror({
    interactionStart: true,
    interactionComplete: true
  }),

  runAfterInteractions: function runAfterInteractions(task) {
    var tasks = [];
    var promise = new Promise(function (resolve) {
      _scheduleUpdate();
      if (task) {
        tasks.push(task);
      }
      tasks.push({ run: resolve, name: 'resolve ' + (task && task.name || '?') });
      _taskQueue.enqueueTasks(tasks);
    });
    return {
      then: promise.then.bind(promise),
      done: function done() {
        if (promise.done) {
          return promise.done.apply(promise, arguments);
        } else {
          console.warn('Tried to call done when not supported by current Promise implementation.');
        }
      },
      cancel: function cancel() {
        _taskQueue.cancelTasks(tasks);
      }
    };
  },
  createInteractionHandle: function createInteractionHandle() {
    DEBUG && infoLog('create interaction handle');
    _scheduleUpdate();
    var handle = ++_inc;
    _addInteractionSet.add(handle);
    return handle;
  },
  clearInteractionHandle: function clearInteractionHandle(handle) {
    DEBUG && infoLog('clear interaction handle');
    invariant(!!handle, 'Must provide a handle to clear.');
    _scheduleUpdate();
    _addInteractionSet.delete(handle);
    _deleteInteractionSet.add(handle);
  },


  addListener: _emitter.addListener.bind(_emitter),

  setDeadline: function setDeadline(deadline) {
    _deadline = deadline;
  }
};

var _interactionSet = new Set();
var _addInteractionSet = new Set();
var _deleteInteractionSet = new Set();
var _taskQueue = new TaskQueue({ onMoreTasks: _scheduleUpdate });
var _nextUpdateHandle = 0;
var _inc = 0;
var _deadline = -1;

function _scheduleUpdate() {
  if (!_nextUpdateHandle) {
    if (_deadline > 0) {
      _nextUpdateHandle = setTimeout(_processUpdate, 0 + DEBUG_DELAY);
    } else {
      _nextUpdateHandle = setImmediate(_processUpdate);
    }
  }
}

function _processUpdate() {
  _nextUpdateHandle = 0;

  var interactionCount = _interactionSet.size;
  _addInteractionSet.forEach(function (handle) {
    return _interactionSet.add(handle);
  });
  _deleteInteractionSet.forEach(function (handle) {
    return _interactionSet.delete(handle);
  });
  var nextInteractionCount = _interactionSet.size;

  if (interactionCount !== 0 && nextInteractionCount === 0) {
    _emitter.emit(InteractionManager.Events.interactionComplete);
  } else if (interactionCount === 0 && nextInteractionCount !== 0) {
    _emitter.emit(InteractionManager.Events.interactionStart);
  }

  if (nextInteractionCount === 0) {
    while (_taskQueue.hasTasksToProcess()) {
      _taskQueue.processNext();
      if (_deadline > 0 && BatchedBridge.getEventLoopRunningTime() >= _deadline) {
        _scheduleUpdate();
        break;
      }
    }
  }
  _addInteractionSet.clear();
  _deleteInteractionSet.clear();
}

module.exports = InteractionManager;
}, 201, null, "InteractionManager");
__d(/* TaskQueue */function(global, require, module, exports) {
'use strict';

var infoLog = require(108      ); // 108 = infoLog
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var DEBUG = false;

var TaskQueue = function () {
  function TaskQueue(_ref) {
    var onMoreTasks = _ref.onMoreTasks;
    babelHelpers.classCallCheck(this, TaskQueue);

    this._onMoreTasks = onMoreTasks;
    this._queueStack = [{ tasks: [], popable: false }];
  }

  babelHelpers.createClass(TaskQueue, [{
    key: 'enqueue',
    value: function enqueue(task) {
      this._getCurrentQueue().push(task);
    }
  }, {
    key: 'enqueueTasks',
    value: function enqueueTasks(tasks) {
      var _this = this;

      tasks.forEach(function (task) {
        return _this.enqueue(task);
      });
    }
  }, {
    key: 'cancelTasks',
    value: function cancelTasks(tasksToCancel) {
      this._queueStack = this._queueStack.map(function (queue) {
        return babelHelpers.extends({}, queue, {
          tasks: queue.tasks.filter(function (task) {
            return tasksToCancel.indexOf(task) === -1;
          })
        });
      }).filter(function (queue, idx) {
        return queue.tasks.length > 0 || idx === 0;
      });
    }
  }, {
    key: 'hasTasksToProcess',
    value: function hasTasksToProcess() {
      return this._getCurrentQueue().length > 0;
    }
  }, {
    key: 'processNext',
    value: function processNext() {
      var queue = this._getCurrentQueue();
      if (queue.length) {
        var task = queue.shift();
        try {
          if (task.gen) {
            DEBUG && infoLog('genPromise for task ' + task.name);
            this._genPromise(task);
          } else if (task.run) {
            DEBUG && infoLog('run task ' + task.name);
            task.run();
          } else {
            invariant(typeof task === 'function', 'Expected Function, SimpleTask, or PromiseTask, but got:\n' + JSON.stringify(task, null, 2));
            DEBUG && infoLog('run anonymous task');
            task();
          }
        } catch (e) {
          e.message = 'TaskQueue: Error with task ' + (task.name || '') + ': ' + e.message;
          throw e;
        }
      }
    }
  }, {
    key: '_getCurrentQueue',
    value: function _getCurrentQueue() {
      var stackIdx = this._queueStack.length - 1;
      var queue = this._queueStack[stackIdx];
      if (queue.popable && queue.tasks.length === 0 && this._queueStack.length > 1) {
        this._queueStack.pop();
        DEBUG && infoLog('popped queue: ', { stackIdx: stackIdx, queueStackSize: this._queueStack.length });
        return this._getCurrentQueue();
      } else {
        return queue.tasks;
      }
    }
  }, {
    key: '_genPromise',
    value: function _genPromise(task) {
      var _this2 = this;

      this._queueStack.push({ tasks: [], popable: false });
      var stackIdx = this._queueStack.length - 1;
      DEBUG && infoLog('push new queue: ', { stackIdx: stackIdx });
      DEBUG && infoLog('exec gen task ' + task.name);
      task.gen().then(function () {
        DEBUG && infoLog('onThen for gen task ' + task.name, { stackIdx: stackIdx, queueStackSize: _this2._queueStack.length });
        _this2._queueStack[stackIdx].popable = true;
        _this2.hasTasksToProcess() && _this2._onMoreTasks();
      }).catch(function (ex) {
        ex.message = 'TaskQueue: Error resolving Promise in task ' + task.name + ': ' + ex.message;
        throw ex;
      }).done();
    }
  }]);
  return TaskQueue;
}();

module.exports = TaskQueue;
}, 202, null, "TaskQueue");
__d(/* AnimatedAddition */function(global, require, module, exports) {
'use strict';

var AnimatedInterpolation = require(197                      ); // 197 = ./AnimatedInterpolation
var AnimatedNode = require(198             ); // 198 = ./AnimatedNode
var AnimatedValue = require(196              ); // 196 = ./AnimatedValue
var AnimatedWithChildren = require(200                     ); // 200 = ./AnimatedWithChildren

var AnimatedAddition = function (_AnimatedWithChildren) {
  babelHelpers.inherits(AnimatedAddition, _AnimatedWithChildren);

  function AnimatedAddition(a, b) {
    babelHelpers.classCallCheck(this, AnimatedAddition);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedAddition.__proto__ || Object.getPrototypeOf(AnimatedAddition)).call(this));

    _this._a = typeof a === 'number' ? new AnimatedValue(a) : a;
    _this._b = typeof b === 'number' ? new AnimatedValue(b) : b;
    return _this;
  }

  babelHelpers.createClass(AnimatedAddition, [{
    key: '__makeNative',
    value: function __makeNative() {
      this._a.__makeNative();
      this._b.__makeNative();
      babelHelpers.get(AnimatedAddition.prototype.__proto__ || Object.getPrototypeOf(AnimatedAddition.prototype), '__makeNative', this).call(this);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return this._a.__getValue() + this._b.__getValue();
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._a.__addChild(this);
      this._b.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._a.__removeChild(this);
      this._b.__removeChild(this);
      babelHelpers.get(AnimatedAddition.prototype.__proto__ || Object.getPrototypeOf(AnimatedAddition.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'addition',
        input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
      };
    }
  }]);
  return AnimatedAddition;
}(AnimatedWithChildren);

module.exports = AnimatedAddition;
}, 203, null, "AnimatedAddition");
__d(/* AnimatedDiffClamp */function(global, require, module, exports) {
'use strict';

var AnimatedInterpolation = require(197                      ); // 197 = ./AnimatedInterpolation
var AnimatedNode = require(198             ); // 198 = ./AnimatedNode
var AnimatedWithChildren = require(200                     ); // 200 = ./AnimatedWithChildren

var AnimatedDiffClamp = function (_AnimatedWithChildren) {
  babelHelpers.inherits(AnimatedDiffClamp, _AnimatedWithChildren);

  function AnimatedDiffClamp(a, min, max) {
    babelHelpers.classCallCheck(this, AnimatedDiffClamp);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedDiffClamp.__proto__ || Object.getPrototypeOf(AnimatedDiffClamp)).call(this));

    _this._a = a;
    _this._min = min;
    _this._max = max;
    _this._value = _this._lastValue = _this._a.__getValue();
    return _this;
  }

  babelHelpers.createClass(AnimatedDiffClamp, [{
    key: '__makeNative',
    value: function __makeNative() {
      this._a.__makeNative();
      babelHelpers.get(AnimatedDiffClamp.prototype.__proto__ || Object.getPrototypeOf(AnimatedDiffClamp.prototype), '__makeNative', this).call(this);
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      var value = this._a.__getValue();
      var diff = value - this._lastValue;
      this._lastValue = value;
      this._value = Math.min(Math.max(this._value + diff, this._min), this._max);
      return this._value;
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._a.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._a.__removeChild(this);
      babelHelpers.get(AnimatedDiffClamp.prototype.__proto__ || Object.getPrototypeOf(AnimatedDiffClamp.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'diffclamp',
        input: this._a.__getNativeTag(),
        min: this._min,
        max: this._max
      };
    }
  }]);
  return AnimatedDiffClamp;
}(AnimatedWithChildren);

module.exports = AnimatedDiffClamp;
}, 204, null, "AnimatedDiffClamp");
__d(/* AnimatedDivision */function(global, require, module, exports) {
'use strict';

var AnimatedInterpolation = require(197                      ); // 197 = ./AnimatedInterpolation
var AnimatedNode = require(198             ); // 198 = ./AnimatedNode
var AnimatedValue = require(196              ); // 196 = ./AnimatedValue
var AnimatedWithChildren = require(200                     ); // 200 = ./AnimatedWithChildren

var AnimatedDivision = function (_AnimatedWithChildren) {
  babelHelpers.inherits(AnimatedDivision, _AnimatedWithChildren);

  function AnimatedDivision(a, b) {
    babelHelpers.classCallCheck(this, AnimatedDivision);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedDivision.__proto__ || Object.getPrototypeOf(AnimatedDivision)).call(this));

    _this._a = typeof a === 'number' ? new AnimatedValue(a) : a;
    _this._b = typeof b === 'number' ? new AnimatedValue(b) : b;
    return _this;
  }

  babelHelpers.createClass(AnimatedDivision, [{
    key: '__makeNative',
    value: function __makeNative() {
      this._a.__makeNative();
      this._b.__makeNative();
      babelHelpers.get(AnimatedDivision.prototype.__proto__ || Object.getPrototypeOf(AnimatedDivision.prototype), '__makeNative', this).call(this);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      var a = this._a.__getValue();
      var b = this._b.__getValue();
      if (b === 0) {
        console.error('Detected division by zero in AnimatedDivision');
      }
      return a / b;
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._a.__addChild(this);
      this._b.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._a.__removeChild(this);
      this._b.__removeChild(this);
      babelHelpers.get(AnimatedDivision.prototype.__proto__ || Object.getPrototypeOf(AnimatedDivision.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'division',
        input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
      };
    }
  }]);
  return AnimatedDivision;
}(AnimatedWithChildren);

module.exports = AnimatedDivision;
}, 205, null, "AnimatedDivision");
__d(/* AnimatedModulo */function(global, require, module, exports) {
'use strict';

var AnimatedInterpolation = require(197                      ); // 197 = ./AnimatedInterpolation
var AnimatedNode = require(198             ); // 198 = ./AnimatedNode
var AnimatedWithChildren = require(200                     ); // 200 = ./AnimatedWithChildren

var AnimatedModulo = function (_AnimatedWithChildren) {
  babelHelpers.inherits(AnimatedModulo, _AnimatedWithChildren);

  function AnimatedModulo(a, modulus) {
    babelHelpers.classCallCheck(this, AnimatedModulo);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedModulo.__proto__ || Object.getPrototypeOf(AnimatedModulo)).call(this));

    _this._a = a;
    _this._modulus = modulus;
    return _this;
  }

  babelHelpers.createClass(AnimatedModulo, [{
    key: '__makeNative',
    value: function __makeNative() {
      this._a.__makeNative();
      babelHelpers.get(AnimatedModulo.prototype.__proto__ || Object.getPrototypeOf(AnimatedModulo.prototype), '__makeNative', this).call(this);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return (this._a.__getValue() % this._modulus + this._modulus) % this._modulus;
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._a.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._a.__removeChild(this);
      babelHelpers.get(AnimatedModulo.prototype.__proto__ || Object.getPrototypeOf(AnimatedModulo.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'modulus',
        input: this._a.__getNativeTag(),
        modulus: this._modulus
      };
    }
  }]);
  return AnimatedModulo;
}(AnimatedWithChildren);

module.exports = AnimatedModulo;
}, 206, null, "AnimatedModulo");
__d(/* AnimatedMultiplication */function(global, require, module, exports) {
'use strict';

var AnimatedInterpolation = require(197                      ); // 197 = ./AnimatedInterpolation
var AnimatedNode = require(198             ); // 198 = ./AnimatedNode
var AnimatedValue = require(196              ); // 196 = ./AnimatedValue
var AnimatedWithChildren = require(200                     ); // 200 = ./AnimatedWithChildren

var AnimatedMultiplication = function (_AnimatedWithChildren) {
  babelHelpers.inherits(AnimatedMultiplication, _AnimatedWithChildren);

  function AnimatedMultiplication(a, b) {
    babelHelpers.classCallCheck(this, AnimatedMultiplication);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedMultiplication.__proto__ || Object.getPrototypeOf(AnimatedMultiplication)).call(this));

    _this._a = typeof a === 'number' ? new AnimatedValue(a) : a;
    _this._b = typeof b === 'number' ? new AnimatedValue(b) : b;
    return _this;
  }

  babelHelpers.createClass(AnimatedMultiplication, [{
    key: '__makeNative',
    value: function __makeNative() {
      this._a.__makeNative();
      this._b.__makeNative();
      babelHelpers.get(AnimatedMultiplication.prototype.__proto__ || Object.getPrototypeOf(AnimatedMultiplication.prototype), '__makeNative', this).call(this);
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return this._a.__getValue() * this._b.__getValue();
    }
  }, {
    key: 'interpolate',
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._a.__addChild(this);
      this._b.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._a.__removeChild(this);
      this._b.__removeChild(this);
      babelHelpers.get(AnimatedMultiplication.prototype.__proto__ || Object.getPrototypeOf(AnimatedMultiplication.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      return {
        type: 'multiplication',
        input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
      };
    }
  }]);
  return AnimatedMultiplication;
}(AnimatedWithChildren);

module.exports = AnimatedMultiplication;
}, 207, null, "AnimatedMultiplication");
__d(/* AnimatedProps */function(global, require, module, exports) {
'use strict';

var _require = require(195               ), // 195 = ../AnimatedEvent
    AnimatedEvent = _require.AnimatedEvent;

var AnimatedNode = require(198             ); // 198 = ./AnimatedNode
var AnimatedStyle = require(209              ); // 209 = ./AnimatedStyle
var NativeAnimatedHelper = require(199                      ); // 199 = ../NativeAnimatedHelper
var ReactNative = require(21           ); // 21 = ReactNative

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var AnimatedProps = function (_AnimatedNode) {
  babelHelpers.inherits(AnimatedProps, _AnimatedNode);

  function AnimatedProps(props, callback) {
    babelHelpers.classCallCheck(this, AnimatedProps);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedProps.__proto__ || Object.getPrototypeOf(AnimatedProps)).call(this));

    if (props.style) {
      props = babelHelpers.extends({}, props, {
        style: new AnimatedStyle(props.style)
      });
    }
    _this._props = props;
    _this._callback = callback;
    _this.__attach();
    return _this;
  }

  babelHelpers.createClass(AnimatedProps, [{
    key: '__getValue',
    value: function __getValue() {
      var props = {};
      for (var key in this._props) {
        var value = this._props[key];
        if (value instanceof AnimatedNode) {
          if (!value.__isNative || value instanceof AnimatedStyle) {
            props[key] = value.__getValue();
          }
        } else if (value instanceof AnimatedEvent) {
          props[key] = value.__getHandler();
        } else {
          props[key] = value;
        }
      }
      return props;
    }
  }, {
    key: '__getAnimatedValue',
    value: function __getAnimatedValue() {
      var props = {};
      for (var key in this._props) {
        var value = this._props[key];
        if (value instanceof AnimatedNode) {
          props[key] = value.__getAnimatedValue();
        }
      }
      return props;
    }
  }, {
    key: '__attach',
    value: function __attach() {
      for (var key in this._props) {
        var value = this._props[key];
        if (value instanceof AnimatedNode) {
          value.__addChild(this);
        }
      }
    }
  }, {
    key: '__detach',
    value: function __detach() {
      if (this.__isNative && this._animatedView) {
        this.__disconnectAnimatedView();
      }
      for (var key in this._props) {
        var value = this._props[key];
        if (value instanceof AnimatedNode) {
          value.__removeChild(this);
        }
      }
      babelHelpers.get(AnimatedProps.prototype.__proto__ || Object.getPrototypeOf(AnimatedProps.prototype), '__detach', this).call(this);
    }
  }, {
    key: 'update',
    value: function update() {
      this._callback();
    }
  }, {
    key: '__makeNative',
    value: function __makeNative() {
      if (!this.__isNative) {
        this.__isNative = true;
        for (var key in this._props) {
          var value = this._props[key];
          if (value instanceof AnimatedNode) {
            value.__makeNative();
          }
        }
        if (this._animatedView) {
          this.__connectAnimatedView();
        }
      }
    }
  }, {
    key: 'setNativeView',
    value: function setNativeView(animatedView) {
      if (this._animatedView === animatedView) {
        return;
      }
      this._animatedView = animatedView;
      if (this.__isNative) {
        this.__connectAnimatedView();
      }
    }
  }, {
    key: '__connectAnimatedView',
    value: function __connectAnimatedView() {
      invariant(this.__isNative, 'Expected node to be marked as "native"');
      var nativeViewTag = ReactNative.findNodeHandle(this._animatedView);
      invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');
      NativeAnimatedHelper.API.connectAnimatedNodeToView(this.__getNativeTag(), nativeViewTag);
    }
  }, {
    key: '__disconnectAnimatedView',
    value: function __disconnectAnimatedView() {
      invariant(this.__isNative, 'Expected node to be marked as "native"');
      var nativeViewTag = ReactNative.findNodeHandle(this._animatedView);
      invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');
      NativeAnimatedHelper.API.disconnectAnimatedNodeFromView(this.__getNativeTag(), nativeViewTag);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      var propsConfig = {};
      for (var propKey in this._props) {
        var value = this._props[propKey];
        if (value instanceof AnimatedNode) {
          propsConfig[propKey] = value.__getNativeTag();
        }
      }
      return {
        type: 'props',
        props: propsConfig
      };
    }
  }]);
  return AnimatedProps;
}(AnimatedNode);

module.exports = AnimatedProps;
}, 208, null, "AnimatedProps");
__d(/* AnimatedStyle */function(global, require, module, exports) {
'use strict';

var AnimatedNode = require(198             ); // 198 = ./AnimatedNode
var AnimatedTransform = require(210                  ); // 210 = ./AnimatedTransform
var AnimatedWithChildren = require(200                     ); // 200 = ./AnimatedWithChildren
var NativeAnimatedHelper = require(199                      ); // 199 = ../NativeAnimatedHelper

var flattenStyle = require(43            ); // 43 = flattenStyle

var AnimatedStyle = function (_AnimatedWithChildren) {
  babelHelpers.inherits(AnimatedStyle, _AnimatedWithChildren);

  function AnimatedStyle(style) {
    babelHelpers.classCallCheck(this, AnimatedStyle);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedStyle.__proto__ || Object.getPrototypeOf(AnimatedStyle)).call(this));

    style = flattenStyle(style) || {};
    if (style.transform) {
      style = babelHelpers.extends({}, style, {
        transform: new AnimatedTransform(style.transform)
      });
    }
    _this._style = style;
    return _this;
  }

  babelHelpers.createClass(AnimatedStyle, [{
    key: '_walkStyleAndGetValues',
    value: function _walkStyleAndGetValues(style) {
      var updatedStyle = {};
      for (var key in style) {
        var value = style[key];
        if (value instanceof AnimatedNode) {
          if (!value.__isNative) {
            updatedStyle[key] = value.__getValue();
          }
        } else if (value && !Array.isArray(value) && typeof value === 'object') {
          updatedStyle[key] = this._walkStyleAndGetValues(value);
        } else {
          updatedStyle[key] = value;
        }
      }
      return updatedStyle;
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return this._walkStyleAndGetValues(this._style);
    }
  }, {
    key: '_walkStyleAndGetAnimatedValues',
    value: function _walkStyleAndGetAnimatedValues(style) {
      var updatedStyle = {};
      for (var key in style) {
        var value = style[key];
        if (value instanceof AnimatedNode) {
          updatedStyle[key] = value.__getAnimatedValue();
        } else if (value && !Array.isArray(value) && typeof value === 'object') {
          updatedStyle[key] = this._walkStyleAndGetAnimatedValues(value);
        }
      }
      return updatedStyle;
    }
  }, {
    key: '__getAnimatedValue',
    value: function __getAnimatedValue() {
      return this._walkStyleAndGetAnimatedValues(this._style);
    }
  }, {
    key: '__attach',
    value: function __attach() {
      for (var key in this._style) {
        var value = this._style[key];
        if (value instanceof AnimatedNode) {
          value.__addChild(this);
        }
      }
    }
  }, {
    key: '__detach',
    value: function __detach() {
      for (var key in this._style) {
        var value = this._style[key];
        if (value instanceof AnimatedNode) {
          value.__removeChild(this);
        }
      }
      babelHelpers.get(AnimatedStyle.prototype.__proto__ || Object.getPrototypeOf(AnimatedStyle.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__makeNative',
    value: function __makeNative() {
      babelHelpers.get(AnimatedStyle.prototype.__proto__ || Object.getPrototypeOf(AnimatedStyle.prototype), '__makeNative', this).call(this);
      for (var key in this._style) {
        var value = this._style[key];
        if (value instanceof AnimatedNode) {
          value.__makeNative();
        }
      }
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      var styleConfig = {};
      for (var styleKey in this._style) {
        if (this._style[styleKey] instanceof AnimatedNode) {
          styleConfig[styleKey] = this._style[styleKey].__getNativeTag();
        }
      }
      NativeAnimatedHelper.validateStyles(styleConfig);
      return {
        type: 'style',
        style: styleConfig
      };
    }
  }]);
  return AnimatedStyle;
}(AnimatedWithChildren);

module.exports = AnimatedStyle;
}, 209, null, "AnimatedStyle");
__d(/* AnimatedTransform */function(global, require, module, exports) {
'use strict';

var AnimatedNode = require(198             ); // 198 = ./AnimatedNode
var AnimatedWithChildren = require(200                     ); // 200 = ./AnimatedWithChildren
var NativeAnimatedHelper = require(199                      ); // 199 = ../NativeAnimatedHelper

var AnimatedTransform = function (_AnimatedWithChildren) {
  babelHelpers.inherits(AnimatedTransform, _AnimatedWithChildren);

  function AnimatedTransform(transforms) {
    babelHelpers.classCallCheck(this, AnimatedTransform);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedTransform.__proto__ || Object.getPrototypeOf(AnimatedTransform)).call(this));

    _this._transforms = transforms;
    return _this;
  }

  babelHelpers.createClass(AnimatedTransform, [{
    key: '__makeNative',
    value: function __makeNative() {
      babelHelpers.get(AnimatedTransform.prototype.__proto__ || Object.getPrototypeOf(AnimatedTransform.prototype), '__makeNative', this).call(this);
      this._transforms.forEach(function (transform) {
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof AnimatedNode) {
            value.__makeNative();
          }
        }
      });
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return this._transforms.map(function (transform) {
        var result = {};
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof AnimatedNode) {
            result[key] = value.__getValue();
          } else {
            result[key] = value;
          }
        }
        return result;
      });
    }
  }, {
    key: '__getAnimatedValue',
    value: function __getAnimatedValue() {
      return this._transforms.map(function (transform) {
        var result = {};
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof AnimatedNode) {
            result[key] = value.__getAnimatedValue();
          } else {
            result[key] = value;
          }
        }
        return result;
      });
    }
  }, {
    key: '__attach',
    value: function __attach() {
      var _this2 = this;

      this._transforms.forEach(function (transform) {
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof AnimatedNode) {
            value.__addChild(_this2);
          }
        }
      });
    }
  }, {
    key: '__detach',
    value: function __detach() {
      var _this3 = this;

      this._transforms.forEach(function (transform) {
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof AnimatedNode) {
            value.__removeChild(_this3);
          }
        }
      });
      babelHelpers.get(AnimatedTransform.prototype.__proto__ || Object.getPrototypeOf(AnimatedTransform.prototype), '__detach', this).call(this);
    }
  }, {
    key: '__getNativeConfig',
    value: function __getNativeConfig() {
      var transConfigs = [];

      this._transforms.forEach(function (transform) {
        for (var key in transform) {
          var value = transform[key];
          if (value instanceof AnimatedNode) {
            transConfigs.push({
              type: 'animated',
              property: key,
              nodeTag: value.__getNativeTag()
            });
          } else {
            transConfigs.push({
              type: 'static',
              property: key,
              value: value
            });
          }
        }
      });

      NativeAnimatedHelper.validateTransform(transConfigs);
      return {
        type: 'transform',
        transforms: transConfigs
      };
    }
  }]);
  return AnimatedTransform;
}(AnimatedWithChildren);

module.exports = AnimatedTransform;
}, 210, null, "AnimatedTransform");
__d(/* AnimatedTracking */function(global, require, module, exports) {
'use strict';

var AnimatedValue = require(196              ); // 196 = ./AnimatedValue
var AnimatedNode = require(198             ); // 198 = ./AnimatedNode

var AnimatedTracking = function (_AnimatedNode) {
  babelHelpers.inherits(AnimatedTracking, _AnimatedNode);

  function AnimatedTracking(value, parent, animationClass, animationConfig, callback) {
    babelHelpers.classCallCheck(this, AnimatedTracking);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedTracking.__proto__ || Object.getPrototypeOf(AnimatedTracking)).call(this));

    _this._value = value;
    _this._parent = parent;
    _this._animationClass = animationClass;
    _this._animationConfig = animationConfig;
    _this._callback = callback;
    _this.__attach();
    return _this;
  }

  babelHelpers.createClass(AnimatedTracking, [{
    key: '__getValue',
    value: function __getValue() {
      return this._parent.__getValue();
    }
  }, {
    key: '__attach',
    value: function __attach() {
      this._parent.__addChild(this);
    }
  }, {
    key: '__detach',
    value: function __detach() {
      this._parent.__removeChild(this);
      babelHelpers.get(AnimatedTracking.prototype.__proto__ || Object.getPrototypeOf(AnimatedTracking.prototype), '__detach', this).call(this);
    }
  }, {
    key: 'update',
    value: function update() {
      this._value.animate(new this._animationClass(babelHelpers.extends({}, this._animationConfig, {
        toValue: this._animationConfig.toValue.__getValue()
      })), this._callback);
    }
  }]);
  return AnimatedTracking;
}(AnimatedNode);

module.exports = AnimatedTracking;
}, 211, null, "AnimatedTracking");
__d(/* AnimatedValueXY */function(global, require, module, exports) {
'use strict';

var AnimatedValue = require(196              ); // 196 = ./AnimatedValue
var AnimatedWithChildren = require(200                     ); // 200 = ./AnimatedWithChildren

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var _uniqueId = 1;

var AnimatedValueXY = function (_AnimatedWithChildren) {
  babelHelpers.inherits(AnimatedValueXY, _AnimatedWithChildren);

  function AnimatedValueXY(valueIn) {
    babelHelpers.classCallCheck(this, AnimatedValueXY);

    var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedValueXY.__proto__ || Object.getPrototypeOf(AnimatedValueXY)).call(this));

    var value = valueIn || { x: 0, y: 0 };
    if (typeof value.x === 'number' && typeof value.y === 'number') {
      _this.x = new AnimatedValue(value.x);
      _this.y = new AnimatedValue(value.y);
    } else {
      invariant(value.x instanceof AnimatedValue && value.y instanceof AnimatedValue, 'AnimatedValueXY must be initalized with an object of numbers or ' + 'AnimatedValues.');
      _this.x = value.x;
      _this.y = value.y;
    }
    _this._listeners = {};
    return _this;
  }

  babelHelpers.createClass(AnimatedValueXY, [{
    key: 'setValue',
    value: function setValue(value) {
      this.x.setValue(value.x);
      this.y.setValue(value.y);
    }
  }, {
    key: 'setOffset',
    value: function setOffset(offset) {
      this.x.setOffset(offset.x);
      this.y.setOffset(offset.y);
    }
  }, {
    key: 'flattenOffset',
    value: function flattenOffset() {
      this.x.flattenOffset();
      this.y.flattenOffset();
    }
  }, {
    key: 'extractOffset',
    value: function extractOffset() {
      this.x.extractOffset();
      this.y.extractOffset();
    }
  }, {
    key: '__getValue',
    value: function __getValue() {
      return {
        x: this.x.__getValue(),
        y: this.y.__getValue()
      };
    }
  }, {
    key: 'resetAnimation',
    value: function resetAnimation(callback) {
      this.x.resetAnimation();
      this.y.resetAnimation();
      callback && callback(this.__getValue());
    }
  }, {
    key: 'stopAnimation',
    value: function stopAnimation(callback) {
      this.x.stopAnimation();
      this.y.stopAnimation();
      callback && callback(this.__getValue());
    }
  }, {
    key: 'addListener',
    value: function addListener(callback) {
      var _this2 = this;

      var id = String(_uniqueId++);
      var jointCallback = function jointCallback(_ref) {
        var number = _ref.value;

        callback(_this2.__getValue());
      };
      this._listeners[id] = {
        x: this.x.addListener(jointCallback),
        y: this.y.addListener(jointCallback)
      };
      return id;
    }
  }, {
    key: 'removeListener',
    value: function removeListener(id) {
      this.x.removeListener(this._listeners[id].x);
      this.y.removeListener(this._listeners[id].y);
      delete this._listeners[id];
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners() {
      this.x.removeAllListeners();
      this.y.removeAllListeners();
      this._listeners = {};
    }
  }, {
    key: 'getLayout',
    value: function getLayout() {
      return {
        left: this.x,
        top: this.y
      };
    }
  }, {
    key: 'getTranslateTransform',
    value: function getTranslateTransform() {
      return [{ translateX: this.x }, { translateY: this.y }];
    }
  }]);
  return AnimatedValueXY;
}(AnimatedWithChildren);

module.exports = AnimatedValueXY;
}, 212, null, "AnimatedValueXY");
__d(/* DecayAnimation */function(global, require, module, exports) {
'use strict';

var Animation = require(214          ); // 214 = ./Animation

var _require = require(199                      ), // 199 = ../NativeAnimatedHelper
    shouldUseNativeDriver = _require.shouldUseNativeDriver;

var DecayAnimation = function (_Animation) {
  babelHelpers.inherits(DecayAnimation, _Animation);

  function DecayAnimation(config) {
    babelHelpers.classCallCheck(this, DecayAnimation);

    var _this = babelHelpers.possibleConstructorReturn(this, (DecayAnimation.__proto__ || Object.getPrototypeOf(DecayAnimation)).call(this));

    _this._deceleration = config.deceleration !== undefined ? config.deceleration : 0.998;
    _this._velocity = config.velocity;
    _this._useNativeDriver = shouldUseNativeDriver(config);
    _this.__isInteraction = config.isInteraction !== undefined ? config.isInteraction : true;
    _this.__iterations = config.iterations !== undefined ? config.iterations : 1;
    return _this;
  }

  babelHelpers.createClass(DecayAnimation, [{
    key: '__getNativeAnimationConfig',
    value: function __getNativeAnimationConfig() {
      return {
        type: 'decay',
        deceleration: this._deceleration,
        velocity: this._velocity,
        iterations: this.__iterations
      };
    }
  }, {
    key: 'start',
    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {
      this.__active = true;
      this._lastValue = fromValue;
      this._fromValue = fromValue;
      this._onUpdate = onUpdate;
      this.__onEnd = onEnd;
      this._startTime = Date.now();
      if (this._useNativeDriver) {
        this.__startNativeAnimation(animatedValue);
      } else {
        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
      }
    }
  }, {
    key: 'onUpdate',
    value: function onUpdate() {
      var now = Date.now();

      var value = this._fromValue + this._velocity / (1 - this._deceleration) * (1 - Math.exp(-(1 - this._deceleration) * (now - this._startTime)));

      this._onUpdate(value);

      if (Math.abs(this._lastValue - value) < 0.1) {
        this.__debouncedOnEnd({ finished: true });
        return;
      }

      this._lastValue = value;
      if (this.__active) {
        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
      }
    }
  }, {
    key: 'stop',
    value: function stop() {
      babelHelpers.get(DecayAnimation.prototype.__proto__ || Object.getPrototypeOf(DecayAnimation.prototype), 'stop', this).call(this);
      this.__active = false;
      global.cancelAnimationFrame(this._animationFrame);
      this.__debouncedOnEnd({ finished: false });
    }
  }]);
  return DecayAnimation;
}(Animation);

module.exports = DecayAnimation;
}, 213, null, "DecayAnimation");
__d(/* Animation */function(global, require, module, exports) {
'use strict';

var NativeAnimatedHelper = require(199                   ); // 199 = NativeAnimatedHelper

var Animation = function () {
  function Animation() {
    babelHelpers.classCallCheck(this, Animation);
  }

  babelHelpers.createClass(Animation, [{
    key: 'start',
    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {}
  }, {
    key: 'stop',
    value: function stop() {
      if (this.__nativeId) {
        NativeAnimatedHelper.API.stopAnimation(this.__nativeId);
      }
    }
  }, {
    key: '__getNativeAnimationConfig',
    value: function __getNativeAnimationConfig() {
      throw new Error('This animation type cannot be offloaded to native');
    }
  }, {
    key: '__debouncedOnEnd',
    value: function __debouncedOnEnd(result) {
      var onEnd = this.__onEnd;
      this.__onEnd = null;
      onEnd && onEnd(result);
    }
  }, {
    key: '__startNativeAnimation',
    value: function __startNativeAnimation(animatedValue) {
      animatedValue.__makeNative();
      this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();
      NativeAnimatedHelper.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));
    }
  }]);
  return Animation;
}();

module.exports = Animation;
}, 214, null, "Animation");
__d(/* SpringAnimation */function(global, require, module, exports) {
'use strict';

var AnimatedValue = require(196                     ); // 196 = ../nodes/AnimatedValue
var AnimatedValueXY = require(212                       ); // 212 = ../nodes/AnimatedValueXY
var Animation = require(214          ); // 214 = ./Animation
var SpringConfig = require(216              ); // 216 = ../SpringConfig

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var _require = require(199                      ), // 199 = ../NativeAnimatedHelper
    shouldUseNativeDriver = _require.shouldUseNativeDriver;

function withDefault(value, defaultValue) {
  if (value === undefined || value === null) {
    return defaultValue;
  }
  return value;
}

var SpringAnimation = function (_Animation) {
  babelHelpers.inherits(SpringAnimation, _Animation);

  function SpringAnimation(config) {
    babelHelpers.classCallCheck(this, SpringAnimation);

    var _this = babelHelpers.possibleConstructorReturn(this, (SpringAnimation.__proto__ || Object.getPrototypeOf(SpringAnimation)).call(this));

    _this._overshootClamping = withDefault(config.overshootClamping, false);
    _this._restDisplacementThreshold = withDefault(config.restDisplacementThreshold, 0.001);
    _this._restSpeedThreshold = withDefault(config.restSpeedThreshold, 0.001);
    _this._initialVelocity = withDefault(config.velocity, 0);
    _this._lastVelocity = withDefault(config.velocity, 0);
    _this._toValue = config.toValue;
    _this._delay = withDefault(config.delay, 0);
    _this._useNativeDriver = shouldUseNativeDriver(config);
    _this.__isInteraction = config.isInteraction !== undefined ? config.isInteraction : true;
    _this.__iterations = config.iterations !== undefined ? config.iterations : 1;

    if (config.stiffness !== undefined || config.damping !== undefined || config.mass !== undefined) {
      invariant(config.bounciness === undefined && config.speed === undefined && config.tension === undefined && config.friction === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');
      _this._stiffness = withDefault(config.stiffness, 100);
      _this._damping = withDefault(config.damping, 10);
      _this._mass = withDefault(config.mass, 1);
    } else if (config.bounciness !== undefined || config.speed !== undefined) {
      invariant(config.tension === undefined && config.friction === undefined && config.stiffness === undefined && config.damping === undefined && config.mass === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');
      var springConfig = SpringConfig.fromBouncinessAndSpeed(withDefault(config.bounciness, 8), withDefault(config.speed, 12));
      _this._stiffness = springConfig.stiffness;
      _this._damping = springConfig.damping;
      _this._mass = 1;
    } else {
      var _springConfig = SpringConfig.fromOrigamiTensionAndFriction(withDefault(config.tension, 40), withDefault(config.friction, 7));
      _this._stiffness = _springConfig.stiffness;
      _this._damping = _springConfig.damping;
      _this._mass = 1;
    }

    invariant(_this._stiffness > 0, 'Stiffness value must be greater than 0');
    invariant(_this._damping > 0, 'Damping value must be greater than 0');
    invariant(_this._mass > 0, 'Mass value must be greater than 0');
    return _this;
  }

  babelHelpers.createClass(SpringAnimation, [{
    key: '__getNativeAnimationConfig',
    value: function __getNativeAnimationConfig() {
      return {
        type: 'spring',
        overshootClamping: this._overshootClamping,
        restDisplacementThreshold: this._restDisplacementThreshold,
        restSpeedThreshold: this._restSpeedThreshold,
        stiffness: this._stiffness,
        damping: this._damping,
        mass: this._mass,
        initialVelocity: withDefault(this._initialVelocity, this._lastVelocity),
        toValue: this._toValue,
        iterations: this.__iterations
      };
    }
  }, {
    key: 'start',
    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {
      var _this2 = this;

      this.__active = true;
      this._startPosition = fromValue;
      this._lastPosition = this._startPosition;

      this._onUpdate = onUpdate;
      this.__onEnd = onEnd;
      this._lastTime = Date.now();
      this._frameTime = 0.0;

      if (previousAnimation instanceof SpringAnimation) {
        var internalState = previousAnimation.getInternalState();
        this._lastPosition = internalState.lastPosition;
        this._lastVelocity = internalState.lastVelocity;

        this._initialVelocity = this._lastVelocity;
        this._lastTime = internalState.lastTime;
      }

      var start = function start() {
        if (_this2._useNativeDriver) {
          _this2.__startNativeAnimation(animatedValue);
        } else {
          _this2.onUpdate();
        }
      };

      if (this._delay) {
        this._timeout = setTimeout(start, this._delay);
      } else {
        start();
      }
    }
  }, {
    key: 'getInternalState',
    value: function getInternalState() {
      return {
        lastPosition: this._lastPosition,
        lastVelocity: this._lastVelocity,
        lastTime: this._lastTime
      };
    }
  }, {
    key: 'onUpdate',
    value: function onUpdate() {
      var MAX_STEPS = 64;
      var now = Date.now();
      if (now > this._lastTime + MAX_STEPS) {
        now = this._lastTime + MAX_STEPS;
      }

      var deltaTime = (now - this._lastTime) / 1000;
      this._frameTime += deltaTime;

      var c = this._damping;
      var m = this._mass;
      var k = this._stiffness;
      var v0 = -this._initialVelocity;

      var zeta = c / (2 * Math.sqrt(k * m));
      var omega0 = Math.sqrt(k / m);
      var omega1 = omega0 * Math.sqrt(1.0 - zeta * zeta);
      var x0 = this._toValue - this._startPosition;

      var position = 0.0;
      var velocity = 0.0;
      var t = this._frameTime;
      if (zeta < 1) {
        var envelope = Math.exp(-zeta * omega0 * t);
        position = this._toValue - envelope * ((v0 + zeta * omega0 * x0) / omega1 * Math.sin(omega1 * t) + x0 * Math.cos(omega1 * t));

        velocity = zeta * omega0 * envelope * (Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0) / omega1 + x0 * Math.cos(omega1 * t)) - envelope * (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) - omega1 * x0 * Math.sin(omega1 * t));
      } else {
        var _envelope = Math.exp(-omega0 * t);
        position = this._toValue - _envelope * (x0 + (v0 + omega0 * x0) * t);
        velocity = _envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));
      }

      this._lastTime = now;
      this._lastPosition = position;
      this._lastVelocity = velocity;

      this._onUpdate(position);
      if (!this.__active) {
        return;
      }

      var isOvershooting = false;
      if (this._overshootClamping && this._stiffness !== 0) {
        if (this._startPosition < this._toValue) {
          isOvershooting = position > this._toValue;
        } else {
          isOvershooting = position < this._toValue;
        }
      }
      var isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;
      var isDisplacement = true;
      if (this._stiffness !== 0) {
        isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;
      }

      if (isOvershooting || isVelocity && isDisplacement) {
        if (this._stiffness !== 0) {
          this._lastPosition = this._toValue;
          this._lastVelocity = 0;
          this._onUpdate(this._toValue);
        }

        this.__debouncedOnEnd({ finished: true });
        return;
      }
      this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
    }
  }, {
    key: 'stop',
    value: function stop() {
      babelHelpers.get(SpringAnimation.prototype.__proto__ || Object.getPrototypeOf(SpringAnimation.prototype), 'stop', this).call(this);
      this.__active = false;
      clearTimeout(this._timeout);
      global.cancelAnimationFrame(this._animationFrame);
      this.__debouncedOnEnd({ finished: false });
    }
  }]);
  return SpringAnimation;
}(Animation);

module.exports = SpringAnimation;
}, 215, null, "SpringAnimation");
__d(/* SpringConfig */function(global, require, module, exports) {

'use strict';

function stiffnessFromOrigamiValue(oValue) {
  return (oValue - 30) * 3.62 + 194;
}

function dampingFromOrigamiValue(oValue) {
  return (oValue - 8) * 3 + 25;
}

function fromOrigamiTensionAndFriction(tension, friction) {
  return {
    stiffness: stiffnessFromOrigamiValue(tension),
    damping: dampingFromOrigamiValue(friction)
  };
}

function fromBouncinessAndSpeed(bounciness, speed) {
  function normalize(value, startValue, endValue) {
    return (value - startValue) / (endValue - startValue);
  }

  function projectNormal(n, start, end) {
    return start + n * (end - start);
  }

  function linearInterpolation(t, start, end) {
    return t * end + (1 - t) * start;
  }

  function quadraticOutInterpolation(t, start, end) {
    return linearInterpolation(2 * t - t * t, start, end);
  }

  function b3Friction1(x) {
    return 0.0007 * Math.pow(x, 3) - 0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;
  }

  function b3Friction2(x) {
    return 0.000044 * Math.pow(x, 3) - 0.006 * Math.pow(x, 2) + 0.36 * x + 2;
  }

  function b3Friction3(x) {
    return 0.00000045 * Math.pow(x, 3) - 0.000332 * Math.pow(x, 2) + 0.1078 * x + 5.84;
  }

  function b3Nobounce(tension) {
    if (tension <= 18) {
      return b3Friction1(tension);
    } else if (tension > 18 && tension <= 44) {
      return b3Friction2(tension);
    } else {
      return b3Friction3(tension);
    }
  }

  var b = normalize(bounciness / 1.7, 0, 20);
  b = projectNormal(b, 0, 0.8);
  var s = normalize(speed / 1.7, 0, 20);
  var bouncyTension = projectNormal(s, 0.5, 200);
  var bouncyFriction = quadraticOutInterpolation(b, b3Nobounce(bouncyTension), 0.01);

  return {
    stiffness: stiffnessFromOrigamiValue(bouncyTension),
    damping: dampingFromOrigamiValue(bouncyFriction)
  };
}

module.exports = {
  fromOrigamiTensionAndFriction: fromOrigamiTensionAndFriction,
  fromBouncinessAndSpeed: fromBouncinessAndSpeed
};
}, 216, null, "SpringConfig");
__d(/* TimingAnimation */function(global, require, module, exports) {
'use strict';

var AnimatedValue = require(196                     ); // 196 = ../nodes/AnimatedValue
var AnimatedValueXY = require(212                       ); // 212 = ../nodes/AnimatedValueXY
var Animation = require(214          ); // 214 = ./Animation

var _require = require(199                      ), // 199 = ../NativeAnimatedHelper
    shouldUseNativeDriver = _require.shouldUseNativeDriver;

var _easeInOut = void 0;
function easeInOut() {
  if (!_easeInOut) {
    var Easing = require(218     ); // 218 = Easing
    _easeInOut = Easing.inOut(Easing.ease);
  }
  return _easeInOut;
}

var TimingAnimation = function (_Animation) {
  babelHelpers.inherits(TimingAnimation, _Animation);

  function TimingAnimation(config) {
    babelHelpers.classCallCheck(this, TimingAnimation);

    var _this = babelHelpers.possibleConstructorReturn(this, (TimingAnimation.__proto__ || Object.getPrototypeOf(TimingAnimation)).call(this));

    _this._toValue = config.toValue;
    _this._easing = config.easing !== undefined ? config.easing : easeInOut();
    _this._duration = config.duration !== undefined ? config.duration : 500;
    _this._delay = config.delay !== undefined ? config.delay : 0;
    _this.__iterations = config.iterations !== undefined ? config.iterations : 1;
    _this.__isInteraction = config.isInteraction !== undefined ? config.isInteraction : true;
    _this._useNativeDriver = shouldUseNativeDriver(config);
    return _this;
  }

  babelHelpers.createClass(TimingAnimation, [{
    key: '__getNativeAnimationConfig',
    value: function __getNativeAnimationConfig() {
      var frameDuration = 1000.0 / 60.0;
      var frames = [];
      for (var dt = 0.0; dt < this._duration; dt += frameDuration) {
        frames.push(this._easing(dt / this._duration));
      }
      frames.push(this._easing(1));
      return {
        type: 'frames',
        frames: frames,
        toValue: this._toValue,
        iterations: this.__iterations
      };
    }
  }, {
    key: 'start',
    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {
      var _this2 = this;

      this.__active = true;
      this._fromValue = fromValue;
      this._onUpdate = onUpdate;
      this.__onEnd = onEnd;

      var start = function start() {
        if (_this2._duration === 0 && !_this2._useNativeDriver) {
          _this2._onUpdate(_this2._toValue);
          _this2.__debouncedOnEnd({ finished: true });
        } else {
          _this2._startTime = Date.now();
          if (_this2._useNativeDriver) {
            _this2.__startNativeAnimation(animatedValue);
          } else {
            _this2._animationFrame = requestAnimationFrame(_this2.onUpdate.bind(_this2));
          }
        }
      };
      if (this._delay) {
        this._timeout = setTimeout(start, this._delay);
      } else {
        start();
      }
    }
  }, {
    key: 'onUpdate',
    value: function onUpdate() {
      var now = Date.now();
      if (now >= this._startTime + this._duration) {
        if (this._duration === 0) {
          this._onUpdate(this._toValue);
        } else {
          this._onUpdate(this._fromValue + this._easing(1) * (this._toValue - this._fromValue));
        }
        this.__debouncedOnEnd({ finished: true });
        return;
      }

      this._onUpdate(this._fromValue + this._easing((now - this._startTime) / this._duration) * (this._toValue - this._fromValue));
      if (this.__active) {
        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
      }
    }
  }, {
    key: 'stop',
    value: function stop() {
      babelHelpers.get(TimingAnimation.prototype.__proto__ || Object.getPrototypeOf(TimingAnimation.prototype), 'stop', this).call(this);
      this.__active = false;
      clearTimeout(this._timeout);
      global.cancelAnimationFrame(this._animationFrame);
      this.__debouncedOnEnd({ finished: false });
    }
  }]);
  return TimingAnimation;
}(Animation);

module.exports = TimingAnimation;
}, 217, null, "TimingAnimation");
__d(/* Easing */function(global, require, module, exports) {
'use strict';

var _ease = void 0;

var Easing = function () {
  function Easing() {
    babelHelpers.classCallCheck(this, Easing);
  }

  babelHelpers.createClass(Easing, null, [{
    key: 'step0',
    value: function step0(n) {
      return n > 0 ? 1 : 0;
    }
  }, {
    key: 'step1',
    value: function step1(n) {
      return n >= 1 ? 1 : 0;
    }
  }, {
    key: 'linear',
    value: function linear(t) {
      return t;
    }
  }, {
    key: 'ease',
    value: function ease(t) {
      if (!_ease) {
        _ease = Easing.bezier(0.42, 0, 1, 1);
      }
      return _ease(t);
    }
  }, {
    key: 'quad',
    value: function quad(t) {
      return t * t;
    }
  }, {
    key: 'cubic',
    value: function cubic(t) {
      return t * t * t;
    }
  }, {
    key: 'poly',
    value: function poly(n) {
      return function (t) {
        return Math.pow(t, n);
      };
    }
  }, {
    key: 'sin',
    value: function sin(t) {
      return 1 - Math.cos(t * Math.PI / 2);
    }
  }, {
    key: 'circle',
    value: function circle(t) {
      return 1 - Math.sqrt(1 - t * t);
    }
  }, {
    key: 'exp',
    value: function exp(t) {
      return Math.pow(2, 10 * (t - 1));
    }
  }, {
    key: 'elastic',
    value: function elastic() {
      var bounciness = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

      var p = bounciness * Math.PI;
      return function (t) {
        return 1 - Math.pow(Math.cos(t * Math.PI / 2), 3) * Math.cos(t * p);
      };
    }
  }, {
    key: 'back',
    value: function back(s) {
      if (s === undefined) {
        s = 1.70158;
      }
      return function (t) {
        return t * t * ((s + 1) * t - s);
      };
    }
  }, {
    key: 'bounce',
    value: function bounce(t) {
      if (t < 1 / 2.75) {
        return 7.5625 * t * t;
      }

      if (t < 2 / 2.75) {
        t -= 1.5 / 2.75;
        return 7.5625 * t * t + 0.75;
      }

      if (t < 2.5 / 2.75) {
        t -= 2.25 / 2.75;
        return 7.5625 * t * t + 0.9375;
      }

      t -= 2.625 / 2.75;
      return 7.5625 * t * t + 0.984375;
    }
  }, {
    key: 'bezier',
    value: function bezier(x1, y1, x2, y2) {
      var _bezier = require(219     ); // 219 = bezier
      return _bezier(x1, y1, x2, y2);
    }
  }, {
    key: 'in',
    value: function _in(easing) {
      return easing;
    }
  }, {
    key: 'out',
    value: function out(easing) {
      return function (t) {
        return 1 - easing(1 - t);
      };
    }
  }, {
    key: 'inOut',
    value: function inOut(easing) {
      return function (t) {
        if (t < 0.5) {
          return easing(t * 2) / 2;
        }
        return 1 - easing((1 - t) * 2) / 2;
      };
    }
  }]);
  return Easing;
}();

module.exports = Easing;
}, 218, null, "Easing");
__d(/* bezier */function(global, require, module, exports) {
'use strict';

var NEWTON_ITERATIONS = 4;
var NEWTON_MIN_SLOPE = 0.001;
var SUBDIVISION_PRECISION = 0.0000001;
var SUBDIVISION_MAX_ITERATIONS = 10;

var kSplineTableSize = 11;
var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);

var float32ArraySupported = typeof Float32Array === 'function';

function A(aA1, aA2) {
  return 1.0 - 3.0 * aA2 + 3.0 * aA1;
}
function B(aA1, aA2) {
  return 3.0 * aA2 - 6.0 * aA1;
}
function C(aA1) {
  return 3.0 * aA1;
}

function calcBezier(aT, aA1, aA2) {
  return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;
}

function getSlope(aT, aA1, aA2) {
  return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);
}

function binarySubdivide(aX, aA, aB, mX1, mX2) {
  var currentX,
      currentT,
      i = 0;
  do {
    currentT = aA + (aB - aA) / 2.0;
    currentX = calcBezier(currentT, mX1, mX2) - aX;
    if (currentX > 0.0) {
      aB = currentT;
    } else {
      aA = currentT;
    }
  } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);
  return currentT;
}

function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
  for (var i = 0; i < NEWTON_ITERATIONS; ++i) {
    var currentSlope = getSlope(aGuessT, mX1, mX2);
    if (currentSlope === 0.0) {
      return aGuessT;
    }
    var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
    aGuessT -= currentX / currentSlope;
  }
  return aGuessT;
}

module.exports = function bezier(mX1, mY1, mX2, mY2) {
  if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {
    throw new Error('bezier x values must be in [0, 1] range');
  }

  var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);
  if (mX1 !== mY1 || mX2 !== mY2) {
    for (var i = 0; i < kSplineTableSize; ++i) {
      sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
    }
  }

  function getTForX(aX) {
    var intervalStart = 0.0;
    var currentSample = 1;
    var lastSample = kSplineTableSize - 1;

    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {
      intervalStart += kSampleStepSize;
    }
    --currentSample;

    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);
    var guessForT = intervalStart + dist * kSampleStepSize;

    var initialSlope = getSlope(guessForT, mX1, mX2);
    if (initialSlope >= NEWTON_MIN_SLOPE) {
      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
    } else if (initialSlope === 0.0) {
      return guessForT;
    } else {
      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
    }
  }

  return function BezierEasing(x) {
    if (mX1 === mY1 && mX2 === mY2) {
      return x;
    }

    if (x === 0) {
      return 0;
    }
    if (x === 1) {
      return 1;
    }
    return calcBezier(getTForX(x), mY1, mY2);
  };
};
}, 219, null, "bezier");
__d(/* createAnimatedComponent */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Animated/src/createAnimatedComponent.js';

var _require = require(195              ), // 195 = ./AnimatedEvent
    AnimatedEvent = _require.AnimatedEvent;

var AnimatedProps = require(208                    ); // 208 = ./nodes/AnimatedProps
var React = require(129    ); // 129 = React
var ViewStylePropTypes = require(138                 ); // 138 = ViewStylePropTypes

function createAnimatedComponent(Component) {
  var AnimatedComponent = function (_React$Component) {
    babelHelpers.inherits(AnimatedComponent, _React$Component);

    function AnimatedComponent(props) {
      babelHelpers.classCallCheck(this, AnimatedComponent);

      var _this = babelHelpers.possibleConstructorReturn(this, (AnimatedComponent.__proto__ || Object.getPrototypeOf(AnimatedComponent)).call(this, props));

      _this._eventDetachers = [];

      _this._setComponentRef = _this._setComponentRef.bind(_this);
      return _this;
    }

    babelHelpers.createClass(AnimatedComponent, [{
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        this._propsAnimated && this._propsAnimated.__detach();
        this._detachNativeEvents();
      }
    }, {
      key: 'setNativeProps',
      value: function setNativeProps(props) {
        this._component.setNativeProps(props);
      }
    }, {
      key: 'componentWillMount',
      value: function componentWillMount() {
        this._attachProps(this.props);
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        this._propsAnimated.setNativeView(this._component);
        this._attachNativeEvents();
      }
    }, {
      key: '_attachNativeEvents',
      value: function _attachNativeEvents() {
        var _this2 = this;

        var scrollableNode = this._component.getScrollableNode ? this._component.getScrollableNode() : this._component;

        var _loop = function _loop(key) {
          var prop = _this2.props[key];
          if (prop instanceof AnimatedEvent && prop.__isNative) {
            prop.__attach(scrollableNode, key);
            _this2._eventDetachers.push(function () {
              return prop.__detach(scrollableNode, key);
            });
          }
        };

        for (var key in this.props) {
          _loop(key);
        }
      }
    }, {
      key: '_detachNativeEvents',
      value: function _detachNativeEvents() {
        this._eventDetachers.forEach(function (remove) {
          return remove();
        });
        this._eventDetachers = [];
      }
    }, {
      key: '_attachProps',
      value: function _attachProps(nextProps) {
        var _this3 = this;

        var oldPropsAnimated = this._propsAnimated;

        var callback = function callback() {
          if (!AnimatedComponent.__skipSetNativeProps_FOR_TESTS_ONLY && _this3._component.setNativeProps) {
            if (!_this3._propsAnimated.__isNative) {
              _this3._component.setNativeProps(_this3._propsAnimated.__getAnimatedValue());
            } else {
              throw new Error('Attempting to run JS driven animation on animated ' + 'node that has been moved to "native" earlier by starting an ' + 'animation with `useNativeDriver: true`');
            }
          } else {
            _this3.forceUpdate();
          }
        };

        this._propsAnimated = new AnimatedProps(nextProps, callback);

        oldPropsAnimated && oldPropsAnimated.__detach();
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(newProps) {
        this._attachProps(newProps);
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate(prevProps) {
        if (this._component !== this._prevComponent) {
          this._propsAnimated.setNativeView(this._component);
        }
        if (this._component !== this._prevComponent || prevProps !== this.props) {
          this._detachNativeEvents();
          this._attachNativeEvents();
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var props = this._propsAnimated.__getValue();
        return React.createElement(Component, babelHelpers.extends({}, props, {
          ref: this._setComponentRef,

          collapsable: this._propsAnimated.__isNative ? false : props.collapsable,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 134
          }
        }));
      }
    }, {
      key: '_setComponentRef',
      value: function _setComponentRef(c) {
        this._prevComponent = this._component;
        this._component = c;
      }
    }, {
      key: 'getNode',
      value: function getNode() {
        return this._component;
      }
    }]);
    return AnimatedComponent;
  }(React.Component);

  AnimatedComponent.__skipSetNativeProps_FOR_TESTS_ONLY = false;

  var propTypes = Component.__propTypesSecretDontUseThesePlease || Component.propTypes;

  AnimatedComponent.propTypes = {
    style: function style(props, propName, componentName) {
      if (!propTypes) {
        return;
      }

      for (var key in ViewStylePropTypes) {
        if (!propTypes[key] && props[key] !== undefined) {
          console.warn('You are setting the style `{ ' + key + ': ... }` as a prop. You ' + 'should nest it in a style object. ' + 'E.g. `{ style: { ' + key + ': ... } }`');
        }
      }
    }
  };

  return AnimatedComponent;
}

module.exports = createAnimatedComponent;
}, 220, null, "createAnimatedComponent");
__d(/* Image */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Image/Image.android.js';
var ImageResizeMode = require(148              ); // 148 = ImageResizeMode
var ImageStylePropTypes = require(147                  ); // 147 = ImageStylePropTypes
var NativeMethodsMixin = require(124                 ); // 124 = NativeMethodsMixin
var NativeModules = require(15             ); // 15 = NativeModules
var React = require(129    ); // 129 = React
var PropTypes = require(126         ); // 126 = prop-types
var ReactNativeViewAttributes = require(170                        ); // 170 = ReactNativeViewAttributes
var Set = require(58   ); // 58 = Set
var StyleSheet = require(167         ); // 167 = StyleSheet
var StyleSheetPropType = require(137                 ); // 137 = StyleSheetPropType
var View = require(169   ); // 169 = View
var ViewPropTypes = require(130            ); // 130 = ViewPropTypes
var ViewStylePropTypes = require(138                 ); // 138 = ViewStylePropTypes

var createReactClass = require(171                 ); // 171 = create-react-class
var filterObject = require(222                    ); // 222 = fbjs/lib/filterObject
var flattenStyle = require(43            ); // 43 = flattenStyle
var merge = require(133    ); // 133 = merge
var requireNativeComponent = require(144                     ); // 144 = requireNativeComponent
var resolveAssetSource = require(159                 ); // 159 = resolveAssetSource

var ImageLoader = NativeModules.ImageLoader;


var _requestId = 1;
function generateRequestId() {
  return _requestId++;
}

var ImageViewAttributes = merge(ReactNativeViewAttributes.UIView, {
  src: true,
  loadingIndicatorSrc: true,
  resizeMethod: true,
  resizeMode: true,
  progressiveRenderingEnabled: true,
  fadeDuration: true,
  shouldNotifyLoadEvents: true
});

var ViewStyleKeys = new Set(Object.keys(ViewStylePropTypes));
var ImageSpecificStyleKeys = new Set(Object.keys(ImageStylePropTypes).filter(function (x) {
  return !ViewStyleKeys.has(x);
}));

var Image = createReactClass({
  displayName: 'Image',
  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    style: StyleSheetPropType(ImageStylePropTypes),

    source: PropTypes.oneOfType([PropTypes.shape({
      uri: PropTypes.string,
      headers: PropTypes.objectOf(PropTypes.string)
    }), PropTypes.number, PropTypes.arrayOf(PropTypes.shape({
      uri: PropTypes.string,
      width: PropTypes.number,
      height: PropTypes.number,
      headers: PropTypes.objectOf(PropTypes.string)
    }))]),

    blurRadius: PropTypes.number,

    loadingIndicatorSource: PropTypes.oneOfType([PropTypes.shape({
      uri: PropTypes.string
    }), PropTypes.number]),
    progressiveRenderingEnabled: PropTypes.bool,
    fadeDuration: PropTypes.number,

    onLoadStart: PropTypes.func,

    onError: PropTypes.func,

    onLoad: PropTypes.func,

    onLoadEnd: PropTypes.func,

    testID: PropTypes.string,

    resizeMethod: PropTypes.oneOf(['auto', 'resize', 'scale']),

    resizeMode: PropTypes.oneOf(['cover', 'contain', 'stretch', 'center'])
  }),

  statics: {
    resizeMode: ImageResizeMode,

    getSize: function getSize(url, success, failure) {
      return ImageLoader.getSize(url).then(function (sizes) {
        success(sizes.width, sizes.height);
      }).catch(failure || function () {
        console.warn('Failed to get size for image: ' + url);
      });
    },
    prefetch: function prefetch(url, callback) {
      var requestId = generateRequestId();
      callback && callback(requestId);
      return ImageLoader.prefetchImage(url, requestId);
    },
    abortPrefetch: function abortPrefetch(requestId) {
      ImageLoader.abortRequest(requestId);
    },
    queryCache: function queryCache(urls) {
      return regeneratorRuntime.async(function queryCache$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return regeneratorRuntime.awrap(ImageLoader.queryCache(urls));

            case 2:
              return _context.abrupt('return', _context.sent);

            case 3:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this);
    },

    resolveAssetSource: resolveAssetSource
  },

  mixins: [NativeMethodsMixin],

  viewConfig: {
    uiViewClassName: 'RCTView',
    validAttributes: ReactNativeViewAttributes.RCTView
  },

  contextTypes: {
    isInAParentText: PropTypes.bool
  },

  render: function render() {
    var source = resolveAssetSource(this.props.source);
    var loadingIndicatorSource = resolveAssetSource(this.props.loadingIndicatorSource);

    if (source && source.uri === '') {
      console.warn('source.uri should not be an empty string');
    }

    if (this.props.src) {
      console.warn('The <Image> component requires a `source` property rather than `src`.');
    }

    if (this.props.children) {
      throw new Error('The <Image> component cannot contain children. If you want to render content on top of the image, consider using aboslute positioning.');
    }

    if (source && (source.uri || Array.isArray(source))) {
      var style = void 0;
      var sources = void 0;
      if (source.uri) {
        var _width = source.width,
            _height = source.height;

        style = flattenStyle([{ width: _width, height: _height }, styles.base, this.props.style]);
        sources = [{ uri: source.uri }];
      } else {
        style = flattenStyle([styles.base, this.props.style]);
        sources = source;
      }

      var _props = this.props,
          onLoadStart = _props.onLoadStart,
          onLoad = _props.onLoad,
          onLoadEnd = _props.onLoadEnd,
          onError = _props.onError;

      var nativeProps = merge(this.props, {
        style: style,
        shouldNotifyLoadEvents: !!(onLoadStart || onLoad || onLoadEnd || onError),
        src: sources,
        headers: source.headers,
        loadingIndicatorSrc: loadingIndicatorSource ? loadingIndicatorSource.uri : null
      });

      if (this.context.isInAParentText) {
        return React.createElement(RCTTextInlineImage, babelHelpers.extends({}, nativeProps, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 302
          }
        }));
      } else {
        return React.createElement(RKImage, babelHelpers.extends({}, nativeProps, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 304
          }
        }));
      }
    }
    return null;
  }
});

var styles = StyleSheet.create({
  base: {
    overflow: 'hidden'
  }
});

var cfg = {
  nativeOnly: {
    src: true,
    headers: true,
    loadingIndicatorSrc: true,
    shouldNotifyLoadEvents: true
  }
};
var RKImage = requireNativeComponent('RCTImageView', Image, cfg);
var RCTTextInlineImage = requireNativeComponent('RCTTextInlineImage', Image, cfg);

module.exports = Image;
}, 221, null, "Image");
__d(/* fbjs/lib/filterObject.js */function(global, require, module, exports) {

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

function filterObject(object, callback, context) {
  if (!object) {
    return null;
  }
  var result = {};
  for (var name in object) {
    if (hasOwnProperty.call(object, name) && callback.call(context, object[name], name, object)) {
      result[name] = object[name];
    }
  }
  return result;
}

module.exports = filterObject;
}, 222, null, "fbjs/lib/filterObject.js");
__d(/* ScrollView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.js';
var Animated = require(193       ); // 193 = Animated
var ColorPropType = require(122            ); // 122 = ColorPropType
var EdgeInsetsPropType = require(131                 ); // 131 = EdgeInsetsPropType
var Platform = require(46        ); // 46 = Platform
var PointPropType = require(224            ); // 224 = PointPropType
var PropTypes = require(126         ); // 126 = prop-types
var React = require(129    ); // 129 = React
var ReactNative = require(21           ); // 21 = ReactNative
var ScrollResponder = require(225              ); // 225 = ScrollResponder
var ScrollViewStickyHeader = require(232                     ); // 232 = ScrollViewStickyHeader
var StyleSheet = require(167         ); // 167 = StyleSheet
var StyleSheetPropType = require(137                 ); // 137 = StyleSheetPropType
var View = require(169   ); // 169 = View
var ViewPropTypes = require(130            ); // 130 = ViewPropTypes
var ViewStylePropTypes = require(138                 ); // 138 = ViewStylePropTypes

var createReactClass = require(171                 ); // 171 = create-react-class
var dismissKeyboard = require(228              ); // 228 = dismissKeyboard
var flattenStyle = require(43            ); // 43 = flattenStyle
var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var processDecelerationRate = require(233                      ); // 233 = processDecelerationRate
var requireNativeComponent = require(144                     ); // 144 = requireNativeComponent

var warning = require(23                ); // 23 = fbjs/lib/warning

var ScrollView = createReactClass({
  displayName: 'ScrollView',
  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    automaticallyAdjustContentInsets: PropTypes.bool,

    contentInset: EdgeInsetsPropType,

    contentOffset: PointPropType,

    bounces: PropTypes.bool,

    bouncesZoom: PropTypes.bool,

    alwaysBounceHorizontal: PropTypes.bool,

    alwaysBounceVertical: PropTypes.bool,

    centerContent: PropTypes.bool,

    contentContainerStyle: StyleSheetPropType(ViewStylePropTypes),

    decelerationRate: PropTypes.oneOfType([PropTypes.oneOf(['fast', 'normal']), PropTypes.number]),

    horizontal: PropTypes.bool,

    indicatorStyle: PropTypes.oneOf(['default', 'black', 'white']),

    directionalLockEnabled: PropTypes.bool,

    canCancelContentTouches: PropTypes.bool,

    keyboardDismissMode: PropTypes.oneOf(['none', 'on-drag', 'interactive']),

    keyboardShouldPersistTaps: PropTypes.oneOf(['always', 'never', 'handled', false, true]),

    maximumZoomScale: PropTypes.number,

    minimumZoomScale: PropTypes.number,

    onMomentumScrollBegin: PropTypes.func,

    onMomentumScrollEnd: PropTypes.func,

    onScroll: PropTypes.func,

    onContentSizeChange: PropTypes.func,

    pagingEnabled: PropTypes.bool,

    pinchGestureEnabled: PropTypes.bool,

    scrollEnabled: PropTypes.bool,

    scrollEventThrottle: PropTypes.number,

    scrollIndicatorInsets: EdgeInsetsPropType,

    scrollsToTop: PropTypes.bool,

    showsHorizontalScrollIndicator: PropTypes.bool,

    showsVerticalScrollIndicator: PropTypes.bool,

    stickyHeaderIndices: PropTypes.arrayOf(PropTypes.number),
    style: StyleSheetPropType(ViewStylePropTypes),

    snapToInterval: PropTypes.number,

    snapToAlignment: PropTypes.oneOf(['start', 'center', 'end']),

    removeClippedSubviews: PropTypes.bool,

    zoomScale: PropTypes.number,

    contentInsetAdjustmentBehavior: PropTypes.oneOf(['automatic', 'scrollableAxes', 'never', 'always']),

    refreshControl: PropTypes.element,

    endFillColor: ColorPropType,

    scrollPerfTag: PropTypes.string,

    overScrollMode: PropTypes.oneOf(['auto', 'always', 'never']),

    DEPRECATED_sendUpdatedChildFrames: PropTypes.bool
  }),

  mixins: [ScrollResponder.Mixin],

  _scrollAnimatedValue: new Animated.Value(0),
  _scrollAnimatedValueAttachment: null,
  _stickyHeaderRefs: new Map(),
  _headerLayoutYs: new Map(),
  getInitialState: function getInitialState() {
    return this.scrollResponderMixinGetInitialState();
  },

  componentWillMount: function componentWillMount() {
    this._scrollAnimatedValue = new Animated.Value(0);
    this._stickyHeaderRefs = new Map();
    this._headerLayoutYs = new Map();
  },

  componentDidMount: function componentDidMount() {
    this._updateAnimatedNodeAttachment();
  },

  componentDidUpdate: function componentDidUpdate() {
    this._updateAnimatedNodeAttachment();
  },

  componentWillUnmount: function componentWillUnmount() {
    if (this._scrollAnimatedValueAttachment) {
      this._scrollAnimatedValueAttachment.detach();
    }
  },

  setNativeProps: function setNativeProps(props) {
    this._scrollViewRef && this._scrollViewRef.setNativeProps(props);
  },

  getScrollResponder: function getScrollResponder() {
    return this;
  },

  getScrollableNode: function getScrollableNode() {
    return ReactNative.findNodeHandle(this._scrollViewRef);
  },

  getInnerViewNode: function getInnerViewNode() {
    return ReactNative.findNodeHandle(this._innerViewRef);
  },

  scrollTo: function scrollTo(y, x, animated) {
    if (typeof y === 'number') {
      console.warn('`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, ' + 'animated: true})` instead.');
    } else {
      var _ref = y || {};

      x = _ref.x;
      y = _ref.y;
      animated = _ref.animated;
    }
    this.getScrollResponder().scrollResponderScrollTo({ x: x || 0, y: y || 0, animated: animated !== false });
  },

  scrollToEnd: function scrollToEnd(options) {
    var animated = (options && options.animated) !== false;
    this.getScrollResponder().scrollResponderScrollToEnd({
      animated: animated
    });
  },

  scrollWithoutAnimationTo: function scrollWithoutAnimationTo() {
    var y = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    var x = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

    console.warn('`scrollWithoutAnimationTo` is deprecated. Use `scrollTo` instead');
    this.scrollTo({ x: x, y: y, animated: false });
  },

  flashScrollIndicators: function flashScrollIndicators() {
    this.getScrollResponder().scrollResponderFlashScrollIndicators();
  },

  _getKeyForIndex: function _getKeyForIndex(index, childArray) {
    var child = childArray[index];
    return child && child.key;
  },

  _updateAnimatedNodeAttachment: function _updateAnimatedNodeAttachment() {
    if (this._scrollAnimatedValueAttachment) {
      this._scrollAnimatedValueAttachment.detach();
    }
    if (this.props.stickyHeaderIndices && this.props.stickyHeaderIndices.length > 0) {
      this._scrollAnimatedValueAttachment = Animated.attachNativeEvent(this._scrollViewRef, 'onScroll', [{ nativeEvent: { contentOffset: { y: this._scrollAnimatedValue } } }]);
    }
  },

  _setStickyHeaderRef: function _setStickyHeaderRef(key, ref) {
    if (ref) {
      this._stickyHeaderRefs.set(key, ref);
    } else {
      this._stickyHeaderRefs.delete(key);
    }
  },

  _onStickyHeaderLayout: function _onStickyHeaderLayout(index, event, key) {
    if (!this.props.stickyHeaderIndices) {
      return;
    }

    var childArray = React.Children.toArray(this.props.children);
    if (key !== this._getKeyForIndex(index, childArray)) {
      return;
    }

    var layoutY = event.nativeEvent.layout.y;
    this._headerLayoutYs.set(key, layoutY);

    var indexOfIndex = this.props.stickyHeaderIndices.indexOf(index);

    var previousHeaderIndex = this.props.stickyHeaderIndices[indexOfIndex - 1];
    if (previousHeaderIndex != null) {
      var previousHeader = this._stickyHeaderRefs.get(this._getKeyForIndex(previousHeaderIndex, childArray));
      previousHeader && previousHeader.setNextHeaderY(layoutY);
    }
  },

  _handleScroll: function _handleScroll(e) {
    if (__DEV__) {
      if (this.props.onScroll && this.props.scrollEventThrottle == null && Platform.OS === 'ios') {
        console.log('You specified `onScroll` on a <ScrollView> but not ' + '`scrollEventThrottle`. You will only receive one event. ' + 'Using `16` you get all the events but be aware that it may ' + 'cause frame drops, use a bigger number if you don\'t need as ' + 'much precision.');
      }
    }
    if (Platform.OS === 'android') {
      if (this.props.keyboardDismissMode === 'on-drag') {
        dismissKeyboard();
      }
    }
    this.scrollResponderHandleScroll(e);
  },

  _handleContentOnLayout: function _handleContentOnLayout(e) {
    var _e$nativeEvent$layout = e.nativeEvent.layout,
        width = _e$nativeEvent$layout.width,
        height = _e$nativeEvent$layout.height;

    this.props.onContentSizeChange && this.props.onContentSizeChange(width, height);
  },

  _scrollViewRef: null,
  _setScrollViewRef: function _setScrollViewRef(ref) {
    this._scrollViewRef = ref;
  },

  _innerViewRef: null,
  _setInnerViewRef: function _setInnerViewRef(ref) {
    this._innerViewRef = ref;
  },

  render: function render() {
    var _this = this;

    var ScrollViewClass = void 0;
    var ScrollContentContainerViewClass = void 0;
    if (Platform.OS === 'ios') {
      ScrollViewClass = RCTScrollView;
      ScrollContentContainerViewClass = RCTScrollContentView;
      warning(!this.props.snapToInterval || !this.props.pagingEnabled, 'snapToInterval is currently ignored when pagingEnabled is true.');
    } else if (Platform.OS === 'android') {
      if (this.props.horizontal) {
        ScrollViewClass = AndroidHorizontalScrollView;
        ScrollContentContainerViewClass = AndroidHorizontalScrollContentView;
      } else {
        ScrollViewClass = AndroidScrollView;
        ScrollContentContainerViewClass = View;
      }
    }

    invariant(ScrollViewClass !== undefined, 'ScrollViewClass must not be undefined');

    invariant(ScrollContentContainerViewClass !== undefined, 'ScrollContentContainerViewClass must not be undefined');

    var contentContainerStyle = [this.props.horizontal && styles.contentContainerHorizontal, this.props.contentContainerStyle];
    var style = void 0,
        childLayoutProps = void 0;
    if (__DEV__ && this.props.style) {
      style = flattenStyle(this.props.style);
      childLayoutProps = ['alignItems', 'justifyContent'].filter(function (prop) {
        return style && style[prop] !== undefined;
      });
      invariant(childLayoutProps.length === 0, 'ScrollView child layout (' + JSON.stringify(childLayoutProps) + ') must be applied through the contentContainerStyle prop.');
    }

    var contentSizeChangeProps = {};
    if (this.props.onContentSizeChange) {
      contentSizeChangeProps = {
        onLayout: this._handleContentOnLayout
      };
    }

    var stickyHeaderIndices = this.props.stickyHeaderIndices;

    var hasStickyHeaders = stickyHeaderIndices && stickyHeaderIndices.length > 0;

    var childArray = hasStickyHeaders && React.Children.toArray(this.props.children);
    var children = hasStickyHeaders ? childArray.map(function (child, index) {
      var indexOfIndex = child ? stickyHeaderIndices.indexOf(index) : -1;
      if (indexOfIndex > -1) {
        var key = child.key;

        var nextIndex = stickyHeaderIndices[indexOfIndex + 1];
        return React.createElement(
          ScrollViewStickyHeader,
          {
            key: key,
            ref: function ref(_ref2) {
              return _this._setStickyHeaderRef(key, _ref2);
            },
            nextHeaderLayoutY: _this._headerLayoutYs.get(_this._getKeyForIndex(nextIndex, childArray)),
            onLayout: function onLayout(event) {
              return _this._onStickyHeaderLayout(index, event, key);
            },
            scrollAnimatedValue: _this._scrollAnimatedValue, __source: {
              fileName: _jsxFileName,
              lineNumber: 724
            }
          },
          child
        );
      } else {
        return child;
      }
    }) : this.props.children;
    var contentContainer = React.createElement(
      ScrollContentContainerViewClass,
      babelHelpers.extends({}, contentSizeChangeProps, {
        ref: this._setInnerViewRef,
        style: contentContainerStyle,
        removeClippedSubviews: Platform.OS === 'android' && hasStickyHeaders ? false : this.props.removeClippedSubviews,
        collapsable: false, __source: {
          fileName: _jsxFileName,
          lineNumber: 748
        }
      }),
      children
    );

    var alwaysBounceHorizontal = this.props.alwaysBounceHorizontal !== undefined ? this.props.alwaysBounceHorizontal : this.props.horizontal;

    var alwaysBounceVertical = this.props.alwaysBounceVertical !== undefined ? this.props.alwaysBounceVertical : !this.props.horizontal;

    var DEPRECATED_sendUpdatedChildFrames = !!this.props.DEPRECATED_sendUpdatedChildFrames;

    var baseStyle = this.props.horizontal ? styles.baseHorizontal : styles.baseVertical;
    var props = babelHelpers.extends({}, this.props, {
      alwaysBounceHorizontal: alwaysBounceHorizontal,
      alwaysBounceVertical: alwaysBounceVertical,
      style: [baseStyle, this.props.style],

      onContentSizeChange: null,
      onMomentumScrollBegin: this.scrollResponderHandleMomentumScrollBegin,
      onMomentumScrollEnd: this.scrollResponderHandleMomentumScrollEnd,
      onResponderGrant: this.scrollResponderHandleResponderGrant,
      onResponderReject: this.scrollResponderHandleResponderReject,
      onResponderRelease: this.scrollResponderHandleResponderRelease,

      onResponderTerminate: this.scrollResponderHandleTerminate,
      onResponderTerminationRequest: this.scrollResponderHandleTerminationRequest,
      onScroll: this._handleScroll,
      onScrollBeginDrag: this.scrollResponderHandleScrollBeginDrag,
      onScrollEndDrag: this.scrollResponderHandleScrollEndDrag,
      onScrollShouldSetResponder: this.scrollResponderHandleScrollShouldSetResponder,
      onStartShouldSetResponder: this.scrollResponderHandleStartShouldSetResponder,
      onStartShouldSetResponderCapture: this.scrollResponderHandleStartShouldSetResponderCapture,
      onTouchEnd: this.scrollResponderHandleTouchEnd,
      onTouchMove: this.scrollResponderHandleTouchMove,
      onTouchStart: this.scrollResponderHandleTouchStart,
      scrollEventThrottle: hasStickyHeaders ? 1 : this.props.scrollEventThrottle,
      sendMomentumEvents: this.props.onMomentumScrollBegin || this.props.onMomentumScrollEnd ? true : false,
      DEPRECATED_sendUpdatedChildFrames: DEPRECATED_sendUpdatedChildFrames
    });

    var decelerationRate = this.props.decelerationRate;

    if (decelerationRate) {
      props.decelerationRate = processDecelerationRate(decelerationRate);
    }

    var refreshControl = this.props.refreshControl;

    if (refreshControl) {
      if (Platform.OS === 'ios') {
        return React.createElement(
          ScrollViewClass,
          babelHelpers.extends({}, props, { ref: this._setScrollViewRef, __source: {
              fileName: _jsxFileName,
              lineNumber: 828
            }
          }),
          Platform.isTVOS ? null : refreshControl,
          contentContainer
        );
      } else if (Platform.OS === 'android') {

        return React.cloneElement(refreshControl, { style: props.style }, React.createElement(
          ScrollViewClass,
          babelHelpers.extends({}, props, { style: baseStyle, ref: this._setScrollViewRef, __source: {
              fileName: _jsxFileName,
              lineNumber: 846
            }
          }),
          contentContainer
        ));
      }
    }
    return React.createElement(
      ScrollViewClass,
      babelHelpers.extends({}, props, { ref: this._setScrollViewRef, __source: {
          fileName: _jsxFileName,
          lineNumber: 856
        }
      }),
      contentContainer
    );
  }
});

var styles = StyleSheet.create({
  baseVertical: {
    flexGrow: 1,
    flexShrink: 1,
    flexDirection: 'column',
    overflow: 'scroll'
  },
  baseHorizontal: {
    flexGrow: 1,
    flexShrink: 1,
    flexDirection: 'row',
    overflow: 'scroll'
  },
  contentContainerHorizontal: {
    flexDirection: 'row'
  }
});

var nativeOnlyProps = void 0,
    AndroidScrollView = void 0,
    AndroidHorizontalScrollContentView = void 0,
    AndroidHorizontalScrollView = void 0,
    RCTScrollView = void 0,
    RCTScrollContentView = void 0;
if (Platform.OS === 'android') {
  nativeOnlyProps = {
    nativeOnly: {
      sendMomentumEvents: true
    }
  };
  AndroidScrollView = requireNativeComponent('RCTScrollView', ScrollView, nativeOnlyProps);
  AndroidHorizontalScrollView = requireNativeComponent('AndroidHorizontalScrollView', ScrollView, nativeOnlyProps);
  AndroidHorizontalScrollContentView = requireNativeComponent('AndroidHorizontalScrollContentView');
} else if (Platform.OS === 'ios') {
  nativeOnlyProps = {
    nativeOnly: {
      onMomentumScrollBegin: true,
      onMomentumScrollEnd: true,
      onScrollBeginDrag: true,
      onScrollEndDrag: true
    }
  };
  RCTScrollView = requireNativeComponent('RCTScrollView', ScrollView, nativeOnlyProps);
  RCTScrollContentView = requireNativeComponent('RCTScrollContentView', View);
}

module.exports = ScrollView;
}, 223, null, "ScrollView");
__d(/* PointPropType */function(global, require, module, exports) {
'use strict';

var PropTypes = require(126         ); // 126 = prop-types

var createStrictShapeTypeChecker = require(132                           ); // 132 = createStrictShapeTypeChecker

var PointPropType = createStrictShapeTypeChecker({
  x: PropTypes.number,
  y: PropTypes.number
});

module.exports = PointPropType;
}, 224, null, "PointPropType");
__d(/* ScrollResponder */function(global, require, module, exports) {
'use strict';

var Dimensions = require(163         ); // 163 = Dimensions
var FrameRateLogger = require(226              ); // 226 = FrameRateLogger
var Keyboard = require(227       ); // 227 = Keyboard
var ReactNative = require(21           ); // 21 = ReactNative
var Subscribable = require(229           ); // 229 = Subscribable
var TextInputState = require(45              ); // 45 = TextInputState
var UIManager = require(47         ); // 47 = UIManager

var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var nullthrows = require(230                  ); // 230 = fbjs/lib/nullthrows

var performanceNow = require(69                       ); // 69 = fbjs/lib/performanceNow

var warning = require(23                ); // 23 = fbjs/lib/warning

var _require = require(15             ), // 15 = NativeModules
    ScrollViewManager = _require.ScrollViewManager;

var _require2 = require(231                       ), // 231 = ReactNativeComponentTree
    getInstanceFromNode = _require2.getInstanceFromNode;

var IS_ANIMATING_TOUCH_START_THRESHOLD_MS = 16;

function isTagInstanceOfTextInput(tag) {
  var instance = getInstanceFromNode(tag);
  return instance && instance.viewConfig && (instance.viewConfig.uiViewClassName === 'AndroidTextInput' || instance.viewConfig.uiViewClassName === 'RCTTextView' || instance.viewConfig.uiViewClassName === 'RCTTextField');
}

var ScrollResponderMixin = {
  mixins: [Subscribable.Mixin],
  scrollResponderMixinGetInitialState: function scrollResponderMixinGetInitialState() {
    return {
      isTouching: false,
      lastMomentumScrollBeginTime: 0,
      lastMomentumScrollEndTime: 0,

      observedScrollSinceBecomingResponder: false,
      becameResponderWhileAnimating: false
    };
  },

  scrollResponderHandleScrollShouldSetResponder: function scrollResponderHandleScrollShouldSetResponder() {
    return this.state.isTouching;
  },

  scrollResponderHandleStartShouldSetResponder: function scrollResponderHandleStartShouldSetResponder(e) {
    var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();

    if (this.props.keyboardShouldPersistTaps === 'handled' && currentlyFocusedTextInput != null && e.target !== currentlyFocusedTextInput) {
      return true;
    }
    return false;
  },

  scrollResponderHandleStartShouldSetResponderCapture: function scrollResponderHandleStartShouldSetResponderCapture(e) {
    var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();
    var keyboardShouldPersistTaps = this.props.keyboardShouldPersistTaps;

    var keyboardNeverPersistTaps = !keyboardShouldPersistTaps || keyboardShouldPersistTaps === 'never';
    if (keyboardNeverPersistTaps && currentlyFocusedTextInput != null && !isTagInstanceOfTextInput(e.target)) {
      return true;
    }
    return this.scrollResponderIsAnimating();
  },

  scrollResponderHandleResponderReject: function scrollResponderHandleResponderReject() {},

  scrollResponderHandleTerminationRequest: function scrollResponderHandleTerminationRequest() {
    return !this.state.observedScrollSinceBecomingResponder;
  },

  scrollResponderHandleTouchEnd: function scrollResponderHandleTouchEnd(e) {
    var nativeEvent = e.nativeEvent;
    this.state.isTouching = nativeEvent.touches.length !== 0;
    this.props.onTouchEnd && this.props.onTouchEnd(e);
  },

  scrollResponderHandleResponderRelease: function scrollResponderHandleResponderRelease(e) {
    this.props.onResponderRelease && this.props.onResponderRelease(e);

    var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();
    if (this.props.keyboardShouldPersistTaps !== true && this.props.keyboardShouldPersistTaps !== 'always' && currentlyFocusedTextInput != null && e.target !== currentlyFocusedTextInput && !this.state.observedScrollSinceBecomingResponder && !this.state.becameResponderWhileAnimating) {
      this.props.onScrollResponderKeyboardDismissed && this.props.onScrollResponderKeyboardDismissed(e);
      TextInputState.blurTextInput(currentlyFocusedTextInput);
    }
  },

  scrollResponderHandleScroll: function scrollResponderHandleScroll(e) {
    this.state.observedScrollSinceBecomingResponder = true;
    this.props.onScroll && this.props.onScroll(e);
  },

  scrollResponderHandleResponderGrant: function scrollResponderHandleResponderGrant(e) {
    this.state.observedScrollSinceBecomingResponder = false;
    this.props.onResponderGrant && this.props.onResponderGrant(e);
    this.state.becameResponderWhileAnimating = this.scrollResponderIsAnimating();
  },

  scrollResponderHandleScrollBeginDrag: function scrollResponderHandleScrollBeginDrag(e) {
    FrameRateLogger.beginScroll();
    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);
  },

  scrollResponderHandleScrollEndDrag: function scrollResponderHandleScrollEndDrag(e) {
    var velocity = e.nativeEvent.velocity;

    if (!this.scrollResponderIsAnimating() && (!velocity || velocity.x === 0 && velocity.y === 0)) {
      FrameRateLogger.endScroll();
    }
    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);
  },

  scrollResponderHandleMomentumScrollBegin: function scrollResponderHandleMomentumScrollBegin(e) {
    this.state.lastMomentumScrollBeginTime = performanceNow();
    this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);
  },

  scrollResponderHandleMomentumScrollEnd: function scrollResponderHandleMomentumScrollEnd(e) {
    FrameRateLogger.endScroll();
    this.state.lastMomentumScrollEndTime = performanceNow();
    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);
  },

  scrollResponderHandleTouchStart: function scrollResponderHandleTouchStart(e) {
    this.state.isTouching = true;
    this.props.onTouchStart && this.props.onTouchStart(e);
  },

  scrollResponderHandleTouchMove: function scrollResponderHandleTouchMove(e) {
    this.props.onTouchMove && this.props.onTouchMove(e);
  },

  scrollResponderIsAnimating: function scrollResponderIsAnimating() {
    var now = performanceNow();
    var timeSinceLastMomentumScrollEnd = now - this.state.lastMomentumScrollEndTime;
    var isAnimating = timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || this.state.lastMomentumScrollEndTime < this.state.lastMomentumScrollBeginTime;
    return isAnimating;
  },

  scrollResponderGetScrollableNode: function scrollResponderGetScrollableNode() {
    return this.getScrollableNode ? this.getScrollableNode() : ReactNative.findNodeHandle(this);
  },

  scrollResponderScrollTo: function scrollResponderScrollTo(x, y, animated) {
    if (typeof x === 'number') {
      console.warn('`scrollResponderScrollTo(x, y, animated)` is deprecated. Use `scrollResponderScrollTo({x: 5, y: 5, animated: true})` instead.');
    } else {
      var _ref = x || {};

      x = _ref.x;
      y = _ref.y;
      animated = _ref.animated;
    }
    UIManager.dispatchViewManagerCommand(nullthrows(this.scrollResponderGetScrollableNode()), UIManager.RCTScrollView.Commands.scrollTo, [x || 0, y || 0, animated !== false]);
  },

  scrollResponderScrollToEnd: function scrollResponderScrollToEnd(options) {
    var animated = (options && options.animated) !== false;
    UIManager.dispatchViewManagerCommand(this.scrollResponderGetScrollableNode(), UIManager.RCTScrollView.Commands.scrollToEnd, [animated]);
  },

  scrollResponderScrollWithoutAnimationTo: function scrollResponderScrollWithoutAnimationTo(offsetX, offsetY) {
    console.warn('`scrollResponderScrollWithoutAnimationTo` is deprecated. Use `scrollResponderScrollTo` instead');
    this.scrollResponderScrollTo({ x: offsetX, y: offsetY, animated: false });
  },

  scrollResponderZoomTo: function scrollResponderZoomTo(rect, animated) {
    invariant(ScrollViewManager && ScrollViewManager.zoomToRect, 'zoomToRect is not implemented');
    if ('animated' in rect) {
      var animated = rect.animated,
          rect = babelHelpers.objectWithoutProperties(rect, ['animated']);
    } else if (typeof animated !== 'undefined') {
      console.warn('`scrollResponderZoomTo` `animated` argument is deprecated. Use `options.animated` instead');
    }
    ScrollViewManager.zoomToRect(this.scrollResponderGetScrollableNode(), rect, animated !== false);
  },

  scrollResponderFlashScrollIndicators: function scrollResponderFlashScrollIndicators() {
    UIManager.dispatchViewManagerCommand(this.scrollResponderGetScrollableNode(), UIManager.RCTScrollView.Commands.flashScrollIndicators, []);
  },

  scrollResponderScrollNativeHandleToKeyboard: function scrollResponderScrollNativeHandleToKeyboard(nodeHandle, additionalOffset, preventNegativeScrollOffset) {
    this.additionalScrollOffset = additionalOffset || 0;
    this.preventNegativeScrollOffset = !!preventNegativeScrollOffset;
    UIManager.measureLayout(nodeHandle, ReactNative.findNodeHandle(this.getInnerViewNode()), this.scrollResponderTextInputFocusError, this.scrollResponderInputMeasureAndScrollToKeyboard);
  },

  scrollResponderInputMeasureAndScrollToKeyboard: function scrollResponderInputMeasureAndScrollToKeyboard(left, top, width, height) {
    var keyboardScreenY = Dimensions.get('window').height;
    if (this.keyboardWillOpenTo) {
      keyboardScreenY = this.keyboardWillOpenTo.endCoordinates.screenY;
    }
    var scrollOffsetY = top - keyboardScreenY + height + this.additionalScrollOffset;

    if (this.preventNegativeScrollOffset) {
      scrollOffsetY = Math.max(0, scrollOffsetY);
    }
    this.scrollResponderScrollTo({ x: 0, y: scrollOffsetY, animated: true });

    this.additionalOffset = 0;
    this.preventNegativeScrollOffset = false;
  },

  scrollResponderTextInputFocusError: function scrollResponderTextInputFocusError(e) {
    console.error('Error measuring text field: ', e);
  },

  componentWillMount: function componentWillMount() {
    var keyboardShouldPersistTaps = this.props.keyboardShouldPersistTaps;

    warning(typeof keyboardShouldPersistTaps !== 'boolean', '\'keyboardShouldPersistTaps={' + keyboardShouldPersistTaps + '}\' is deprecated. ' + ('Use \'keyboardShouldPersistTaps="' + (keyboardShouldPersistTaps ? "always" : "never") + '"\' instead'));

    this.keyboardWillOpenTo = null;
    this.additionalScrollOffset = 0;
    this.addListenerOn(Keyboard, 'keyboardWillShow', this.scrollResponderKeyboardWillShow);
    this.addListenerOn(Keyboard, 'keyboardWillHide', this.scrollResponderKeyboardWillHide);
    this.addListenerOn(Keyboard, 'keyboardDidShow', this.scrollResponderKeyboardDidShow);
    this.addListenerOn(Keyboard, 'keyboardDidHide', this.scrollResponderKeyboardDidHide);
  },

  scrollResponderKeyboardWillShow: function scrollResponderKeyboardWillShow(e) {
    this.keyboardWillOpenTo = e;
    this.props.onKeyboardWillShow && this.props.onKeyboardWillShow(e);
  },

  scrollResponderKeyboardWillHide: function scrollResponderKeyboardWillHide(e) {
    this.keyboardWillOpenTo = null;
    this.props.onKeyboardWillHide && this.props.onKeyboardWillHide(e);
  },

  scrollResponderKeyboardDidShow: function scrollResponderKeyboardDidShow(e) {
    if (e) {
      this.keyboardWillOpenTo = e;
    }
    this.props.onKeyboardDidShow && this.props.onKeyboardDidShow(e);
  },

  scrollResponderKeyboardDidHide: function scrollResponderKeyboardDidHide(e) {
    this.keyboardWillOpenTo = null;
    this.props.onKeyboardDidHide && this.props.onKeyboardDidHide(e);
  }

};

var ScrollResponder = {
  Mixin: ScrollResponderMixin
};

module.exports = ScrollResponder;
}, 225, null, "ScrollResponder");
__d(/* FrameRateLogger */function(global, require, module, exports) {
'use strict';

var NativeModules = require(15             ); // 15 = NativeModules

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var FrameRateLogger = {
  setGlobalOptions: function setGlobalOptions(options) {
    if (options.debug !== undefined) {
      invariant(NativeModules.FrameRateLogger, 'Trying to debug FrameRateLogger without the native module!');
    }
    NativeModules.FrameRateLogger && NativeModules.FrameRateLogger.setGlobalOptions(options);
  },

  setContext: function setContext(context) {
    NativeModules.FrameRateLogger && NativeModules.FrameRateLogger.setContext(context);
  },

  beginScroll: function beginScroll() {
    NativeModules.FrameRateLogger && NativeModules.FrameRateLogger.beginScroll();
  },
  endScroll: function endScroll() {
    NativeModules.FrameRateLogger && NativeModules.FrameRateLogger.endScroll();
  }
};

module.exports = FrameRateLogger;
}, 226, null, "FrameRateLogger");
__d(/* Keyboard */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var NativeEventEmitter = require(83                  ); // 83 = NativeEventEmitter
var KeyboardObserver = require(15             ).KeyboardObserver; // 15 = NativeModules
var dismissKeyboard = require(228              ); // 228 = dismissKeyboard
var KeyboardEventEmitter = new NativeEventEmitter(KeyboardObserver);

var Keyboard = {
  addListener: function addListener(eventName, callback) {
    invariant(false, 'Dummy method used for documentation');
  },
  removeListener: function removeListener(eventName, callback) {
    invariant(false, 'Dummy method used for documentation');
  },
  removeAllListeners: function removeAllListeners(eventName) {
    invariant(false, 'Dummy method used for documentation');
  },
  dismiss: function dismiss() {
    invariant(false, 'Dummy method used for documentation');
  }
};

Keyboard = KeyboardEventEmitter;
Keyboard.dismiss = dismissKeyboard;

module.exports = Keyboard;
}, 227, null, "Keyboard");
__d(/* dismissKeyboard */function(global, require, module, exports) {
'use strict';

var TextInputState = require(45              ); // 45 = TextInputState

function dismissKeyboard() {
  TextInputState.blurTextInput(TextInputState.currentlyFocusedField());
}

module.exports = dismissKeyboard;
}, 228, null, "dismissKeyboard");
__d(/* Subscribable */function(global, require, module, exports) {
'use strict';

var Subscribable = {};

Subscribable.Mixin = {

  componentWillMount: function componentWillMount() {
    this._subscribableSubscriptions = [];
  },

  componentWillUnmount: function componentWillUnmount() {
    this._subscribableSubscriptions.forEach(function (subscription) {
      return subscription.remove();
    });
    this._subscribableSubscriptions = null;
  },

  addListenerOn: function addListenerOn(eventEmitter, eventType, listener, context) {
    this._subscribableSubscriptions.push(eventEmitter.addListener(eventType, listener, context));
  }
};

module.exports = Subscribable;
}, 229, null, "Subscribable");
__d(/* fbjs/lib/nullthrows.js */function(global, require, module, exports) {"use strict";

var nullthrows = function nullthrows(x) {
  if (x != null) {
    return x;
  }
  throw new Error("Got unexpected null or undefined");
};

module.exports = nullthrows;
}, 230, null, "fbjs/lib/nullthrows.js");
__d(/* ReactNativeComponentTree */function(global, require, module, exports) {

'use strict';

var _require = require(21           ), // 21 = ReactNative
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = _require.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

module.exports = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactNativeComponentTree;
}, 231, null, "ReactNativeComponentTree");
__d(/* ScrollViewStickyHeader */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewStickyHeader.js';
var Animated = require(193       ); // 193 = Animated
var React = require(129    ); // 129 = React
var StyleSheet = require(167         ); // 167 = StyleSheet

var ScrollViewStickyHeader = function (_React$Component) {
  babelHelpers.inherits(ScrollViewStickyHeader, _React$Component);

  function ScrollViewStickyHeader(props, context) {
    babelHelpers.classCallCheck(this, ScrollViewStickyHeader);

    var _this = babelHelpers.possibleConstructorReturn(this, (ScrollViewStickyHeader.__proto__ || Object.getPrototypeOf(ScrollViewStickyHeader)).call(this, props, context));

    _this._onLayout = function (event) {
      _this.setState({
        measured: true,
        layoutY: event.nativeEvent.layout.y,
        layoutHeight: event.nativeEvent.layout.height
      });

      _this.props.onLayout(event);
      var child = React.Children.only(_this.props.children);
      if (child.props.onLayout) {
        child.props.onLayout(event);
      }
    };

    _this.state = {
      measured: false,
      layoutY: 0,
      layoutHeight: 0,
      nextHeaderLayoutY: props.nextHeaderLayoutY
    };
    return _this;
  }

  babelHelpers.createClass(ScrollViewStickyHeader, [{
    key: 'setNextHeaderY',
    value: function setNextHeaderY(y) {
      this.setState({ nextHeaderLayoutY: y });
    }
  }, {
    key: 'render',
    value: function render() {
      var _state = this.state,
          measured = _state.measured,
          layoutHeight = _state.layoutHeight,
          layoutY = _state.layoutY,
          nextHeaderLayoutY = _state.nextHeaderLayoutY;

      var inputRange = [-1, 0];
      var outputRange = [0, 0];

      if (measured) {
        inputRange.push(layoutY);
        outputRange.push(0);

        var collisionPoint = (nextHeaderLayoutY || 0) - layoutHeight;
        if (collisionPoint >= layoutY) {
          inputRange.push(collisionPoint, collisionPoint + 1);
          outputRange.push(collisionPoint - layoutY, collisionPoint - layoutY);
        } else {
          inputRange.push(layoutY + 1);
          outputRange.push(1);
        }
      }

      var translateY = this.props.scrollAnimatedValue.interpolate({
        inputRange: inputRange,
        outputRange: outputRange
      });
      var child = React.Children.only(this.props.children);

      return React.createElement(
        Animated.View,
        {
          collapsable: false,
          onLayout: this._onLayout,
          style: [child.props.style, styles.header, { transform: [{ translateY: translateY }] }], __source: {
            fileName: _jsxFileName,
            lineNumber: 96
          }
        },
        React.cloneElement(child, {
          style: styles.fill,
          onLayout: undefined })
      );
    }
  }]);
  return ScrollViewStickyHeader;
}(React.Component);

var styles = StyleSheet.create({
  header: {
    zIndex: 10
  },
  fill: {
    flex: 1
  }
});

module.exports = ScrollViewStickyHeader;
}, 232, null, "ScrollViewStickyHeader");
__d(/* processDecelerationRate */function(global, require, module, exports) {
'use strict';

function processDecelerationRate(decelerationRate) {
  if (decelerationRate === 'normal') {
    decelerationRate = 0.998;
  } else if (decelerationRate === 'fast') {
    decelerationRate = 0.99;
  }
  return decelerationRate;
}

module.exports = processDecelerationRate;
}, 233, null, "processDecelerationRate");
__d(/* CheckBox */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/CheckBox/CheckBox.android.js';
var NativeMethodsMixin = require(124                 ); // 124 = NativeMethodsMixin
var PropTypes = require(126         ); // 126 = prop-types
var React = require(129    ); // 129 = React
var StyleSheet = require(167         ); // 167 = StyleSheet
var ViewPropTypes = require(130            ); // 130 = ViewPropTypes

var createReactClass = require(171                 ); // 171 = create-react-class
var requireNativeComponent = require(144                     ); // 144 = requireNativeComponent

var CheckBox = createReactClass({
  displayName: 'CheckBox',
  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    value: PropTypes.bool,

    disabled: PropTypes.bool,

    onChange: PropTypes.func,

    onValueChange: PropTypes.func,

    testID: PropTypes.string
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      value: false,
      disabled: false
    };
  },

  mixins: [NativeMethodsMixin],

  _rctCheckBox: {},
  _onChange: function _onChange(event) {
    this._rctCheckBox.setNativeProps({ value: this.props.value });

    this.props.onChange && this.props.onChange(event);
    this.props.onValueChange && this.props.onValueChange(event.nativeEvent.value);
  },

  render: function render() {
    var _this = this;

    var props = babelHelpers.extends({}, this.props);
    props.onStartShouldSetResponder = function () {
      return true;
    };
    props.onResponderTerminationRequest = function () {
      return false;
    };
    props.enabled = !this.props.disabled;
    props.on = this.props.value;
    props.style = [styles.rctCheckBox, this.props.style];

    return React.createElement(RCTCheckBox, babelHelpers.extends({}, props, {
      ref: function ref(_ref) {
        _this._rctCheckBox = _ref;
      },
      onChange: this._onChange,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 97
      }
    }));
  }
});

var styles = StyleSheet.create({
  rctCheckBox: {
    height: 32,
    width: 32
  }
});

var RCTCheckBox = requireNativeComponent('AndroidCheckBox', CheckBox, {
  nativeOnly: {
    onChange: true,
    on: true,
    enabled: true
  }
});

module.exports = CheckBox;
}, 234, null, "CheckBox");
__d(/* DatePickerIOS */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.android.js';
var React = require(129    ); // 129 = React
var StyleSheet = require(167         ); // 167 = StyleSheet
var Text = require(180   ); // 180 = Text
var View = require(169   ); // 169 = View

var DummyDatePickerIOS = function (_React$Component) {
  babelHelpers.inherits(DummyDatePickerIOS, _React$Component);

  function DummyDatePickerIOS() {
    babelHelpers.classCallCheck(this, DummyDatePickerIOS);
    return babelHelpers.possibleConstructorReturn(this, (DummyDatePickerIOS.__proto__ || Object.getPrototypeOf(DummyDatePickerIOS)).apply(this, arguments));
  }

  babelHelpers.createClass(DummyDatePickerIOS, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        View,
        { style: [styles.dummyDatePickerIOS, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 22
          }
        },
        React.createElement(
          Text,
          { style: styles.datePickerText, __source: {
              fileName: _jsxFileName,
              lineNumber: 23
            }
          },
          'DatePickerIOS is not supported on this platform!'
        )
      );
    }
  }]);
  return DummyDatePickerIOS;
}(React.Component);

var styles = StyleSheet.create({
  dummyDatePickerIOS: {
    height: 100,
    width: 300,
    backgroundColor: '#ffbcbc',
    borderWidth: 1,
    borderColor: 'red',
    alignItems: 'center',
    justifyContent: 'center',
    margin: 10
  },
  datePickerText: {
    color: '#333333',
    margin: 20
  }
});

module.exports = DummyDatePickerIOS;
}, 235, null, "DatePickerIOS");
__d(/* DrawerLayoutAndroid */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/DrawerAndroid/DrawerLayoutAndroid.android.js';
var ColorPropType = require(122            ); // 122 = ColorPropType
var NativeMethodsMixin = require(124                 ); // 124 = NativeMethodsMixin
var Platform = require(46        ); // 46 = Platform
var React = require(129    ); // 129 = React
var PropTypes = require(126         ); // 126 = prop-types
var ReactNative = require(21           ); // 21 = ReactNative
var StatusBar = require(237        ); // 237 = StatusBar
var StyleSheet = require(167         ); // 167 = StyleSheet
var UIManager = require(47         ); // 47 = UIManager
var View = require(169   ); // 169 = View
var ViewPropTypes = require(130            ); // 130 = ViewPropTypes

var DrawerConsts = UIManager.AndroidDrawerLayout.Constants;

var createReactClass = require(171                 ); // 171 = create-react-class
var dismissKeyboard = require(228              ); // 228 = dismissKeyboard
var requireNativeComponent = require(144                     ); // 144 = requireNativeComponent

var RK_DRAWER_REF = 'drawerlayout';
var INNERVIEW_REF = 'innerView';

var DRAWER_STATES = ['Idle', 'Dragging', 'Settling'];

var DrawerLayoutAndroid = createReactClass({
  displayName: 'DrawerLayoutAndroid',
  statics: {
    positions: DrawerConsts.DrawerPosition
  },

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    keyboardDismissMode: PropTypes.oneOf(['none', 'on-drag']),

    drawerBackgroundColor: ColorPropType,

    drawerPosition: PropTypes.oneOf([DrawerConsts.DrawerPosition.Left, DrawerConsts.DrawerPosition.Right]),

    drawerWidth: PropTypes.number,

    drawerLockMode: PropTypes.oneOf(['unlocked', 'locked-closed', 'locked-open']),

    onDrawerSlide: PropTypes.func,

    onDrawerStateChanged: PropTypes.func,

    onDrawerOpen: PropTypes.func,

    onDrawerClose: PropTypes.func,

    renderNavigationView: PropTypes.func.isRequired,

    statusBarBackgroundColor: ColorPropType
  }),

  mixins: [NativeMethodsMixin],

  getDefaultProps: function getDefaultProps() {
    return {
      drawerBackgroundColor: 'white'
    };
  },

  getInitialState: function getInitialState() {
    return { statusBarBackgroundColor: undefined };
  },

  getInnerViewNode: function getInnerViewNode() {
    return this.refs[INNERVIEW_REF].getInnerViewNode();
  },

  render: function render() {
    var drawStatusBar = Platform.Version >= 21 && this.props.statusBarBackgroundColor;
    var drawerViewWrapper = React.createElement(
      View,
      {
        style: [styles.drawerSubview, { width: this.props.drawerWidth, backgroundColor: this.props.drawerBackgroundColor }],
        collapsable: false, __source: {
          fileName: _jsxFileName,
          lineNumber: 176
        }
      },
      this.props.renderNavigationView(),
      drawStatusBar && React.createElement(View, { style: styles.drawerStatusBar, __source: {
          fileName: _jsxFileName,
          lineNumber: 183
        }
      })
    );
    var childrenWrapper = React.createElement(
      View,
      { ref: INNERVIEW_REF, style: styles.mainSubview, collapsable: false, __source: {
          fileName: _jsxFileName,
          lineNumber: 186
        }
      },
      drawStatusBar && React.createElement(StatusBar, {
        translucent: true,
        backgroundColor: this.props.statusBarBackgroundColor,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 188
        }
      }),
      drawStatusBar && React.createElement(View, { style: [styles.statusBar, { backgroundColor: this.props.statusBarBackgroundColor }], __source: {
          fileName: _jsxFileName,
          lineNumber: 193
        }
      }),
      this.props.children
    );
    return React.createElement(
      AndroidDrawerLayout,
      babelHelpers.extends({}, this.props, {
        ref: RK_DRAWER_REF,
        drawerWidth: this.props.drawerWidth,
        drawerPosition: this.props.drawerPosition,
        drawerLockMode: this.props.drawerLockMode,
        style: [styles.base, this.props.style],
        onDrawerSlide: this._onDrawerSlide,
        onDrawerOpen: this._onDrawerOpen,
        onDrawerClose: this._onDrawerClose,
        onDrawerStateChanged: this._onDrawerStateChanged, __source: {
          fileName: _jsxFileName,
          lineNumber: 200
        }
      }),
      childrenWrapper,
      drawerViewWrapper
    );
  },

  _onDrawerSlide: function _onDrawerSlide(event) {
    if (this.props.onDrawerSlide) {
      this.props.onDrawerSlide(event);
    }
    if (this.props.keyboardDismissMode === 'on-drag') {
      dismissKeyboard();
    }
  },

  _onDrawerOpen: function _onDrawerOpen() {
    if (this.props.onDrawerOpen) {
      this.props.onDrawerOpen();
    }
  },

  _onDrawerClose: function _onDrawerClose() {
    if (this.props.onDrawerClose) {
      this.props.onDrawerClose();
    }
  },

  _onDrawerStateChanged: function _onDrawerStateChanged(event) {
    if (this.props.onDrawerStateChanged) {
      this.props.onDrawerStateChanged(DRAWER_STATES[event.nativeEvent.drawerState]);
    }
  },

  openDrawer: function openDrawer() {
    UIManager.dispatchViewManagerCommand(this._getDrawerLayoutHandle(), UIManager.AndroidDrawerLayout.Commands.openDrawer, null);
  },

  closeDrawer: function closeDrawer() {
    UIManager.dispatchViewManagerCommand(this._getDrawerLayoutHandle(), UIManager.AndroidDrawerLayout.Commands.closeDrawer, null);
  },

  _getDrawerLayoutHandle: function _getDrawerLayoutHandle() {
    return ReactNative.findNodeHandle(this.refs[RK_DRAWER_REF]);
  }

});

var styles = StyleSheet.create({
  base: {
    flex: 1,
    elevation: 16
  },
  mainSubview: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0
  },
  drawerSubview: {
    position: 'absolute',
    top: 0,
    bottom: 0
  },
  statusBar: {
    height: StatusBar.currentHeight
  },
  drawerStatusBar: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    height: StatusBar.currentHeight,
    backgroundColor: 'rgba(0, 0, 0, 0.251)'
  }
});

var AndroidDrawerLayout = requireNativeComponent('AndroidDrawerLayout', DrawerLayoutAndroid);

module.exports = DrawerLayoutAndroid;
}, 236, null, "DrawerLayoutAndroid");
__d(/* StatusBar */function(global, require, module, exports) {
'use strict';

var React = require(129    ); // 129 = React
var PropTypes = require(126         ); // 126 = prop-types
var ColorPropType = require(122            ); // 122 = ColorPropType
var Platform = require(46        ); // 46 = Platform

var processColor = require(151           ); // 151 = processColor

var StatusBarManager = require(15             ).StatusBarManager; // 15 = NativeModules

function mergePropsStack(propsStack, defaultValues) {
  return propsStack.reduce(function (prev, cur) {
    for (var prop in cur) {
      if (cur[prop] != null) {
        prev[prop] = cur[prop];
      }
    }
    return prev;
  }, babelHelpers.extends({}, defaultValues));
}

function createStackEntry(props) {
  return {
    backgroundColor: props.backgroundColor != null ? {
      value: props.backgroundColor,
      animated: props.animated
    } : null,
    barStyle: props.barStyle != null ? {
      value: props.barStyle,
      animated: props.animated
    } : null,
    translucent: props.translucent,
    hidden: props.hidden != null ? {
      value: props.hidden,
      animated: props.animated,
      transition: props.showHideTransition
    } : null,
    networkActivityIndicatorVisible: props.networkActivityIndicatorVisible
  };
}

var StatusBar = function (_React$Component) {
  babelHelpers.inherits(StatusBar, _React$Component);

  function StatusBar() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, StatusBar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = StatusBar.__proto__ || Object.getPrototypeOf(StatusBar)).call.apply(_ref, [this].concat(args))), _this), _this._stackEntry = null, _this._updatePropsStack = function () {
      clearImmediate(StatusBar._updateImmediate);
      StatusBar._updateImmediate = setImmediate(function () {
        var oldProps = StatusBar._currentValues;
        var mergedProps = mergePropsStack(StatusBar._propsStack, StatusBar._defaultProps);

        if (Platform.OS === 'ios') {
          if (!oldProps || oldProps.barStyle.value !== mergedProps.barStyle.value) {
            StatusBarManager.setStyle(mergedProps.barStyle.value, mergedProps.barStyle.animated);
          }
          if (!oldProps || oldProps.hidden.value !== mergedProps.hidden.value) {
            StatusBarManager.setHidden(mergedProps.hidden.value, mergedProps.hidden.animated ? mergedProps.hidden.transition : 'none');
          }

          if (!oldProps || oldProps.networkActivityIndicatorVisible !== mergedProps.networkActivityIndicatorVisible) {
            StatusBarManager.setNetworkActivityIndicatorVisible(mergedProps.networkActivityIndicatorVisible);
          }
        } else if (Platform.OS === 'android') {
          if (!oldProps || oldProps.barStyle.value !== mergedProps.barStyle.value) {
            StatusBarManager.setStyle(mergedProps.barStyle.value);
          }
          if (!oldProps || oldProps.backgroundColor.value !== mergedProps.backgroundColor.value) {
            StatusBarManager.setColor(processColor(mergedProps.backgroundColor.value), mergedProps.backgroundColor.animated);
          }
          if (!oldProps || oldProps.hidden.value !== mergedProps.hidden.value) {
            StatusBarManager.setHidden(mergedProps.hidden.value);
          }
          if (!oldProps || oldProps.translucent !== mergedProps.translucent) {
            StatusBarManager.setTranslucent(mergedProps.translucent);
          }
        }

        StatusBar._currentValues = mergedProps;
      });
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(StatusBar, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._stackEntry = createStackEntry(this.props);
      StatusBar._propsStack.push(this._stackEntry);
      this._updatePropsStack();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      var index = StatusBar._propsStack.indexOf(this._stackEntry);
      StatusBar._propsStack.splice(index, 1);

      this._updatePropsStack();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      var index = StatusBar._propsStack.indexOf(this._stackEntry);
      this._stackEntry = createStackEntry(this.props);
      StatusBar._propsStack[index] = this._stackEntry;

      this._updatePropsStack();
    }
  }, {
    key: 'render',
    value: function render() {
      return null;
    }
  }], [{
    key: 'setHidden',
    value: function setHidden(hidden, animation) {
      animation = animation || 'none';
      StatusBar._defaultProps.hidden.value = hidden;
      if (Platform.OS === 'ios') {
        StatusBarManager.setHidden(hidden, animation);
      } else if (Platform.OS === 'android') {
        StatusBarManager.setHidden(hidden);
      }
    }
  }, {
    key: 'setBarStyle',
    value: function setBarStyle(style, animated) {
      animated = animated || false;
      StatusBar._defaultProps.barStyle.value = style;
      if (Platform.OS === 'ios') {
        StatusBarManager.setStyle(style, animated);
      } else if (Platform.OS === 'android') {
        StatusBarManager.setStyle(style);
      }
    }
  }, {
    key: 'setNetworkActivityIndicatorVisible',
    value: function setNetworkActivityIndicatorVisible(visible) {
      if (Platform.OS !== 'ios') {
        console.warn('`setNetworkActivityIndicatorVisible` is only available on iOS');
        return;
      }
      StatusBar._defaultProps.networkActivityIndicatorVisible = visible;
      StatusBarManager.setNetworkActivityIndicatorVisible(visible);
    }
  }, {
    key: 'setBackgroundColor',
    value: function setBackgroundColor(color, animated) {
      if (Platform.OS !== 'android') {
        console.warn('`setBackgroundColor` is only available on Android');
        return;
      }
      animated = animated || false;
      StatusBar._defaultProps.backgroundColor.value = color;
      StatusBarManager.setColor(processColor(color), animated);
    }
  }, {
    key: 'setTranslucent',
    value: function setTranslucent(translucent) {
      if (Platform.OS !== 'android') {
        console.warn('`setTranslucent` is only available on Android');
        return;
      }
      StatusBar._defaultProps.translucent = translucent;
      StatusBarManager.setTranslucent(translucent);
    }
  }]);
  return StatusBar;
}(React.Component);

StatusBar._propsStack = [];
StatusBar._defaultProps = createStackEntry({
  animated: false,
  showHideTransition: 'fade',
  backgroundColor: 'black',
  barStyle: 'default',
  translucent: false,
  hidden: false,
  networkActivityIndicatorVisible: false
});
StatusBar._updateImmediate = null;
StatusBar._currentValues = null;
StatusBar.currentHeight = StatusBarManager.HEIGHT;
StatusBar.propTypes = {
  hidden: PropTypes.bool,

  animated: PropTypes.bool,

  backgroundColor: ColorPropType,

  translucent: PropTypes.bool,

  barStyle: PropTypes.oneOf(['default', 'light-content', 'dark-content']),

  networkActivityIndicatorVisible: PropTypes.bool,

  showHideTransition: PropTypes.oneOf(['fade', 'slide'])
};
StatusBar.defaultProps = {
  animated: false,
  showHideTransition: 'fade'
};


module.exports = StatusBar;
}, 237, null, "StatusBar");
__d(/* FlatList */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Lists/FlatList.js';
var MetroListView = require(239            ); // 239 = MetroListView
var React = require(129    ); // 129 = React
var View = require(169   ); // 169 = View
var VirtualizedList = require(246              ); // 246 = VirtualizedList

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var defaultProps = babelHelpers.extends({}, VirtualizedList.defaultProps, {
  numColumns: 1
});

var FlatList = function (_React$PureComponent) {
  babelHelpers.inherits(FlatList, _React$PureComponent);
  babelHelpers.createClass(FlatList, [{
    key: 'scrollToEnd',
    value: function scrollToEnd(params) {
      this._listRef.scrollToEnd(params);
    }
  }, {
    key: 'scrollToIndex',
    value: function scrollToIndex(params) {
      this._listRef.scrollToIndex(params);
    }
  }, {
    key: 'scrollToItem',
    value: function scrollToItem(params) {
      this._listRef.scrollToItem(params);
    }
  }, {
    key: 'scrollToOffset',
    value: function scrollToOffset(params) {
      this._listRef.scrollToOffset(params);
    }
  }, {
    key: 'recordInteraction',
    value: function recordInteraction() {
      this._listRef.recordInteraction();
    }
  }, {
    key: 'flashScrollIndicators',
    value: function flashScrollIndicators() {
      this._listRef.flashScrollIndicators();
    }
  }, {
    key: 'getScrollResponder',
    value: function getScrollResponder() {
      if (this._listRef) {
        return this._listRef.getScrollResponder();
      }
    }
  }, {
    key: 'getScrollableNode',
    value: function getScrollableNode() {
      if (this._listRef) {
        return this._listRef.getScrollableNode();
      }
    }
  }, {
    key: 'setNativeProps',
    value: function setNativeProps(props) {
      if (this._listRef) {
        this._listRef.setNativeProps(props);
      }
    }
  }, {
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._checkProps(this.props);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      invariant(nextProps.numColumns === this.props.numColumns, 'Changing numColumns on the fly is not supported. Change the key prop on FlatList when ' + 'changing the number of columns to force a fresh render of the component.');
      invariant(nextProps.onViewableItemsChanged === this.props.onViewableItemsChanged, 'Changing onViewableItemsChanged on the fly is not supported');
      invariant(nextProps.viewabilityConfig === this.props.viewabilityConfig, 'Changing viewabilityConfig on the fly is not supported');
      invariant(nextProps.viewabilityConfigCallbackPairs === this.props.viewabilityConfigCallbackPairs, 'Changing viewabilityConfigCallbackPairs on the fly is not supported');

      this._checkProps(nextProps);
    }
  }]);

  function FlatList(props) {
    babelHelpers.classCallCheck(this, FlatList);

    var _this = babelHelpers.possibleConstructorReturn(this, (FlatList.__proto__ || Object.getPrototypeOf(FlatList)).call(this, props));

    _this._hasWarnedLegacy = false;
    _this._virtualizedListPairs = [];

    _this._captureRef = function (ref) {
      _this._listRef = ref;
    };

    _this._getItem = function (data, index) {
      var numColumns = _this.props.numColumns;

      if (numColumns > 1) {
        var ret = [];
        for (var kk = 0; kk < numColumns; kk++) {
          var _item = data[index * numColumns + kk];
          _item && ret.push(_item);
        }
        return ret;
      } else {
        return data[index];
      }
    };

    _this._getItemCount = function (data) {
      return data ? Math.ceil(data.length / _this.props.numColumns) : 0;
    };

    _this._keyExtractor = function (items, index) {
      var _this$props = _this.props,
          keyExtractor = _this$props.keyExtractor,
          numColumns = _this$props.numColumns;

      if (numColumns > 1) {
        invariant(Array.isArray(items), 'FlatList: Encountered internal consistency error, expected each item to consist of an ' + 'array with 1-%s columns; instead, received a single item.', numColumns);
        return items.map(function (it, kk) {
          return keyExtractor(it, index * numColumns + kk);
        }).join(':');
      } else {
        return keyExtractor(items, index);
      }
    };

    _this._renderItem = function (info) {
      var _this$props2 = _this.props,
          renderItem = _this$props2.renderItem,
          numColumns = _this$props2.numColumns,
          columnWrapperStyle = _this$props2.columnWrapperStyle;

      if (numColumns > 1) {
        var _item2 = info.item,
            _index = info.index;

        invariant(Array.isArray(_item2), 'Expected array of items with numColumns > 1');
        return React.createElement(
          View,
          { style: [{ flexDirection: 'row' }, columnWrapperStyle], __source: {
              fileName: _jsxFileName,
              lineNumber: 595
            }
          },
          _item2.map(function (it, kk) {
            var element = renderItem({
              item: it,
              index: _index * numColumns + kk,
              separators: info.separators
            });
            return element && React.cloneElement(element, { key: kk });
          })
        );
      } else {
        return renderItem(info);
      }
    };

    if (_this.props.viewabilityConfigCallbackPairs) {
      _this._virtualizedListPairs = _this.props.viewabilityConfigCallbackPairs.map(function (pair) {
        return {
          viewabilityConfig: pair.viewabilityConfig,
          onViewableItemsChanged: _this._createOnViewableItemsChanged(pair.onViewableItemsChanged)
        };
      });
    } else if (_this.props.onViewableItemsChanged) {
      _this._virtualizedListPairs.push({
        viewabilityConfig: _this.props.viewabilityConfig,
        onViewableItemsChanged: _this._createOnViewableItemsChanged(_this.props.onViewableItemsChanged)
      });
    }
    return _this;
  }

  babelHelpers.createClass(FlatList, [{
    key: '_checkProps',
    value: function _checkProps(props) {
      var getItem = props.getItem,
          getItemCount = props.getItemCount,
          horizontal = props.horizontal,
          legacyImplementation = props.legacyImplementation,
          numColumns = props.numColumns,
          columnWrapperStyle = props.columnWrapperStyle,
          onViewableItemsChanged = props.onViewableItemsChanged,
          viewabilityConfigCallbackPairs = props.viewabilityConfigCallbackPairs;

      invariant(!getItem && !getItemCount, 'FlatList does not support custom data formats.');
      if (numColumns > 1) {
        invariant(!horizontal, 'numColumns does not support horizontal.');
      } else {
        invariant(!columnWrapperStyle, 'columnWrapperStyle not supported for single column lists');
      }
      if (legacyImplementation) {
        invariant(numColumns === 1, 'Legacy list does not support multiple columns.');

        if (!this._hasWarnedLegacy) {
          console.warn('FlatList: Using legacyImplementation - some features not supported and performance ' + 'may suffer');
          this._hasWarnedLegacy = true;
        }
      }
      invariant(!(onViewableItemsChanged && viewabilityConfigCallbackPairs), 'FlatList does not support setting both onViewableItemsChanged and ' + 'viewabilityConfigCallbackPairs.');
    }
  }, {
    key: '_pushMultiColumnViewable',
    value: function _pushMultiColumnViewable(arr, v) {
      var _props = this.props,
          numColumns = _props.numColumns,
          keyExtractor = _props.keyExtractor;

      v.item.forEach(function (item, ii) {
        invariant(v.index != null, 'Missing index!');
        var index = v.index * numColumns + ii;
        arr.push(babelHelpers.extends({}, v, { item: item, key: keyExtractor(item, index), index: index }));
      });
    }
  }, {
    key: '_createOnViewableItemsChanged',
    value: function _createOnViewableItemsChanged(onViewableItemsChanged) {
      var _this2 = this;

      return function (info) {
        var numColumns = _this2.props.numColumns;

        if (onViewableItemsChanged) {
          if (numColumns > 1) {
            var _changed = [];
            var _viewableItems = [];
            info.viewableItems.forEach(function (v) {
              return _this2._pushMultiColumnViewable(_viewableItems, v);
            });
            info.changed.forEach(function (v) {
              return _this2._pushMultiColumnViewable(_changed, v);
            });
            onViewableItemsChanged({ viewableItems: _viewableItems, changed: _changed });
          } else {
            onViewableItemsChanged(info);
          }
        }
      };
    }
  }, {
    key: 'render',
    value: function render() {
      if (this.props.legacyImplementation) {
        return React.createElement(MetroListView, babelHelpers.extends({}, this.props, {
          items: this.props.data,
          ref: this._captureRef,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 614
          }
        }));
      } else {
        return React.createElement(VirtualizedList, babelHelpers.extends({}, this.props, {
          renderItem: this._renderItem,
          getItem: this._getItem,
          getItemCount: this._getItemCount,
          keyExtractor: this._keyExtractor,
          ref: this._captureRef,
          viewabilityConfigCallbackPairs: this._virtualizedListPairs,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 622
          }
        }));
      }
    }
  }]);
  return FlatList;
}(React.PureComponent);

FlatList.defaultProps = defaultProps;


module.exports = FlatList;
}, 238, null, "FlatList");
__d(/* MetroListView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Lists/MetroListView.js';
var ListView = require(240       ); // 240 = ListView
var React = require(129    ); // 129 = React
var RefreshControl = require(245             ); // 245 = RefreshControl
var ScrollView = require(223         ); // 223 = ScrollView

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var MetroListView = function (_React$Component) {
  babelHelpers.inherits(MetroListView, _React$Component);

  function MetroListView() {
    var _ref,
        _this2 = this;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, MetroListView);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = MetroListView.__proto__ || Object.getPrototypeOf(MetroListView)).call.apply(_ref, [this].concat(args))), _this), _this.state = _this._computeState(_this.props, {
      ds: new ListView.DataSource({
        rowHasChanged: function rowHasChanged(itemA, itemB) {
          return true;
        },
        sectionHeaderHasChanged: function sectionHeaderHasChanged() {
          return true;
        },
        getSectionHeaderData: function getSectionHeaderData(dataBlob, sectionID) {
          return _this.state.sectionHeaderData[sectionID];
        }
      }),
      sectionHeaderData: {}
    }), _this._captureRef = function (ref) {
      _this._listRef = ref;
    }, _this._renderFooter = function () {
      return React.createElement(_this2.props.FooterComponent, { key: '$footer', __source: {
          fileName: _jsxFileName,
          lineNumber: 195
        }
      });
    }, _this._renderRow = function (item, sectionID, rowID, highlightRow) {
      return _this.props.renderItem({ item: item, index: rowID });
    }, _this._renderSectionHeader = function (section, sectionID) {
      var renderSectionHeader = _this.props.renderSectionHeader;

      invariant(renderSectionHeader, 'Must provide renderSectionHeader with sections prop');
      return renderSectionHeader({ section: section });
    }, _this._renderSeparator = function (sID, rID) {
      return React.createElement(_this2.props.SeparatorComponent, { key: sID + rID, __source: {
          fileName: _jsxFileName,
          lineNumber: 211
        }
      });
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(MetroListView, [{
    key: 'scrollToEnd',
    value: function scrollToEnd(params) {
      throw new Error('scrollToEnd not supported in legacy ListView.');
    }
  }, {
    key: 'scrollToIndex',
    value: function scrollToIndex(params) {
      throw new Error('scrollToIndex not supported in legacy ListView.');
    }
  }, {
    key: 'scrollToItem',
    value: function scrollToItem(params) {
      throw new Error('scrollToItem not supported in legacy ListView.');
    }
  }, {
    key: 'scrollToLocation',
    value: function scrollToLocation(params) {
      throw new Error('scrollToLocation not supported in legacy ListView.');
    }
  }, {
    key: 'scrollToOffset',
    value: function scrollToOffset(params) {
      var animated = params.animated,
          offset = params.offset;

      this._listRef.scrollTo(this.props.horizontal ? { x: offset, animated: animated } : { y: offset, animated: animated });
    }
  }, {
    key: 'getListRef',
    value: function getListRef() {
      return this._listRef;
    }
  }, {
    key: 'setNativeProps',
    value: function setNativeProps(props) {
      if (this._listRef) {
        this._listRef.setNativeProps(props);
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(newProps) {
      var _this3 = this;

      this.setState(function (state) {
        return _this3._computeState(newProps, state);
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(ListView, babelHelpers.extends({}, this.props, {
        dataSource: this.state.ds,
        ref: this._captureRef,
        renderRow: this._renderRow,
        renderFooter: this.props.FooterComponent && this._renderFooter,
        renderSectionHeader: this.props.sections && this._renderSectionHeader,
        renderSeparator: this.props.SeparatorComponent && this._renderSeparator,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 152
        }
      }));
    }
  }, {
    key: '_computeState',
    value: function _computeState(props, state) {
      var sectionHeaderData = {};
      if (props.sections) {
        invariant(!props.items, 'Cannot have both sections and items props.');
        var _sections = {};
        props.sections.forEach(function (sectionIn, ii) {
          var sectionID = 's' + ii;
          _sections[sectionID] = sectionIn.data;
          sectionHeaderData[sectionID] = sectionIn;
        });
        return {
          ds: state.ds.cloneWithRowsAndSections(_sections),
          sectionHeaderData: sectionHeaderData
        };
      } else {
        invariant(!props.sections, 'Cannot have both sections and items props.');
        return {
          ds: state.ds.cloneWithRows(props.items),
          sectionHeaderData: sectionHeaderData
        };
      }
    }
  }]);
  return MetroListView;
}(React.Component);

MetroListView.defaultProps = {
  keyExtractor: function keyExtractor(item, index) {
    return item.key || String(index);
  },
  renderScrollComponent: function renderScrollComponent(props) {
    if (props.onRefresh) {
      return React.createElement(ScrollView, babelHelpers.extends({}, props, {
        refreshControl: React.createElement(RefreshControl, {
          refreshing: props.refreshing,
          onRefresh: props.onRefresh,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 120
          }
        }),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 113
        }
      }));
    } else {
      return React.createElement(ScrollView, babelHelpers.extends({}, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 131
        }
      }));
    }
  }
};


module.exports = MetroListView;
}, 239, null, "MetroListView");
__d(/* ListView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Lists/ListView/ListView.js';
var ListViewDataSource = require(241                 ); // 241 = ListViewDataSource
var Platform = require(46        ); // 46 = Platform
var React = require(129    ); // 129 = React
var PropTypes = require(126         ); // 126 = prop-types
var ReactNative = require(21           ); // 21 = ReactNative
var RCTScrollViewManager = require(15             ).ScrollViewManager; // 15 = NativeModules
var ScrollView = require(223         ); // 223 = ScrollView
var ScrollResponder = require(225              ); // 225 = ScrollResponder
var StaticRenderer = require(243             ); // 243 = StaticRenderer

var TimerMixin = require(190                ); // 190 = react-timer-mixin
var View = require(169   ); // 169 = View

var cloneReferencedElement = require(244                             ); // 244 = react-clone-referenced-element
var createReactClass = require(171                 ); // 171 = create-react-class
var isEmpty = require(242      ); // 242 = isEmpty
var merge = require(133    ); // 133 = merge

var DEFAULT_PAGE_SIZE = 1;
var DEFAULT_INITIAL_ROWS = 10;
var DEFAULT_SCROLL_RENDER_AHEAD = 1000;
var DEFAULT_END_REACHED_THRESHOLD = 1000;
var DEFAULT_SCROLL_CALLBACK_THROTTLE = 50;

var ListView = createReactClass({
  displayName: 'ListView',
  _childFrames: [],
  _sentEndForContentLength: null,
  _scrollComponent: null,
  _prevRenderedRowsCount: 0,
  _visibleRows: {},
  scrollProperties: {},

  mixins: [ScrollResponder.Mixin, TimerMixin],

  statics: {
    DataSource: ListViewDataSource
  },

  propTypes: babelHelpers.extends({}, ScrollView.propTypes, {
    dataSource: PropTypes.instanceOf(ListViewDataSource).isRequired,

    renderSeparator: PropTypes.func,

    renderRow: PropTypes.func.isRequired,

    initialListSize: PropTypes.number.isRequired,

    onEndReached: PropTypes.func,

    onEndReachedThreshold: PropTypes.number.isRequired,

    pageSize: PropTypes.number.isRequired,

    renderFooter: PropTypes.func,
    renderHeader: PropTypes.func,

    renderSectionHeader: PropTypes.func,

    renderScrollComponent: PropTypes.func.isRequired,

    scrollRenderAheadDistance: PropTypes.number.isRequired,

    onChangeVisibleRows: PropTypes.func,

    removeClippedSubviews: PropTypes.bool,

    stickySectionHeadersEnabled: PropTypes.bool,

    stickyHeaderIndices: PropTypes.arrayOf(PropTypes.number).isRequired,

    enableEmptySections: PropTypes.bool
  }),

  getMetrics: function getMetrics() {
    return {
      contentLength: this.scrollProperties.contentLength,
      totalRows: this.props.enableEmptySections ? this.props.dataSource.getRowAndSectionCount() : this.props.dataSource.getRowCount(),
      renderedRows: this.state.curRenderedRowsCount,
      visibleRows: Object.keys(this._visibleRows).length
    };
  },

  getScrollResponder: function getScrollResponder() {
    if (this._scrollComponent && this._scrollComponent.getScrollResponder) {
      return this._scrollComponent.getScrollResponder();
    }
  },

  getScrollableNode: function getScrollableNode() {
    if (this._scrollComponent && this._scrollComponent.getScrollableNode) {
      return this._scrollComponent.getScrollableNode();
    } else {
      return ReactNative.findNodeHandle(this._scrollComponent);
    }
  },

  scrollTo: function scrollTo() {
    if (this._scrollComponent && this._scrollComponent.scrollTo) {
      var _scrollComponent;

      (_scrollComponent = this._scrollComponent).scrollTo.apply(_scrollComponent, arguments);
    }
  },

  scrollToEnd: function scrollToEnd(options) {
    if (this._scrollComponent) {
      if (this._scrollComponent.scrollToEnd) {
        this._scrollComponent.scrollToEnd(options);
      } else {
        console.warn('The scroll component used by the ListView does not support ' + 'scrollToEnd. Check the renderScrollComponent prop of your ListView.');
      }
    }
  },

  flashScrollIndicators: function flashScrollIndicators() {
    if (this._scrollComponent && this._scrollComponent.flashScrollIndicators) {
      this._scrollComponent.flashScrollIndicators();
    }
  },

  setNativeProps: function setNativeProps(props) {
    if (this._scrollComponent) {
      this._scrollComponent.setNativeProps(props);
    }
  },

  getDefaultProps: function getDefaultProps() {
    return {
      initialListSize: DEFAULT_INITIAL_ROWS,
      pageSize: DEFAULT_PAGE_SIZE,
      renderScrollComponent: function renderScrollComponent(props) {
        return React.createElement(ScrollView, babelHelpers.extends({}, props, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 341
          }
        }));
      },
      scrollRenderAheadDistance: DEFAULT_SCROLL_RENDER_AHEAD,
      onEndReachedThreshold: DEFAULT_END_REACHED_THRESHOLD,
      stickySectionHeadersEnabled: Platform.OS === 'ios',
      stickyHeaderIndices: []
    };
  },

  getInitialState: function getInitialState() {
    return {
      curRenderedRowsCount: this.props.initialListSize,
      highlightedRow: {}
    };
  },

  getInnerViewNode: function getInnerViewNode() {
    return this._scrollComponent.getInnerViewNode();
  },

  componentWillMount: function componentWillMount() {
    this.scrollProperties = {
      visibleLength: null,
      contentLength: null,
      offset: 0
    };
    this._childFrames = [];
    this._visibleRows = {};
    this._prevRenderedRowsCount = 0;
    this._sentEndForContentLength = null;
  },

  componentDidMount: function componentDidMount() {
    var _this = this;

    this.requestAnimationFrame(function () {
      _this._measureAndUpdateScrollProps();
    });
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    var _this2 = this;

    if (this.props.dataSource !== nextProps.dataSource || this.props.initialListSize !== nextProps.initialListSize) {
      this.setState(function (state, props) {
        _this2._prevRenderedRowsCount = 0;
        return {
          curRenderedRowsCount: Math.min(Math.max(state.curRenderedRowsCount, props.initialListSize), props.enableEmptySections ? props.dataSource.getRowAndSectionCount() : props.dataSource.getRowCount())
        };
      }, function () {
        return _this2._renderMoreRowsIfNeeded();
      });
    }
  },

  componentDidUpdate: function componentDidUpdate() {
    var _this3 = this;

    this.requestAnimationFrame(function () {
      _this3._measureAndUpdateScrollProps();
    });
  },

  _onRowHighlighted: function _onRowHighlighted(sectionID, rowID) {
    this.setState({ highlightedRow: { sectionID: sectionID, rowID: rowID } });
  },

  render: function render() {
    var bodyComponents = [];

    var dataSource = this.props.dataSource;
    var allRowIDs = dataSource.rowIdentities;
    var rowCount = 0;
    var stickySectionHeaderIndices = [];

    var renderSectionHeader = this.props.renderSectionHeader;


    var header = this.props.renderHeader && this.props.renderHeader();
    var footer = this.props.renderFooter && this.props.renderFooter();
    var totalIndex = header ? 1 : 0;

    for (var sectionIdx = 0; sectionIdx < allRowIDs.length; sectionIdx++) {
      var sectionID = dataSource.sectionIdentities[sectionIdx];
      var rowIDs = allRowIDs[sectionIdx];
      if (rowIDs.length === 0) {
        if (this.props.enableEmptySections === undefined) {
          var warning = require(23                ); // 23 = fbjs/lib/warning
          warning(false, 'In next release empty section headers will be rendered.' + " In this release you can use 'enableEmptySections' flag to render empty section headers.");
          continue;
        } else {
          var invariant = require(13                  ); // 13 = fbjs/lib/invariant
          invariant(this.props.enableEmptySections, "In next release 'enableEmptySections' flag will be deprecated, empty section headers will always be rendered." + ' If empty section headers are not desirable their indices should be excluded from sectionIDs object.' + " In this release 'enableEmptySections' may only have value 'true' to allow empty section headers rendering.");
        }
      }

      if (renderSectionHeader) {
        var element = renderSectionHeader(dataSource.getSectionHeaderData(sectionIdx), sectionID);
        if (element) {
          bodyComponents.push(React.cloneElement(element, { key: 's_' + sectionID }));
          if (this.props.stickySectionHeadersEnabled) {
            stickySectionHeaderIndices.push(totalIndex);
          }
          totalIndex++;
        }
      }

      for (var rowIdx = 0; rowIdx < rowIDs.length; rowIdx++) {
        var rowID = rowIDs[rowIdx];
        var comboID = sectionID + '_' + rowID;
        var shouldUpdateRow = rowCount >= this._prevRenderedRowsCount && dataSource.rowShouldUpdate(sectionIdx, rowIdx);
        var row = React.createElement(StaticRenderer, {
          key: 'r_' + comboID,
          shouldUpdate: !!shouldUpdateRow,
          render: this.props.renderRow.bind(null, dataSource.getRowData(sectionIdx, rowIdx), sectionID, rowID, this._onRowHighlighted),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 476
          }
        });
        bodyComponents.push(row);
        totalIndex++;

        if (this.props.renderSeparator && (rowIdx !== rowIDs.length - 1 || sectionIdx === allRowIDs.length - 1)) {
          var adjacentRowHighlighted = this.state.highlightedRow.sectionID === sectionID && (this.state.highlightedRow.rowID === rowID || this.state.highlightedRow.rowID === rowIDs[rowIdx + 1]);
          var separator = this.props.renderSeparator(sectionID, rowID, adjacentRowHighlighted);
          if (separator) {
            bodyComponents.push(React.createElement(
              View,
              { key: 's_' + comboID, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 505
                }
              },
              separator
            ));
            totalIndex++;
          }
        }
        if (++rowCount === this.state.curRenderedRowsCount) {
          break;
        }
      }
      if (rowCount >= this.state.curRenderedRowsCount) {
        break;
      }
    }

    var _props = this.props,
        renderScrollComponent = _props.renderScrollComponent,
        props = babelHelpers.objectWithoutProperties(_props, ['renderScrollComponent']);

    if (!props.scrollEventThrottle) {
      props.scrollEventThrottle = DEFAULT_SCROLL_CALLBACK_THROTTLE;
    }
    if (props.removeClippedSubviews === undefined) {
      props.removeClippedSubviews = true;
    }

    babelHelpers.extends(props, {
      onScroll: this._onScroll,

      stickyHeaderIndices: this.props.stickyHeaderIndices.concat(stickySectionHeaderIndices),

      onKeyboardWillShow: undefined,
      onKeyboardWillHide: undefined,
      onKeyboardDidShow: undefined,
      onKeyboardDidHide: undefined
    });

    return cloneReferencedElement(renderScrollComponent(props), {
      ref: this._setScrollComponentRef,
      onContentSizeChange: this._onContentSizeChange,
      onLayout: this._onLayout,
      DEPRECATED_sendUpdatedChildFrames: typeof props.onChangeVisibleRows !== undefined
    }, header, bodyComponents, footer);
  },

  _measureAndUpdateScrollProps: function _measureAndUpdateScrollProps() {
    var scrollComponent = this.getScrollResponder();
    if (!scrollComponent || !scrollComponent.getInnerViewNode) {
      return;
    }

    RCTScrollViewManager && RCTScrollViewManager.calculateChildFrames && RCTScrollViewManager.calculateChildFrames(ReactNative.findNodeHandle(scrollComponent), this._updateVisibleRows);
  },

  _setScrollComponentRef: function _setScrollComponentRef(scrollComponent) {
    this._scrollComponent = scrollComponent;
  },

  _onContentSizeChange: function _onContentSizeChange(width, height) {
    var contentLength = !this.props.horizontal ? height : width;
    if (contentLength !== this.scrollProperties.contentLength) {
      this.scrollProperties.contentLength = contentLength;
      this._updateVisibleRows();
      this._renderMoreRowsIfNeeded();
    }
    this.props.onContentSizeChange && this.props.onContentSizeChange(width, height);
  },

  _onLayout: function _onLayout(event) {
    var _event$nativeEvent$la = event.nativeEvent.layout,
        width = _event$nativeEvent$la.width,
        height = _event$nativeEvent$la.height;

    var visibleLength = !this.props.horizontal ? height : width;
    if (visibleLength !== this.scrollProperties.visibleLength) {
      this.scrollProperties.visibleLength = visibleLength;
      this._updateVisibleRows();
      this._renderMoreRowsIfNeeded();
    }
    this.props.onLayout && this.props.onLayout(event);
  },

  _maybeCallOnEndReached: function _maybeCallOnEndReached(event) {
    if (this.props.onEndReached && this.scrollProperties.contentLength !== this._sentEndForContentLength && this._getDistanceFromEnd(this.scrollProperties) < this.props.onEndReachedThreshold && this.state.curRenderedRowsCount === (this.props.enableEmptySections ? this.props.dataSource.getRowAndSectionCount() : this.props.dataSource.getRowCount())) {
      this._sentEndForContentLength = this.scrollProperties.contentLength;
      this.props.onEndReached(event);
      return true;
    }
    return false;
  },

  _renderMoreRowsIfNeeded: function _renderMoreRowsIfNeeded() {
    if (this.scrollProperties.contentLength === null || this.scrollProperties.visibleLength === null || this.state.curRenderedRowsCount === (this.props.enableEmptySections ? this.props.dataSource.getRowAndSectionCount() : this.props.dataSource.getRowCount())) {
      this._maybeCallOnEndReached();
      return;
    }

    var distanceFromEnd = this._getDistanceFromEnd(this.scrollProperties);
    if (distanceFromEnd < this.props.scrollRenderAheadDistance) {
      this._pageInNewRows();
    }
  },

  _pageInNewRows: function _pageInNewRows() {
    var _this4 = this;

    this.setState(function (state, props) {
      var rowsToRender = Math.min(state.curRenderedRowsCount + props.pageSize, props.enableEmptySections ? props.dataSource.getRowAndSectionCount() : props.dataSource.getRowCount());
      _this4._prevRenderedRowsCount = state.curRenderedRowsCount;
      return {
        curRenderedRowsCount: rowsToRender
      };
    }, function () {
      _this4._measureAndUpdateScrollProps();
      _this4._prevRenderedRowsCount = _this4.state.curRenderedRowsCount;
    });
  },

  _getDistanceFromEnd: function _getDistanceFromEnd(scrollProperties) {
    return scrollProperties.contentLength - scrollProperties.visibleLength - scrollProperties.offset;
  },

  _updateVisibleRows: function _updateVisibleRows(updatedFrames) {
    var _this5 = this;

    if (!this.props.onChangeVisibleRows) {
      return;
    }
    if (updatedFrames) {
      updatedFrames.forEach(function (newFrame) {
        _this5._childFrames[newFrame.index] = merge(newFrame);
      });
    }
    var isVertical = !this.props.horizontal;
    var dataSource = this.props.dataSource;
    var visibleMin = this.scrollProperties.offset;
    var visibleMax = visibleMin + this.scrollProperties.visibleLength;
    var allRowIDs = dataSource.rowIdentities;

    var header = this.props.renderHeader && this.props.renderHeader();
    var totalIndex = header ? 1 : 0;
    var visibilityChanged = false;
    var changedRows = {};
    for (var sectionIdx = 0; sectionIdx < allRowIDs.length; sectionIdx++) {
      var rowIDs = allRowIDs[sectionIdx];
      if (rowIDs.length === 0) {
        continue;
      }
      var sectionID = dataSource.sectionIdentities[sectionIdx];
      if (this.props.renderSectionHeader) {
        totalIndex++;
      }
      var visibleSection = this._visibleRows[sectionID];
      if (!visibleSection) {
        visibleSection = {};
      }
      for (var rowIdx = 0; rowIdx < rowIDs.length; rowIdx++) {
        var rowID = rowIDs[rowIdx];
        var frame = this._childFrames[totalIndex];
        totalIndex++;
        if (this.props.renderSeparator && (rowIdx !== rowIDs.length - 1 || sectionIdx === allRowIDs.length - 1)) {
          totalIndex++;
        }
        if (!frame) {
          break;
        }
        var rowVisible = visibleSection[rowID];
        var min = isVertical ? frame.y : frame.x;
        var max = min + (isVertical ? frame.height : frame.width);
        if (!min && !max || min === max) {
          break;
        }
        if (min > visibleMax || max < visibleMin) {
          if (rowVisible) {
            visibilityChanged = true;
            delete visibleSection[rowID];
            if (!changedRows[sectionID]) {
              changedRows[sectionID] = {};
            }
            changedRows[sectionID][rowID] = false;
          }
        } else if (!rowVisible) {
          visibilityChanged = true;
          visibleSection[rowID] = true;
          if (!changedRows[sectionID]) {
            changedRows[sectionID] = {};
          }
          changedRows[sectionID][rowID] = true;
        }
      }
      if (!isEmpty(visibleSection)) {
        this._visibleRows[sectionID] = visibleSection;
      } else if (this._visibleRows[sectionID]) {
        delete this._visibleRows[sectionID];
      }
    }
    visibilityChanged && this.props.onChangeVisibleRows(this._visibleRows, changedRows);
  },

  _onScroll: function _onScroll(e) {
    var isVertical = !this.props.horizontal;
    this.scrollProperties.visibleLength = e.nativeEvent.layoutMeasurement[isVertical ? 'height' : 'width'];
    this.scrollProperties.contentLength = e.nativeEvent.contentSize[isVertical ? 'height' : 'width'];
    this.scrollProperties.offset = e.nativeEvent.contentOffset[isVertical ? 'y' : 'x'];
    this._updateVisibleRows(e.nativeEvent.updatedChildFrames);
    if (!this._maybeCallOnEndReached(e)) {
      this._renderMoreRowsIfNeeded();
    }

    if (this.props.onEndReached && this._getDistanceFromEnd(this.scrollProperties) > this.props.onEndReachedThreshold) {
      this._sentEndForContentLength = null;
    }

    this.props.onScroll && this.props.onScroll(e);
  }
});

module.exports = ListView;
}, 240, null, "ListView");
__d(/* ListViewDataSource */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var isEmpty = require(242      ); // 242 = isEmpty

var warning = require(23                ); // 23 = fbjs/lib/warning

function defaultGetRowData(dataBlob, sectionID, rowID) {
  return dataBlob[sectionID][rowID];
}

function defaultGetSectionHeaderData(dataBlob, sectionID) {
  return dataBlob[sectionID];
}

var ListViewDataSource = function () {
  function ListViewDataSource(params) {
    babelHelpers.classCallCheck(this, ListViewDataSource);

    invariant(params && typeof params.rowHasChanged === 'function', 'Must provide a rowHasChanged function.');
    this._rowHasChanged = params.rowHasChanged;
    this._getRowData = params.getRowData || defaultGetRowData;
    this._sectionHeaderHasChanged = params.sectionHeaderHasChanged;
    this._getSectionHeaderData = params.getSectionHeaderData || defaultGetSectionHeaderData;

    this._dataBlob = null;
    this._dirtyRows = [];
    this._dirtySections = [];
    this._cachedRowCount = 0;

    this.rowIdentities = [];
    this.sectionIdentities = [];
  }

  babelHelpers.createClass(ListViewDataSource, [{
    key: 'cloneWithRows',
    value: function cloneWithRows(dataBlob, rowIdentities) {
      var rowIds = rowIdentities ? [[].concat(babelHelpers.toConsumableArray(rowIdentities))] : null;
      if (!this._sectionHeaderHasChanged) {
        this._sectionHeaderHasChanged = function () {
          return false;
        };
      }
      return this.cloneWithRowsAndSections({ s1: dataBlob }, ['s1'], rowIds);
    }
  }, {
    key: 'cloneWithRowsAndSections',
    value: function cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities) {
      invariant(typeof this._sectionHeaderHasChanged === 'function', 'Must provide a sectionHeaderHasChanged function with section data.');
      invariant(!sectionIdentities || !rowIdentities || sectionIdentities.length === rowIdentities.length, 'row and section ids lengths must be the same');

      var newSource = new ListViewDataSource({
        getRowData: this._getRowData,
        getSectionHeaderData: this._getSectionHeaderData,
        rowHasChanged: this._rowHasChanged,
        sectionHeaderHasChanged: this._sectionHeaderHasChanged
      });
      newSource._dataBlob = dataBlob;
      if (sectionIdentities) {
        newSource.sectionIdentities = sectionIdentities;
      } else {
        newSource.sectionIdentities = Object.keys(dataBlob);
      }
      if (rowIdentities) {
        newSource.rowIdentities = rowIdentities;
      } else {
        newSource.rowIdentities = [];
        newSource.sectionIdentities.forEach(function (sectionID) {
          newSource.rowIdentities.push(Object.keys(dataBlob[sectionID]));
        });
      }
      newSource._cachedRowCount = countRows(newSource.rowIdentities);

      newSource._calculateDirtyArrays(this._dataBlob, this.sectionIdentities, this.rowIdentities);

      return newSource;
    }
  }, {
    key: 'getRowCount',
    value: function getRowCount() {
      return this._cachedRowCount;
    }
  }, {
    key: 'getRowAndSectionCount',
    value: function getRowAndSectionCount() {
      return this._cachedRowCount + this.sectionIdentities.length;
    }
  }, {
    key: 'rowShouldUpdate',
    value: function rowShouldUpdate(sectionIndex, rowIndex) {
      var needsUpdate = this._dirtyRows[sectionIndex][rowIndex];
      warning(needsUpdate !== undefined, 'missing dirtyBit for section, row: ' + sectionIndex + ', ' + rowIndex);
      return needsUpdate;
    }
  }, {
    key: 'getRowData',
    value: function getRowData(sectionIndex, rowIndex) {
      var sectionID = this.sectionIdentities[sectionIndex];
      var rowID = this.rowIdentities[sectionIndex][rowIndex];
      warning(sectionID !== undefined && rowID !== undefined, 'rendering invalid section, row: ' + sectionIndex + ', ' + rowIndex);
      return this._getRowData(this._dataBlob, sectionID, rowID);
    }
  }, {
    key: 'getRowIDForFlatIndex',
    value: function getRowIDForFlatIndex(index) {
      var accessIndex = index;
      for (var ii = 0; ii < this.sectionIdentities.length; ii++) {
        if (accessIndex >= this.rowIdentities[ii].length) {
          accessIndex -= this.rowIdentities[ii].length;
        } else {
          return this.rowIdentities[ii][accessIndex];
        }
      }
      return null;
    }
  }, {
    key: 'getSectionIDForFlatIndex',
    value: function getSectionIDForFlatIndex(index) {
      var accessIndex = index;
      for (var ii = 0; ii < this.sectionIdentities.length; ii++) {
        if (accessIndex >= this.rowIdentities[ii].length) {
          accessIndex -= this.rowIdentities[ii].length;
        } else {
          return this.sectionIdentities[ii];
        }
      }
      return null;
    }
  }, {
    key: 'getSectionLengths',
    value: function getSectionLengths() {
      var results = [];
      for (var ii = 0; ii < this.sectionIdentities.length; ii++) {
        results.push(this.rowIdentities[ii].length);
      }
      return results;
    }
  }, {
    key: 'sectionHeaderShouldUpdate',
    value: function sectionHeaderShouldUpdate(sectionIndex) {
      var needsUpdate = this._dirtySections[sectionIndex];
      warning(needsUpdate !== undefined, 'missing dirtyBit for section: ' + sectionIndex);
      return needsUpdate;
    }
  }, {
    key: 'getSectionHeaderData',
    value: function getSectionHeaderData(sectionIndex) {
      if (!this._getSectionHeaderData) {
        return null;
      }
      var sectionID = this.sectionIdentities[sectionIndex];
      warning(sectionID !== undefined, 'renderSection called on invalid section: ' + sectionIndex);
      return this._getSectionHeaderData(this._dataBlob, sectionID);
    }
  }, {
    key: '_calculateDirtyArrays',
    value: function _calculateDirtyArrays(prevDataBlob, prevSectionIDs, prevRowIDs) {
      var prevSectionsHash = keyedDictionaryFromArray(prevSectionIDs);
      var prevRowsHash = {};
      for (var ii = 0; ii < prevRowIDs.length; ii++) {
        var sectionID = prevSectionIDs[ii];
        warning(!prevRowsHash[sectionID], 'SectionID appears more than once: ' + sectionID);
        prevRowsHash[sectionID] = keyedDictionaryFromArray(prevRowIDs[ii]);
      }

      this._dirtySections = [];
      this._dirtyRows = [];

      var dirty;
      for (var sIndex = 0; sIndex < this.sectionIdentities.length; sIndex++) {
        var sectionID = this.sectionIdentities[sIndex];

        dirty = !prevSectionsHash[sectionID];
        var sectionHeaderHasChanged = this._sectionHeaderHasChanged;
        if (!dirty && sectionHeaderHasChanged) {
          dirty = sectionHeaderHasChanged(this._getSectionHeaderData(prevDataBlob, sectionID), this._getSectionHeaderData(this._dataBlob, sectionID));
        }
        this._dirtySections.push(!!dirty);

        this._dirtyRows[sIndex] = [];
        for (var rIndex = 0; rIndex < this.rowIdentities[sIndex].length; rIndex++) {
          var rowID = this.rowIdentities[sIndex][rIndex];

          dirty = !prevSectionsHash[sectionID] || !prevRowsHash[sectionID][rowID] || this._rowHasChanged(this._getRowData(prevDataBlob, sectionID, rowID), this._getRowData(this._dataBlob, sectionID, rowID));
          this._dirtyRows[sIndex].push(!!dirty);
        }
      }
    }
  }]);
  return ListViewDataSource;
}();

function countRows(allRowIDs) {
  var totalRows = 0;
  for (var sectionIdx = 0; sectionIdx < allRowIDs.length; sectionIdx++) {
    var rowIDs = allRowIDs[sectionIdx];
    totalRows += rowIDs.length;
  }
  return totalRows;
}

function keyedDictionaryFromArray(arr) {
  if (isEmpty(arr)) {
    return {};
  }
  var result = {};
  for (var ii = 0; ii < arr.length; ii++) {
    var key = arr[ii];
    warning(!result[key], 'Value appears more than once in array: ' + key);
    result[key] = true;
  }
  return result;
}

module.exports = ListViewDataSource;
}, 241, null, "ListViewDataSource");
__d(/* isEmpty */function(global, require, module, exports) {
'use strict';

function isEmpty(obj) {
  if (Array.isArray(obj)) {
    return obj.length === 0;
  } else if (typeof obj === 'object') {
    for (var i in obj) {
      return false;
    }
    return true;
  } else {
    return !obj;
  }
}

module.exports = isEmpty;
}, 242, null, "isEmpty");
__d(/* StaticRenderer */function(global, require, module, exports) {
'use strict';

var React = require(129    ); // 129 = React

var PropTypes = require(126         ); // 126 = prop-types

var StaticRenderer = function (_React$Component) {
  babelHelpers.inherits(StaticRenderer, _React$Component);

  function StaticRenderer() {
    babelHelpers.classCallCheck(this, StaticRenderer);
    return babelHelpers.possibleConstructorReturn(this, (StaticRenderer.__proto__ || Object.getPrototypeOf(StaticRenderer)).apply(this, arguments));
  }

  babelHelpers.createClass(StaticRenderer, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      return nextProps.shouldUpdate;
    }
  }, {
    key: 'render',
    value: function render() {
      return this.props.render();
    }
  }]);
  return StaticRenderer;
}(React.Component);

StaticRenderer.propTypes = {
  shouldUpdate: PropTypes.bool.isRequired,
  render: PropTypes.func.isRequired
};


module.exports = StaticRenderer;
}, 243, null, "StaticRenderer");
__d(/* react-clone-referenced-element/cloneReferencedElement.js */function(global, require, module, exports) {'use strict';

var React = require(35     ); // 35 = react

function cloneReferencedElement(element, config) {
  var cloneRef = config.ref;
  var originalRef = element.ref;

  for (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    children[_key - 2] = arguments[_key];
  }

  if (originalRef == null || cloneRef == null) {
    return React.cloneElement.apply(React, [element, config].concat(children));
  }

  if (typeof originalRef !== 'function') {
    if (__DEV__) {
      console.warn('Cloning an element with a ref that will be overwritten because it ' + 'is not a function. Use a composable callback-style ref instead. ' + 'Ignoring ref: ' + originalRef);
    }
    return React.cloneElement.apply(React, [element, config].concat(children));
  }

  return React.cloneElement.apply(React, [element, babelHelpers.extends({}, config, {
    ref: function ref(component) {
      cloneRef(component);
      originalRef(component);
    }
  })].concat(children));
}

module.exports = cloneReferencedElement;
}, 244, null, "react-clone-referenced-element/cloneReferencedElement.js");
__d(/* RefreshControl */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/RefreshControl/RefreshControl.js';
var ColorPropType = require(122            ); // 122 = ColorPropType
var NativeMethodsMixin = require(124                 ); // 124 = NativeMethodsMixin
var Platform = require(46        ); // 46 = Platform
var React = require(129    ); // 129 = React
var PropTypes = require(126         ); // 126 = prop-types
var ViewPropTypes = require(130            ); // 130 = ViewPropTypes

var createReactClass = require(171                 ); // 171 = create-react-class
var requireNativeComponent = require(144                     ); // 144 = requireNativeComponent

if (Platform.OS === 'android') {
  var RefreshLayoutConsts = require(47         ).AndroidSwipeRefreshLayout.Constants; // 47 = UIManager
} else {
  var RefreshLayoutConsts = { SIZE: {} };
}

var RefreshControl = createReactClass({
  displayName: 'RefreshControl',
  statics: {
    SIZE: RefreshLayoutConsts.SIZE
  },

  mixins: [NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    onRefresh: PropTypes.func,

    refreshing: PropTypes.bool.isRequired,

    tintColor: ColorPropType,

    titleColor: ColorPropType,

    title: PropTypes.string,

    enabled: PropTypes.bool,

    colors: PropTypes.arrayOf(ColorPropType),

    progressBackgroundColor: ColorPropType,

    size: PropTypes.oneOf([RefreshLayoutConsts.SIZE.DEFAULT, RefreshLayoutConsts.SIZE.LARGE]),

    progressViewOffset: PropTypes.number
  }),

  _nativeRef: null,
  _lastNativeRefreshing: false,

  componentDidMount: function componentDidMount() {
    this._lastNativeRefreshing = this.props.refreshing;
  },
  componentDidUpdate: function componentDidUpdate(prevProps) {
    if (this.props.refreshing !== prevProps.refreshing) {
      this._lastNativeRefreshing = this.props.refreshing;
    } else if (this.props.refreshing !== this._lastNativeRefreshing) {
      this._nativeRef.setNativeProps({ refreshing: this.props.refreshing });
      this._lastNativeRefreshing = this.props.refreshing;
    }
  },
  render: function render() {
    var _this = this;

    return React.createElement(NativeRefreshControl, babelHelpers.extends({}, this.props, {
      ref: function ref(_ref) {
        _this._nativeRef = _ref;
      },
      onRefresh: this._onRefresh,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 157
      }
    }));
  },
  _onRefresh: function _onRefresh() {
    this._lastNativeRefreshing = true;

    this.props.onRefresh && this.props.onRefresh();

    this.forceUpdate();
  }
});

if (Platform.OS === 'ios') {
  var NativeRefreshControl = requireNativeComponent('RCTRefreshControl', RefreshControl);
} else if (Platform.OS === 'android') {
  var NativeRefreshControl = requireNativeComponent('AndroidSwipeRefreshLayout', RefreshControl);
}

module.exports = RefreshControl;
}, 245, null, "RefreshControl");
__d(/* VirtualizedList */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Lists/VirtualizedList.js';
var Batchinator = require(247          ); // 247 = Batchinator
var FillRateHelper = require(248             ); // 248 = FillRateHelper
var PropTypes = require(126         ); // 126 = prop-types
var React = require(129    ); // 129 = React
var ReactNative = require(21           ); // 21 = ReactNative
var RefreshControl = require(245             ); // 245 = RefreshControl
var ScrollView = require(223         ); // 223 = ScrollView
var StyleSheet = require(167         ); // 167 = StyleSheet
var View = require(169   ); // 169 = View
var ViewabilityHelper = require(249                ); // 249 = ViewabilityHelper

var flattenStyle = require(43            ); // 43 = flattenStyle
var infoLog = require(108      ); // 108 = infoLog
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var warning = require(23                ); // 23 = fbjs/lib/warning

var _require = require(250              ), // 250 = VirtualizeUtils
    computeWindowedRenderLimits = _require.computeWindowedRenderLimits;

var _usedIndexForKey = false;

var VirtualizedList = function (_React$PureComponent) {
  babelHelpers.inherits(VirtualizedList, _React$PureComponent);
  babelHelpers.createClass(VirtualizedList, [{
    key: 'scrollToEnd',
    value: function scrollToEnd(params) {
      var animated = params ? params.animated : true;
      var veryLast = this.props.getItemCount(this.props.data) - 1;
      var frame = this._getFrameMetricsApprox(veryLast);
      var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);

      this._scrollRef.scrollTo(this.props.horizontal ? { x: offset, animated: animated } : { y: offset, animated: animated });
    }
  }, {
    key: 'scrollToIndex',
    value: function scrollToIndex(params) {
      var _props = this.props,
          data = _props.data,
          horizontal = _props.horizontal,
          getItemCount = _props.getItemCount,
          getItemLayout = _props.getItemLayout,
          onScrollToIndexFailed = _props.onScrollToIndexFailed;
      var animated = params.animated,
          index = params.index,
          viewOffset = params.viewOffset,
          viewPosition = params.viewPosition;

      invariant(index >= 0 && index < getItemCount(data), 'scrollToIndex out of range: ' + index + ' vs ' + (getItemCount(data) - 1));
      if (!getItemLayout && index > this._highestMeasuredFrameIndex) {
        invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');
        onScrollToIndexFailed({
          averageItemLength: this._averageCellLength,
          highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,
          index: index
        });
        return;
      }
      var frame = this._getFrameMetricsApprox(index);
      var offset = Math.max(0, frame.offset - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);

      this._scrollRef.scrollTo(horizontal ? { x: offset, animated: animated } : { y: offset, animated: animated });
    }
  }, {
    key: 'scrollToItem',
    value: function scrollToItem(params) {
      var item = params.item;
      var _props2 = this.props,
          data = _props2.data,
          getItem = _props2.getItem,
          getItemCount = _props2.getItemCount;

      var itemCount = getItemCount(data);
      for (var _index = 0; _index < itemCount; _index++) {
        if (getItem(data, _index) === item) {
          this.scrollToIndex(babelHelpers.extends({}, params, { index: _index }));
          break;
        }
      }
    }
  }, {
    key: 'scrollToOffset',
    value: function scrollToOffset(params) {
      var animated = params.animated,
          offset = params.offset;

      this._scrollRef.scrollTo(this.props.horizontal ? { x: offset, animated: animated } : { y: offset, animated: animated });
    }
  }, {
    key: 'recordInteraction',
    value: function recordInteraction() {
      this._viewabilityTuples.forEach(function (t) {
        t.viewabilityHelper.recordInteraction();
      });
      this._updateViewableItems(this.props.data);
    }
  }, {
    key: 'flashScrollIndicators',
    value: function flashScrollIndicators() {
      this._scrollRef.flashScrollIndicators();
    }
  }, {
    key: 'getScrollResponder',
    value: function getScrollResponder() {
      if (this._scrollRef && this._scrollRef.getScrollResponder) {
        return this._scrollRef.getScrollResponder();
      }
    }
  }, {
    key: 'getScrollableNode',
    value: function getScrollableNode() {
      if (this._scrollRef && this._scrollRef.getScrollableNode) {
        return this._scrollRef.getScrollableNode();
      } else {
        return ReactNative.findNodeHandle(this._scrollRef);
      }
    }
  }, {
    key: 'setNativeProps',
    value: function setNativeProps(props) {
      if (this._scrollRef) {
        this._scrollRef.setNativeProps(props);
      }
    }
  }, {
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        virtualizedList: {
          horizontal: this.props.horizontal
        }
      };
    }
  }]);

  function VirtualizedList(props, context) {
    babelHelpers.classCallCheck(this, VirtualizedList);

    var _this = babelHelpers.possibleConstructorReturn(this, (VirtualizedList.__proto__ || Object.getPrototypeOf(VirtualizedList)).call(this, props, context));

    _initialiseProps.call(_this);

    invariant(!props.onScroll || !props.onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');
    invariant(!(_this._isNestedWithSameOrientation() && props.onViewableItemsChanged), 'Nesting lists that scroll in the same direction does not support onViewableItemsChanged' + 'on the inner list.');

    _this._fillRateHelper = new FillRateHelper(_this._getFrameMetrics);
    _this._updateCellsToRenderBatcher = new Batchinator(_this._updateCellsToRender, _this.props.updateCellsBatchingPeriod);

    if (_this.props.viewabilityConfigCallbackPairs) {
      _this._viewabilityTuples = _this.props.viewabilityConfigCallbackPairs.map(function (pair) {
        return {
          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),
          onViewableItemsChanged: pair.onViewableItemsChanged
        };
      });
    } else if (_this.props.onViewableItemsChanged) {
      _this._viewabilityTuples.push({
        viewabilityHelper: new ViewabilityHelper(_this.props.viewabilityConfig),
        onViewableItemsChanged: _this.props.onViewableItemsChanged
      });
    }

    _this.state = {
      first: _this.props.initialScrollIndex || 0,
      last: Math.min(_this.props.getItemCount(_this.props.data), (_this.props.initialScrollIndex || 0) + _this.props.initialNumToRender) - 1
    };
    return _this;
  }

  babelHelpers.createClass(VirtualizedList, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      if (this.props.initialScrollIndex) {
        this._initialScrollIndexTimeout = setTimeout(function () {
          return _this2.scrollToIndex({
            animated: false,
            index: _this2.props.initialScrollIndex
          });
        }, 0);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._updateViewableItems(null);
      this._updateCellsToRenderBatcher.dispose();
      this._viewabilityTuples.forEach(function (tuple) {
        tuple.viewabilityHelper.dispose();
      });
      this._fillRateHelper.deactivateAndFlush();
      clearTimeout(this._initialScrollIndexTimeout);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(newProps) {
      var data = newProps.data,
          extraData = newProps.extraData,
          getItemCount = newProps.getItemCount,
          maxToRenderPerBatch = newProps.maxToRenderPerBatch;

      this.setState({
        first: Math.max(0, Math.min(this.state.first, getItemCount(data) - 1 - maxToRenderPerBatch)),
        last: Math.max(0, Math.min(this.state.last, getItemCount(data) - 1))
      });
      if (data !== this.props.data || extraData !== this.props.extraData) {
        this._hasDataChangedSinceEndReached = true;
      }
    }
  }, {
    key: '_pushCells',
    value: function _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {
      var _this3 = this;

      var _props3 = this.props,
          CellRendererComponent = _props3.CellRendererComponent,
          ItemSeparatorComponent = _props3.ItemSeparatorComponent,
          data = _props3.data,
          getItem = _props3.getItem,
          getItemCount = _props3.getItemCount,
          horizontal = _props3.horizontal,
          keyExtractor = _props3.keyExtractor;

      var stickyOffset = this.props.ListHeaderComponent ? 1 : 0;
      var end = getItemCount(data) - 1;
      var prevCellKey = void 0;
      last = Math.min(end, last);

      var _loop = function _loop(ii) {
        var item = getItem(data, ii);
        var key = keyExtractor(item, ii);
        if (stickyIndicesFromProps.has(ii + stickyOffset)) {
          stickyHeaderIndices.push(cells.length);
        }
        cells.push(React.createElement(CellRenderer, {
          CellRendererComponent: CellRendererComponent,
          ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,
          cellKey: key,
          fillRateHelper: _this3._fillRateHelper,
          horizontal: horizontal,
          index: ii,
          inversionStyle: inversionStyle,
          item: item,
          key: key,
          prevCellKey: prevCellKey,
          onUpdateSeparators: _this3._onUpdateSeparators,
          onLayout: function onLayout(e) {
            return _this3._onCellLayout(e, key, ii);
          },
          onUnmount: _this3._onCellUnmount,
          parentProps: _this3.props,
          ref: function ref(_ref) {
            _this3._cellRefs[key] = _ref;
          },
          __source: {
            fileName: _jsxFileName,
            lineNumber: 550
          }
        }));
        prevCellKey = key;
      };

      for (var ii = first; ii <= last; ii++) {
        _loop(ii);
      }
    }
  }, {
    key: '_isVirtualizationDisabled',
    value: function _isVirtualizationDisabled() {
      return this.props.disableVirtualization || this._isNestedWithSameOrientation();
    }
  }, {
    key: '_isNestedWithSameOrientation',
    value: function _isNestedWithSameOrientation() {
      var nestedContext = this.context.virtualizedList;
      return !!(nestedContext && !!nestedContext.horizontal === !!this.props.horizontal);
    }
  }, {
    key: 'render',
    value: function render() {
      if (__DEV__) {
        var flatStyles = flattenStyle(this.props.contentContainerStyle);
        warning(flatStyles == null || flatStyles.flexWrap !== 'wrap', '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');
      }

      var _props4 = this.props,
          ListEmptyComponent = _props4.ListEmptyComponent,
          ListFooterComponent = _props4.ListFooterComponent,
          ListHeaderComponent = _props4.ListHeaderComponent;
      var _props5 = this.props,
          data = _props5.data,
          horizontal = _props5.horizontal;

      var isVirtualizationDisabled = this._isVirtualizationDisabled();
      var inversionStyle = this.props.inverted ? this.props.horizontal ? styles.horizontallyInverted : styles.verticallyInverted : null;
      var cells = [];
      var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);
      var stickyHeaderIndices = [];
      if (ListHeaderComponent) {
        if (stickyIndicesFromProps.has(0)) {
          stickyHeaderIndices.push(0);
        }
        var element = React.isValidElement(ListHeaderComponent) ? ListHeaderComponent : React.createElement(ListHeaderComponent, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 627
          }
        });
        cells.push(React.createElement(
          View,
          {
            key: '$header',
            onLayout: this._onLayoutHeader,
            style: inversionStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 630
            }
          },
          element
        ));
      }
      var itemCount = this.props.getItemCount(data);
      if (itemCount > 0) {
        _usedIndexForKey = false;
        var spacerKey = !horizontal ? 'height' : 'width';
        var lastInitialIndex = this.props.initialScrollIndex ? -1 : this.props.initialNumToRender - 1;
        var _state = this.state,
            _first = _state.first,
            _last = _state.last;

        this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, 0, lastInitialIndex, inversionStyle);
        var firstAfterInitial = Math.max(lastInitialIndex + 1, _first);
        if (!isVirtualizationDisabled && _first > lastInitialIndex + 1) {
          var insertedStickySpacer = false;
          if (stickyIndicesFromProps.size > 0) {
            var stickyOffset = ListHeaderComponent ? 1 : 0;

            for (var ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {
              if (stickyIndicesFromProps.has(ii + stickyOffset)) {
                var initBlock = this._getFrameMetricsApprox(lastInitialIndex);
                var stickyBlock = this._getFrameMetricsApprox(ii);
                var leadSpace = stickyBlock.offset - (initBlock.offset + initBlock.length);
                cells.push(React.createElement(View, { key: '$sticky_lead', style: babelHelpers.defineProperty({}, spacerKey, leadSpace), __source: {
                    fileName: _jsxFileName,
                    lineNumber: 667
                  }
                }));
                this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, ii, ii, inversionStyle);
                var trailSpace = this._getFrameMetricsApprox(_first).offset - (stickyBlock.offset + stickyBlock.length);
                cells.push(React.createElement(View, { key: '$sticky_trail', style: babelHelpers.defineProperty({}, spacerKey, trailSpace), __source: {
                    fileName: _jsxFileName,
                    lineNumber: 681
                  }
                }));
                insertedStickySpacer = true;
                break;
              }
            }
          }
          if (!insertedStickySpacer) {
            var _initBlock = this._getFrameMetricsApprox(lastInitialIndex);
            var firstSpace = this._getFrameMetricsApprox(_first).offset - (_initBlock.offset + _initBlock.length);
            cells.push(React.createElement(View, { key: '$lead_spacer', style: babelHelpers.defineProperty({}, spacerKey, firstSpace), __source: {
                fileName: _jsxFileName,
                lineNumber: 694
              }
            }));
          }
        }
        this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, firstAfterInitial, _last, inversionStyle);
        if (!this._hasWarned.keys && _usedIndexForKey) {
          console.warn('VirtualizedList: missing keys for items, make sure to specify a key property on each ' + 'item or provide a custom keyExtractor.');
          this._hasWarned.keys = true;
        }
        if (!isVirtualizationDisabled && _last < itemCount - 1) {
          var lastFrame = this._getFrameMetricsApprox(_last);

          var end = this.props.getItemLayout ? itemCount - 1 : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);
          var endFrame = this._getFrameMetricsApprox(end);
          var tailSpacerLength = endFrame.offset + endFrame.length - (lastFrame.offset + lastFrame.length);
          cells.push(React.createElement(View, { key: '$tail_spacer', style: babelHelpers.defineProperty({}, spacerKey, tailSpacerLength), __source: {
              fileName: _jsxFileName,
              lineNumber: 727
            }
          }));
        }
      } else if (ListEmptyComponent) {
        var _element = React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : React.createElement(ListEmptyComponent, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 735
          }
        });
        cells.push(React.createElement(
          View,
          {
            key: '$empty',
            onLayout: this._onLayoutEmpty,
            style: inversionStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 738
            }
          },
          _element
        ));
      }
      if (ListFooterComponent) {
        var _element2 = React.isValidElement(ListFooterComponent) ? ListFooterComponent : React.createElement(ListFooterComponent, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 751
          }
        });
        cells.push(React.createElement(
          View,
          {
            key: '$footer',
            onLayout: this._onLayoutFooter,
            style: inversionStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 754
            }
          },
          _element2
        ));
      }
      var scrollProps = babelHelpers.extends({}, this.props, {
        onContentSizeChange: this._onContentSizeChange,
        onLayout: this._onLayout,
        onScroll: this._onScroll,
        onScrollBeginDrag: this._onScrollBeginDrag,
        onScrollEndDrag: this._onScrollEndDrag,
        onMomentumScrollEnd: this._onMomentumScrollEnd,
        scrollEventThrottle: this.props.scrollEventThrottle,
        stickyHeaderIndices: stickyHeaderIndices
      });
      if (inversionStyle) {
        scrollProps.style = [inversionStyle, this.props.style];
      }
      var ret = React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {
        ref: this._captureScrollRef
      }, cells);
      if (this.props.debug) {
        return React.createElement(
          View,
          { style: { flex: 1 }, __source: {
              fileName: _jsxFileName,
              lineNumber: 787
            }
          },
          ret,
          this._renderDebugOverlay()
        );
      } else {
        return ret;
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this._scheduleCellsToRenderUpdate();
    }
  }, {
    key: '_computeBlankness',
    value: function _computeBlankness() {
      this._fillRateHelper.computeBlankness(this.props, this.state, this._scrollMetrics);
    }
  }, {
    key: '_onCellLayout',
    value: function _onCellLayout(e, cellKey, index) {
      var layout = e.nativeEvent.layout;
      var next = {
        offset: this._selectOffset(layout),
        length: this._selectLength(layout),
        index: index,
        inLayout: true
      };
      var curr = this._frames[cellKey];
      if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {
        this._totalCellLength += next.length - (curr ? curr.length : 0);
        this._totalCellsMeasured += curr ? 0 : 1;
        this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;
        this._frames[cellKey] = next;
        this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);
        this._scheduleCellsToRenderUpdate();
      } else {
        this._frames[cellKey].inLayout = true;
      }
      this._computeBlankness();
    }
  }, {
    key: '_renderDebugOverlay',
    value: function _renderDebugOverlay() {
      var normalize = this._scrollMetrics.visibleLength / this._scrollMetrics.contentLength;
      var framesInLayout = [];
      var itemCount = this.props.getItemCount(this.props.data);
      for (var ii = 0; ii < itemCount; ii++) {
        var frame = this._getFrameMetricsApprox(ii);
        if (frame.inLayout) {
          framesInLayout.push(frame);
        }
      }
      var windowTop = this._getFrameMetricsApprox(this.state.first).offset;
      var frameLast = this._getFrameMetricsApprox(this.state.last);
      var windowLen = frameLast.offset + frameLast.length - windowTop;
      var visTop = this._scrollMetrics.offset;
      var visLen = this._scrollMetrics.visibleLength;
      var baseStyle = { position: 'absolute', top: 0, right: 0 };
      return React.createElement(
        View,
        {
          style: babelHelpers.extends({}, baseStyle, {
            bottom: 0,
            width: 20,
            borderColor: 'blue',
            borderWidth: 1
          }), __source: {
            fileName: _jsxFileName,
            lineNumber: 952
          }
        },
        framesInLayout.map(function (f, ii) {
          return React.createElement(View, {
            key: 'f' + ii,
            style: babelHelpers.extends({}, baseStyle, {
              left: 0,
              top: f.offset * normalize,
              height: f.length * normalize,
              backgroundColor: 'orange'
            }),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 961
            }
          });
        }),
        React.createElement(View, {
          style: babelHelpers.extends({}, baseStyle, {
            left: 0,
            top: windowTop * normalize,
            height: windowLen * normalize,
            borderColor: 'green',
            borderWidth: 2
          }),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 972
          }
        }),
        React.createElement(View, {
          style: babelHelpers.extends({}, baseStyle, {
            left: 0,
            top: visTop * normalize,
            height: visLen * normalize,
            borderColor: 'red',
            borderWidth: 2
          }),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 982
          }
        })
      );
    }
  }, {
    key: '_selectLength',
    value: function _selectLength(metrics) {
      return !this.props.horizontal ? metrics.height : metrics.width;
    }
  }, {
    key: '_selectOffset',
    value: function _selectOffset(metrics) {
      return !this.props.horizontal ? metrics.y : metrics.x;
    }
  }, {
    key: '_maybeCallOnEndReached',
    value: function _maybeCallOnEndReached() {
      var _props6 = this.props,
          data = _props6.data,
          getItemCount = _props6.getItemCount,
          onEndReached = _props6.onEndReached,
          onEndReachedThreshold = _props6.onEndReachedThreshold;
      var _scrollMetrics = this._scrollMetrics,
          contentLength = _scrollMetrics.contentLength,
          visibleLength = _scrollMetrics.visibleLength,
          offset = _scrollMetrics.offset;

      var distanceFromEnd = contentLength - visibleLength - offset;
      if (onEndReached && this.state.last === getItemCount(data) - 1 && distanceFromEnd < onEndReachedThreshold * visibleLength && (this._hasDataChangedSinceEndReached || this._scrollMetrics.contentLength !== this._sentEndForContentLength)) {
        this._hasDataChangedSinceEndReached = false;
        this._sentEndForContentLength = this._scrollMetrics.contentLength;
        onEndReached({ distanceFromEnd: distanceFromEnd });
      }
    }
  }, {
    key: '_scheduleCellsToRenderUpdate',
    value: function _scheduleCellsToRenderUpdate() {
      var _state2 = this.state,
          first = _state2.first,
          last = _state2.last;
      var _scrollMetrics2 = this._scrollMetrics,
          offset = _scrollMetrics2.offset,
          visibleLength = _scrollMetrics2.visibleLength,
          velocity = _scrollMetrics2.velocity;

      var itemCount = this.props.getItemCount(this.props.data);
      var hiPri = false;
      if (first > 0 || last < itemCount - 1) {
        var distTop = offset - this._getFrameMetricsApprox(first).offset;
        var distBottom = this._getFrameMetricsApprox(last).offset - (offset + visibleLength);
        var scrollingThreshold = this.props.onEndReachedThreshold * visibleLength / 2;
        hiPri = Math.min(distTop, distBottom) < 0 || velocity < -2 && distTop < scrollingThreshold || velocity > 2 && distBottom < scrollingThreshold;
      }

      if (hiPri && this._averageCellLength) {
        this._updateCellsToRenderBatcher.dispose({ abort: true });
        this._updateCellsToRender();
        return;
      } else {
        this._updateCellsToRenderBatcher.schedule();
      }
    }
  }, {
    key: '_updateViewableItems',
    value: function _updateViewableItems(data) {
      var _this4 = this;

      var getItemCount = this.props.getItemCount;


      this._viewabilityTuples.forEach(function (tuple) {
        tuple.viewabilityHelper.onUpdate(getItemCount(data), _this4._scrollMetrics.offset, _this4._scrollMetrics.visibleLength, _this4._getFrameMetrics, _this4._createViewToken, tuple.onViewableItemsChanged, _this4.state);
      });
    }
  }]);
  return VirtualizedList;
}(React.PureComponent);

VirtualizedList.defaultProps = {
  disableVirtualization: false,
  horizontal: false,
  initialNumToRender: 10,
  keyExtractor: function keyExtractor(item, index) {
    if (item.key != null) {
      return item.key;
    }
    _usedIndexForKey = true;
    return String(index);
  },
  maxToRenderPerBatch: 10,
  onEndReachedThreshold: 2,
  scrollEventThrottle: 50,
  updateCellsBatchingPeriod: 50,
  windowSize: 21 };
VirtualizedList.contextTypes = {
  virtualizedList: PropTypes.shape({
    horizontal: PropTypes.bool
  })
};
VirtualizedList.childContextTypes = {
  virtualizedList: PropTypes.shape({
    horizontal: PropTypes.bool
  })
};

var _initialiseProps = function _initialiseProps() {
  var _this6 = this;

  this._onUpdateSeparators = function (keys, newProps) {
    keys.forEach(function (key) {
      var ref = key != null && _this6._cellRefs[key];
      ref && ref.updateSeparatorProps(newProps);
    });
  };

  this._averageCellLength = 0;
  this._cellRefs = {};
  this._hasDataChangedSinceEndReached = true;
  this._hasWarned = {};
  this._highestMeasuredFrameIndex = 0;
  this._headerLength = 0;
  this._initialScrollIndexTimeout = 0;
  this._frames = {};
  this._footerLength = 0;
  this._scrollMetrics = {
    contentLength: 0,
    dOffset: 0,
    dt: 10,
    offset: 0,
    timestamp: 0,
    velocity: 0,
    visibleLength: 0
  };
  this._scrollRef = null;
  this._sentEndForContentLength = 0;
  this._totalCellLength = 0;
  this._totalCellsMeasured = 0;
  this._viewabilityTuples = [];

  this._captureScrollRef = function (ref) {
    _this6._scrollRef = ref;
  };

  this._defaultRenderScrollComponent = function (props) {
    if (_this6._isNestedWithSameOrientation()) {
      return React.createElement(View, babelHelpers.extends({}, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 841
        }
      }));
    } else if (props.onRefresh) {
      invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify(props.refreshing) + '`');
      return React.createElement(ScrollView, babelHelpers.extends({}, props, {
        refreshControl: React.createElement(RefreshControl, {
          refreshing: props.refreshing,
          onRefresh: props.onRefresh,
          progressViewOffset: props.progressViewOffset,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 859
          }
        }),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 853
        }
      }));
    } else {
      return React.createElement(ScrollView, babelHelpers.extends({}, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 871
        }
      }));
    }
  };

  this._onCellUnmount = function (cellKey) {
    var curr = _this6._frames[cellKey];
    if (curr) {
      _this6._frames[cellKey] = babelHelpers.extends({}, curr, { inLayout: false });
    }
  };

  this._onLayout = function (e) {
    _this6._scrollMetrics.visibleLength = _this6._selectLength(e.nativeEvent.layout);
    _this6.props.onLayout && _this6.props.onLayout(e);
    _this6._scheduleCellsToRenderUpdate();
    _this6._maybeCallOnEndReached();
  };

  this._onLayoutEmpty = function (e) {
    _this6.props.onLayout && _this6.props.onLayout(e);
  };

  this._onLayoutFooter = function (e) {
    _this6._footerLength = _this6._selectLength(e.nativeEvent.layout);
  };

  this._onLayoutHeader = function (e) {
    _this6._headerLength = _this6._selectLength(e.nativeEvent.layout);
  };

  this._onContentSizeChange = function (width, height) {
    if (_this6.props.onContentSizeChange) {
      _this6.props.onContentSizeChange(width, height);
    }
    _this6._scrollMetrics.contentLength = _this6._selectLength({ height: height, width: width });
    _this6._scheduleCellsToRenderUpdate();
    _this6._maybeCallOnEndReached();
  };

  this._onScroll = function (e) {
    if (_this6.props.onScroll) {
      _this6.props.onScroll(e);
    }
    var timestamp = e.timeStamp;
    var visibleLength = _this6._selectLength(e.nativeEvent.layoutMeasurement);
    var contentLength = _this6._selectLength(e.nativeEvent.contentSize);
    var offset = _this6._selectOffset(e.nativeEvent.contentOffset);
    var dt = _this6._scrollMetrics.timestamp ? Math.max(1, timestamp - _this6._scrollMetrics.timestamp) : 1;
    if (dt > 500 && _this6._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !_this6._hasWarned.perf) {
      infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', { dt: dt, prevDt: _this6._scrollMetrics.dt, contentLength: contentLength });
      _this6._hasWarned.perf = true;
    }
    var dOffset = offset - _this6._scrollMetrics.offset;
    var velocity = dOffset / dt;
    _this6._scrollMetrics = {
      contentLength: contentLength,
      dt: dt,
      dOffset: dOffset,
      offset: offset,
      timestamp: timestamp,
      velocity: velocity,
      visibleLength: visibleLength
    };
    _this6._updateViewableItems(_this6.props.data);
    if (!_this6.props) {
      return;
    }
    _this6._maybeCallOnEndReached();
    if (velocity !== 0) {
      _this6._fillRateHelper.activate();
    }
    _this6._computeBlankness();
    _this6._scheduleCellsToRenderUpdate();
  };

  this._onScrollBeginDrag = function (e) {
    _this6._viewabilityTuples.forEach(function (tuple) {
      tuple.viewabilityHelper.recordInteraction();
    });
    _this6.props.onScrollBeginDrag && _this6.props.onScrollBeginDrag(e);
  };

  this._onScrollEndDrag = function (e) {
    var velocity = e.nativeEvent.velocity;

    if (velocity) {
      _this6._scrollMetrics.velocity = _this6._selectOffset(velocity);
    }
    _this6._computeBlankness();
    _this6.props.onScrollEndDrag && _this6.props.onScrollEndDrag(e);
  };

  this._onMomentumScrollEnd = function (e) {
    _this6._scrollMetrics.velocity = 0;
    _this6._computeBlankness();
    _this6.props.onMomentumScrollEnd && _this6.props.onMomentumScrollEnd(e);
  };

  this._updateCellsToRender = function () {
    var _props8 = _this6.props,
        data = _props8.data,
        getItemCount = _props8.getItemCount,
        onEndReachedThreshold = _props8.onEndReachedThreshold;

    var isVirtualizationDisabled = _this6._isVirtualizationDisabled();
    _this6._updateViewableItems(data);
    if (!data) {
      return;
    }
    _this6.setState(function (state) {
      var newState = void 0;
      if (!isVirtualizationDisabled) {
        if (_this6._scrollMetrics.visibleLength) {
          if (!_this6.props.initialScrollIndex || _this6._scrollMetrics.offset) {
            newState = computeWindowedRenderLimits(_this6.props, state, _this6._getFrameMetricsApprox, _this6._scrollMetrics);
          }
        }
      } else {
        var _scrollMetrics3 = _this6._scrollMetrics,
            contentLength = _scrollMetrics3.contentLength,
            _offset = _scrollMetrics3.offset,
            visibleLength = _scrollMetrics3.visibleLength;

        var _distanceFromEnd = contentLength - visibleLength - _offset;
        var renderAhead = _distanceFromEnd < onEndReachedThreshold * visibleLength ? _this6.props.maxToRenderPerBatch : 0;
        newState = {
          first: 0,
          last: Math.min(state.last + renderAhead, getItemCount(data) - 1)
        };
      }
      return newState;
    });
  };

  this._createViewToken = function (index, isViewable) {
    var _props9 = _this6.props,
        data = _props9.data,
        getItem = _props9.getItem,
        keyExtractor = _props9.keyExtractor;

    var item = getItem(data, index);
    return { index: index, item: item, key: keyExtractor(item, index), isViewable: isViewable };
  };

  this._getFrameMetricsApprox = function (index) {
    var frame = _this6._getFrameMetrics(index);
    if (frame && frame.index === index) {
      return frame;
    } else {
      var _getItemLayout = _this6.props.getItemLayout;

      invariant(!_getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');
      return {
        length: _this6._averageCellLength,
        offset: _this6._averageCellLength * index
      };
    }
  };

  this._getFrameMetrics = function (index) {
    var _props10 = _this6.props,
        data = _props10.data,
        getItem = _props10.getItem,
        getItemCount = _props10.getItemCount,
        getItemLayout = _props10.getItemLayout,
        keyExtractor = _props10.keyExtractor;

    invariant(getItemCount(data) > index, 'Tried to get frame for out of range index ' + index);
    var item = getItem(data, index);
    var frame = item && _this6._frames[keyExtractor(item, index)];
    if (!frame || frame.index !== index) {
      if (getItemLayout) {
        frame = getItemLayout(data, index);
        if (__DEV__) {
          var frameType = PropTypes.shape({
            length: PropTypes.number.isRequired,
            offset: PropTypes.number.isRequired,
            index: PropTypes.number.isRequired
          }).isRequired;
          PropTypes.checkPropTypes({ frame: frameType }, { frame: frame }, 'frame', 'VirtualizedList.getItemLayout');
        }
      }
    }
    return frame;
  };
};

var CellRenderer = function (_React$Component) {
  babelHelpers.inherits(CellRenderer, _React$Component);

  function CellRenderer() {
    var _ref6;

    var _temp, _this5, _ret2;

    babelHelpers.classCallCheck(this, CellRenderer);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret2 = (_temp = (_this5 = babelHelpers.possibleConstructorReturn(this, (_ref6 = CellRenderer.__proto__ || Object.getPrototypeOf(CellRenderer)).call.apply(_ref6, [this].concat(args))), _this5), _this5.state = {
      separatorProps: {
        highlighted: false,
        leadingItem: _this5.props.item
      }
    }, _this5._separators = {
      highlight: function highlight() {
        var _this5$props = _this5.props,
            cellKey = _this5$props.cellKey,
            prevCellKey = _this5$props.prevCellKey;

        _this5.props.onUpdateSeparators([cellKey, prevCellKey], {
          highlighted: true
        });
      },
      unhighlight: function unhighlight() {
        var _this5$props2 = _this5.props,
            cellKey = _this5$props2.cellKey,
            prevCellKey = _this5$props2.prevCellKey;

        _this5.props.onUpdateSeparators([cellKey, prevCellKey], {
          highlighted: false
        });
      },
      updateProps: function updateProps(select, newProps) {
        var _this5$props3 = _this5.props,
            cellKey = _this5$props3.cellKey,
            prevCellKey = _this5$props3.prevCellKey;

        _this5.props.onUpdateSeparators([select === 'leading' ? prevCellKey : cellKey], newProps);
      }
    }, _temp), babelHelpers.possibleConstructorReturn(_this5, _ret2);
  }

  babelHelpers.createClass(CellRenderer, [{
    key: 'updateSeparatorProps',
    value: function updateSeparatorProps(newProps) {
      this.setState(function (state) {
        return {
          separatorProps: babelHelpers.extends({}, state.separatorProps, newProps)
        };
      });
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.props.onUnmount(this.props.cellKey);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props7 = this.props,
          CellRendererComponent = _props7.CellRendererComponent,
          ItemSeparatorComponent = _props7.ItemSeparatorComponent,
          fillRateHelper = _props7.fillRateHelper,
          horizontal = _props7.horizontal,
          item = _props7.item,
          index = _props7.index,
          inversionStyle = _props7.inversionStyle,
          parentProps = _props7.parentProps;
      var renderItem = parentProps.renderItem,
          getItemLayout = parentProps.getItemLayout;

      invariant(renderItem, 'no renderItem!');
      var element = renderItem({
        item: item,
        index: index,
        separators: this._separators
      });
      var onLayout = getItemLayout && !parentProps.debug && !fillRateHelper.enabled() ? undefined : this.props.onLayout;

      var itemSeparator = ItemSeparatorComponent && React.createElement(ItemSeparatorComponent, babelHelpers.extends({}, this.state.separatorProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1354
        }
      }));
      var cellStyle = inversionStyle ? horizontal ? [{ flexDirection: 'row-reverse' }, inversionStyle] : [{ flexDirection: 'column-reverse' }, inversionStyle] : horizontal ? [{ flexDirection: 'row' }, inversionStyle] : inversionStyle;
      if (!CellRendererComponent) {
        return React.createElement(
          View,
          { style: cellStyle, onLayout: onLayout, __source: {
              fileName: _jsxFileName,
              lineNumber: 1363
            }
          },
          element,
          itemSeparator
        );
      }
      return React.createElement(
        CellRendererComponent,
        babelHelpers.extends({}, this.props, {
          style: cellStyle,
          onLayout: onLayout, __source: {
            fileName: _jsxFileName,
            lineNumber: 1370
          }
        }),
        element,
        itemSeparator
      );
    }
  }]);
  return CellRenderer;
}(React.Component);

var styles = StyleSheet.create({
  verticallyInverted: {
    transform: [{ scaleY: -1 }]
  },
  horizontallyInverted: {
    transform: [{ scaleX: -1 }]
  }
});

module.exports = VirtualizedList;
}, 246, null, "VirtualizedList");
__d(/* Batchinator */function(global, require, module, exports) {
'use strict';

var InteractionManager = require(201                 ); // 201 = InteractionManager

var Batchinator = function () {
  function Batchinator(callback, delayMS) {
    babelHelpers.classCallCheck(this, Batchinator);

    this._delay = delayMS;
    this._callback = callback;
  }

  babelHelpers.createClass(Batchinator, [{
    key: 'dispose',
    value: function dispose() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { abort: false };

      if (this._taskHandle) {
        this._taskHandle.cancel();
        if (!options.abort) {
          this._callback();
        }
        this._taskHandle = null;
      }
    }
  }, {
    key: 'schedule',
    value: function schedule() {
      var _this = this;

      if (this._taskHandle) {
        return;
      }
      var timeoutHandle = setTimeout(function () {
        _this._taskHandle = InteractionManager.runAfterInteractions(function () {
          _this._taskHandle = null;
          _this._callback();
        });
      }, this._delay);
      this._taskHandle = { cancel: function cancel() {
          return clearTimeout(timeoutHandle);
        } };
    }
  }]);
  return Batchinator;
}();

module.exports = Batchinator;
}, 247, null, "Batchinator");
__d(/* FillRateHelper */function(global, require, module, exports) {

'use strict';

var performanceNow = require(69                       ); // 69 = fbjs/lib/performanceNow

var warning = require(23                ); // 23 = fbjs/lib/warning

var Info = function Info() {
  babelHelpers.classCallCheck(this, Info);
  this.any_blank_count = 0;
  this.any_blank_ms = 0;
  this.any_blank_speed_sum = 0;
  this.mostly_blank_count = 0;
  this.mostly_blank_ms = 0;
  this.pixels_blank = 0;
  this.pixels_sampled = 0;
  this.pixels_scrolled = 0;
  this.total_time_spent = 0;
  this.sample_count = 0;
};

var DEBUG = false;

var _listeners = [];
var _minSampleCount = 10;
var _sampleRate = DEBUG ? 1 : null;

var FillRateHelper = function () {
  babelHelpers.createClass(FillRateHelper, null, [{
    key: 'addListener',
    value: function addListener(callback) {
      warning(_sampleRate !== null, 'Call `FillRateHelper.setSampleRate` before `addListener`.');
      _listeners.push(callback);
      return {
        remove: function remove() {
          _listeners = _listeners.filter(function (listener) {
            return callback !== listener;
          });
        }
      };
    }
  }, {
    key: 'setSampleRate',
    value: function setSampleRate(sampleRate) {
      _sampleRate = sampleRate;
    }
  }, {
    key: 'setMinSampleCount',
    value: function setMinSampleCount(minSampleCount) {
      _minSampleCount = minSampleCount;
    }
  }]);

  function FillRateHelper(getFrameMetrics) {
    babelHelpers.classCallCheck(this, FillRateHelper);
    this._anyBlankStartTime = null;
    this._enabled = false;
    this._info = new Info();
    this._mostlyBlankStartTime = null;
    this._samplesStartTime = null;

    this._getFrameMetrics = getFrameMetrics;
    this._enabled = (_sampleRate || 0) > Math.random();
    this._resetData();
  }

  babelHelpers.createClass(FillRateHelper, [{
    key: 'activate',
    value: function activate() {
      if (this._enabled && this._samplesStartTime == null) {
        DEBUG && console.debug('FillRateHelper: activate');
        this._samplesStartTime = performanceNow();
      }
    }
  }, {
    key: 'deactivateAndFlush',
    value: function deactivateAndFlush() {
      if (!this._enabled) {
        return;
      }
      var start = this._samplesStartTime;
      if (start == null) {
        DEBUG && console.debug('FillRateHelper: bail on deactivate with no start time');
        return;
      }
      if (this._info.sample_count < _minSampleCount) {
        this._resetData();
        return;
      }
      var total_time_spent = performanceNow() - start;
      var info = babelHelpers.extends({}, this._info, {
        total_time_spent: total_time_spent
      });
      if (DEBUG) {
        var derived = {
          avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,
          avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),
          avg_speed_when_any_blank: this._info.any_blank_speed_sum / this._info.any_blank_count,
          any_blank_per_min: this._info.any_blank_count / (total_time_spent / 1000 / 60),
          any_blank_time_frac: this._info.any_blank_ms / total_time_spent,
          mostly_blank_per_min: this._info.mostly_blank_count / (total_time_spent / 1000 / 60),
          mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent
        };
        for (var key in derived) {
          derived[key] = Math.round(1000 * derived[key]) / 1000;
        }
        console.debug('FillRateHelper deactivateAndFlush: ', { derived: derived, info: info });
      }
      _listeners.forEach(function (listener) {
        return listener(info);
      });
      this._resetData();
    }
  }, {
    key: 'computeBlankness',
    value: function computeBlankness(props, state, scrollMetrics) {
      if (!this._enabled || props.getItemCount(props.data) === 0 || this._samplesStartTime == null) {
        return 0;
      }
      var dOffset = scrollMetrics.dOffset,
          offset = scrollMetrics.offset,
          velocity = scrollMetrics.velocity,
          visibleLength = scrollMetrics.visibleLength;

      this._info.sample_count++;
      this._info.pixels_sampled += Math.round(visibleLength);
      this._info.pixels_scrolled += Math.round(Math.abs(dOffset));
      var scrollSpeed = Math.round(Math.abs(velocity) * 1000);
      var now = performanceNow();
      if (this._anyBlankStartTime != null) {
        this._info.any_blank_ms += now - this._anyBlankStartTime;
      }
      this._anyBlankStartTime = null;
      if (this._mostlyBlankStartTime != null) {
        this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;
      }
      this._mostlyBlankStartTime = null;

      var blankTop = 0;
      var first = state.first;
      var firstFrame = this._getFrameMetrics(first);
      while (first <= state.last && (!firstFrame || !firstFrame.inLayout)) {
        firstFrame = this._getFrameMetrics(first);
        first++;
      }

      if (firstFrame && first > 0) {
        blankTop = Math.min(visibleLength, Math.max(0, firstFrame.offset - offset));
      }
      var blankBottom = 0;
      var last = state.last;
      var lastFrame = this._getFrameMetrics(last);
      while (last >= state.first && (!lastFrame || !lastFrame.inLayout)) {
        lastFrame = this._getFrameMetrics(last);
        last--;
      }

      if (lastFrame && last < props.getItemCount(props.data) - 1) {
        var bottomEdge = lastFrame.offset + lastFrame.length;
        blankBottom = Math.min(visibleLength, Math.max(0, offset + visibleLength - bottomEdge));
      }
      var pixels_blank = Math.round(blankTop + blankBottom);
      var blankness = pixels_blank / visibleLength;
      if (blankness > 0) {
        this._anyBlankStartTime = now;
        this._info.any_blank_speed_sum += scrollSpeed;
        this._info.any_blank_count++;
        this._info.pixels_blank += pixels_blank;
        if (blankness > 0.5) {
          this._mostlyBlankStartTime = now;
          this._info.mostly_blank_count++;
        }
      } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {
        this.deactivateAndFlush();
      }
      return blankness;
    }
  }, {
    key: 'enabled',
    value: function enabled() {
      return this._enabled;
    }
  }, {
    key: '_resetData',
    value: function _resetData() {
      this._anyBlankStartTime = null;
      this._info = new Info();
      this._mostlyBlankStartTime = null;
      this._samplesStartTime = null;
    }
  }]);
  return FillRateHelper;
}();

module.exports = FillRateHelper;
}, 248, null, "FillRateHelper");
__d(/* ViewabilityHelper */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var ViewabilityHelper = function () {
  function ViewabilityHelper() {
    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { viewAreaCoveragePercentThreshold: 0 };
    babelHelpers.classCallCheck(this, ViewabilityHelper);
    this._hasInteracted = false;
    this._lastUpdateTime = 0;
    this._timers = new Set();
    this._viewableIndices = [];
    this._viewableItems = new Map();

    this._config = config;
  }

  babelHelpers.createClass(ViewabilityHelper, [{
    key: 'dispose',
    value: function dispose() {
      this._timers.forEach(clearTimeout);
    }
  }, {
    key: 'computeViewableItems',
    value: function computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange) {
      var _config = this._config,
          itemVisiblePercentThreshold = _config.itemVisiblePercentThreshold,
          viewAreaCoveragePercentThreshold = _config.viewAreaCoveragePercentThreshold;

      var viewAreaMode = viewAreaCoveragePercentThreshold != null;
      var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;
      invariant(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');
      var viewableIndices = [];
      if (itemCount === 0) {
        return viewableIndices;
      }
      var firstVisible = -1;

      var _ref = renderRange || { first: 0, last: itemCount - 1 },
          first = _ref.first,
          last = _ref.last;

      invariant(last < itemCount, 'Invalid render range ' + JSON.stringify({ renderRange: renderRange, itemCount: itemCount }));
      for (var idx = first; idx <= last; idx++) {
        var metrics = getFrameMetrics(idx);
        if (!metrics) {
          continue;
        }
        var top = metrics.offset - scrollOffset;
        var bottom = top + metrics.length;
        if (top < viewportHeight && bottom > 0) {
          firstVisible = idx;
          if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {
            viewableIndices.push(idx);
          }
        } else if (firstVisible >= 0) {
          break;
        }
      }
      return viewableIndices;
    }
  }, {
    key: 'onUpdate',
    value: function onUpdate(itemCount, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged, renderRange) {
      var _this = this;

      var updateTime = Date.now();
      if (this._lastUpdateTime === 0 && itemCount > 0 && getFrameMetrics(0)) {
        this._lastUpdateTime = updateTime;
      }
      var updateElapsed = this._lastUpdateTime ? updateTime - this._lastUpdateTime : 0;
      if (this._config.waitForInteraction && !this._hasInteracted) {
        return;
      }
      var viewableIndices = [];
      if (itemCount) {
        viewableIndices = this.computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange);
      }
      if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every(function (v, ii) {
        return v === viewableIndices[ii];
      })) {
        return;
      }
      this._viewableIndices = viewableIndices;
      this._lastUpdateTime = updateTime;
      if (this._config.minimumViewTime && updateElapsed < this._config.minimumViewTime) {
        var handle = setTimeout(function () {
          _this._timers.delete(handle);
          _this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);
        }, this._config.minimumViewTime);
        this._timers.add(handle);
      } else {
        this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);
      }
    }
  }, {
    key: 'recordInteraction',
    value: function recordInteraction() {
      this._hasInteracted = true;
    }
  }, {
    key: '_onUpdateSync',
    value: function _onUpdateSync(viewableIndicesToCheck, onViewableItemsChanged, createViewToken) {
      var _this2 = this;

      viewableIndicesToCheck = viewableIndicesToCheck.filter(function (ii) {
        return _this2._viewableIndices.includes(ii);
      });
      var prevItems = this._viewableItems;
      var nextItems = new Map(viewableIndicesToCheck.map(function (ii) {
        var viewable = createViewToken(ii, true);
        return [viewable.key, viewable];
      }));

      var changed = [];
      for (var _iterator = nextItems, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
        var _ref4;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref4 = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref4 = _i.value;
        }

        var _ref2 = _ref4;

        var _ref3 = babelHelpers.slicedToArray(_ref2, 2);

        var _key = _ref3[0];
        var viewable = _ref3[1];

        if (!prevItems.has(_key)) {
          changed.push(viewable);
        }
      }
      for (var _iterator2 = prevItems, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
        var _ref7;

        if (_isArray2) {
          if (_i2 >= _iterator2.length) break;
          _ref7 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done) break;
          _ref7 = _i2.value;
        }

        var _ref5 = _ref7;

        var _ref6 = babelHelpers.slicedToArray(_ref5, 2);

        var _key2 = _ref6[0];
        var _viewable = _ref6[1];

        if (!nextItems.has(_key2)) {
          changed.push(babelHelpers.extends({}, _viewable, { isViewable: false }));
        }
      }
      if (changed.length > 0) {
        this._viewableItems = nextItems;
        onViewableItemsChanged({
          viewableItems: Array.from(nextItems.values()),
          changed: changed,
          viewabilityConfig: this._config
        });
      }
    }
  }]);
  return ViewabilityHelper;
}();

function _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {
  if (_isEntirelyVisible(top, bottom, viewportHeight)) {
    return true;
  } else {
    var pixels = _getPixelsVisible(top, bottom, viewportHeight);
    var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);
    return percent >= viewablePercentThreshold;
  }
}

function _getPixelsVisible(top, bottom, viewportHeight) {
  var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);
  return Math.max(0, visibleHeight);
}

function _isEntirelyVisible(top, bottom, viewportHeight) {
  return top >= 0 && bottom <= viewportHeight && bottom > top;
}

module.exports = ViewabilityHelper;
}, 249, null, "ViewabilityHelper");
__d(/* VirtualizeUtils */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

function elementsThatOverlapOffsets(offsets, itemCount, getFrameMetrics) {
  var out = [];
  for (var ii = 0; ii < itemCount; ii++) {
    var frame = getFrameMetrics(ii);
    var trailingOffset = frame.offset + frame.length;
    for (var kk = 0; kk < offsets.length; kk++) {
      if (out[kk] == null && trailingOffset >= offsets[kk]) {
        out[kk] = ii;
        if (kk === offsets.length - 1) {
          invariant(out.length === offsets.length, 'bad offsets input, should be in increasing order ' + JSON.stringify(offsets));
          return out;
        }
      }
    }
  }
  return out;
}

function newRangeCount(prev, next) {
  return next.last - next.first + 1 - Math.max(0, 1 + Math.min(next.last, prev.last) - Math.max(next.first, prev.first));
}

function computeWindowedRenderLimits(props, prev, getFrameMetricsApprox, scrollMetrics) {
  var data = props.data,
      getItemCount = props.getItemCount,
      maxToRenderPerBatch = props.maxToRenderPerBatch,
      windowSize = props.windowSize;

  var itemCount = getItemCount(data);
  if (itemCount === 0) {
    return prev;
  }
  var offset = scrollMetrics.offset,
      velocity = scrollMetrics.velocity,
      visibleLength = scrollMetrics.visibleLength;

  var visibleBegin = Math.max(0, offset);
  var visibleEnd = visibleBegin + visibleLength;
  var overscanLength = (windowSize - 1) * visibleLength;

  var leadFactor = 0.5;

  var fillPreference = velocity > 1 ? 'after' : velocity < -1 ? 'before' : 'none';

  var overscanBegin = Math.max(0, visibleBegin - (1 - leadFactor) * overscanLength);
  var overscanEnd = Math.max(0, visibleEnd + leadFactor * overscanLength);

  var _elementsThatOverlapO = elementsThatOverlapOffsets([overscanBegin, visibleBegin, visibleEnd, overscanEnd], props.getItemCount(props.data), getFrameMetricsApprox),
      _elementsThatOverlapO2 = babelHelpers.slicedToArray(_elementsThatOverlapO, 4),
      overscanFirst = _elementsThatOverlapO2[0],
      first = _elementsThatOverlapO2[1],
      last = _elementsThatOverlapO2[2],
      overscanLast = _elementsThatOverlapO2[3];

  overscanFirst = overscanFirst == null ? 0 : overscanFirst;
  first = first == null ? Math.max(0, overscanFirst) : first;
  overscanLast = overscanLast == null ? itemCount - 1 : overscanLast;
  last = last == null ? Math.min(overscanLast, first + maxToRenderPerBatch - 1) : last;
  var visible = { first: first, last: last };

  var newCellCount = newRangeCount(prev, visible);

  while (true) {
    if (first <= overscanFirst && last >= overscanLast) {
      break;
    }
    var maxNewCells = newCellCount >= maxToRenderPerBatch;
    var firstWillAddMore = first <= prev.first || first > prev.last;
    var firstShouldIncrement = first > overscanFirst && (!maxNewCells || !firstWillAddMore);
    var lastWillAddMore = last >= prev.last || last < prev.first;
    var lastShouldIncrement = last < overscanLast && (!maxNewCells || !lastWillAddMore);
    if (maxNewCells && !firstShouldIncrement && !lastShouldIncrement) {
      break;
    }
    if (firstShouldIncrement && !(fillPreference === 'after' && lastShouldIncrement && lastWillAddMore)) {
      if (firstWillAddMore) {
        newCellCount++;
      }
      first--;
    }
    if (lastShouldIncrement && !(fillPreference === 'before' && firstShouldIncrement && firstWillAddMore)) {
      if (lastWillAddMore) {
        newCellCount++;
      }
      last++;
    }
  }
  if (!(last >= first && first >= 0 && last < itemCount && first >= overscanFirst && last <= overscanLast && first <= visible.first && last >= visible.last)) {
    throw new Error('Bad window calculation ' + JSON.stringify({
      first: first,
      last: last,
      itemCount: itemCount,
      overscanFirst: overscanFirst,
      overscanLast: overscanLast,
      visible: visible
    }));
  }
  return { first: first, last: last };
}

var VirtualizeUtils = {
  computeWindowedRenderLimits: computeWindowedRenderLimits,
  elementsThatOverlapOffsets: elementsThatOverlapOffsets,
  newRangeCount: newRangeCount
};

module.exports = VirtualizeUtils;
}, 250, null, "VirtualizeUtils");
__d(/* ImageBackground */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Image/ImageBackground.js';
var Image = require(221    ); // 221 = Image
var React = require(129    ); // 129 = React
var StyleSheet = require(167         ); // 167 = StyleSheet
var View = require(169   ); // 169 = View

var ensureComponentIsNative = require(252                      ); // 252 = ensureComponentIsNative

var ImageBackground = function (_React$Component) {
  babelHelpers.inherits(ImageBackground, _React$Component);

  function ImageBackground() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, ImageBackground);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = ImageBackground.__proto__ || Object.getPrototypeOf(ImageBackground)).call.apply(_ref, [this].concat(args))), _this), _this._viewRef = null, _this._captureRef = function (ref) {
      _this._viewRef = ref;
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(ImageBackground, [{
    key: 'setNativeProps',
    value: function setNativeProps(props) {
      var viewRef = this._viewRef;
      if (viewRef) {
        ensureComponentIsNative(viewRef);
        viewRef.setNativeProps(props);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          style = _props.style,
          imageStyle = _props.imageStyle,
          imageRef = _props.imageRef,
          props = babelHelpers.objectWithoutProperties(_props, ['children', 'style', 'imageStyle', 'imageRef']);


      return React.createElement(
        View,
        { style: style, ref: this._captureRef, __source: {
            fileName: _jsxFileName,
            lineNumber: 68
          }
        },
        React.createElement(Image, babelHelpers.extends({}, props, {
          style: [StyleSheet.absoluteFill, {
            width: style.width,
            height: style.height
          }, imageStyle],
          ref: imageRef,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 69
          }
        })),
        children
      );
    }
  }]);
  return ImageBackground;
}(React.Component);

module.exports = ImageBackground;
}, 251, null, "ImageBackground");
__d(/* ensureComponentIsNative */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var ensureComponentIsNative = function ensureComponentIsNative(component) {
  invariant(component && typeof component.setNativeProps === 'function', 'Touchable child must either be native or forward setNativeProps to a ' + 'native component');
};

module.exports = ensureComponentIsNative;
}, 252, null, "ensureComponentIsNative");
__d(/* ImageEditor */function(global, require, module, exports) {
'use strict';

var RCTImageEditingManager = require(15             ).ImageEditingManager; // 15 = NativeModules

var ImageEditor = function () {
  function ImageEditor() {
    babelHelpers.classCallCheck(this, ImageEditor);
  }

  babelHelpers.createClass(ImageEditor, null, [{
    key: 'cropImage',
    value: function cropImage(uri, cropData, success, failure) {
      RCTImageEditingManager.cropImage(uri, cropData, success, failure);
    }
  }]);
  return ImageEditor;
}();

module.exports = ImageEditor;
}, 253, null, "ImageEditor");
__d(/* ImageStore */function(global, require, module, exports) {
'use strict';

var RCTImageStoreManager = require(15             ).ImageStoreManager; // 15 = NativeModules

var ImageStore = function () {
  function ImageStore() {
    babelHelpers.classCallCheck(this, ImageStore);
  }

  babelHelpers.createClass(ImageStore, null, [{
    key: 'hasImageForTag',
    value: function hasImageForTag(uri, callback) {
      if (RCTImageStoreManager.hasImageForTag) {
        RCTImageStoreManager.hasImageForTag(uri, callback);
      } else {
        console.warn('hasImageForTag() not implemented');
      }
    }
  }, {
    key: 'removeImageForTag',
    value: function removeImageForTag(uri) {
      if (RCTImageStoreManager.removeImageForTag) {
        RCTImageStoreManager.removeImageForTag(uri);
      } else {
        console.warn('removeImageForTag() not implemented');
      }
    }
  }, {
    key: 'addImageFromBase64',
    value: function addImageFromBase64(base64ImageData, success, failure) {
      RCTImageStoreManager.addImageFromBase64(base64ImageData, success, failure);
    }
  }, {
    key: 'getBase64ForTag',
    value: function getBase64ForTag(uri, success, failure) {
      RCTImageStoreManager.getBase64ForTag(uri, success, failure);
    }
  }]);
  return ImageStore;
}();

module.exports = ImageStore;
}, 254, null, "ImageStore");
__d(/* KeyboardAvoidingView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/Keyboard/KeyboardAvoidingView.js';
var createReactClass = require(171                 ); // 171 = create-react-class
var Keyboard = require(227       ); // 227 = Keyboard
var LayoutAnimation = require(256              ); // 256 = LayoutAnimation
var Platform = require(46        ); // 46 = Platform
var PropTypes = require(126         ); // 126 = prop-types
var React = require(129    ); // 129 = React

var TimerMixin = require(190                ); // 190 = react-timer-mixin
var View = require(169   ); // 169 = View
var ViewPropTypes = require(130            ); // 130 = ViewPropTypes

var viewRef = 'VIEW';

var KeyboardAvoidingView = createReactClass({
  displayName: 'KeyboardAvoidingView',
  mixins: [TimerMixin],

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    behavior: PropTypes.oneOf(['height', 'position', 'padding']),

    contentContainerStyle: ViewPropTypes.style,

    keyboardVerticalOffset: PropTypes.number.isRequired
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      keyboardVerticalOffset: 0
    };
  },
  getInitialState: function getInitialState() {
    return {
      bottom: 0
    };
  },


  subscriptions: [],
  frame: null,

  relativeKeyboardHeight: function relativeKeyboardHeight(keyboardFrame) {
    var frame = this.frame;
    if (!frame || !keyboardFrame) {
      return 0;
    }

    var keyboardY = keyboardFrame.screenY - this.props.keyboardVerticalOffset;

    return Math.max(frame.y + frame.height - keyboardY, 0);
  },
  onKeyboardChange: function onKeyboardChange(event) {
    if (!event) {
      this.setState({ bottom: 0 });
      return;
    }

    var duration = event.duration,
        easing = event.easing,
        endCoordinates = event.endCoordinates;

    var height = this.relativeKeyboardHeight(endCoordinates);

    if (duration && easing) {
      LayoutAnimation.configureNext({
        duration: duration,
        update: {
          duration: duration,
          type: LayoutAnimation.Types[easing] || 'keyboard'
        }
      });
    }
    this.setState({ bottom: height });
  },
  onLayout: function onLayout(event) {
    this.frame = event.nativeEvent.layout;
  },
  componentWillUpdate: function componentWillUpdate(nextProps, nextState, nextContext) {
    if (nextState.bottom === this.state.bottom && this.props.behavior === 'height' && nextProps.behavior === 'height') {
      nextState.bottom = 0;
    }
  },
  componentWillMount: function componentWillMount() {
    if (Platform.OS === 'ios') {
      this.subscriptions = [Keyboard.addListener('keyboardWillChangeFrame', this.onKeyboardChange)];
    } else {
      this.subscriptions = [Keyboard.addListener('keyboardDidHide', this.onKeyboardChange), Keyboard.addListener('keyboardDidShow', this.onKeyboardChange)];
    }
  },
  componentWillUnmount: function componentWillUnmount() {
    this.subscriptions.forEach(function (sub) {
      return sub.remove();
    });
  },
  render: function render() {
    var _props = this.props,
        behavior = _props.behavior,
        children = _props.children,
        style = _props.style,
        props = babelHelpers.objectWithoutProperties(_props, ['behavior', 'children', 'style']);


    switch (behavior) {
      case 'height':
        var heightStyle = void 0;
        if (this.frame) {
          heightStyle = { height: this.frame.height - this.state.bottom, flex: 0 };
        }
        return React.createElement(
          View,
          babelHelpers.extends({ ref: viewRef, style: [style, heightStyle], onLayout: this.onLayout }, props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 165
            }
          }),
          children
        );

      case 'position':
        var positionStyle = { bottom: this.state.bottom };
        var contentContainerStyle = this.props.contentContainerStyle;


        return React.createElement(
          View,
          babelHelpers.extends({ ref: viewRef, style: style, onLayout: this.onLayout }, props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 175
            }
          }),
          React.createElement(
            View,
            { style: [contentContainerStyle, positionStyle], __source: {
                fileName: _jsxFileName,
                lineNumber: 176
              }
            },
            children
          )
        );

      case 'padding':
        var paddingStyle = { paddingBottom: this.state.bottom };
        return React.createElement(
          View,
          babelHelpers.extends({ ref: viewRef, style: [style, paddingStyle], onLayout: this.onLayout }, props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 185
            }
          }),
          children
        );

      default:
        return React.createElement(
          View,
          babelHelpers.extends({ ref: viewRef, onLayout: this.onLayout, style: style }, props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 192
            }
          }),
          children
        );
    }
  }
});

module.exports = KeyboardAvoidingView;
}, 255, null, "KeyboardAvoidingView");
__d(/* LayoutAnimation */function(global, require, module, exports) {
'use strict';

var PropTypes = require(126         ); // 126 = prop-types
var UIManager = require(47         ); // 47 = UIManager

var keyMirror = require(149                 ); // 149 = fbjs/lib/keyMirror

var checkPropTypes = PropTypes.checkPropTypes;


var TypesEnum = {
  spring: true,
  linear: true,
  easeInEaseOut: true,
  easeIn: true,
  easeOut: true,
  keyboard: true
};
var Types = keyMirror(TypesEnum);

var PropertiesEnum = {
  opacity: true,
  scaleXY: true
};
var Properties = keyMirror(PropertiesEnum);

var animType = PropTypes.shape({
  duration: PropTypes.number,
  delay: PropTypes.number,
  springDamping: PropTypes.number,
  initialVelocity: PropTypes.number,
  type: PropTypes.oneOf(Object.keys(Types)).isRequired,
  property: PropTypes.oneOf(Object.keys(Properties))
});

var configType = PropTypes.shape({
  duration: PropTypes.number.isRequired,
  create: animType,
  update: animType,
  delete: animType
});

function checkConfig(config, location, name) {
  checkPropTypes({ config: configType }, { config: config }, location, name);
}

function configureNext(config, onAnimationDidEnd) {
  if (__DEV__) {
    checkConfig(config, 'config', 'LayoutAnimation.configureNext');
  }
  UIManager.configureNextLayoutAnimation(config, onAnimationDidEnd || function () {}, function () {});
}

function create(duration, type, creationProp) {
  return {
    duration: duration,
    create: {
      type: type,
      property: creationProp
    },
    update: {
      type: type
    },
    delete: {
      type: type,
      property: creationProp
    }
  };
}

var Presets = {
  easeInEaseOut: create(300, Types.easeInEaseOut, Properties.opacity),
  linear: create(500, Types.linear, Properties.opacity),
  spring: {
    duration: 700,
    create: {
      type: Types.linear,
      property: Properties.opacity
    },
    update: {
      type: Types.spring,
      springDamping: 0.4
    },
    delete: {
      type: Types.linear,
      property: Properties.opacity
    }
  }
};

var LayoutAnimation = {
  configureNext: configureNext,

  create: create,
  Types: Types,
  Properties: Properties,
  checkConfig: checkConfig,
  Presets: Presets,
  easeInEaseOut: configureNext.bind(null, Presets.easeInEaseOut),
  linear: configureNext.bind(null, Presets.linear),
  spring: configureNext.bind(null, Presets.spring)
};

module.exports = LayoutAnimation;
}, 256, null, "LayoutAnimation");
__d(/* MaskedViewIOS */function(global, require, module, exports) {
'use strict';

module.exports = require(258                ); // 258 = UnimplementedView
}, 257, null, "MaskedViewIOS");
__d(/* UnimplementedView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/UnimplementedViews/UnimplementedView.js';
var React = require(129    ); // 129 = React
var StyleSheet = require(167         ); // 167 = StyleSheet

var UnimplementedView = function (_React$Component) {
  babelHelpers.inherits(UnimplementedView, _React$Component);

  function UnimplementedView() {
    babelHelpers.classCallCheck(this, UnimplementedView);
    return babelHelpers.possibleConstructorReturn(this, (UnimplementedView.__proto__ || Object.getPrototypeOf(UnimplementedView)).apply(this, arguments));
  }

  babelHelpers.createClass(UnimplementedView, [{
    key: 'setNativeProps',
    value: function setNativeProps() {}
  }, {
    key: 'render',
    value: function render() {
      var View = require(169   ); // 169 = View
      return React.createElement(
        View,
        { style: [styles.unimplementedView, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 33
          }
        },
        this.props.children
      );
    }
  }]);
  return UnimplementedView;
}(React.Component);

var styles = StyleSheet.create({
  unimplementedView: __DEV__ ? {
    alignSelf: 'flex-start',
    borderColor: 'red',
    borderWidth: 1
  } : {}
});

module.exports = UnimplementedView;
}, 258, null, "UnimplementedView");
__d(/* Modal */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Modal/Modal.js',
    _container;

var AppContainer = require(260           ); // 260 = AppContainer
var I18nManager = require(280          ); // 280 = I18nManager
var NativeEventEmitter = require(83                  ); // 83 = NativeEventEmitter
var NativeModules = require(15             ); // 15 = NativeModules
var Platform = require(46        ); // 46 = Platform
var React = require(129    ); // 129 = React
var PropTypes = require(126         ); // 126 = prop-types
var StyleSheet = require(167         ); // 167 = StyleSheet
var View = require(169   ); // 169 = View

var deprecatedPropType = require(142                 ); // 142 = deprecatedPropType
var requireNativeComponent = require(144                     ); // 144 = requireNativeComponent
var RCTModalHostView = requireNativeComponent('RCTModalHostView', null);
var ModalEventEmitter = Platform.OS === 'ios' && NativeModules.ModalManager ? new NativeEventEmitter(NativeModules.ModalManager) : null;

var uniqueModalIdentifier = 0;

var Modal = function (_React$Component) {
  babelHelpers.inherits(Modal, _React$Component);

  function Modal(props) {
    babelHelpers.classCallCheck(this, Modal);

    var _this = babelHelpers.possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this, props));

    Modal._confirmProps(props);
    _this._identifier = uniqueModalIdentifier++;
    return _this;
  }

  babelHelpers.createClass(Modal, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      if (ModalEventEmitter) {
        this._eventSubscription = ModalEventEmitter.addListener('modalDismissed', function (event) {
          if (event.modalID === _this2._identifier && _this2.props.onDismiss) {
            _this2.props.onDismiss();
          }
        });
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this._eventSubscription) {
        this._eventSubscription.remove();
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      Modal._confirmProps(nextProps);
    }
  }, {
    key: 'render',
    value: function render() {
      if (this.props.visible === false) {
        return null;
      }

      var containerStyles = {
        backgroundColor: this.props.transparent ? 'transparent' : 'white'
      };

      var animationType = this.props.animationType;
      if (!animationType) {
        animationType = 'none';
        if (this.props.animated) {
          animationType = 'slide';
        }
      }

      var presentationStyle = this.props.presentationStyle;
      if (!presentationStyle) {
        presentationStyle = 'fullScreen';
        if (this.props.transparent) {
          presentationStyle = 'overFullScreen';
        }
      }

      var innerChildren = __DEV__ ? React.createElement(
        AppContainer,
        { rootTag: this.context.rootTag, __source: {
            fileName: _jsxFileName,
            lineNumber: 238
          }
        },
        this.props.children
      ) : this.props.children;

      return React.createElement(
        RCTModalHostView,
        {
          animationType: animationType,
          presentationStyle: presentationStyle,
          transparent: this.props.transparent,
          hardwareAccelerated: this.props.hardwareAccelerated,
          onRequestClose: this.props.onRequestClose,
          onShow: this.props.onShow,
          identifier: this._identifier,
          style: styles.modal,
          onStartShouldSetResponder: this._shouldSetResponder,
          supportedOrientations: this.props.supportedOrientations,
          onOrientationChange: this.props.onOrientationChange,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 244
          }
        },
        React.createElement(
          View,
          { style: [styles.container, containerStyles], __source: {
              fileName: _jsxFileName,
              lineNumber: 257
            }
          },
          innerChildren
        )
      );
    }
  }, {
    key: '_shouldSetResponder',
    value: function _shouldSetResponder() {
      return true;
    }
  }], [{
    key: '_confirmProps',
    value: function _confirmProps(props) {
      if (props.presentationStyle && props.presentationStyle !== 'overFullScreen' && props.transparent) {
        console.warn('Modal with \'' + props.presentationStyle + '\' presentation style and \'transparent\' value is not supported.');
      }
    }
  }]);
  return Modal;
}(React.Component);

Modal.propTypes = {
  animationType: PropTypes.oneOf(['none', 'slide', 'fade']),

  presentationStyle: PropTypes.oneOf(['fullScreen', 'pageSheet', 'formSheet', 'overFullScreen']),

  transparent: PropTypes.bool,

  hardwareAccelerated: PropTypes.bool,

  visible: PropTypes.bool,

  onRequestClose: Platform.isTVOS || Platform.OS === 'android' ? PropTypes.func.isRequired : PropTypes.func,

  onShow: PropTypes.func,

  onDismiss: PropTypes.func,
  animated: deprecatedPropType(PropTypes.bool, 'Use the `animationType` prop instead.'),

  supportedOrientations: PropTypes.arrayOf(PropTypes.oneOf(['portrait', 'portrait-upside-down', 'landscape', 'landscape-left', 'landscape-right'])),

  onOrientationChange: PropTypes.func
};
Modal.defaultProps = {
  visible: true,
  hardwareAccelerated: false
};
Modal.contextTypes = {
  rootTag: PropTypes.number
};


var side = I18nManager.isRTL ? 'right' : 'left';
var styles = StyleSheet.create({
  modal: {
    position: 'absolute'
  },
  container: (_container = {
    position: 'absolute'
  }, babelHelpers.defineProperty(_container, side, 0), babelHelpers.defineProperty(_container, 'top', 0), _container)
});

module.exports = Modal;
}, 259, null, "Modal");
__d(/* AppContainer */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/ReactNative/AppContainer.js';
var EmitterSubscription = require(79                   ); // 79 = EmitterSubscription
var PropTypes = require(126         ); // 126 = prop-types
var RCTDeviceEventEmitter = require(84                     ); // 84 = RCTDeviceEventEmitter
var React = require(129    ); // 129 = React
var ReactNative = require(21           ); // 21 = ReactNative
var StyleSheet = require(167         ); // 167 = StyleSheet
var View = require(169   ); // 169 = View

var AppContainer = function (_React$Component) {
  babelHelpers.inherits(AppContainer, _React$Component);

  function AppContainer() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, AppContainer);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = AppContainer.__proto__ || Object.getPrototypeOf(AppContainer)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      inspector: null,
      mainKey: 1
    }, _this._subscription = null, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(AppContainer, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        rootTag: this.props.rootTag
      };
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      if (__DEV__) {
        if (!global.__RCTProfileIsProfiling) {
          this._subscription = RCTDeviceEventEmitter.addListener('toggleElementInspector', function () {
            var Inspector = require(261        ); // 261 = Inspector
            var inspector = _this2.state.inspector ? null : React.createElement(Inspector, {
              inspectedViewTag: ReactNative.findNodeHandle(_this2._mainRef),
              onRequestRerenderApp: function onRequestRerenderApp(updateInspectedViewTag) {
                _this2.setState(function (s) {
                  return { mainKey: s.mainKey + 1 };
                }, function () {
                  return updateInspectedViewTag(ReactNative.findNodeHandle(_this2._mainRef));
                });
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 66
              }
            });
            _this2.setState({ inspector: inspector });
          });
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this._subscription) {
        this._subscription.remove();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var yellowBox = null;
      if (__DEV__) {
        if (!global.__RCTProfileIsProfiling) {
          var YellowBox = require(278        ); // 278 = YellowBox
          yellowBox = React.createElement(YellowBox, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 97
            }
          });
        }
      }

      var innerView = React.createElement(
        View,
        {
          collapsable: !this.state.inspector,
          key: this.state.mainKey,
          pointerEvents: 'box-none',
          style: styles.appContainer,
          ref: function ref(_ref2) {
            _this3._mainRef = _ref2;
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 102
          }
        },
        this.props.children
      );

      var Wrapper = this.props.WrapperComponent;
      if (Wrapper) {
        innerView = React.createElement(
          Wrapper,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 119
            }
          },
          innerView
        );
      }
      return React.createElement(
        View,
        { style: styles.appContainer, pointerEvents: 'box-none', __source: {
            fileName: _jsxFileName,
            lineNumber: 122
          }
        },
        innerView,
        yellowBox,
        this.state.inspector
      );
    }
  }]);
  return AppContainer;
}(React.Component);

AppContainer.childContextTypes = {
  rootTag: PropTypes.number
};


var styles = StyleSheet.create({
  appContainer: {
    flex: 1
  }
});

module.exports = AppContainer;
}, 260, null, "AppContainer");
__d(/* Inspector */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Inspector/Inspector.js';
var Dimensions = require(163         ); // 163 = Dimensions
var InspectorOverlay = require(262               ); // 262 = InspectorOverlay
var InspectorPanel = require(266             ); // 266 = InspectorPanel
var Platform = require(46        ); // 46 = Platform
var React = require(129    ); // 129 = React
var ReactNative = require(21           ); // 21 = ReactNative
var StyleSheet = require(167         ); // 167 = StyleSheet
var Touchable = require(181        ); // 181 = Touchable
var UIManager = require(47         ); // 47 = UIManager
var View = require(169   ); // 169 = View

var emptyObject = require(34                    ); // 34 = fbjs/lib/emptyObject
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var hook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;
var renderer = findRenderer();

hook.resolveRNStyle = require(43            ); // 43 = flattenStyle

function findRenderer() {
  var renderers = hook._renderers;
  var keys = Object.keys(renderers);
  invariant(keys.length === 1, 'Expected to find exactly one React Native renderer on DevTools hook.');
  return renderers[keys[0]];
}

var Inspector = function (_React$Component) {
  babelHelpers.inherits(Inspector, _React$Component);

  function Inspector(props) {
    babelHelpers.classCallCheck(this, Inspector);

    var _this = babelHelpers.possibleConstructorReturn(this, (Inspector.__proto__ || Object.getPrototypeOf(Inspector)).call(this, props));

    _initialiseProps.call(_this);

    _this.state = {
      devtoolsAgent: null,
      hierarchy: null,
      panelPos: 'bottom',
      inspecting: true,
      perfing: false,
      inspected: null,
      selection: null,
      inspectedViewTag: _this.props.inspectedViewTag,
      networking: false
    };
    return _this;
  }

  babelHelpers.createClass(Inspector, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      hook.on('react-devtools', this.attachToDevtools);

      if (hook.reactDevtoolsAgent) {
        this.attachToDevtools(hook.reactDevtoolsAgent);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this._subs) {
        this._subs.map(function (fn) {
          return fn();
        });
      }
      hook.off('react-devtools', this.attachToDevtools);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(newProps) {
      this.setState({ inspectedViewTag: newProps.inspectedViewTag });
    }
  }, {
    key: 'setSelection',
    value: function setSelection(i) {
      var _this2 = this;

      var hierarchyItem = this.state.hierarchy[i];

      var _hierarchyItem$getIns = hierarchyItem.getInspectorData(ReactNative.findNodeHandle),
          measure = _hierarchyItem$getIns.measure,
          props = _hierarchyItem$getIns.props,
          source = _hierarchyItem$getIns.source;

      measure(function (x, y, width, height, left, top) {
        _this2.setState({
          inspected: {
            frame: { left: left, top: top, width: width, height: height },
            style: props.style,
            source: source
          },
          selection: i
        });
      });
    }
  }, {
    key: 'onTouchViewTag',
    value: function onTouchViewTag(touchedViewTag, frame, pointerY) {
      var _renderer$getInspecto = renderer.getInspectorDataForViewTag(touchedViewTag),
          hierarchy = _renderer$getInspecto.hierarchy,
          props = _renderer$getInspecto.props,
          selection = _renderer$getInspecto.selection,
          source = _renderer$getInspecto.source;

      if (this.state.devtoolsAgent) {
        var offsetFromLeaf = hierarchy.length - 1 - selection;
        this.state.devtoolsAgent.selectFromDOMNode(touchedViewTag, true, offsetFromLeaf);
      }

      this.setState({
        panelPos: pointerY > Dimensions.get('window').height / 2 ? 'top' : 'bottom',
        selection: selection,
        hierarchy: hierarchy,
        inspected: {
          style: props.style,
          frame: frame,
          source: source
        }
      });
    }
  }, {
    key: 'setPerfing',
    value: function setPerfing(val) {
      this.setState({
        perfing: val,
        inspecting: false,
        inspected: null,
        networking: false
      });
    }
  }, {
    key: 'setInspecting',
    value: function setInspecting(val) {
      this.setState({
        inspecting: val,
        inspected: null
      });
    }
  }, {
    key: 'setTouchTargetting',
    value: function setTouchTargetting(val) {
      var _this3 = this;

      Touchable.TOUCH_TARGET_DEBUG = val;
      this.props.onRequestRerenderApp(function (inspectedViewTag) {
        _this3.setState({ inspectedViewTag: inspectedViewTag });
      });
    }
  }, {
    key: 'setNetworking',
    value: function setNetworking(val) {
      this.setState({
        networking: val,
        perfing: false,
        inspecting: false,
        inspected: null
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var panelContainerStyle = this.state.panelPos === 'bottom' ? { bottom: 0 } : { top: Platform.OS === 'ios' ? 20 : 0 };
      return React.createElement(
        View,
        { style: styles.container, pointerEvents: 'box-none', __source: {
            fileName: _jsxFileName,
            lineNumber: 231
          }
        },
        this.state.inspecting && React.createElement(InspectorOverlay, {
          inspected: this.state.inspected,
          inspectedViewTag: this.state.inspectedViewTag,
          onTouchViewTag: this.onTouchViewTag.bind(this),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 233
          }
        }),
        React.createElement(
          View,
          { style: [styles.panelContainer, panelContainerStyle], __source: {
              fileName: _jsxFileName,
              lineNumber: 238
            }
          },
          React.createElement(InspectorPanel, {
            devtoolsIsOpen: !!this.state.devtoolsAgent,
            inspecting: this.state.inspecting,
            perfing: this.state.perfing,
            setPerfing: this.setPerfing.bind(this),
            setInspecting: this.setInspecting.bind(this),
            inspected: this.state.inspected,
            hierarchy: this.state.hierarchy,
            selection: this.state.selection,
            setSelection: this.setSelection.bind(this),
            touchTargetting: Touchable.TOUCH_TARGET_DEBUG,
            setTouchTargetting: this.setTouchTargetting.bind(this),
            networking: this.state.networking,
            setNetworking: this.setNetworking.bind(this),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 239
            }
          })
        )
      );
    }
  }]);
  return Inspector;
}(React.Component);

var _initialiseProps = function _initialiseProps() {
  var _this4 = this;

  this.attachToDevtools = function (agent) {
    var _hideWait = null;
    var hlSub = agent.sub('highlight', function (_ref) {
      var node = _ref.node,
          name = _ref.name,
          props = _ref.props;

      clearTimeout(_hideWait);

      if (typeof node !== 'number') {
        node = ReactNative.findNodeHandle(node);
      }

      UIManager.measure(node, function (x, y, width, height, left, top) {
        _this4.setState({
          hierarchy: [],
          inspected: {
            frame: { left: left, top: top, width: width, height: height },
            style: props ? props.style : emptyObject
          }
        });
      });
    });
    var hideSub = agent.sub('hideHighlight', function () {
      if (_this4.state.inspected === null) {
        return;
      }

      _hideWait = setTimeout(function () {
        _this4.setState({
          inspected: null
        });
      }, 100);
    });
    _this4._subs = [hlSub, hideSub];

    agent.on('shutdown', function () {
      _this4.setState({ devtoolsAgent: null });
      _this4._subs = null;
    });
    _this4.setState({
      devtoolsAgent: agent
    });
  };
};

var styles = StyleSheet.create({
  container: {
    position: 'absolute',
    backgroundColor: 'transparent',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0
  },
  panelContainer: {
    position: 'absolute',
    left: 0,
    right: 0
  }
});

module.exports = Inspector;
}, 261, null, "Inspector");
__d(/* InspectorOverlay */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Inspector/InspectorOverlay.js';
var Dimensions = require(163         ); // 163 = Dimensions
var ElementBox = require(263         ); // 263 = ElementBox
var PropTypes = require(126         ); // 126 = prop-types
var React = require(129    ); // 129 = React
var StyleSheet = require(167         ); // 167 = StyleSheet
var UIManager = require(47         ); // 47 = UIManager
var View = require(169   ); // 169 = View

var InspectorOverlay = function (_React$Component) {
  babelHelpers.inherits(InspectorOverlay, _React$Component);

  function InspectorOverlay() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, InspectorOverlay);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = InspectorOverlay.__proto__ || Object.getPrototypeOf(InspectorOverlay)).call.apply(_ref, [this].concat(args))), _this), _this.findViewForTouchEvent = function (e) {
      var _e$nativeEvent$touche = e.nativeEvent.touches[0],
          locationX = _e$nativeEvent$touche.locationX,
          locationY = _e$nativeEvent$touche.locationY;

      UIManager.findSubviewIn(_this.props.inspectedViewTag, [locationX, locationY], function (nativeViewTag, left, top, width, height) {
        _this.props.onTouchViewTag(nativeViewTag, { left: left, top: top, width: width, height: height }, locationY);
      });
    }, _this.shouldSetResponser = function (e) {
      _this.findViewForTouchEvent(e);
      return true;
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(InspectorOverlay, [{
    key: 'render',
    value: function render() {
      var content = null;
      if (this.props.inspected) {
        content = React.createElement(ElementBox, { frame: this.props.inspected.frame, style: this.props.inspected.style, __source: {
            fileName: _jsxFileName,
            lineNumber: 62
          }
        });
      }

      return React.createElement(
        View,
        {
          onStartShouldSetResponder: this.shouldSetResponser,
          onResponderMove: this.findViewForTouchEvent,
          style: [styles.inspector, { height: Dimensions.get('window').height }], __source: {
            fileName: _jsxFileName,
            lineNumber: 66
          }
        },
        content
      );
    }
  }]);
  return InspectorOverlay;
}(React.Component);

InspectorOverlay.propTypes = {
  inspected: PropTypes.shape({
    frame: PropTypes.object,
    style: PropTypes.any
  }),
  inspectedViewTag: PropTypes.number,
  onTouchViewTag: PropTypes.func.isRequired
};


var styles = StyleSheet.create({
  inspector: {
    backgroundColor: 'transparent',
    position: 'absolute',
    left: 0,
    top: 0,
    right: 0
  }
});

module.exports = InspectorOverlay;
}, 262, null, "InspectorOverlay");
__d(/* ElementBox */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Inspector/ElementBox.js';
var React = require(129    ); // 129 = React
var View = require(169   ); // 169 = View
var StyleSheet = require(167         ); // 167 = StyleSheet
var BorderBox = require(264        ); // 264 = BorderBox
var resolveBoxStyle = require(265              ); // 265 = resolveBoxStyle

var flattenStyle = require(43            ); // 43 = flattenStyle

var ElementBox = function (_React$Component) {
  babelHelpers.inherits(ElementBox, _React$Component);

  function ElementBox() {
    babelHelpers.classCallCheck(this, ElementBox);
    return babelHelpers.possibleConstructorReturn(this, (ElementBox.__proto__ || Object.getPrototypeOf(ElementBox)).apply(this, arguments));
  }

  babelHelpers.createClass(ElementBox, [{
    key: 'render',
    value: function render() {
      var style = flattenStyle(this.props.style) || {};
      var margin = resolveBoxStyle('margin', style);
      var padding = resolveBoxStyle('padding', style);
      var frameStyle = this.props.frame;
      if (margin) {
        frameStyle = {
          top: frameStyle.top - margin.top,
          left: frameStyle.left - margin.left,
          height: frameStyle.height + margin.top + margin.bottom,
          width: frameStyle.width + margin.left + margin.right
        };
      }
      var contentStyle = {
        width: this.props.frame.width,
        height: this.props.frame.height
      };
      if (padding) {
        contentStyle = {
          width: contentStyle.width - padding.left - padding.right,
          height: contentStyle.height - padding.top - padding.bottom
        };
      }
      return React.createElement(
        View,
        { style: [styles.frame, frameStyle], pointerEvents: 'none', __source: {
            fileName: _jsxFileName,
            lineNumber: 47
          }
        },
        React.createElement(
          BorderBox,
          { box: margin, style: styles.margin, __source: {
              fileName: _jsxFileName,
              lineNumber: 48
            }
          },
          React.createElement(
            BorderBox,
            { box: padding, style: styles.padding, __source: {
                fileName: _jsxFileName,
                lineNumber: 49
              }
            },
            React.createElement(View, { style: [styles.content, contentStyle], __source: {
                fileName: _jsxFileName,
                lineNumber: 50
              }
            })
          )
        )
      );
    }
  }]);
  return ElementBox;
}(React.Component);

var styles = StyleSheet.create({
  frame: {
    position: 'absolute'
  },
  content: {
    backgroundColor: 'rgba(200, 230, 255, 0.8)'
  },
  padding: {
    borderColor: 'rgba(77, 255, 0, 0.3)'
  },
  margin: {
    borderColor: 'rgba(255, 132, 0, 0.3)'
  }
});

module.exports = ElementBox;
}, 263, null, "ElementBox");
__d(/* BorderBox */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Inspector/BorderBox.js';
var React = require(129    ); // 129 = React
var View = require(169   ); // 169 = View

var BorderBox = function (_React$Component) {
  babelHelpers.inherits(BorderBox, _React$Component);

  function BorderBox() {
    babelHelpers.classCallCheck(this, BorderBox);
    return babelHelpers.possibleConstructorReturn(this, (BorderBox.__proto__ || Object.getPrototypeOf(BorderBox)).apply(this, arguments));
  }

  babelHelpers.createClass(BorderBox, [{
    key: 'render',
    value: function render() {
      var box = this.props.box;
      if (!box) {
        return this.props.children;
      }
      var style = {
        borderTopWidth: box.top,
        borderBottomWidth: box.bottom,
        borderLeftWidth: box.left,
        borderRightWidth: box.right
      };
      return React.createElement(
        View,
        { style: [style, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 30
          }
        },
        this.props.children
      );
    }
  }]);
  return BorderBox;
}(React.Component);

module.exports = BorderBox;
}, 264, null, "BorderBox");
__d(/* resolveBoxStyle */function(global, require, module, exports) {
'use strict';

function resolveBoxStyle(prefix, style) {
  var res = {};
  var subs = ['top', 'left', 'bottom', 'right'];
  var set = false;
  subs.forEach(function (sub) {
    res[sub] = style[prefix] || 0;
  });
  if (style[prefix]) {
    set = true;
  }
  if (style[prefix + 'Vertical']) {
    res.top = res.bottom = style[prefix + 'Vertical'];
    set = true;
  }
  if (style[prefix + 'Horizontal']) {
    res.left = res.right = style[prefix + 'Horizontal'];
    set = true;
  }
  subs.forEach(function (sub) {
    var val = style[prefix + capFirst(sub)];
    if (val) {
      res[sub] = val;
      set = true;
    }
  });
  if (!set) {
    return;
  }
  return res;
}

function capFirst(text) {
  return text[0].toUpperCase() + text.slice(1);
}

module.exports = resolveBoxStyle;
}, 265, null, "resolveBoxStyle");
__d(/* InspectorPanel */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Inspector/InspectorPanel.js';
var ElementProperties = require(267                ); // 267 = ElementProperties
var NetworkOverlay = require(274             ); // 274 = NetworkOverlay
var PerformanceOverlay = require(277                 ); // 277 = PerformanceOverlay
var React = require(129    ); // 129 = React
var PropTypes = require(126         ); // 126 = prop-types
var ScrollView = require(223         ); // 223 = ScrollView
var StyleSheet = require(167         ); // 167 = StyleSheet
var Text = require(180   ); // 180 = Text
var TouchableHighlight = require(270                 ); // 270 = TouchableHighlight
var View = require(169   ); // 169 = View

var InspectorPanel = function (_React$Component) {
  babelHelpers.inherits(InspectorPanel, _React$Component);

  function InspectorPanel() {
    babelHelpers.classCallCheck(this, InspectorPanel);
    return babelHelpers.possibleConstructorReturn(this, (InspectorPanel.__proto__ || Object.getPrototypeOf(InspectorPanel)).apply(this, arguments));
  }

  babelHelpers.createClass(InspectorPanel, [{
    key: 'renderWaiting',
    value: function renderWaiting() {
      if (this.props.inspecting) {
        return React.createElement(
          Text,
          { style: styles.waitingText, __source: {
              fileName: _jsxFileName,
              lineNumber: 29
            }
          },
          'Tap something to inspect it'
        );
      }
      return React.createElement(
        Text,
        { style: styles.waitingText, __source: {
            fileName: _jsxFileName,
            lineNumber: 34
          }
        },
        'Nothing is inspected'
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var contents = void 0;
      if (this.props.inspected) {
        contents = React.createElement(
          ScrollView,
          { style: styles.properties, __source: {
              fileName: _jsxFileName,
              lineNumber: 41
            }
          },
          React.createElement(ElementProperties, {
            style: this.props.inspected.style,
            frame: this.props.inspected.frame,
            source: this.props.inspected.source,
            hierarchy: this.props.hierarchy,
            selection: this.props.selection,
            setSelection: this.props.setSelection,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 42
            }
          })
        );
      } else if (this.props.perfing) {
        contents = React.createElement(PerformanceOverlay, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 54
          }
        });
      } else if (this.props.networking) {
        contents = React.createElement(NetworkOverlay, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 58
          }
        });
      } else {
        contents = React.createElement(
          View,
          { style: styles.waiting, __source: {
              fileName: _jsxFileName,
              lineNumber: 62
            }
          },
          this.renderWaiting()
        );
      }
      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 68
          }
        },
        !this.props.devtoolsIsOpen && contents,
        React.createElement(
          View,
          { style: styles.buttonRow, __source: {
              fileName: _jsxFileName,
              lineNumber: 70
            }
          },
          React.createElement(Button, {
            title: 'Inspect',
            pressed: this.props.inspecting,
            onClick: this.props.setInspecting,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 71
            }
          }),
          React.createElement(Button, { title: 'Perf',
            pressed: this.props.perfing,
            onClick: this.props.setPerfing,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 76
            }
          }),
          React.createElement(Button, { title: 'Network',
            pressed: this.props.networking,
            onClick: this.props.setNetworking,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 80
            }
          }),
          React.createElement(Button, { title: 'Touchables',
            pressed: this.props.touchTargetting,
            onClick: this.props.setTouchTargetting,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 84
            }
          })
        )
      );
    }
  }]);
  return InspectorPanel;
}(React.Component);

InspectorPanel.propTypes = {
  devtoolsIsOpen: PropTypes.bool,
  inspecting: PropTypes.bool,
  setInspecting: PropTypes.func,
  inspected: PropTypes.object,
  perfing: PropTypes.bool,
  setPerfing: PropTypes.func,
  touchTargetting: PropTypes.bool,
  setTouchTargetting: PropTypes.func,
  networking: PropTypes.bool,
  setNetworking: PropTypes.func
};

var Button = function (_React$Component2) {
  babelHelpers.inherits(Button, _React$Component2);

  function Button() {
    babelHelpers.classCallCheck(this, Button);
    return babelHelpers.possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).apply(this, arguments));
  }

  babelHelpers.createClass(Button, [{
    key: 'render',
    value: function render() {
      var _this3 = this;

      return React.createElement(
        TouchableHighlight,
        { onPress: function onPress() {
            return _this3.props.onClick(!_this3.props.pressed);
          }, style: [styles.button, this.props.pressed && styles.buttonPressed], __source: {
            fileName: _jsxFileName,
            lineNumber: 110
          }
        },
        React.createElement(
          Text,
          { style: styles.buttonText, __source: {
              fileName: _jsxFileName,
              lineNumber: 114
            }
          },
          this.props.title
        )
      );
    }
  }]);
  return Button;
}(React.Component);

var styles = StyleSheet.create({
  buttonRow: {
    flexDirection: 'row'
  },
  button: {
    backgroundColor: 'rgba(0, 0, 0, 0.3)',
    margin: 2,
    height: 30,
    justifyContent: 'center',
    alignItems: 'center'
  },
  buttonPressed: {
    backgroundColor: 'rgba(255, 255, 255, 0.3)'
  },
  buttonText: {
    textAlign: 'center',
    color: 'white',
    margin: 5
  },
  container: {
    backgroundColor: 'rgba(0, 0, 0, 0.7)'
  },
  properties: {
    height: 200
  },
  waiting: {
    height: 100
  },
  waitingText: {
    fontSize: 20,
    textAlign: 'center',
    marginVertical: 20,
    color: 'white'
  }
});

module.exports = InspectorPanel;
}, 266, null, "InspectorPanel");
__d(/* ElementProperties */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Inspector/ElementProperties.js';
var BoxInspector = require(268           ); // 268 = BoxInspector
var PropTypes = require(126         ); // 126 = prop-types
var React = require(129    ); // 129 = React
var StyleInspector = require(269             ); // 269 = StyleInspector
var StyleSheet = require(167         ); // 167 = StyleSheet
var Text = require(180   ); // 180 = Text
var TouchableHighlight = require(270                 ); // 270 = TouchableHighlight
var TouchableWithoutFeedback = require(189                       ); // 189 = TouchableWithoutFeedback
var View = require(169   ); // 169 = View

var flattenStyle = require(43            ); // 43 = flattenStyle
var mapWithSeparator = require(272               ); // 272 = mapWithSeparator
var openFileInEditor = require(273               ); // 273 = openFileInEditor

var ElementProperties = function (_React$Component) {
  babelHelpers.inherits(ElementProperties, _React$Component);

  function ElementProperties() {
    babelHelpers.classCallCheck(this, ElementProperties);
    return babelHelpers.possibleConstructorReturn(this, (ElementProperties.__proto__ || Object.getPrototypeOf(ElementProperties)).apply(this, arguments));
  }

  babelHelpers.createClass(ElementProperties, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var style = flattenStyle(this.props.style);

      var selection = this.props.selection;
      var openFileButton = void 0;
      var source = this.props.source;

      var _ref = source || {},
          fileName = _ref.fileName,
          lineNumber = _ref.lineNumber;

      if (fileName && lineNumber) {
        var parts = fileName.split('/');
        var fileNameShort = parts[parts.length - 1];
        openFileButton = React.createElement(
          TouchableHighlight,
          {
            style: styles.openButton,
            onPress: openFileInEditor.bind(null, fileName, lineNumber), __source: {
              fileName: _jsxFileName,
              lineNumber: 60
            }
          },
          React.createElement(
            Text,
            { style: styles.openButtonTitle, numberOfLines: 1, __source: {
                fileName: _jsxFileName,
                lineNumber: 63
              }
            },
            fileNameShort,
            ':',
            lineNumber
          )
        );
      }

      return React.createElement(
        TouchableWithoutFeedback,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 72
          }
        },
        React.createElement(
          View,
          { style: styles.info, __source: {
              fileName: _jsxFileName,
              lineNumber: 73
            }
          },
          React.createElement(
            View,
            { style: styles.breadcrumb, __source: {
                fileName: _jsxFileName,
                lineNumber: 74
              }
            },
            mapWithSeparator(this.props.hierarchy, function (hierarchyItem, i) {
              return React.createElement(
                TouchableHighlight,
                {
                  key: 'item-' + i,
                  style: [styles.breadItem, i === selection && styles.selected],

                  onPress: function onPress() {
                    return _this2.props.setSelection(i);
                  }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 78
                  }
                },
                React.createElement(
                  Text,
                  { style: styles.breadItemText, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 83
                    }
                  },
                  hierarchyItem.name
                )
              );
            }, function (i) {
              return React.createElement(
                Text,
                { key: 'sep-' + i, style: styles.breadSep, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 89
                  }
                },
                '\u25B8'
              );
            })
          ),
          React.createElement(
            View,
            { style: styles.row, __source: {
                fileName: _jsxFileName,
                lineNumber: 95
              }
            },
            React.createElement(
              View,
              { style: styles.col, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 96
                }
              },
              React.createElement(StyleInspector, { style: style, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 97
                }
              }),
              openFileButton
            ),
            React.createElement(BoxInspector, { style: style, frame: this.props.frame, __source: {
                fileName: _jsxFileName,
                lineNumber: 102
              }
            })
          )
        )
      );
    }
  }]);
  return ElementProperties;
}(React.Component);

ElementProperties.propTypes = {
  hierarchy: PropTypes.array.isRequired,
  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),
  source: PropTypes.shape({
    fileName: PropTypes.string,
    lineNumber: PropTypes.number
  })
};


var styles = StyleSheet.create({
  breadSep: {
    fontSize: 8,
    color: 'white'
  },
  breadcrumb: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    alignItems: 'flex-start',
    marginBottom: 5
  },
  selected: {
    borderColor: 'white',
    borderRadius: 5
  },
  breadItem: {
    borderWidth: 1,
    borderColor: 'transparent',
    marginHorizontal: 2
  },
  breadItemText: {
    fontSize: 10,
    color: 'white',
    marginHorizontal: 5
  },
  row: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between'
  },
  col: {
    flex: 1
  },
  info: {
    padding: 10
  },
  openButton: {
    padding: 10,
    backgroundColor: '#000',
    marginVertical: 5,
    marginRight: 5,
    borderRadius: 2
  },
  openButtonTitle: {
    color: 'white',
    fontSize: 8
  }
});

module.exports = ElementProperties;
}, 267, null, "ElementProperties");
__d(/* BoxInspector */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Inspector/BoxInspector.js';
var React = require(129    ); // 129 = React
var StyleSheet = require(167         ); // 167 = StyleSheet
var Text = require(180   ); // 180 = Text
var View = require(169   ); // 169 = View
var resolveBoxStyle = require(265              ); // 265 = resolveBoxStyle

var blank = {
  top: 0,
  left: 0,
  right: 0,
  bottom: 0
};

var BoxInspector = function (_React$Component) {
  babelHelpers.inherits(BoxInspector, _React$Component);

  function BoxInspector() {
    babelHelpers.classCallCheck(this, BoxInspector);
    return babelHelpers.possibleConstructorReturn(this, (BoxInspector.__proto__ || Object.getPrototypeOf(BoxInspector)).apply(this, arguments));
  }

  babelHelpers.createClass(BoxInspector, [{
    key: 'render',
    value: function render() {
      var frame = this.props.frame;
      var style = this.props.style;
      var margin = style && resolveBoxStyle('margin', style) || blank;
      var padding = style && resolveBoxStyle('padding', style) || blank;
      return React.createElement(
        BoxContainer,
        { title: 'margin', titleStyle: styles.marginLabel, box: margin, __source: {
            fileName: _jsxFileName,
            lineNumber: 34
          }
        },
        React.createElement(
          BoxContainer,
          { title: 'padding', box: padding, __source: {
              fileName: _jsxFileName,
              lineNumber: 35
            }
          },
          React.createElement(
            View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 36
              }
            },
            React.createElement(
              Text,
              { style: styles.innerText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 37
                }
              },
              '(',
              (frame.left || 0).toFixed(1),
              ', ',
              (frame.top || 0).toFixed(1),
              ')'
            ),
            React.createElement(
              Text,
              { style: styles.innerText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 40
                }
              },
              (frame.width || 0).toFixed(1),
              ' \xD7 ',
              (frame.height || 0).toFixed(1)
            )
          )
        )
      );
    }
  }]);
  return BoxInspector;
}(React.Component);

var BoxContainer = function (_React$Component2) {
  babelHelpers.inherits(BoxContainer, _React$Component2);

  function BoxContainer() {
    babelHelpers.classCallCheck(this, BoxContainer);
    return babelHelpers.possibleConstructorReturn(this, (BoxContainer.__proto__ || Object.getPrototypeOf(BoxContainer)).apply(this, arguments));
  }

  babelHelpers.createClass(BoxContainer, [{
    key: 'render',
    value: function render() {
      var box = this.props.box;
      return React.createElement(
        View,
        { style: styles.box, __source: {
            fileName: _jsxFileName,
            lineNumber: 54
          }
        },
        React.createElement(
          View,
          { style: styles.row, __source: {
              fileName: _jsxFileName,
              lineNumber: 55
            }
          },
          React.createElement(
            Text,
            { style: [this.props.titleStyle, styles.label], __source: {
                fileName: _jsxFileName,
                lineNumber: 58
              }
            },
            this.props.title
          ),
          React.createElement(
            Text,
            { style: styles.boxText, __source: {
                fileName: _jsxFileName,
                lineNumber: 59
              }
            },
            box.top
          )
        ),
        React.createElement(
          View,
          { style: styles.row, __source: {
              fileName: _jsxFileName,
              lineNumber: 61
            }
          },
          React.createElement(
            Text,
            { style: styles.boxText, __source: {
                fileName: _jsxFileName,
                lineNumber: 62
              }
            },
            box.left
          ),
          this.props.children,
          React.createElement(
            Text,
            { style: styles.boxText, __source: {
                fileName: _jsxFileName,
                lineNumber: 64
              }
            },
            box.right
          )
        ),
        React.createElement(
          Text,
          { style: styles.boxText, __source: {
              fileName: _jsxFileName,
              lineNumber: 66
            }
          },
          box.bottom
        )
      );
    }
  }]);
  return BoxContainer;
}(React.Component);

var styles = StyleSheet.create({
  row: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-around'
  },
  marginLabel: {
    width: 60
  },
  label: {
    fontSize: 10,
    color: 'rgb(255,100,0)',
    marginLeft: 5,
    flex: 1,
    textAlign: 'left',
    top: -3
  },
  buffer: {
    fontSize: 10,
    color: 'yellow',
    flex: 1,
    textAlign: 'center'
  },
  innerText: {
    color: 'yellow',
    fontSize: 12,
    textAlign: 'center',
    width: 70
  },
  box: {
    borderWidth: 1,
    borderColor: 'grey'
  },
  boxText: {
    color: 'white',
    fontSize: 12,
    marginHorizontal: 3,
    marginVertical: 2,
    textAlign: 'center'
  }
});

module.exports = BoxInspector;
}, 268, null, "BoxInspector");
__d(/* StyleInspector */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Inspector/StyleInspector.js';
var React = require(129    ); // 129 = React
var StyleSheet = require(167         ); // 167 = StyleSheet
var Text = require(180   ); // 180 = Text
var View = require(169   ); // 169 = View

var StyleInspector = function (_React$Component) {
  babelHelpers.inherits(StyleInspector, _React$Component);

  function StyleInspector() {
    babelHelpers.classCallCheck(this, StyleInspector);
    return babelHelpers.possibleConstructorReturn(this, (StyleInspector.__proto__ || Object.getPrototypeOf(StyleInspector)).apply(this, arguments));
  }

  babelHelpers.createClass(StyleInspector, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      if (!this.props.style) {
        return React.createElement(
          Text,
          { style: styles.noStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 22
            }
          },
          'No style'
        );
      }
      var names = Object.keys(this.props.style);
      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 26
          }
        },
        React.createElement(
          View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 27
            }
          },
          names.map(function (name) {
            return React.createElement(
              Text,
              { key: name, style: styles.attr, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 28
                }
              },
              name,
              ':'
            );
          })
        ),
        React.createElement(
          View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 31
            }
          },
          names.map(function (name) {
            var value = typeof _this2.props.style[name] === 'object' ? JSON.stringify(_this2.props.style[name]) : _this2.props.style[name];
            return React.createElement(
              Text,
              { key: name, style: styles.value, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 34
                }
              },
              value
            );
          })
        )
      );
    }
  }]);
  return StyleInspector;
}(React.Component);

var styles = StyleSheet.create({
  container: {
    flexDirection: 'row'
  },
  row: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-around'
  },
  attr: {
    fontSize: 10,
    color: '#ccc'
  },
  value: {
    fontSize: 10,
    color: 'white',
    marginLeft: 10
  },
  noStyle: {
    color: 'white',
    fontSize: 10
  }
});

module.exports = StyleInspector;
}, 269, null, "StyleInspector");
__d(/* TouchableHighlight */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.js';
var ColorPropType = require(122            ); // 122 = ColorPropType
var NativeMethodsMixin = require(124                 ); // 124 = NativeMethodsMixin
var PropTypes = require(126         ); // 126 = prop-types
var React = require(129    ); // 129 = React
var ReactNativeViewAttributes = require(170                        ); // 170 = ReactNativeViewAttributes
var StyleSheet = require(167         ); // 167 = StyleSheet

var TimerMixin = require(190                ); // 190 = react-timer-mixin
var Touchable = require(181        ); // 181 = Touchable
var TouchableWithoutFeedback = require(189                       ); // 189 = TouchableWithoutFeedback
var View = require(169   ); // 169 = View
var ViewPropTypes = require(130            ); // 130 = ViewPropTypes

var createReactClass = require(171                 ); // 171 = create-react-class
var ensureComponentIsNative = require(252                      ); // 252 = ensureComponentIsNative
var ensurePositiveDelayProps = require(191                       ); // 191 = ensurePositiveDelayProps

var keyOf = require(271             ); // 271 = fbjs/lib/keyOf
var merge = require(133    ); // 133 = merge

var DEFAULT_PROPS = {
  activeOpacity: 0.85,
  underlayColor: 'black'
};

var PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };

var TouchableHighlight = createReactClass({
  displayName: 'TouchableHighlight',
  propTypes: babelHelpers.extends({}, TouchableWithoutFeedback.propTypes, {
    activeOpacity: PropTypes.number,

    underlayColor: ColorPropType,
    style: ViewPropTypes.style,

    onShowUnderlay: PropTypes.func,

    onHideUnderlay: PropTypes.func,

    hasTVPreferredFocus: PropTypes.bool,

    tvParallaxProperties: PropTypes.object
  }),

  mixins: [NativeMethodsMixin, TimerMixin, Touchable.Mixin],

  getDefaultProps: function getDefaultProps() {
    return DEFAULT_PROPS;
  },

  _computeSyntheticState: function _computeSyntheticState(props) {
    return {
      activeProps: {
        style: {
          opacity: props.activeOpacity
        }
      },
      activeUnderlayProps: {
        style: {
          backgroundColor: props.underlayColor
        }
      },
      underlayStyle: [INACTIVE_UNDERLAY_PROPS.style, props.style],
      hasTVPreferredFocus: props.hasTVPreferredFocus
    };
  },

  getInitialState: function getInitialState() {
    this._isMounted = false;
    return merge(this.touchableGetInitialState(), this._computeSyntheticState(this.props));
  },

  componentDidMount: function componentDidMount() {
    this._isMounted = true;
    ensurePositiveDelayProps(this.props);
    ensureComponentIsNative(this.refs[CHILD_REF]);
  },

  componentWillUnmount: function componentWillUnmount() {
    this._isMounted = false;
  },

  componentDidUpdate: function componentDidUpdate() {
    ensureComponentIsNative(this.refs[CHILD_REF]);
  },

  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    ensurePositiveDelayProps(nextProps);
    if (nextProps.activeOpacity !== this.props.activeOpacity || nextProps.underlayColor !== this.props.underlayColor || nextProps.style !== this.props.style) {
      this.setState(this._computeSyntheticState(nextProps));
    }
  },

  viewConfig: {
    uiViewClassName: 'RCTView',
    validAttributes: ReactNativeViewAttributes.RCTView
  },

  touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {
    this.clearTimeout(this._hideTimeout);

    this._hideTimeout = null;
    this._showUnderlay();
    this.props.onPressIn && this.props.onPressIn(e);
  },

  touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {
    if (!this._hideTimeout) {
      this._hideUnderlay();
    }
    this.props.onPressOut && this.props.onPressOut(e);
  },

  touchableHandlePress: function touchableHandlePress(e) {
    this.clearTimeout(this._hideTimeout);
    this._showUnderlay();

    this._hideTimeout = this.setTimeout(this._hideUnderlay, this.props.delayPressOut || 100);
    this.props.onPress && this.props.onPress(e);
  },

  touchableHandleLongPress: function touchableHandleLongPress(e) {
    this.props.onLongPress && this.props.onLongPress(e);
  },

  touchableGetPressRectOffset: function touchableGetPressRectOffset() {
    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;
  },

  touchableGetHitSlop: function touchableGetHitSlop() {
    return this.props.hitSlop;
  },

  touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {
    return this.props.delayPressIn;
  },

  touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {
    return this.props.delayLongPress;
  },

  touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {
    return this.props.delayPressOut;
  },

  _showUnderlay: function _showUnderlay() {
    if (!this._isMounted || !this._hasPressHandler()) {
      return;
    }

    this.refs[UNDERLAY_REF].setNativeProps(this.state.activeUnderlayProps);
    this.refs[CHILD_REF].setNativeProps(this.state.activeProps);
    this.props.onShowUnderlay && this.props.onShowUnderlay();
  },

  _hideUnderlay: function _hideUnderlay() {
    this.clearTimeout(this._hideTimeout);

    this._hideTimeout = null;
    if (this._hasPressHandler() && this.refs[UNDERLAY_REF]) {
      this.refs[CHILD_REF].setNativeProps(INACTIVE_CHILD_PROPS);
      this.refs[UNDERLAY_REF].setNativeProps(babelHelpers.extends({}, INACTIVE_UNDERLAY_PROPS, {
        style: this.state.underlayStyle
      }));
      this.props.onHideUnderlay && this.props.onHideUnderlay();
    }
  },

  _hasPressHandler: function _hasPressHandler() {
    return !!(this.props.onPress || this.props.onPressIn || this.props.onPressOut || this.props.onLongPress);
  },

  render: function render() {
    return React.createElement(
      View,
      {
        accessible: this.props.accessible !== false,

        accessibilityLabel: this.props.accessibilityLabel,
        accessibilityComponentType: this.props.accessibilityComponentType,
        accessibilityTraits: this.props.accessibilityTraits,
        ref: UNDERLAY_REF,
        style: this.state.underlayStyle,
        onLayout: this.props.onLayout,
        hitSlop: this.props.hitSlop,
        isTVSelectable: true,
        tvParallaxProperties: this.props.tvParallaxProperties,
        hasTVPreferredFocus: this.state.hasTVPreferredFocus,
        onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,
        onResponderTerminationRequest: this.touchableHandleResponderTerminationRequest,
        onResponderGrant: this.touchableHandleResponderGrant,
        onResponderMove: this.touchableHandleResponderMove,
        onResponderRelease: this.touchableHandleResponderRelease,
        onResponderTerminate: this.touchableHandleResponderTerminate,

        nativeID: this.props.nativeID,

        testID: this.props.testID, __source: {
          fileName: _jsxFileName,
          lineNumber: 349
        }
      },
      React.cloneElement(React.Children.only(this.props.children), {
        ref: CHILD_REF
      }),
      Touchable.renderDebugView({ color: 'green', hitSlop: this.props.hitSlop })
    );
  }
});

var CHILD_REF = keyOf({ childRef: null });
var UNDERLAY_REF = keyOf({ underlayRef: null });
var INACTIVE_CHILD_PROPS = {
  style: StyleSheet.create({ x: { opacity: 1.0 } }).x
};
var INACTIVE_UNDERLAY_PROPS = {
  style: StyleSheet.create({ x: { backgroundColor: 'transparent' } }).x
};

module.exports = TouchableHighlight;
}, 270, null, "TouchableHighlight");
__d(/* fbjs/lib/keyOf.js */function(global, require, module, exports) {"use strict";

var keyOf = function keyOf(oneKeyObj) {
  var key;
  for (key in oneKeyObj) {
    if (!oneKeyObj.hasOwnProperty(key)) {
      continue;
    }
    return key;
  }
  return null;
};

module.exports = keyOf;
}, 271, null, "fbjs/lib/keyOf.js");
__d(/* mapWithSeparator */function(global, require, module, exports) {
'use strict';

function mapWithSeparator(items, itemRenderer, spacerRenderer) {
  var mapped = [];
  if (items.length > 0) {
    mapped.push(itemRenderer(items[0], 0, items));
    for (var ii = 1; ii < items.length; ii++) {
      mapped.push(spacerRenderer(ii - 1), itemRenderer(items[ii], ii, items));
    }
  }
  return mapped;
}

module.exports = mapWithSeparator;
}, 272, null, "mapWithSeparator");
__d(/* openFileInEditor */function(global, require, module, exports) {
'use strict';

var getDevServer = require(30            ); // 30 = getDevServer

function openFileInEditor(file, lineNumber) {
  fetch(getDevServer().url + 'open-stack-frame', {
    method: 'POST',
    body: JSON.stringify({ file: file, lineNumber: lineNumber })
  });
}

module.exports = openFileInEditor;
}, 273, null, "openFileInEditor");
__d(/* NetworkOverlay */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Inspector/NetworkOverlay.js';
var ListView = require(240       ); // 240 = ListView
var React = require(129    ); // 129 = React
var ScrollView = require(223         ); // 223 = ScrollView
var StyleSheet = require(167         ); // 167 = StyleSheet
var Text = require(180   ); // 180 = Text
var TouchableHighlight = require(270                 ); // 270 = TouchableHighlight
var View = require(169   ); // 169 = View
var WebSocketInterceptor = require(275                   ); // 275 = WebSocketInterceptor
var XHRInterceptor = require(276             ); // 276 = XHRInterceptor

var LISTVIEW_CELL_HEIGHT = 15;
var SEPARATOR_THICKNESS = 2;

var nextXHRId = 0;

var NetworkOverlay = function (_React$Component) {
  babelHelpers.inherits(NetworkOverlay, _React$Component);

  function NetworkOverlay(props) {
    babelHelpers.classCallCheck(this, NetworkOverlay);

    var _this = babelHelpers.possibleConstructorReturn(this, (NetworkOverlay.__proto__ || Object.getPrototypeOf(NetworkOverlay)).call(this, props));

    _this._requests = [];
    _this._detailViewItems = [];
    _this._listViewDataSource = new ListView.DataSource({ rowHasChanged: function rowHasChanged(r1, r2) {
        return r1 !== r2;
      } });
    _this.state = {
      dataSource: _this._listViewDataSource.cloneWithRows([]),
      newDetailInfo: false,
      detailRowID: null
    };
    _this._listViewHighlighted = false;
    _this._listViewHeight = 0;
    _this._captureRequestListView = _this._captureRequestListView.bind(_this);
    _this._captureDetailScrollView = _this._captureDetailScrollView.bind(_this);
    _this._listViewOnLayout = _this._listViewOnLayout.bind(_this);
    _this._renderRow = _this._renderRow.bind(_this);
    _this._closeButtonClicked = _this._closeButtonClicked.bind(_this);
    _this._socketIdMap = {};
    _this._xhrIdMap = {};
    return _this;
  }

  babelHelpers.createClass(NetworkOverlay, [{
    key: '_enableXHRInterception',
    value: function _enableXHRInterception() {
      var _this2 = this;

      if (XHRInterceptor.isInterceptorEnabled()) {
        return;
      }

      XHRInterceptor.setOpenCallback(function (method, url, xhr) {
        xhr._index = nextXHRId++;
        var xhrIndex = _this2._requests.length;
        _this2._xhrIdMap[xhr._index] = xhrIndex;

        var _xhr = {
          'type': 'XMLHttpRequest',
          'method': method,
          'url': url
        };
        _this2._requests.push(_xhr);
        _this2._detailViewItems.push([]);
        _this2._genDetailViewItem(xhrIndex);
        _this2.setState({ dataSource: _this2._listViewDataSource.cloneWithRows(_this2._requests) }, _this2._scrollToBottom());
      });

      XHRInterceptor.setRequestHeaderCallback(function (header, value, xhr) {
        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);
        if (xhrIndex === -1) {
          return;
        }
        var networkInfo = _this2._requests[xhrIndex];
        if (!networkInfo.requestHeaders) {
          networkInfo.requestHeaders = {};
        }
        networkInfo.requestHeaders[header] = value;
        _this2._genDetailViewItem(xhrIndex);
      });

      XHRInterceptor.setSendCallback(function (data, xhr) {
        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);
        if (xhrIndex === -1) {
          return;
        }
        _this2._requests[xhrIndex].dataSent = data;
        _this2._genDetailViewItem(xhrIndex);
      });

      XHRInterceptor.setHeaderReceivedCallback(function (type, size, responseHeaders, xhr) {
        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);
        if (xhrIndex === -1) {
          return;
        }
        var networkInfo = _this2._requests[xhrIndex];
        networkInfo.responseContentType = type;
        networkInfo.responseSize = size;
        networkInfo.responseHeaders = responseHeaders;
        _this2._genDetailViewItem(xhrIndex);
      });

      XHRInterceptor.setResponseCallback(function (status, timeout, response, responseURL, responseType, xhr) {
        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);
        if (xhrIndex === -1) {
          return;
        }
        var networkInfo = _this2._requests[xhrIndex];
        networkInfo.status = status;
        networkInfo.timeout = timeout;
        networkInfo.response = response;
        networkInfo.responseURL = responseURL;
        networkInfo.responseType = responseType;
        _this2._genDetailViewItem(xhrIndex);
      });

      XHRInterceptor.enableInterception();
    }
  }, {
    key: '_enableWebSocketInterception',
    value: function _enableWebSocketInterception() {
      var _this3 = this;

      if (WebSocketInterceptor.isInterceptorEnabled()) {
        return;
      }

      WebSocketInterceptor.setConnectCallback(function (url, protocols, options, socketId) {
        var socketIndex = _this3._requests.length;
        _this3._socketIdMap[socketId] = socketIndex;
        var _webSocket = {
          'type': 'WebSocket',
          'url': url,
          'protocols': protocols
        };
        _this3._requests.push(_webSocket);
        _this3._detailViewItems.push([]);
        _this3._genDetailViewItem(socketIndex);
        _this3.setState({ dataSource: _this3._listViewDataSource.cloneWithRows(_this3._requests) }, _this3._scrollToBottom());
      });

      WebSocketInterceptor.setCloseCallback(function (statusCode, closeReason, socketId) {
        var socketIndex = _this3._socketIdMap[socketId];
        if (socketIndex === undefined) {
          return;
        }
        if (statusCode !== null && closeReason !== null) {
          _this3._requests[socketIndex].status = statusCode;
          _this3._requests[socketIndex].closeReason = closeReason;
        }
        _this3._genDetailViewItem(socketIndex);
      });

      WebSocketInterceptor.setSendCallback(function (data, socketId) {
        var socketIndex = _this3._socketIdMap[socketId];
        if (socketIndex === undefined) {
          return;
        }
        if (!_this3._requests[socketIndex].messages) {
          _this3._requests[socketIndex].messages = '';
        }
        _this3._requests[socketIndex].messages += 'Sent: ' + JSON.stringify(data) + '\n';
        _this3._genDetailViewItem(socketIndex);
      });

      WebSocketInterceptor.setOnMessageCallback(function (socketId, message) {
        var socketIndex = _this3._socketIdMap[socketId];
        if (socketIndex === undefined) {
          return;
        }
        if (!_this3._requests[socketIndex].messages) {
          _this3._requests[socketIndex].messages = '';
        }
        _this3._requests[socketIndex].messages += 'Received: ' + JSON.stringify(message) + '\n';
        _this3._genDetailViewItem(socketIndex);
      });

      WebSocketInterceptor.setOnCloseCallback(function (socketId, message) {
        var socketIndex = _this3._socketIdMap[socketId];
        if (socketIndex === undefined) {
          return;
        }
        _this3._requests[socketIndex].serverClose = message;
        _this3._genDetailViewItem(socketIndex);
      });

      WebSocketInterceptor.setOnErrorCallback(function (socketId, message) {
        var socketIndex = _this3._socketIdMap[socketId];
        if (socketIndex === undefined) {
          return;
        }
        _this3._requests[socketIndex].serverError = message;
        _this3._genDetailViewItem(socketIndex);
      });

      WebSocketInterceptor.enableInterception();
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._enableXHRInterception();
      this._enableWebSocketInterception();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      XHRInterceptor.disableInterception();
      WebSocketInterceptor.disableInterception();
    }
  }, {
    key: '_renderRow',
    value: function _renderRow(rowData, sectionID, rowID, highlightRow) {
      var _this4 = this;

      var urlCellViewStyle = styles.urlEvenCellView;
      var methodCellViewStyle = styles.methodEvenCellView;
      if (rowID % 2 === 1) {
        urlCellViewStyle = styles.urlOddCellView;
        methodCellViewStyle = styles.methodOddCellView;
      }
      return React.createElement(
        TouchableHighlight,
        { onPress: function onPress() {
            _this4._pressRow(rowID);
            highlightRow(sectionID, rowID);
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 300
          }
        },
        React.createElement(
          View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 304
            }
          },
          React.createElement(
            View,
            { style: styles.tableRow, __source: {
                fileName: _jsxFileName,
                lineNumber: 305
              }
            },
            React.createElement(
              View,
              { style: urlCellViewStyle, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 306
                }
              },
              React.createElement(
                Text,
                { style: styles.cellText, numberOfLines: 1, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 307
                  }
                },
                rowData.url
              )
            ),
            React.createElement(
              View,
              { style: methodCellViewStyle, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 311
                }
              },
              React.createElement(
                Text,
                { style: styles.cellText, numberOfLines: 1, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 312
                  }
                },
                this._getTypeShortName(rowData.type)
              )
            )
          )
        )
      );
    }
  }, {
    key: '_renderSeperator',
    value: function _renderSeperator(sectionID, rowID, adjacentRowHighlighted) {
      return React.createElement(View, {
        key: sectionID + '-' + rowID,
        style: {
          height: adjacentRowHighlighted ? SEPARATOR_THICKNESS : 0,
          backgroundColor: adjacentRowHighlighted ? '#3B5998' : '#CCCCCC'
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 327
        }
      });
    }
  }, {
    key: '_scrollToBottom',
    value: function _scrollToBottom() {
      if (this._listView) {
        var scrollResponder = this._listView.getScrollResponder();
        if (scrollResponder) {
          var scrollY = Math.max(this._requests.length * LISTVIEW_CELL_HEIGHT + (this._listViewHighlighted ? 2 * SEPARATOR_THICKNESS : 0) - this._listViewHeight, 0);
          scrollResponder.scrollResponderScrollTo({
            x: 0,
            y: scrollY,
            animated: true
          });
        }
      }
    }
  }, {
    key: '_captureRequestListView',
    value: function _captureRequestListView(listRef) {
      this._listView = listRef;
    }
  }, {
    key: '_listViewOnLayout',
    value: function _listViewOnLayout(event) {
      var height = event.nativeEvent.layout.height;

      this._listViewHeight = height;
    }
  }, {
    key: '_pressRow',
    value: function _pressRow(rowID) {
      this._listViewHighlighted = true;
      this.setState({ detailRowID: rowID }, this._scrollToTop());
    }
  }, {
    key: '_scrollToTop',
    value: function _scrollToTop() {
      if (this._scrollView) {
        this._scrollView.scrollTo({
          y: 0,
          animated: false
        });
      }
    }
  }, {
    key: '_captureDetailScrollView',
    value: function _captureDetailScrollView(scrollRef) {
      this._scrollView = scrollRef;
    }
  }, {
    key: '_closeButtonClicked',
    value: function _closeButtonClicked() {
      this.setState({ detailRowID: null });
    }
  }, {
    key: '_getStringByValue',
    value: function _getStringByValue(value) {
      if (value === undefined) {
        return 'undefined';
      }
      if (typeof value === 'object') {
        return JSON.stringify(value);
      }
      if (typeof value === 'string' && value.length > 500) {
        return String(value).substr(0, 500).concat('\n***TRUNCATED TO 500 CHARACTERS***');
      }
      return value;
    }
  }, {
    key: '_getRequestIndexByXHRID',
    value: function _getRequestIndexByXHRID(index) {
      if (index === undefined) {
        return -1;
      }
      var xhrIndex = this._xhrIdMap[index];
      if (xhrIndex === undefined) {
        return -1;
      } else {
        return xhrIndex;
      }
    }
  }, {
    key: '_getTypeShortName',
    value: function _getTypeShortName(type) {
      if (type === 'XMLHttpRequest') {
        return 'XHR';
      } else if (type === 'WebSocket') {
        return 'WS';
      }

      return '';
    }
  }, {
    key: '_genDetailViewItem',
    value: function _genDetailViewItem(index) {
      this._detailViewItems[index] = [];
      var detailViewItem = this._detailViewItems[index];
      var requestItem = this._requests[index];
      for (var _key in requestItem) {
        detailViewItem.push(React.createElement(
          View,
          { style: styles.detailViewRow, key: _key, __source: {
              fileName: _jsxFileName,
              lineNumber: 442
            }
          },
          React.createElement(
            Text,
            { style: [styles.detailViewText, styles.detailKeyCellView], __source: {
                fileName: _jsxFileName,
                lineNumber: 443
              }
            },
            _key
          ),
          React.createElement(
            Text,
            { style: [styles.detailViewText, styles.detailValueCellView], __source: {
                fileName: _jsxFileName,
                lineNumber: 446
              }
            },
            this._getStringByValue(requestItem[_key])
          )
        ));
      }

      if (this.state.detailRowID != null && Number(this.state.detailRowID) === index) {
        this.setState({ newDetailInfo: true });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 461
          }
        },
        this.state.detailRowID != null && React.createElement(
          TouchableHighlight,
          {
            style: styles.closeButton,
            onPress: this._closeButtonClicked, __source: {
              fileName: _jsxFileName,
              lineNumber: 463
            }
          },
          React.createElement(
            View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 466
              }
            },
            React.createElement(
              Text,
              { style: styles.clostButtonText, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 467
                }
              },
              'v'
            )
          )
        ),
        this.state.detailRowID != null && React.createElement(
          ScrollView,
          {
            style: styles.detailScrollView,
            ref: this._captureDetailScrollView, __source: {
              fileName: _jsxFileName,
              lineNumber: 471
            }
          },
          this._detailViewItems[this.state.detailRowID]
        ),
        React.createElement(
          View,
          { style: styles.listViewTitle, __source: {
              fileName: _jsxFileName,
              lineNumber: 476
            }
          },
          this._requests.length > 0 && React.createElement(
            View,
            { style: styles.tableRow, __source: {
                fileName: _jsxFileName,
                lineNumber: 478
              }
            },
            React.createElement(
              View,
              { style: styles.urlTitleCellView, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 479
                }
              },
              React.createElement(
                Text,
                { style: styles.cellText, numberOfLines: 1, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 480
                  }
                },
                'URL'
              )
            ),
            React.createElement(
              View,
              { style: styles.methodTitleCellView, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 482
                }
              },
              React.createElement(
                Text,
                { style: styles.cellText, numberOfLines: 1, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 483
                  }
                },
                'Type'
              )
            )
          )
        ),
        React.createElement(ListView, {
          style: styles.listView,
          ref: this._captureRequestListView,
          dataSource: this.state.dataSource,
          renderRow: this._renderRow,
          enableEmptySections: true,
          renderSeparator: this._renderSeperator,
          onLayout: this._listViewOnLayout,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 487
          }
        })
      );
    }
  }]);
  return NetworkOverlay;
}(React.Component);

var styles = StyleSheet.create({
  container: {
    paddingTop: 10,
    paddingBottom: 10,
    paddingLeft: 5,
    paddingRight: 5
  },
  listViewTitle: {
    height: 20
  },
  listView: {
    flex: 1,
    height: 60
  },
  tableRow: {
    flexDirection: 'row',
    flex: 1
  },
  cellText: {
    color: 'white',
    fontSize: 12
  },
  methodTitleCellView: {
    height: 18,
    borderColor: '#DCD7CD',
    borderTopWidth: 1,
    borderBottomWidth: 1,
    borderRightWidth: 1,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#444',
    flex: 1
  },
  urlTitleCellView: {
    height: 18,
    borderColor: '#DCD7CD',
    borderTopWidth: 1,
    borderBottomWidth: 1,
    borderLeftWidth: 1,
    borderRightWidth: 1,
    justifyContent: 'center',
    backgroundColor: '#444',
    flex: 5,
    paddingLeft: 3
  },
  methodOddCellView: {
    height: 15,
    borderColor: '#DCD7CD',
    borderRightWidth: 1,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#000',
    flex: 1
  },
  urlOddCellView: {
    height: 15,
    borderColor: '#DCD7CD',
    borderLeftWidth: 1,
    borderRightWidth: 1,
    justifyContent: 'center',
    backgroundColor: '#000',
    flex: 5,
    paddingLeft: 3
  },
  methodEvenCellView: {
    height: 15,
    borderColor: '#DCD7CD',
    borderRightWidth: 1,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#888',
    flex: 1
  },
  urlEvenCellView: {
    height: 15,
    borderColor: '#DCD7CD',
    borderLeftWidth: 1,
    borderRightWidth: 1,
    justifyContent: 'center',
    backgroundColor: '#888',
    flex: 5,
    paddingLeft: 3
  },
  detailScrollView: {
    flex: 1,
    height: 180,
    marginTop: 5,
    marginBottom: 5
  },
  detailKeyCellView: {
    flex: 1.3
  },
  detailValueCellView: {
    flex: 2
  },
  detailViewRow: {
    flexDirection: 'row',
    paddingHorizontal: 3
  },
  detailViewText: {
    color: 'white',
    fontSize: 11
  },
  clostButtonText: {
    color: 'white',
    fontSize: 10
  },
  closeButton: {
    marginTop: 5,
    backgroundColor: '#888',
    justifyContent: 'center',
    alignItems: 'center'
  }
});

module.exports = NetworkOverlay;
}, 274, null, "NetworkOverlay");
__d(/* WebSocketInterceptor */function(global, require, module, exports) {
'use strict';

var RCTWebSocketModule = require(15             ).WebSocketModule; // 15 = NativeModules
var NativeEventEmitter = require(83                  ); // 83 = NativeEventEmitter

var base64 = require(87         ); // 87 = base64-js

var originalRCTWebSocketConnect = RCTWebSocketModule.connect;
var originalRCTWebSocketSend = RCTWebSocketModule.send;
var originalRCTWebSocketSendBinary = RCTWebSocketModule.sendBinary;
var originalRCTWebSocketClose = RCTWebSocketModule.close;

var eventEmitter = void 0;
var subscriptions = void 0;

var closeCallback = void 0;
var sendCallback = void 0;
var connectCallback = void 0;
var onOpenCallback = void 0;
var onMessageCallback = void 0;
var onErrorCallback = void 0;
var onCloseCallback = void 0;

var _isInterceptorEnabled = false;

var WebSocketInterceptor = {
  setCloseCallback: function setCloseCallback(callback) {
    closeCallback = callback;
  },
  setSendCallback: function setSendCallback(callback) {
    sendCallback = callback;
  },
  setConnectCallback: function setConnectCallback(callback) {
    connectCallback = callback;
  },
  setOnOpenCallback: function setOnOpenCallback(callback) {
    onOpenCallback = callback;
  },
  setOnMessageCallback: function setOnMessageCallback(callback) {
    onMessageCallback = callback;
  },
  setOnErrorCallback: function setOnErrorCallback(callback) {
    onErrorCallback = callback;
  },
  setOnCloseCallback: function setOnCloseCallback(callback) {
    onCloseCallback = callback;
  },
  isInterceptorEnabled: function isInterceptorEnabled() {
    return _isInterceptorEnabled;
  },
  _unregisterEvents: function _unregisterEvents() {
    subscriptions.forEach(function (e) {
      return e.remove();
    });
    subscriptions = [];
  },
  _registerEvents: function _registerEvents() {
    subscriptions = [eventEmitter.addListener('websocketMessage', function (ev) {
      if (onMessageCallback) {
        onMessageCallback(ev.id, ev.type === 'binary' ? WebSocketInterceptor._arrayBufferToString(ev.data) : ev.data);
      }
    }), eventEmitter.addListener('websocketOpen', function (ev) {
      if (onOpenCallback) {
        onOpenCallback(ev.id);
      }
    }), eventEmitter.addListener('websocketClosed', function (ev) {
      if (onCloseCallback) {
        onCloseCallback(ev.id, { code: ev.code, reason: ev.reason });
      }
    }), eventEmitter.addListener('websocketFailed', function (ev) {
      if (onErrorCallback) {
        onErrorCallback(ev.id, { message: ev.message });
      }
    })];
  },
  enableInterception: function enableInterception() {
    if (_isInterceptorEnabled) {
      return;
    }
    eventEmitter = new NativeEventEmitter(RCTWebSocketModule);
    WebSocketInterceptor._registerEvents();

    RCTWebSocketModule.connect = function (url, protocols, options, socketId) {
      if (connectCallback) {
        connectCallback(url, protocols, options, socketId);
      }
      originalRCTWebSocketConnect.apply(this, arguments);
    };

    RCTWebSocketModule.send = function (data, socketId) {
      if (sendCallback) {
        sendCallback(data, socketId);
      }
      originalRCTWebSocketSend.apply(this, arguments);
    };

    RCTWebSocketModule.sendBinary = function (data, socketId) {
      if (sendCallback) {
        sendCallback(WebSocketInterceptor._arrayBufferToString(data), socketId);
      }
      originalRCTWebSocketSendBinary.apply(this, arguments);
    };

    RCTWebSocketModule.close = function () {
      if (closeCallback) {
        if (arguments.length === 3) {
          closeCallback(arguments[0], arguments[1], arguments[2]);
        } else {
          closeCallback(null, null, arguments[0]);
        }
      }
      originalRCTWebSocketClose.apply(this, arguments);
    };

    _isInterceptorEnabled = true;
  },
  _arrayBufferToString: function _arrayBufferToString(data) {
    var value = base64.toByteArray(data).buffer;
    if (value === undefined || value === null) {
      return '(no value)';
    }
    if (typeof ArrayBuffer !== 'undefined' && typeof Uint8Array !== 'undefined' && value instanceof ArrayBuffer) {
      return 'ArrayBuffer {' + String(Array.from(new Uint8Array(value))) + '}';
    }
    return value;
  },
  disableInterception: function disableInterception() {
    if (!_isInterceptorEnabled) {
      return;
    }
    _isInterceptorEnabled = false;
    RCTWebSocketModule.send = originalRCTWebSocketSend;
    RCTWebSocketModule.sendBinary = originalRCTWebSocketSendBinary;
    RCTWebSocketModule.close = originalRCTWebSocketClose;
    RCTWebSocketModule.connect = originalRCTWebSocketConnect;

    connectCallback = null;
    closeCallback = null;
    sendCallback = null;
    onOpenCallback = null;
    onMessageCallback = null;
    onCloseCallback = null;
    onErrorCallback = null;

    WebSocketInterceptor._unregisterEvents();
  }
};

module.exports = WebSocketInterceptor;
}, 275, null, "WebSocketInterceptor");
__d(/* XHRInterceptor */function(global, require, module, exports) {
'use strict';

var XMLHttpRequest = require(72              ); // 72 = XMLHttpRequest
var originalXHROpen = XMLHttpRequest.prototype.open;
var originalXHRSend = XMLHttpRequest.prototype.send;
var originalXHRSetRequestHeader = XMLHttpRequest.prototype.setRequestHeader;

var openCallback;
var sendCallback;
var requestHeaderCallback;
var headerReceivedCallback;
var responseCallback;

var _isInterceptorEnabled = false;

var XHRInterceptor = {
  setOpenCallback: function setOpenCallback(callback) {
    openCallback = callback;
  },
  setSendCallback: function setSendCallback(callback) {
    sendCallback = callback;
  },
  setHeaderReceivedCallback: function setHeaderReceivedCallback(callback) {
    headerReceivedCallback = callback;
  },
  setResponseCallback: function setResponseCallback(callback) {
    responseCallback = callback;
  },
  setRequestHeaderCallback: function setRequestHeaderCallback(callback) {
    requestHeaderCallback = callback;
  },
  isInterceptorEnabled: function isInterceptorEnabled() {
    return _isInterceptorEnabled;
  },
  enableInterception: function enableInterception() {
    if (_isInterceptorEnabled) {
      return;
    }

    XMLHttpRequest.prototype.open = function (method, url) {
      if (openCallback) {
        openCallback(method, url, this);
      }
      originalXHROpen.apply(this, arguments);
    };

    XMLHttpRequest.prototype.setRequestHeader = function (header, value) {
      if (requestHeaderCallback) {
        requestHeaderCallback(header, value, this);
      }
      originalXHRSetRequestHeader.apply(this, arguments);
    };

    XMLHttpRequest.prototype.send = function (data) {
      var _this = this;

      if (sendCallback) {
        sendCallback(data, this);
      }
      if (this.addEventListener) {
        this.addEventListener('readystatechange', function () {
          if (!_isInterceptorEnabled) {
            return;
          }
          if (_this.readyState === _this.HEADERS_RECEIVED) {
            var contentTypeString = _this.getResponseHeader('Content-Type');
            var contentLengthString = _this.getResponseHeader('Content-Length');
            var responseContentType = void 0,
                responseSize = void 0;
            if (contentTypeString) {
              responseContentType = contentTypeString.split(';')[0];
            }
            if (contentLengthString) {
              responseSize = parseInt(contentLengthString, 10);
            }
            if (headerReceivedCallback) {
              headerReceivedCallback(responseContentType, responseSize, _this.getAllResponseHeaders(), _this);
            }
          }
          if (_this.readyState === _this.DONE) {
            if (responseCallback) {
              responseCallback(_this.status, _this.timeout, _this.response, _this.responseURL, _this.responseType, _this);
            }
          }
        }, false);
      }
      originalXHRSend.apply(this, arguments);
    };
    _isInterceptorEnabled = true;
  },
  disableInterception: function disableInterception() {
    if (!_isInterceptorEnabled) {
      return;
    }
    _isInterceptorEnabled = false;
    XMLHttpRequest.prototype.send = originalXHRSend;
    XMLHttpRequest.prototype.open = originalXHROpen;
    XMLHttpRequest.prototype.setRequestHeader = originalXHRSetRequestHeader;
    responseCallback = null;
    openCallback = null;
    sendCallback = null;
    headerReceivedCallback = null;
    requestHeaderCallback = null;
  }
};

module.exports = XHRInterceptor;
}, 276, null, "XHRInterceptor");
__d(/* PerformanceOverlay */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Inspector/PerformanceOverlay.js';
var PerformanceLogger = require(107                ); // 107 = PerformanceLogger
var React = require(129    ); // 129 = React
var StyleSheet = require(167         ); // 167 = StyleSheet
var Text = require(180   ); // 180 = Text
var View = require(169   ); // 169 = View

var PerformanceOverlay = function (_React$Component) {
  babelHelpers.inherits(PerformanceOverlay, _React$Component);

  function PerformanceOverlay() {
    babelHelpers.classCallCheck(this, PerformanceOverlay);
    return babelHelpers.possibleConstructorReturn(this, (PerformanceOverlay.__proto__ || Object.getPrototypeOf(PerformanceOverlay)).apply(this, arguments));
  }

  babelHelpers.createClass(PerformanceOverlay, [{
    key: 'render',
    value: function render() {
      var perfLogs = PerformanceLogger.getTimespans();
      var items = [];

      for (var key in perfLogs) {
        if (perfLogs[key].totalTime) {
          var unit = key === 'BundleSize' ? 'b' : 'ms';
          items.push(React.createElement(
            View,
            { style: styles.row, key: key, __source: {
                fileName: _jsxFileName,
                lineNumber: 29
              }
            },
            React.createElement(
              Text,
              { style: [styles.text, styles.label], __source: {
                  fileName: _jsxFileName,
                  lineNumber: 30
                }
              },
              key
            ),
            React.createElement(
              Text,
              { style: [styles.text, styles.totalTime], __source: {
                  fileName: _jsxFileName,
                  lineNumber: 31
                }
              },
              perfLogs[key].totalTime + unit
            )
          ));
        }
      }

      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 40
          }
        },
        items
      );
    }
  }]);
  return PerformanceOverlay;
}(React.Component);

var styles = StyleSheet.create({
  container: {
    height: 100,
    paddingTop: 10
  },
  label: {
    flex: 1
  },
  row: {
    flexDirection: 'row',
    paddingHorizontal: 10
  },
  text: {
    color: 'white',
    fontSize: 12
  },
  totalTime: {
    paddingRight: 100
  }
});

module.exports = PerformanceOverlay;
}, 277, null, "PerformanceOverlay");
__d(/* YellowBox */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/ReactNative/YellowBox.js';
var EventEmitter = require(81            ); // 81 = EventEmitter
var Platform = require(46        ); // 46 = Platform
var React = require(129    ); // 129 = React
var SafeAreaView = require(279           ); // 279 = SafeAreaView
var StyleSheet = require(167         ); // 167 = StyleSheet
var RCTLog = require(105     ); // 105 = RCTLog

var infoLog = require(108      ); // 108 = infoLog
var openFileInEditor = require(273               ); // 273 = openFileInEditor
var parseErrorStack = require(26               ); // 26 = parseErrorStack
var stringifySafe = require(33             ); // 33 = stringifySafe
var symbolicateStackTrace = require(29                     ); // 29 = symbolicateStackTrace

var _warningEmitter = new EventEmitter();
var _warningMap = new Map();
var IGNORED_WARNINGS = [];

if (__DEV__) {
  var _console = console,
      error = _console.error,
      warn = _console.warn;


  console.error = function () {
    error.apply(console, arguments);

    if (typeof arguments[0] === 'string' && arguments[0].startsWith('Warning: ')) {
      updateWarningMap.apply(null, arguments);
    }
  };

  console.warn = function () {
    warn.apply(console, arguments);
    updateWarningMap.apply(null, arguments);
  };

  if (Platform.isTesting) {
    console.disableYellowBox = true;
  }

  RCTLog.setWarningHandler(function () {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    updateWarningMap.apply(null, args);
  });
}

function sprintf(format) {
  for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    args[_key2 - 1] = arguments[_key2];
  }

  var index = 0;
  return format.replace(/%s/g, function (match) {
    return args[index++];
  });
}

function updateWarningMap() {
  if (console.disableYellowBox) {
    return;
  }

  var warning = void 0;

  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    args[_key3] = arguments[_key3];
  }

  if (typeof args[0] === 'string') {
    var format = args[0],
        formatArgs = args.slice(1);

    var argCount = (format.match(/%s/g) || []).length;
    warning = [sprintf.apply(undefined, [format].concat(babelHelpers.toConsumableArray(formatArgs.slice(0, argCount).map(stringifySafe))))].concat(babelHelpers.toConsumableArray(formatArgs.slice(argCount).map(stringifySafe))).join(' ');
  } else {
    warning = args.map(stringifySafe).join(' ');
  }

  if (warning.startsWith('(ADVICE)')) {
    return;
  }

  var warningInfo = _warningMap.get(warning);
  if (warningInfo) {
    warningInfo.count += 1;
  } else {
    var _error = new Error();
    _error.framesToPop = 2;

    _warningMap.set(warning, {
      count: 1,
      stacktrace: parseErrorStack(_error),
      symbolicated: false
    });
  }

  _warningEmitter.emit('warning', _warningMap);
}

function ensureSymbolicatedWarning(warning) {
  var prevWarningInfo = _warningMap.get(warning);
  if (!prevWarningInfo || prevWarningInfo.symbolicated) {
    return;
  }
  prevWarningInfo.symbolicated = true;

  symbolicateStackTrace(prevWarningInfo.stacktrace).then(function (stack) {
    var nextWarningInfo = _warningMap.get(warning);
    if (nextWarningInfo) {
      nextWarningInfo.stacktrace = stack;
      _warningEmitter.emit('warning', _warningMap);
    }
  }, function (error) {
    var nextWarningInfo = _warningMap.get(warning);
    if (nextWarningInfo) {
      infoLog('Failed to symbolicate warning, "%s":', warning, error);
      _warningEmitter.emit('warning', _warningMap);
    }
  });
}

function isWarningIgnored(warning) {
  var isIgnored = IGNORED_WARNINGS.some(function (ignoredWarning) {
    return warning.startsWith(ignoredWarning);
  });

  if (isIgnored) {
    return true;
  }

  return Array.isArray(console.ignoredYellowBox) && console.ignoredYellowBox.some(function (ignorePrefix) {
    return warning.startsWith(String(ignorePrefix));
  });
}

var WarningRow = function WarningRow(_ref) {
  var count = _ref.count,
      warning = _ref.warning,
      onPress = _ref.onPress;

  var Text = require(180   ); // 180 = Text
  var TouchableHighlight = require(270                 ); // 270 = TouchableHighlight
  var View = require(169   ); // 169 = View

  var countText = count > 1 ? React.createElement(
    Text,
    { style: styles.listRowCount, __source: {
        fileName: _jsxFileName,
        lineNumber: 197
      }
    },
    '(' + count + ') '
  ) : null;

  return React.createElement(
    View,
    { style: styles.listRow, __source: {
        fileName: _jsxFileName,
        lineNumber: 201
      }
    },
    React.createElement(
      TouchableHighlight,
      {
        activeOpacity: 0.5,
        onPress: onPress,
        style: styles.listRowContent,
        underlayColor: 'transparent', __source: {
          fileName: _jsxFileName,
          lineNumber: 202
        }
      },
      React.createElement(
        Text,
        { style: styles.listRowText, numberOfLines: 2, __source: {
            fileName: _jsxFileName,
            lineNumber: 207
          }
        },
        countText,
        warning
      )
    )
  );
};

var StackRow = function StackRow(_ref2) {
  var frame = _ref2.frame;

  var Text = require(180   ); // 180 = Text
  var TouchableHighlight = require(270                 ); // 270 = TouchableHighlight
  var file = frame.file,
      lineNumber = frame.lineNumber;

  var fileName = void 0;
  if (file) {
    var fileParts = file.split('/');
    fileName = fileParts[fileParts.length - 1];
  } else {
    fileName = '<unknown file>';
  }

  return React.createElement(
    TouchableHighlight,
    {
      activeOpacity: 0.5,
      style: styles.openInEditorButton,
      underlayColor: 'transparent',
      onPress: openFileInEditor.bind(null, file, lineNumber), __source: {
        fileName: _jsxFileName,
        lineNumber: 230
      }
    },
    React.createElement(
      Text,
      { style: styles.inspectorCountText, __source: {
          fileName: _jsxFileName,
          lineNumber: 235
        }
      },
      fileName,
      ':',
      lineNumber
    )
  );
};

var WarningInspector = function WarningInspector(_ref3) {
  var warningInfo = _ref3.warningInfo,
      warning = _ref3.warning,
      stacktraceVisible = _ref3.stacktraceVisible,
      onDismiss = _ref3.onDismiss,
      onDismissAll = _ref3.onDismissAll,
      onMinimize = _ref3.onMinimize,
      toggleStacktrace = _ref3.toggleStacktrace;

  var ScrollView = require(223         ); // 223 = ScrollView
  var Text = require(180   ); // 180 = Text
  var TouchableHighlight = require(270                 ); // 270 = TouchableHighlight
  var View = require(169   ); // 169 = View

  var _ref4 = warningInfo || {},
      count = _ref4.count,
      stacktrace = _ref4.stacktrace;

  var countSentence = 'Warning encountered ' + count + ' time' + (count - 1 ? 's' : '') + '.';

  var stacktraceList = void 0;
  if (stacktraceVisible && stacktrace) {
    stacktraceList = React.createElement(
      View,
      { style: styles.stacktraceList, __source: {
          fileName: _jsxFileName,
          lineNumber: 263
        }
      },
      stacktrace.map(function (frame, ii) {
        return React.createElement(StackRow, { frame: frame, key: ii, __source: {
            fileName: _jsxFileName,
            lineNumber: 264
          }
        });
      })
    );
  }

  return React.createElement(
    View,
    { style: styles.inspector, __source: {
        fileName: _jsxFileName,
        lineNumber: 270
      }
    },
    React.createElement(
      SafeAreaView,
      { style: styles.safeArea, __source: {
          fileName: _jsxFileName,
          lineNumber: 271
        }
      },
      React.createElement(
        View,
        { style: styles.inspectorCount, __source: {
            fileName: _jsxFileName,
            lineNumber: 272
          }
        },
        React.createElement(
          Text,
          { style: styles.inspectorCountText, __source: {
              fileName: _jsxFileName,
              lineNumber: 273
            }
          },
          countSentence
        ),
        React.createElement(
          TouchableHighlight,
          {
            onPress: toggleStacktrace,
            underlayColor: 'transparent', __source: {
              fileName: _jsxFileName,
              lineNumber: 274
            }
          },
          React.createElement(
            Text,
            { style: styles.inspectorButtonText, __source: {
                fileName: _jsxFileName,
                lineNumber: 277
              }
            },
            stacktraceVisible ? '\u25BC' : '\u25B6',
            ' Stacktrace'
          )
        )
      ),
      React.createElement(
        ScrollView,
        { style: styles.inspectorWarning, __source: {
            fileName: _jsxFileName,
            lineNumber: 282
          }
        },
        stacktraceList,
        React.createElement(
          Text,
          { style: styles.inspectorWarningText, __source: {
              fileName: _jsxFileName,
              lineNumber: 284
            }
          },
          warning
        )
      ),
      React.createElement(
        View,
        { style: styles.inspectorButtons, __source: {
            fileName: _jsxFileName,
            lineNumber: 286
          }
        },
        React.createElement(
          TouchableHighlight,
          {
            activeOpacity: 0.5,
            onPress: onMinimize,
            style: styles.inspectorButton,
            underlayColor: 'transparent', __source: {
              fileName: _jsxFileName,
              lineNumber: 287
            }
          },
          React.createElement(
            Text,
            { style: styles.inspectorButtonText, __source: {
                fileName: _jsxFileName,
                lineNumber: 292
              }
            },
            'Minimize'
          )
        ),
        React.createElement(
          TouchableHighlight,
          {
            activeOpacity: 0.5,
            onPress: onDismiss,
            style: styles.inspectorButton,
            underlayColor: 'transparent', __source: {
              fileName: _jsxFileName,
              lineNumber: 294
            }
          },
          React.createElement(
            Text,
            { style: styles.inspectorButtonText, __source: {
                fileName: _jsxFileName,
                lineNumber: 299
              }
            },
            'Dismiss'
          )
        ),
        React.createElement(
          TouchableHighlight,
          {
            activeOpacity: 0.5,
            onPress: onDismissAll,
            style: styles.inspectorButton,
            underlayColor: 'transparent', __source: {
              fileName: _jsxFileName,
              lineNumber: 301
            }
          },
          React.createElement(
            Text,
            { style: styles.inspectorButtonText, __source: {
                fileName: _jsxFileName,
                lineNumber: 306
              }
            },
            'Dismiss All'
          )
        )
      )
    )
  );
};

var YellowBox = function (_React$Component) {
  babelHelpers.inherits(YellowBox, _React$Component);

  function YellowBox(props, context) {
    babelHelpers.classCallCheck(this, YellowBox);

    var _this = babelHelpers.possibleConstructorReturn(this, (YellowBox.__proto__ || Object.getPrototypeOf(YellowBox)).call(this, props, context));

    _this.state = {
      inspecting: null,
      stacktraceVisible: false,
      warningMap: _warningMap
    };
    _this.dismissWarning = function (warning) {
      var _this$state = _this.state,
          inspecting = _this$state.inspecting,
          warningMap = _this$state.warningMap;

      if (warning) {
        warningMap.delete(warning);
      } else {
        warningMap.clear();
      }
      _this.setState({
        inspecting: warning && inspecting !== warning ? inspecting : null,
        warningMap: warningMap
      });
    };
    return _this;
  }

  babelHelpers.createClass(YellowBox, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      var scheduled = null;
      this._listener = _warningEmitter.addListener('warning', function (warningMap) {
        scheduled = scheduled || setImmediate(function () {
          scheduled = null;
          _this2.setState({
            warningMap: warningMap
          });
        });
      });
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      var inspecting = this.state.inspecting;

      if (inspecting != null) {
        ensureSymbolicatedWarning(inspecting);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this._listener) {
        this._listener.remove();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      if (console.disableYellowBox || this.state.warningMap.size === 0) {
        return null;
      }
      var ScrollView = require(223         ); // 223 = ScrollView
      var View = require(169   ); // 169 = View

      var _state = this.state,
          inspecting = _state.inspecting,
          stacktraceVisible = _state.stacktraceVisible;

      var inspector = inspecting !== null ? React.createElement(WarningInspector, {
        warningInfo: this.state.warningMap.get(inspecting),
        warning: inspecting,
        stacktraceVisible: stacktraceVisible,
        onDismiss: function onDismiss() {
          return _this3.dismissWarning(inspecting);
        },
        onDismissAll: function onDismissAll() {
          return _this3.dismissWarning(null);
        },
        onMinimize: function onMinimize() {
          return _this3.setState({ inspecting: null });
        },
        toggleStacktrace: function toggleStacktrace() {
          return _this3.setState({ stacktraceVisible: !stacktraceVisible });
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 393
        }
      }) : null;

      var rows = [];
      this.state.warningMap.forEach(function (warningInfo, warning) {
        if (!isWarningIgnored(warning)) {
          rows.push(React.createElement(WarningRow, {
            key: warning,
            count: warningInfo.count,
            warning: warning,
            onPress: function onPress() {
              return _this3.setState({ inspecting: warning });
            },
            onDismiss: function onDismiss() {
              return _this3.dismissWarning(warning);
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 409
            }
          }));
        }
      });

      var listStyle = [styles.list, { height: Math.min(rows.length, 4.4) * (rowGutter + rowHeight) }];
      return React.createElement(
        View,
        { style: inspector ? styles.fullScreen : listStyle, __source: {
            fileName: _jsxFileName,
            lineNumber: 426
          }
        },
        React.createElement(
          ScrollView,
          { style: listStyle, scrollsToTop: false, __source: {
              fileName: _jsxFileName,
              lineNumber: 427
            }
          },
          rows
        ),
        inspector
      );
    }
  }], [{
    key: 'ignoreWarnings',
    value: function ignoreWarnings(warnings) {
      warnings.forEach(function (warning) {
        if (IGNORED_WARNINGS.indexOf(warning) === -1) {
          IGNORED_WARNINGS.push(warning);
        }
      });
    }
  }]);
  return YellowBox;
}(React.Component);

var backgroundColor = function backgroundColor(opacity) {
  return 'rgba(250, 186, 48, ' + opacity + ')';
};
var textColor = 'white';
var rowGutter = 1;
var rowHeight = 46;

var elevation = Platform.OS === 'android' ? Number.MAX_SAFE_INTEGER : undefined;

var styles = StyleSheet.create({
  fullScreen: {
    height: '100%',
    width: '100%',
    elevation: elevation,
    position: 'absolute'
  },
  inspector: {
    backgroundColor: backgroundColor(0.95),
    height: '100%',
    paddingTop: 5,
    elevation: elevation
  },
  inspectorButtons: {
    flexDirection: 'row'
  },
  inspectorButton: {
    flex: 1,
    paddingVertical: 22,
    backgroundColor: backgroundColor(1)
  },
  safeArea: {
    flex: 1
  },
  stacktraceList: {
    paddingBottom: 5
  },
  inspectorButtonText: {
    color: textColor,
    fontSize: 14,
    opacity: 0.8,
    textAlign: 'center'
  },
  openInEditorButton: {
    paddingTop: 5,
    paddingBottom: 5
  },
  inspectorCount: {
    padding: 15,
    paddingBottom: 0,
    flexDirection: 'row',
    justifyContent: 'space-between'
  },
  inspectorCountText: {
    color: textColor,
    fontSize: 14
  },
  inspectorWarning: {
    flex: 1,
    paddingHorizontal: 15
  },
  inspectorWarningText: {
    color: textColor,
    fontSize: 16,
    fontWeight: '600'
  },
  list: {
    backgroundColor: 'transparent',
    position: 'absolute',
    left: 0,
    right: 0,
    bottom: 0,
    elevation: elevation
  },
  listRow: {
    backgroundColor: backgroundColor(0.95),
    height: rowHeight,
    marginTop: rowGutter
  },
  listRowContent: {
    flex: 1
  },
  listRowCount: {
    color: 'rgba(255, 255, 255, 0.5)'
  },
  listRowText: {
    color: textColor,
    position: 'absolute',
    left: 0,
    top: Platform.OS === 'android' ? 5 : 7,
    marginLeft: 15,
    marginRight: 15
  }
});

module.exports = YellowBox;
}, 278, null, "YellowBox");
__d(/* SafeAreaView */function(global, require, module, exports) {
'use strict';

module.exports = require(169   ); // 169 = View
}, 279, null, "SafeAreaView");
__d(/* I18nManager */function(global, require, module, exports) {
'use strict';

var I18nManager = require(15             ).I18nManager || { // 15 = NativeModules
  isRTL: false,
  allowRTL: function allowRTL() {},
  forceRTL: function forceRTL() {}
};

module.exports = I18nManager;
}, 280, null, "I18nManager");
__d(/* NavigatorIOS */function(global, require, module, exports) {
'use strict';

module.exports = require(258                ); // 258 = UnimplementedView
}, 281, null, "NavigatorIOS");
__d(/* Picker */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/Picker/Picker.js';
var ColorPropType = require(122            ); // 122 = ColorPropType
var PickerIOS = require(283        ); // 283 = PickerIOS
var PickerAndroid = require(284            ); // 284 = PickerAndroid
var Platform = require(46        ); // 46 = Platform
var React = require(129    ); // 129 = React
var PropTypes = require(126         ); // 126 = prop-types
var StyleSheetPropType = require(137                 ); // 137 = StyleSheetPropType
var TextStylePropTypes = require(150                 ); // 150 = TextStylePropTypes
var UnimplementedView = require(258                ); // 258 = UnimplementedView
var ViewPropTypes = require(130            ); // 130 = ViewPropTypes
var ViewStylePropTypes = require(138                 ); // 138 = ViewStylePropTypes

var itemStylePropType = StyleSheetPropType(TextStylePropTypes);

var pickerStyleType = StyleSheetPropType(babelHelpers.extends({}, ViewStylePropTypes, {
  color: ColorPropType
}));

var MODE_DIALOG = 'dialog';
var MODE_DROPDOWN = 'dropdown';

var PickerItem = function (_React$Component) {
  babelHelpers.inherits(PickerItem, _React$Component);

  function PickerItem() {
    babelHelpers.classCallCheck(this, PickerItem);
    return babelHelpers.possibleConstructorReturn(this, (PickerItem.__proto__ || Object.getPrototypeOf(PickerItem)).apply(this, arguments));
  }

  babelHelpers.createClass(PickerItem, [{
    key: 'render',
    value: function render() {
      throw null;
    }
  }]);
  return PickerItem;
}(React.Component);

PickerItem.propTypes = {
  label: PropTypes.string.isRequired,

  value: PropTypes.any,

  color: ColorPropType,

  testID: PropTypes.string
};

var Picker = function (_React$Component2) {
  babelHelpers.inherits(Picker, _React$Component2);

  function Picker() {
    babelHelpers.classCallCheck(this, Picker);
    return babelHelpers.possibleConstructorReturn(this, (Picker.__proto__ || Object.getPrototypeOf(Picker)).apply(this, arguments));
  }

  babelHelpers.createClass(Picker, [{
    key: 'render',
    value: function render() {
      if (Platform.OS === 'ios') {
        return React.createElement(
          PickerIOS,
          babelHelpers.extends({}, this.props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 157
            }
          }),
          this.props.children
        );
      } else if (Platform.OS === 'android') {
        return React.createElement(
          PickerAndroid,
          babelHelpers.extends({}, this.props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 160
            }
          }),
          this.props.children
        );
      } else {
        return React.createElement(UnimplementedView, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 162
          }
        });
      }
    }
  }]);
  return Picker;
}(React.Component);

Picker.MODE_DIALOG = MODE_DIALOG;
Picker.MODE_DROPDOWN = MODE_DROPDOWN;
Picker.Item = PickerItem;
Picker.defaultProps = {
  mode: MODE_DIALOG
};
Picker.propTypes = babelHelpers.extends({}, ViewPropTypes, {
  style: pickerStyleType,

  selectedValue: PropTypes.any,

  onValueChange: PropTypes.func,

  enabled: PropTypes.bool,

  mode: PropTypes.oneOf(['dialog', 'dropdown']),

  itemStyle: itemStylePropType,

  prompt: PropTypes.string,

  testID: PropTypes.string
});


module.exports = Picker;
}, 282, null, "Picker");
__d(/* PickerIOS */function(global, require, module, exports) {
'use strict';

module.exports = require(258                ); // 258 = UnimplementedView
}, 283, null, "PickerIOS");
__d(/* PickerAndroid */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/Picker/PickerAndroid.android.js';
var ColorPropType = require(122            ); // 122 = ColorPropType
var React = require(129    ); // 129 = React
var ReactPropTypes = require(126         ); // 126 = prop-types
var StyleSheet = require(167         ); // 167 = StyleSheet
var StyleSheetPropType = require(137                 ); // 137 = StyleSheetPropType
var ViewPropTypes = require(130            ); // 130 = ViewPropTypes
var ViewStylePropTypes = require(138                 ); // 138 = ViewStylePropTypes

var processColor = require(151           ); // 151 = processColor
var requireNativeComponent = require(144                     ); // 144 = requireNativeComponent

var REF_PICKER = 'picker';
var MODE_DROPDOWN = 'dropdown';

var pickerStyleType = StyleSheetPropType(babelHelpers.extends({}, ViewStylePropTypes, {
  color: ColorPropType
}));

var PickerAndroid = function (_React$Component) {
  babelHelpers.inherits(PickerAndroid, _React$Component);

  function PickerAndroid(props, context) {
    babelHelpers.classCallCheck(this, PickerAndroid);

    var _this = babelHelpers.possibleConstructorReturn(this, (PickerAndroid.__proto__ || Object.getPrototypeOf(PickerAndroid)).call(this, props, context));

    _initialiseProps.call(_this);

    var state = _this._stateFromProps(props);

    _this.state = babelHelpers.extends({}, state, {
      initialSelectedIndex: state.selectedIndex
    });
    return _this;
  }

  babelHelpers.createClass(PickerAndroid, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.setState(this._stateFromProps(nextProps));
    }
  }, {
    key: 'render',
    value: function render() {
      var Picker = this.props.mode === MODE_DROPDOWN ? DropdownPicker : DialogPicker;

      var nativeProps = {
        enabled: this.props.enabled,
        items: this.state.items,
        mode: this.props.mode,
        onSelect: this._onChange,
        prompt: this.props.prompt,
        selected: this.state.initialSelectedIndex,
        testID: this.props.testID,
        style: [styles.pickerAndroid, this.props.style],
        accessibilityLabel: this.props.accessibilityLabel
      };

      return React.createElement(Picker, babelHelpers.extends({ ref: REF_PICKER }, nativeProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 107
        }
      }));
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._lastNativePosition = this.state.initialSelectedIndex;
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      if (this.refs[REF_PICKER] && this.state.selectedIndex !== this._lastNativePosition) {
        this.refs[REF_PICKER].setNativeProps({ selected: this.state.selectedIndex });
        this._lastNativePosition = this.state.selectedIndex;
      }
    }
  }]);
  return PickerAndroid;
}(React.Component);

PickerAndroid.propTypes = babelHelpers.extends({}, ViewPropTypes, {
  style: pickerStyleType,
  selectedValue: ReactPropTypes.any,
  enabled: ReactPropTypes.bool,
  mode: ReactPropTypes.oneOf(['dialog', 'dropdown']),
  onValueChange: ReactPropTypes.func,
  prompt: ReactPropTypes.string,
  testID: ReactPropTypes.string
});

var _initialiseProps = function _initialiseProps() {
  var _this2 = this;

  this._stateFromProps = function (props) {
    var selectedIndex = 0;
    var items = React.Children.map(props.children, function (child, index) {
      if (child.props.value === props.selectedValue) {
        selectedIndex = index;
      }
      var childProps = {
        value: child.props.value,
        label: child.props.label
      };
      if (child.props.color) {
        childProps.color = processColor(child.props.color);
      }
      return childProps;
    });
    return { selectedIndex: selectedIndex, items: items };
  };

  this._onChange = function (event) {
    if (_this2.props.onValueChange) {
      var position = event.nativeEvent.position;
      if (position >= 0) {
        var children = React.Children.toArray(_this2.props.children);
        var value = children[position].props.value;
        _this2.props.onValueChange(value, position);
      } else {
        _this2.props.onValueChange(null, position);
      }
    }
    _this2._lastNativePosition = event.nativeEvent.position;
    _this2.forceUpdate();
  };
};

var styles = StyleSheet.create({
  pickerAndroid: {
    height: 50
  }
});

var cfg = {
  nativeOnly: {
    items: true,
    selected: true
  }
};

var DropdownPicker = requireNativeComponent('AndroidDropdownPicker', PickerAndroid, cfg);
var DialogPicker = requireNativeComponent('AndroidDialogPicker', PickerAndroid, cfg);

module.exports = PickerAndroid;
}, 284, null, "PickerAndroid");
__d(/* ProgressViewIOS */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/ProgressViewIOS/ProgressViewIOS.android.js';
var React = require(129    ); // 129 = React
var StyleSheet = require(167         ); // 167 = StyleSheet
var Text = require(180   ); // 180 = Text
var View = require(169   ); // 169 = View

var DummyProgressViewIOS = function (_React$Component) {
  babelHelpers.inherits(DummyProgressViewIOS, _React$Component);

  function DummyProgressViewIOS() {
    babelHelpers.classCallCheck(this, DummyProgressViewIOS);
    return babelHelpers.possibleConstructorReturn(this, (DummyProgressViewIOS.__proto__ || Object.getPrototypeOf(DummyProgressViewIOS)).apply(this, arguments));
  }

  babelHelpers.createClass(DummyProgressViewIOS, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        View,
        { style: [styles.dummy, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 23
          }
        },
        React.createElement(
          Text,
          { style: styles.text, __source: {
              fileName: _jsxFileName,
              lineNumber: 24
            }
          },
          'ProgressViewIOS is not supported on this platform!'
        )
      );
    }
  }]);
  return DummyProgressViewIOS;
}(React.Component);

var styles = StyleSheet.create({
  dummy: {
    width: 120,
    height: 20,
    backgroundColor: '#ffbcbc',
    borderWidth: 1,
    borderColor: 'red',
    alignItems: 'center',
    justifyContent: 'center'
  },
  text: {
    color: '#333333',
    margin: 5,
    fontSize: 10
  }
});

module.exports = DummyProgressViewIOS;
}, 285, null, "ProgressViewIOS");
__d(/* SectionList */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Lists/SectionList.js';
var MetroListView = require(239            ); // 239 = MetroListView
var Platform = require(46        ); // 46 = Platform
var React = require(129    ); // 129 = React
var ScrollView = require(223         ); // 223 = ScrollView
var VirtualizedSectionList = require(287                     ); // 287 = VirtualizedSectionList

var defaultProps = babelHelpers.extends({}, VirtualizedSectionList.defaultProps, {
  stickySectionHeadersEnabled: Platform.OS === 'ios'
});

var SectionList = function (_React$PureComponent) {
  babelHelpers.inherits(SectionList, _React$PureComponent);

  function SectionList() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, SectionList);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = SectionList.__proto__ || Object.getPrototypeOf(SectionList)).call.apply(_ref, [this].concat(args))), _this), _this._captureRef = function (ref) {
      _this._wrapperListRef = ref;
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(SectionList, [{
    key: 'scrollToLocation',
    value: function scrollToLocation(params) {
      this._wrapperListRef.scrollToLocation(params);
    }
  }, {
    key: 'recordInteraction',
    value: function recordInteraction() {
      var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();
      listRef && listRef.recordInteraction();
    }
  }, {
    key: 'flashScrollIndicators',
    value: function flashScrollIndicators() {
      var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();
      listRef && listRef.flashScrollIndicators();
    }
  }, {
    key: 'getScrollResponder',
    value: function getScrollResponder() {
      var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();
      if (listRef) {
        return listRef.getScrollResponder();
      }
    }
  }, {
    key: 'getScrollableNode',
    value: function getScrollableNode() {
      var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();
      if (listRef) {
        return listRef.getScrollableNode();
      }
    }
  }, {
    key: 'setNativeProps',
    value: function setNativeProps(props) {
      var listRef = this._wrapperListRef && this._wrapperListRef.getListRef();
      if (listRef) {
        listRef.setNativeProps(props);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var List = this.props.legacyImplementation ? MetroListView : VirtualizedSectionList;
      return React.createElement(List, babelHelpers.extends({}, this.props, { ref: this._captureRef, __source: {
          fileName: _jsxFileName,
          lineNumber: 331
        }
      }));
    }
  }]);
  return SectionList;
}(React.PureComponent);

SectionList.defaultProps = defaultProps;


module.exports = SectionList;
}, 286, null, "SectionList");
__d(/* VirtualizedSectionList */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Lists/VirtualizedSectionList.js';
var React = require(129    ); // 129 = React
var View = require(169   ); // 169 = View
var VirtualizedList = require(246              ); // 246 = VirtualizedList

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var VirtualizedSectionList = function (_React$PureComponent) {
  babelHelpers.inherits(VirtualizedSectionList, _React$PureComponent);
  babelHelpers.createClass(VirtualizedSectionList, [{
    key: 'scrollToLocation',
    value: function scrollToLocation(params) {
      var index = params.itemIndex + 1;
      for (var ii = 0; ii < params.sectionIndex; ii++) {
        index += this.props.sections[ii].data.length + 2;
      }
      var toIndexParams = babelHelpers.extends({}, params, {
        index: index
      });
      this._listRef.scrollToIndex(toIndexParams);
    }
  }, {
    key: 'getListRef',
    value: function getListRef() {
      return this._listRef;
    }
  }, {
    key: '_subExtractor',
    value: function _subExtractor(index) {
      var itemIndex = index;
      var defaultKeyExtractor = this.props.keyExtractor;
      for (var ii = 0; ii < this.props.sections.length; ii++) {
        var _section = this.props.sections[ii];
        var _key = _section.key || String(ii);
        itemIndex -= 1;
        if (itemIndex >= _section.data.length + 1) {
          itemIndex -= _section.data.length + 1;
        } else if (itemIndex === -1) {
          return {
            section: _section,
            key: _key + ':header',
            index: null,
            header: true,
            trailingSection: this.props.sections[ii + 1]
          };
        } else if (itemIndex === _section.data.length) {
          return {
            section: _section,
            key: _key + ':footer',
            index: null,
            header: false,
            trailingSection: this.props.sections[ii + 1]
          };
        } else {
          var _keyExtractor = _section.keyExtractor || defaultKeyExtractor;
          return {
            section: _section,
            key: _key + ':' + _keyExtractor(_section.data[itemIndex], itemIndex),
            index: itemIndex,
            leadingItem: _section.data[itemIndex - 1],
            leadingSection: this.props.sections[ii - 1],
            trailingItem: _section.data[itemIndex + 1],
            trailingSection: this.props.sections[ii + 1]
          };
        }
      }
    }
  }, {
    key: '_getSeparatorComponent',
    value: function _getSeparatorComponent(index, info) {
      info = info || this._subExtractor(index);
      if (!info) {
        return null;
      }
      var ItemSeparatorComponent = info.section.ItemSeparatorComponent || this.props.ItemSeparatorComponent;
      var SectionSeparatorComponent = this.props.SectionSeparatorComponent;

      var isLastItemInList = index === this.state.childProps.getItemCount() - 1;
      var isLastItemInSection = info.index === info.section.data.length - 1;
      if (SectionSeparatorComponent && isLastItemInSection) {
        return SectionSeparatorComponent;
      }
      if (ItemSeparatorComponent && !isLastItemInSection && !isLastItemInList) {
        return ItemSeparatorComponent;
      }
      return null;
    }
  }, {
    key: '_computeState',
    value: function _computeState(props) {
      var offset = props.ListHeaderComponent ? 1 : 0;
      var stickyHeaderIndices = [];
      var itemCount = props.sections.reduce(function (v, section) {
        stickyHeaderIndices.push(v + offset);
        return v + section.data.length + 2;
      }, 0);

      return {
        childProps: babelHelpers.extends({}, props, {
          renderItem: this._renderItem,
          ItemSeparatorComponent: undefined,
          data: props.sections,
          getItemCount: function getItemCount() {
            return itemCount;
          },
          getItem: getItem,
          keyExtractor: this._keyExtractor,
          onViewableItemsChanged: props.onViewableItemsChanged ? this._onViewableItemsChanged : undefined,
          stickyHeaderIndices: props.stickySectionHeadersEnabled ? stickyHeaderIndices : undefined
        })
      };
    }
  }]);

  function VirtualizedSectionList(props, context) {
    babelHelpers.classCallCheck(this, VirtualizedSectionList);

    var _this = babelHelpers.possibleConstructorReturn(this, (VirtualizedSectionList.__proto__ || Object.getPrototypeOf(VirtualizedSectionList)).call(this, props, context));

    _this._keyExtractor = function (item, index) {
      var info = _this._subExtractor(index);
      return info && info.key || String(index);
    };

    _this._convertViewable = function (viewable) {
      invariant(viewable.index != null, 'Received a broken ViewToken');
      var info = _this._subExtractor(viewable.index);
      if (!info) {
        return null;
      }
      var keyExtractor = info.section.keyExtractor || _this.props.keyExtractor;
      return babelHelpers.extends({}, viewable, {
        index: info.index,
        key: keyExtractor(viewable.item, info.index),
        section: info.section
      });
    };

    _this._onViewableItemsChanged = function (_ref) {
      var viewableItems = _ref.viewableItems,
          changed = _ref.changed;

      if (_this.props.onViewableItemsChanged) {
        _this.props.onViewableItemsChanged({
          viewableItems: viewableItems.map(_this._convertViewable, _this).filter(Boolean),
          changed: changed.map(_this._convertViewable, _this).filter(Boolean)
        });
      }
    };

    _this._renderItem = function (_ref2) {
      var item = _ref2.item,
          index = _ref2.index;

      var info = _this._subExtractor(index);
      if (!info) {
        return null;
      }
      var infoIndex = info.index;
      if (infoIndex == null) {
        var _section2 = info.section;

        if (info.header === true) {
          var _renderSectionHeader = _this.props.renderSectionHeader;

          return _renderSectionHeader ? _renderSectionHeader({ section: _section2 }) : null;
        } else {
          var _renderSectionFooter = _this.props.renderSectionFooter;

          return _renderSectionFooter ? _renderSectionFooter({ section: _section2 }) : null;
        }
      } else {
        var _renderItem = info.section.renderItem || _this.props.renderItem;
        var _SeparatorComponent = _this._getSeparatorComponent(index, info);
        invariant(_renderItem, 'no renderItem!');
        return React.createElement(ItemWithSeparator, {
          SeparatorComponent: _SeparatorComponent,
          LeadingSeparatorComponent: infoIndex === 0 ? _this.props.SectionSeparatorComponent : undefined,
          cellKey: info.key,
          index: infoIndex,
          item: item,
          leadingItem: info.leadingItem,
          leadingSection: info.leadingSection,
          onUpdateSeparator: _this._onUpdateSeparator,
          prevCellKey: (_this._subExtractor(index - 1) || {}).key,
          ref: function ref(_ref3) {
            _this._cellRefs[info.key] = _ref3;
          },
          renderItem: _renderItem,
          section: info.section,
          trailingItem: info.trailingItem,
          trailingSection: info.trailingSection,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 278
          }
        });
      }
    };

    _this._onUpdateSeparator = function (key, newProps) {
      var ref = _this._cellRefs[key];
      ref && ref.updateSeparatorProps(newProps);
    };

    _this._cellRefs = {};

    _this._captureRef = function (ref) {
      _this._listRef = ref;
    };

    _this.state = _this._computeState(props);
    return _this;
  }

  babelHelpers.createClass(VirtualizedSectionList, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.setState(this._computeState(nextProps));
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(VirtualizedList, babelHelpers.extends({}, this.state.childProps, { ref: this._captureRef, __source: {
          fileName: _jsxFileName,
          lineNumber: 367
        }
      }));
    }
  }]);
  return VirtualizedSectionList;
}(React.PureComponent);

VirtualizedSectionList.defaultProps = babelHelpers.extends({}, VirtualizedList.defaultProps, {
  data: []
});

var ItemWithSeparator = function (_React$Component) {
  babelHelpers.inherits(ItemWithSeparator, _React$Component);

  function ItemWithSeparator() {
    var _ref4;

    var _temp, _this2, _ret;

    babelHelpers.classCallCheck(this, ItemWithSeparator);

    for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return _ret = (_temp = (_this2 = babelHelpers.possibleConstructorReturn(this, (_ref4 = ItemWithSeparator.__proto__ || Object.getPrototypeOf(ItemWithSeparator)).call.apply(_ref4, [this].concat(args))), _this2), _this2.state = {
      separatorProps: {
        highlighted: false,
        leadingItem: _this2.props.item,
        leadingSection: _this2.props.leadingSection,
        section: _this2.props.section,
        trailingItem: _this2.props.trailingItem,
        trailingSection: _this2.props.trailingSection
      },
      leadingSeparatorProps: {
        highlighted: false,
        leadingItem: _this2.props.leadingItem,
        leadingSection: _this2.props.leadingSection,
        section: _this2.props.section,
        trailingItem: _this2.props.item,
        trailingSection: _this2.props.trailingSection
      }
    }, _this2._separators = {
      highlight: function highlight() {
        ['leading', 'trailing'].forEach(function (s) {
          return _this2._separators.updateProps(s, { highlighted: true });
        });
      },
      unhighlight: function unhighlight() {
        ['leading', 'trailing'].forEach(function (s) {
          return _this2._separators.updateProps(s, { highlighted: false });
        });
      },
      updateProps: function updateProps(select, newProps) {
        var _this2$props = _this2.props,
            LeadingSeparatorComponent = _this2$props.LeadingSeparatorComponent,
            cellKey = _this2$props.cellKey,
            prevCellKey = _this2$props.prevCellKey;

        if (select === 'leading' && LeadingSeparatorComponent) {
          _this2.setState(function (state) {
            return {
              leadingSeparatorProps: babelHelpers.extends({}, state.leadingSeparatorProps, newProps)
            };
          });
        } else {
          _this2.props.onUpdateSeparator(select === 'leading' && prevCellKey || cellKey, newProps);
        }
      }
    }, _temp), babelHelpers.possibleConstructorReturn(_this2, _ret);
  }

  babelHelpers.createClass(ItemWithSeparator, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(props) {
      var _this3 = this;

      this.setState(function (state) {
        return {
          separatorProps: babelHelpers.extends({}, _this3.state.separatorProps, {
            leadingItem: props.item,
            leadingSection: props.leadingSection,
            section: props.section,
            trailingItem: props.trailingItem,
            trailingSection: props.trailingSection
          }),
          leadingSeparatorProps: babelHelpers.extends({}, _this3.state.leadingSeparatorProps, {
            leadingItem: props.leadingItem,
            leadingSection: props.leadingSection,
            section: props.section,
            trailingItem: props.item,
            trailingSection: props.trailingSection
          })
        };
      });
    }
  }, {
    key: 'updateSeparatorProps',
    value: function updateSeparatorProps(newProps) {
      this.setState(function (state) {
        return {
          separatorProps: babelHelpers.extends({}, state.separatorProps, newProps)
        };
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          LeadingSeparatorComponent = _props.LeadingSeparatorComponent,
          SeparatorComponent = _props.SeparatorComponent,
          item = _props.item,
          index = _props.index,
          section = _props.section;

      var element = this.props.renderItem({
        item: item,
        index: index,
        section: section,
        separators: this._separators
      });
      var leadingSeparator = LeadingSeparatorComponent && React.createElement(LeadingSeparatorComponent, babelHelpers.extends({}, this.state.leadingSeparatorProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 488
        }
      }));
      var separator = SeparatorComponent && React.createElement(SeparatorComponent, babelHelpers.extends({}, this.state.separatorProps, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 491
        }
      }));
      return leadingSeparator || separator ? React.createElement(
        View,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 494
          }
        },
        leadingSeparator,
        element,
        separator
      ) : element;
    }
  }]);
  return ItemWithSeparator;
}(React.Component);

function getItem(sections, index) {
  if (!sections) {
    return null;
  }
  var itemIdx = index - 1;
  for (var ii = 0; ii < sections.length; ii++) {
    if (itemIdx === -1 || itemIdx === sections[ii].data.length) {
      return sections[ii];
    } else if (itemIdx < sections[ii].data.length) {
      return sections[ii].data[itemIdx];
    } else {
      itemIdx -= sections[ii].data.length + 2;
    }
  }
  return null;
}

module.exports = VirtualizedSectionList;
}, 287, null, "VirtualizedSectionList");
__d(/* SegmentedControlIOS */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/SegmentedControlIOS/SegmentedControlIOS.android.js';
var React = require(129    ); // 129 = React
var StyleSheet = require(167         ); // 167 = StyleSheet
var Text = require(180   ); // 180 = Text
var View = require(169   ); // 169 = View

var DummySegmentedControlIOS = function (_React$Component) {
  babelHelpers.inherits(DummySegmentedControlIOS, _React$Component);

  function DummySegmentedControlIOS() {
    babelHelpers.classCallCheck(this, DummySegmentedControlIOS);
    return babelHelpers.possibleConstructorReturn(this, (DummySegmentedControlIOS.__proto__ || Object.getPrototypeOf(DummySegmentedControlIOS)).apply(this, arguments));
  }

  babelHelpers.createClass(DummySegmentedControlIOS, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        View,
        { style: [styles.dummy, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 23
          }
        },
        React.createElement(
          Text,
          { style: styles.text, __source: {
              fileName: _jsxFileName,
              lineNumber: 24
            }
          },
          'SegmentedControlIOS is not supported on this platform!'
        )
      );
    }
  }]);
  return DummySegmentedControlIOS;
}(React.Component);

var styles = StyleSheet.create({
  dummy: {
    width: 120,
    height: 50,
    backgroundColor: '#ffbcbc',
    borderWidth: 1,
    borderColor: 'red',
    alignItems: 'center',
    justifyContent: 'center'
  },
  text: {
    color: '#333333',
    margin: 5,
    fontSize: 10
  }
});

module.exports = DummySegmentedControlIOS;
}, 288, null, "SegmentedControlIOS");
__d(/* Slider */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/Slider/Slider.js';
var Image = require(221    ); // 221 = Image
var ColorPropType = require(122            ); // 122 = ColorPropType
var NativeMethodsMixin = require(124                 ); // 124 = NativeMethodsMixin
var ReactNativeViewAttributes = require(170                        ); // 170 = ReactNativeViewAttributes
var Platform = require(46        ); // 46 = Platform
var React = require(129    ); // 129 = React
var PropTypes = require(126         ); // 126 = prop-types
var StyleSheet = require(167         ); // 167 = StyleSheet
var ViewPropTypes = require(130            ); // 130 = ViewPropTypes

var createReactClass = require(171                 ); // 171 = create-react-class
var requireNativeComponent = require(144                     ); // 144 = requireNativeComponent

var Slider = createReactClass({
  displayName: 'Slider',
  mixins: [NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    style: ViewPropTypes.style,

    value: PropTypes.number,

    step: PropTypes.number,

    minimumValue: PropTypes.number,

    maximumValue: PropTypes.number,

    minimumTrackTintColor: ColorPropType,

    maximumTrackTintColor: ColorPropType,

    disabled: PropTypes.bool,

    trackImage: Image.propTypes.source,

    minimumTrackImage: Image.propTypes.source,

    maximumTrackImage: Image.propTypes.source,

    thumbImage: Image.propTypes.source,

    thumbTintColor: ColorPropType,

    onValueChange: PropTypes.func,

    onSlidingComplete: PropTypes.func,

    testID: PropTypes.string
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      disabled: false,
      value: 0,
      minimumValue: 0,
      maximumValue: 1,
      step: 0
    };
  },

  viewConfig: {
    uiViewClassName: 'RCTSlider',
    validAttributes: babelHelpers.extends({}, ReactNativeViewAttributes.RCTView, {
      value: true
    })
  },

  render: function render() {
    var _props = this.props,
        style = _props.style,
        onValueChange = _props.onValueChange,
        onSlidingComplete = _props.onSlidingComplete,
        props = babelHelpers.objectWithoutProperties(_props, ['style', 'onValueChange', 'onSlidingComplete']);

    props.style = [styles.slider, style];

    props.onValueChange = onValueChange && function (event) {
      var userEvent = true;
      if (Platform.OS === 'android') {
        userEvent = event.nativeEvent.fromUser;
      }
      onValueChange && userEvent && onValueChange(event.nativeEvent.value);
    };

    props.onChange = props.onValueChange;

    props.onSlidingComplete = onSlidingComplete && function (event) {
      onSlidingComplete && onSlidingComplete(event.nativeEvent.value);
    };

    return React.createElement(RCTSlider, babelHelpers.extends({}, props, {
      enabled: !this.props.disabled,
      onStartShouldSetResponder: function onStartShouldSetResponder() {
        return true;
      },
      onResponderTerminationRequest: function onResponderTerminationRequest() {
        return false;
      },
      __source: {
        fileName: _jsxFileName,
        lineNumber: 192
      }
    }));
  }
});

var styles = void 0;
if (Platform.OS === 'ios') {
  styles = StyleSheet.create({
    slider: {
      height: 40
    }
  });
} else {
  styles = StyleSheet.create({
    slider: {}
  });
}

var options = {};
if (Platform.OS === 'android') {
  options = {
    nativeOnly: {
      enabled: true
    }
  };
}
var RCTSlider = requireNativeComponent('RCTSlider', Slider, options);

module.exports = Slider;
}, 289, null, "Slider");
__d(/* SnapshotViewIOS */function(global, require, module, exports) {
'use strict';

module.exports = require(258                ); // 258 = UnimplementedView
}, 290, null, "SnapshotViewIOS");
__d(/* Switch */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/Switch/Switch.js';
var ColorPropType = require(122            ); // 122 = ColorPropType
var NativeMethodsMixin = require(124                 ); // 124 = NativeMethodsMixin
var Platform = require(46        ); // 46 = Platform
var React = require(129    ); // 129 = React
var PropTypes = require(126         ); // 126 = prop-types
var StyleSheet = require(167         ); // 167 = StyleSheet
var ViewPropTypes = require(130            ); // 130 = ViewPropTypes

var createReactClass = require(171                 ); // 171 = create-react-class
var requireNativeComponent = require(144                     ); // 144 = requireNativeComponent

var Switch = createReactClass({
  displayName: 'Switch',
  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    value: PropTypes.bool,

    disabled: PropTypes.bool,

    onValueChange: PropTypes.func,

    testID: PropTypes.string,

    tintColor: ColorPropType,

    onTintColor: ColorPropType,

    thumbTintColor: ColorPropType
  }),

  getDefaultProps: function getDefaultProps() {
    return {
      value: false,
      disabled: false
    };
  },

  mixins: [NativeMethodsMixin],

  _rctSwitch: {},
  _onChange: function _onChange(event) {
    if (Platform.OS === 'android') {
      this._rctSwitch.setNativeProps({ on: this.props.value });
    } else {
      this._rctSwitch.setNativeProps({ value: this.props.value });
    }

    this.props.onChange && this.props.onChange(event);
    this.props.onValueChange && this.props.onValueChange(event.nativeEvent.value);
  },

  render: function render() {
    var _this = this;

    var props = babelHelpers.extends({}, this.props);
    props.onStartShouldSetResponder = function () {
      return true;
    };
    props.onResponderTerminationRequest = function () {
      return false;
    };
    if (Platform.OS === 'android') {
      props.enabled = !this.props.disabled;
      props.on = this.props.value;
      props.style = this.props.style;
      props.trackTintColor = this.props.value ? this.props.onTintColor : this.props.tintColor;
    } else if (Platform.OS === 'ios') {
      props.style = [styles.rctSwitchIOS, this.props.style];
    }
    return React.createElement(RCTSwitch, babelHelpers.extends({}, props, {
      ref: function ref(_ref) {
        _this._rctSwitch = _ref;
      },
      onChange: this._onChange,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 116
      }
    }));
  }
});

var styles = StyleSheet.create({
  rctSwitchIOS: {
    height: 31,
    width: 51
  }
});

if (Platform.OS === 'android') {
  var RCTSwitch = requireNativeComponent('AndroidSwitch', Switch, {
    nativeOnly: {
      onChange: true,
      on: true,
      enabled: true,
      trackTintColor: true
    }
  });
} else {
  var RCTSwitch = requireNativeComponent('RCTSwitch', Switch, {
    nativeOnly: {
      onChange: true
    }
  });
}

module.exports = Switch;
}, 291, null, "Switch");
__d(/* SwipeableFlatList */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Experimental/SwipeableRow/SwipeableFlatList.js';


var PropTypes = require(126         ); // 126 = prop-types
var React = require(129    ); // 129 = React
var SwipeableRow = require(293           ); // 293 = SwipeableRow
var FlatList = require(238       ); // 238 = FlatList

var SwipeableFlatList = function (_React$Component) {
  babelHelpers.inherits(SwipeableFlatList, _React$Component);

  function SwipeableFlatList(props, context) {
    babelHelpers.classCallCheck(this, SwipeableFlatList);

    var _this = babelHelpers.possibleConstructorReturn(this, (SwipeableFlatList.__proto__ || Object.getPrototypeOf(SwipeableFlatList)).call(this, props, context));

    _this._flatListRef = null;
    _this._shouldBounceFirstRowOnMount = false;

    _this._onScroll = function (e) {
      if (_this.state.openRowKey) {
        _this.setState({
          openRowKey: null
        });
      }

      _this.props.onScroll && _this.props.onScroll(e);
    };

    _this._renderItem = function (info) {
      var slideoutView = _this.props.renderQuickActions(info);
      var key = _this.props.keyExtractor(info.item, info.index);

      if (!slideoutView) {
        return _this.props.renderItem(info);
      }

      var shouldBounceOnMount = false;
      if (_this._shouldBounceFirstRowOnMount) {
        _this._shouldBounceFirstRowOnMount = false;
        shouldBounceOnMount = true;
      }

      return React.createElement(
        SwipeableRow,
        {
          slideoutView: slideoutView,
          isOpen: key === _this.state.openRowKey,
          maxSwipeDistance: _this._getMaxSwipeDistance(info),
          onOpen: function onOpen() {
            return _this._onOpen(key);
          },
          onClose: function onClose() {
            return _this._onClose(key);
          },
          shouldBounceOnMount: shouldBounceOnMount,
          onSwipeEnd: _this._setListViewScrollable,
          onSwipeStart: _this._setListViewNotScrollable, __source: {
            fileName: _jsxFileName,
            lineNumber: 137
          }
        },
        _this.props.renderItem(info)
      );
    };

    _this._setListViewScrollable = function () {
      _this._setListViewScrollableTo(true);
    };

    _this._setListViewNotScrollable = function () {
      _this._setListViewScrollableTo(false);
    };

    _this.state = {
      openRowKey: null
    };

    _this._shouldBounceFirstRowOnMount = _this.props.bounceFirstRowOnMount;
    return _this;
  }

  babelHelpers.createClass(SwipeableFlatList, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      return React.createElement(FlatList, babelHelpers.extends({}, this.props, {
        ref: function ref(_ref) {
          _this2._flatListRef = _ref;
        },
        onScroll: this._onScroll,
        renderItem: this._renderItem,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 99
        }
      }));
    }
  }, {
    key: '_getMaxSwipeDistance',
    value: function _getMaxSwipeDistance(info) {
      if (typeof this.props.maxSwipeDistance === 'function') {
        return this.props.maxSwipeDistance(info);
      }

      return this.props.maxSwipeDistance;
    }
  }, {
    key: '_setListViewScrollableTo',
    value: function _setListViewScrollableTo(value) {
      if (this._flatListRef) {
        this._flatListRef.setNativeProps({
          scrollEnabled: value
        });
      }
    }
  }, {
    key: '_onOpen',
    value: function _onOpen(key) {
      this.setState({
        openRowKey: key
      });
    }
  }, {
    key: '_onClose',
    value: function _onClose(key) {
      this.setState({
        openRowKey: null
      });
    }
  }]);
  return SwipeableFlatList;
}(React.Component);

SwipeableFlatList.propTypes = babelHelpers.extends({}, FlatList.propTypes, {
  bounceFirstRowOnMount: PropTypes.bool.isRequired,

  maxSwipeDistance: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,

  renderQuickActions: PropTypes.func.isRequired
});
SwipeableFlatList.defaultProps = babelHelpers.extends({}, FlatList.defaultProps, {
  bounceFirstRowOnMount: true,
  renderQuickActions: function renderQuickActions() {
    return null;
  }
});


module.exports = SwipeableFlatList;
}, 292, null, "SwipeableFlatList");
__d(/* SwipeableRow */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Experimental/SwipeableRow/SwipeableRow.js';
var Animated = require(193       ); // 193 = Animated
var I18nManager = require(280          ); // 280 = I18nManager
var PanResponder = require(294           ); // 294 = PanResponder
var React = require(129    ); // 129 = React
var PropTypes = require(126         ); // 126 = prop-types
var StyleSheet = require(167         ); // 167 = StyleSheet

var TimerMixin = require(190                ); // 190 = react-timer-mixin
var View = require(169   ); // 169 = View

var createReactClass = require(171                 ); // 171 = create-react-class

var emptyFunction = require(24                      ); // 24 = fbjs/lib/emptyFunction

var IS_RTL = I18nManager.isRTL;

var CLOSED_LEFT_POSITION = 0;

var HORIZONTAL_SWIPE_DISTANCE_THRESHOLD = 10;

var HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD = 0.3;

var SLOW_SPEED_SWIPE_FACTOR = 4;

var SWIPE_DURATION = 300;

var ON_MOUNT_BOUNCE_DELAY = 700;
var ON_MOUNT_BOUNCE_DURATION = 400;

var RIGHT_SWIPE_BOUNCE_BACK_DISTANCE = 30;
var RIGHT_SWIPE_BOUNCE_BACK_DURATION = 300;

var RIGHT_SWIPE_THRESHOLD = 30 * SLOW_SPEED_SWIPE_FACTOR;

var SwipeableRow = createReactClass({
  displayName: 'SwipeableRow',
  _panResponder: {},
  _previousLeft: CLOSED_LEFT_POSITION,

  mixins: [TimerMixin],

  propTypes: {
    children: PropTypes.any,
    isOpen: PropTypes.bool,
    preventSwipeRight: PropTypes.bool,
    maxSwipeDistance: PropTypes.number.isRequired,
    onOpen: PropTypes.func.isRequired,
    onClose: PropTypes.func.isRequired,
    onSwipeEnd: PropTypes.func.isRequired,
    onSwipeStart: PropTypes.func.isRequired,

    shouldBounceOnMount: PropTypes.bool,

    slideoutView: PropTypes.node.isRequired,

    swipeThreshold: PropTypes.number.isRequired
  },

  getInitialState: function getInitialState() {
    return {
      currentLeft: new Animated.Value(this._previousLeft),

      isSwipeableViewRendered: false,
      rowHeight: null
    };
  },
  getDefaultProps: function getDefaultProps() {
    return {
      isOpen: false,
      preventSwipeRight: false,
      maxSwipeDistance: 0,
      onOpen: emptyFunction,
      onClose: emptyFunction,
      onSwipeEnd: emptyFunction,
      onSwipeStart: emptyFunction,
      swipeThreshold: 30
    };
  },
  componentWillMount: function componentWillMount() {
    this._panResponder = PanResponder.create({
      onMoveShouldSetPanResponderCapture: this._handleMoveShouldSetPanResponderCapture,
      onPanResponderGrant: this._handlePanResponderGrant,
      onPanResponderMove: this._handlePanResponderMove,
      onPanResponderRelease: this._handlePanResponderEnd,
      onPanResponderTerminationRequest: this._onPanResponderTerminationRequest,
      onPanResponderTerminate: this._handlePanResponderEnd,
      onShouldBlockNativeResponder: function onShouldBlockNativeResponder(event, gestureState) {
        return false;
      }
    });
  },
  componentDidMount: function componentDidMount() {
    var _this = this;

    if (this.props.shouldBounceOnMount) {
      this.setTimeout(function () {
        _this._animateBounceBack(ON_MOUNT_BOUNCE_DURATION);
      }, ON_MOUNT_BOUNCE_DELAY);
    }
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    if (this.props.isOpen && !nextProps.isOpen) {
      this._animateToClosedPosition();
    }
  },
  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
    if (this.props.shouldBounceOnMount && !nextProps.shouldBounceOnMount) {
      return false;
    }

    return true;
  },
  render: function render() {
    var slideOutView = void 0;
    if (this.state.isSwipeableViewRendered && this.state.rowHeight) {
      slideOutView = React.createElement(
        View,
        { style: [styles.slideOutContainer, { height: this.state.rowHeight }], __source: {
            fileName: _jsxFileName,
            lineNumber: 176
          }
        },
        this.props.slideoutView
      );
    }

    var swipeableView = React.createElement(
      Animated.View,
      {
        onLayout: this._onSwipeableViewLayout,
        style: { transform: [{ translateX: this.state.currentLeft }] }, __source: {
          fileName: _jsxFileName,
          lineNumber: 187
        }
      },
      this.props.children
    );

    return React.createElement(
      View,
      babelHelpers.extends({}, this._panResponder.panHandlers, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 195
        }
      }),
      slideOutView,
      swipeableView
    );
  },
  close: function close() {
    this.props.onClose();
    this._animateToClosedPosition();
  },
  _onSwipeableViewLayout: function _onSwipeableViewLayout(event) {
    this.setState({
      isSwipeableViewRendered: true,
      rowHeight: event.nativeEvent.layout.height
    });
  },
  _handleMoveShouldSetPanResponderCapture: function _handleMoveShouldSetPanResponderCapture(event, gestureState) {
    return gestureState.dy < 10 && this._isValidSwipe(gestureState);
  },
  _handlePanResponderGrant: function _handlePanResponderGrant(event, gestureState) {},
  _handlePanResponderMove: function _handlePanResponderMove(event, gestureState) {
    if (this._isSwipingExcessivelyRightFromClosedPosition(gestureState)) {
      return;
    }

    this.props.onSwipeStart();

    if (this._isSwipingRightFromClosed(gestureState)) {
      this._swipeSlowSpeed(gestureState);
    } else {
      this._swipeFullSpeed(gestureState);
    }
  },
  _isSwipingRightFromClosed: function _isSwipingRightFromClosed(gestureState) {
    var gestureStateDx = IS_RTL ? -gestureState.dx : gestureState.dx;
    return this._previousLeft === CLOSED_LEFT_POSITION && gestureStateDx > 0;
  },
  _swipeFullSpeed: function _swipeFullSpeed(gestureState) {
    this.state.currentLeft.setValue(this._previousLeft + gestureState.dx);
  },
  _swipeSlowSpeed: function _swipeSlowSpeed(gestureState) {
    this.state.currentLeft.setValue(this._previousLeft + gestureState.dx / SLOW_SPEED_SWIPE_FACTOR);
  },
  _isSwipingExcessivelyRightFromClosedPosition: function _isSwipingExcessivelyRightFromClosedPosition(gestureState) {
    var gestureStateDx = IS_RTL ? -gestureState.dx : gestureState.dx;
    return this._isSwipingRightFromClosed(gestureState) && gestureStateDx > RIGHT_SWIPE_THRESHOLD;
  },
  _onPanResponderTerminationRequest: function _onPanResponderTerminationRequest(event, gestureState) {
    return false;
  },
  _animateTo: function _animateTo(toValue) {
    var _this2 = this;

    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SWIPE_DURATION;
    var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : emptyFunction;

    Animated.timing(this.state.currentLeft, {
      duration: duration,
      toValue: toValue,
      useNativeDriver: true
    }).start(function () {
      _this2._previousLeft = toValue;
      callback();
    });
  },
  _animateToOpenPosition: function _animateToOpenPosition() {
    var maxSwipeDistance = IS_RTL ? -this.props.maxSwipeDistance : this.props.maxSwipeDistance;
    this._animateTo(-maxSwipeDistance);
  },
  _animateToOpenPositionWith: function _animateToOpenPositionWith(speed, distMoved) {
    speed = speed > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD ? speed : HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;

    var duration = Math.abs((this.props.maxSwipeDistance - Math.abs(distMoved)) / speed);
    var maxSwipeDistance = IS_RTL ? -this.props.maxSwipeDistance : this.props.maxSwipeDistance;
    this._animateTo(-maxSwipeDistance, duration);
  },
  _animateToClosedPosition: function _animateToClosedPosition() {
    var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SWIPE_DURATION;

    this._animateTo(CLOSED_LEFT_POSITION, duration);
  },
  _animateToClosedPositionDuringBounce: function _animateToClosedPositionDuringBounce() {
    this._animateToClosedPosition(RIGHT_SWIPE_BOUNCE_BACK_DURATION);
  },
  _animateBounceBack: function _animateBounceBack(duration) {
    var swipeBounceBackDistance = IS_RTL ? -RIGHT_SWIPE_BOUNCE_BACK_DISTANCE : RIGHT_SWIPE_BOUNCE_BACK_DISTANCE;
    this._animateTo(-swipeBounceBackDistance, duration, this._animateToClosedPositionDuringBounce);
  },
  _isValidSwipe: function _isValidSwipe(gestureState) {
    if (this.props.preventSwipeRight && this._previousLeft === CLOSED_LEFT_POSITION && gestureState.dx > 0) {
      return false;
    }

    return Math.abs(gestureState.dx) > HORIZONTAL_SWIPE_DISTANCE_THRESHOLD;
  },
  _shouldAnimateRemainder: function _shouldAnimateRemainder(gestureState) {
    return Math.abs(gestureState.dx) > this.props.swipeThreshold || gestureState.vx > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;
  },
  _handlePanResponderEnd: function _handlePanResponderEnd(event, gestureState) {
    var horizontalDistance = IS_RTL ? -gestureState.dx : gestureState.dx;
    if (this._isSwipingRightFromClosed(gestureState)) {
      this.props.onOpen();
      this._animateBounceBack(RIGHT_SWIPE_BOUNCE_BACK_DURATION);
    } else if (this._shouldAnimateRemainder(gestureState)) {
      if (horizontalDistance < 0) {
        this.props.onOpen();
        this._animateToOpenPositionWith(gestureState.vx, horizontalDistance);
      } else {
        this.props.onClose();
        this._animateToClosedPosition();
      }
    } else {
      if (this._previousLeft === CLOSED_LEFT_POSITION) {
        this._animateToClosedPosition();
      } else {
        this._animateToOpenPosition();
      }
    }

    this.props.onSwipeEnd();
  }
});

var styles = StyleSheet.create({
  slideOutContainer: {
    bottom: 0,
    left: 0,
    position: 'absolute',
    right: 0,
    top: 0
  }
});

module.exports = SwipeableRow;
}, 293, null, "SwipeableRow");
__d(/* PanResponder */function(global, require, module, exports) {

'use strict';

var InteractionManager = require(201                   ); // 201 = ./InteractionManager
var TouchHistoryMath = require(295               ); // 295 = TouchHistoryMath

var currentCentroidXOfTouchesChangedAfter = TouchHistoryMath.currentCentroidXOfTouchesChangedAfter;
var currentCentroidYOfTouchesChangedAfter = TouchHistoryMath.currentCentroidYOfTouchesChangedAfter;
var previousCentroidXOfTouchesChangedAfter = TouchHistoryMath.previousCentroidXOfTouchesChangedAfter;
var previousCentroidYOfTouchesChangedAfter = TouchHistoryMath.previousCentroidYOfTouchesChangedAfter;
var currentCentroidX = TouchHistoryMath.currentCentroidX;
var currentCentroidY = TouchHistoryMath.currentCentroidY;

var PanResponder = {

  _initializeGestureState: function _initializeGestureState(gestureState) {
    gestureState.moveX = 0;
    gestureState.moveY = 0;
    gestureState.x0 = 0;
    gestureState.y0 = 0;
    gestureState.dx = 0;
    gestureState.dy = 0;
    gestureState.vx = 0;
    gestureState.vy = 0;
    gestureState.numberActiveTouches = 0;

    gestureState._accountsForMovesUpTo = 0;
  },

  _updateGestureStateOnMove: function _updateGestureStateOnMove(gestureState, touchHistory) {
    gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
    gestureState.moveX = currentCentroidXOfTouchesChangedAfter(touchHistory, gestureState._accountsForMovesUpTo);
    gestureState.moveY = currentCentroidYOfTouchesChangedAfter(touchHistory, gestureState._accountsForMovesUpTo);
    var movedAfter = gestureState._accountsForMovesUpTo;
    var prevX = previousCentroidXOfTouchesChangedAfter(touchHistory, movedAfter);
    var x = currentCentroidXOfTouchesChangedAfter(touchHistory, movedAfter);
    var prevY = previousCentroidYOfTouchesChangedAfter(touchHistory, movedAfter);
    var y = currentCentroidYOfTouchesChangedAfter(touchHistory, movedAfter);
    var nextDX = gestureState.dx + (x - prevX);
    var nextDY = gestureState.dy + (y - prevY);

    var dt = touchHistory.mostRecentTimeStamp - gestureState._accountsForMovesUpTo;
    gestureState.vx = (nextDX - gestureState.dx) / dt;
    gestureState.vy = (nextDY - gestureState.dy) / dt;

    gestureState.dx = nextDX;
    gestureState.dy = nextDY;
    gestureState._accountsForMovesUpTo = touchHistory.mostRecentTimeStamp;
  },

  create: function create(config) {
    var interactionState = {
      handle: null
    };
    var gestureState = {
      stateID: Math.random()
    };
    PanResponder._initializeGestureState(gestureState);
    var panHandlers = {
      onStartShouldSetResponder: function onStartShouldSetResponder(e) {
        return config.onStartShouldSetPanResponder === undefined ? false : config.onStartShouldSetPanResponder(e, gestureState);
      },
      onMoveShouldSetResponder: function onMoveShouldSetResponder(e) {
        return config.onMoveShouldSetPanResponder === undefined ? false : config.onMoveShouldSetPanResponder(e, gestureState);
      },
      onStartShouldSetResponderCapture: function onStartShouldSetResponderCapture(e) {
        if (e.nativeEvent.touches.length === 1) {
          PanResponder._initializeGestureState(gestureState);
        }
        gestureState.numberActiveTouches = e.touchHistory.numberActiveTouches;
        return config.onStartShouldSetPanResponderCapture !== undefined ? config.onStartShouldSetPanResponderCapture(e, gestureState) : false;
      },

      onMoveShouldSetResponderCapture: function onMoveShouldSetResponderCapture(e) {
        var touchHistory = e.touchHistory;

        if (gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp) {
          return false;
        }
        PanResponder._updateGestureStateOnMove(gestureState, touchHistory);
        return config.onMoveShouldSetPanResponderCapture ? config.onMoveShouldSetPanResponderCapture(e, gestureState) : false;
      },

      onResponderGrant: function onResponderGrant(e) {
        if (!interactionState.handle) {
          interactionState.handle = InteractionManager.createInteractionHandle();
        }
        gestureState.x0 = currentCentroidX(e.touchHistory);
        gestureState.y0 = currentCentroidY(e.touchHistory);
        gestureState.dx = 0;
        gestureState.dy = 0;
        if (config.onPanResponderGrant) {
          config.onPanResponderGrant(e, gestureState);
        }

        return config.onShouldBlockNativeResponder === undefined ? true : config.onShouldBlockNativeResponder();
      },

      onResponderReject: function onResponderReject(e) {
        clearInteractionHandle(interactionState, config.onPanResponderReject, e, gestureState);
      },

      onResponderRelease: function onResponderRelease(e) {
        clearInteractionHandle(interactionState, config.onPanResponderRelease, e, gestureState);
        PanResponder._initializeGestureState(gestureState);
      },

      onResponderStart: function onResponderStart(e) {
        var touchHistory = e.touchHistory;
        gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
        if (config.onPanResponderStart) {
          config.onPanResponderStart(e, gestureState);
        }
      },

      onResponderMove: function onResponderMove(e) {
        var touchHistory = e.touchHistory;

        if (gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp) {
          return;
        }

        PanResponder._updateGestureStateOnMove(gestureState, touchHistory);
        if (config.onPanResponderMove) {
          config.onPanResponderMove(e, gestureState);
        }
      },

      onResponderEnd: function onResponderEnd(e) {
        var touchHistory = e.touchHistory;
        gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
        clearInteractionHandle(interactionState, config.onPanResponderEnd, e, gestureState);
      },

      onResponderTerminate: function onResponderTerminate(e) {
        clearInteractionHandle(interactionState, config.onPanResponderTerminate, e, gestureState);
        PanResponder._initializeGestureState(gestureState);
      },

      onResponderTerminationRequest: function onResponderTerminationRequest(e) {
        return config.onPanResponderTerminationRequest === undefined ? true : config.onPanResponderTerminationRequest(e, gestureState);
      }
    };
    return {
      panHandlers: panHandlers,
      getInteractionHandle: function getInteractionHandle() {
        return interactionState.handle;
      }
    };
  }
};

function clearInteractionHandle(interactionState, callback, event, gestureState) {
  if (interactionState.handle) {
    InteractionManager.clearInteractionHandle(interactionState.handle);
    interactionState.handle = null;
  }
  if (callback) {
    callback(event, gestureState);
  }
}

module.exports = PanResponder;
}, 294, null, "PanResponder");
__d(/* TouchHistoryMath */function(global, require, module, exports) {

'use strict';

var _require = require(21           ), // 21 = ReactNative
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = _require.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

module.exports = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.TouchHistoryMath;
}, 295, null, "TouchHistoryMath");
__d(/* SwipeableListView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Experimental/SwipeableRow/SwipeableListView.js';
var ListView = require(240       ); // 240 = ListView
var PropTypes = require(126         ); // 126 = prop-types
var React = require(129    ); // 129 = React
var SwipeableListViewDataSource = require(297                          ); // 297 = SwipeableListViewDataSource
var SwipeableRow = require(293           ); // 293 = SwipeableRow

var SwipeableListView = function (_React$Component) {
  babelHelpers.inherits(SwipeableListView, _React$Component);
  babelHelpers.createClass(SwipeableListView, null, [{
    key: 'getNewDataSource',
    value: function getNewDataSource() {
      return new SwipeableListViewDataSource({
        getRowData: function getRowData(data, sectionID, rowID) {
          return data[sectionID][rowID];
        },
        getSectionHeaderData: function getSectionHeaderData(data, sectionID) {
          return data[sectionID];
        },
        rowHasChanged: function rowHasChanged(row1, row2) {
          return row1 !== row2;
        },
        sectionHeaderHasChanged: function sectionHeaderHasChanged(s1, s2) {
          return s1 !== s2;
        }
      });
    }
  }]);

  function SwipeableListView(props, context) {
    babelHelpers.classCallCheck(this, SwipeableListView);

    var _this = babelHelpers.possibleConstructorReturn(this, (SwipeableListView.__proto__ || Object.getPrototypeOf(SwipeableListView)).call(this, props, context));

    _this._listViewRef = null;
    _this._shouldBounceFirstRowOnMount = false;

    _this._onScroll = function (e) {
      if (_this.props.dataSource.getOpenRowID()) {
        _this.setState({
          dataSource: _this.state.dataSource.setOpenRowID(null)
        });
      }
      _this.props.onScroll && _this.props.onScroll(e);
    };

    _this._renderRow = function (rowData, sectionID, rowID) {
      var slideoutView = _this.props.renderQuickActions(rowData, sectionID, rowID);

      if (!slideoutView) {
        return _this.props.renderRow(rowData, sectionID, rowID);
      }

      var shouldBounceOnMount = false;
      if (_this._shouldBounceFirstRowOnMount) {
        _this._shouldBounceFirstRowOnMount = false;
        shouldBounceOnMount = rowID === _this.props.dataSource.getFirstRowID();
      }

      return React.createElement(
        SwipeableRow,
        {
          slideoutView: slideoutView,
          isOpen: rowData.id === _this.props.dataSource.getOpenRowID(),
          maxSwipeDistance: _this._getMaxSwipeDistance(rowData, sectionID, rowID),
          key: rowID,
          onOpen: function onOpen() {
            return _this._onOpen(rowData.id);
          },
          onClose: function onClose() {
            return _this._onClose(rowData.id);
          },
          onSwipeEnd: function onSwipeEnd() {
            return _this._setListViewScrollable(true);
          },
          onSwipeStart: function onSwipeStart() {
            return _this._setListViewScrollable(false);
          },
          shouldBounceOnMount: shouldBounceOnMount, __source: {
            fileName: _jsxFileName,
            lineNumber: 191
          }
        },
        _this.props.renderRow(rowData, sectionID, rowID)
      );
    };

    _this._shouldBounceFirstRowOnMount = _this.props.bounceFirstRowOnMount;
    _this.state = {
      dataSource: _this.props.dataSource
    };
    return _this;
  }

  babelHelpers.createClass(SwipeableListView, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.state.dataSource.getDataSource() !== nextProps.dataSource.getDataSource()) {
        this.setState({
          dataSource: nextProps.dataSource
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return React.createElement(ListView, babelHelpers.extends({}, this.props, {
        ref: function ref(_ref) {
          _this2._listViewRef = _ref;
        },
        dataSource: this.state.dataSource.getDataSource(),
        onScroll: this._onScroll,
        renderRow: this._renderRow,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 121
        }
      }));
    }
  }, {
    key: '_setListViewScrollable',
    value: function _setListViewScrollable(value) {
      if (this._listViewRef && typeof this._listViewRef.setNativeProps === 'function') {
        this._listViewRef.setNativeProps({
          scrollEnabled: value
        });
      }
    }
  }, {
    key: 'getScrollResponder',
    value: function getScrollResponder() {
      if (this._listViewRef && typeof this._listViewRef.getScrollResponder === 'function') {
        return this._listViewRef.getScrollResponder();
      }
    }
  }, {
    key: '_getMaxSwipeDistance',
    value: function _getMaxSwipeDistance(rowData, sectionID, rowID) {
      if (typeof this.props.maxSwipeDistance === 'function') {
        return this.props.maxSwipeDistance(rowData, sectionID, rowID);
      }

      return this.props.maxSwipeDistance;
    }
  }, {
    key: '_onOpen',
    value: function _onOpen(rowID) {
      this.setState({
        dataSource: this.state.dataSource.setOpenRowID(rowID)
      });
    }
  }, {
    key: '_onClose',
    value: function _onClose(rowID) {
      this.setState({
        dataSource: this.state.dataSource.setOpenRowID(null)
      });
    }
  }]);
  return SwipeableListView;
}(React.Component);

SwipeableListView.propTypes = {
  bounceFirstRowOnMount: PropTypes.bool.isRequired,

  dataSource: PropTypes.instanceOf(SwipeableListViewDataSource).isRequired,

  maxSwipeDistance: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,

  renderRow: PropTypes.func.isRequired,

  renderQuickActions: PropTypes.func.isRequired
};
SwipeableListView.defaultProps = {
  bounceFirstRowOnMount: false,
  renderQuickActions: function renderQuickActions() {
    return null;
  }
};


module.exports = SwipeableListView;
}, 296, null, "SwipeableListView");
__d(/* SwipeableListViewDataSource */function(global, require, module, exports) {
'use strict';

var ListViewDataSource = require(241                 ); // 241 = ListViewDataSource

var SwipeableListViewDataSource = function () {
  function SwipeableListViewDataSource(params) {
    var _this = this;

    babelHelpers.classCallCheck(this, SwipeableListViewDataSource);

    this._dataSource = new ListViewDataSource({
      getRowData: params.getRowData,
      getSectionHeaderData: params.getSectionHeaderData,
      rowHasChanged: function rowHasChanged(row1, row2) {
        return row1.id !== _this._previousOpenRowID && row2.id === _this._openRowID || row1.id === _this._previousOpenRowID && row2.id !== _this._openRowID || params.rowHasChanged(row1, row2);
      },
      sectionHeaderHasChanged: params.sectionHeaderHasChanged
    });
  }

  babelHelpers.createClass(SwipeableListViewDataSource, [{
    key: 'cloneWithRowsAndSections',
    value: function cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities) {
      this._dataSource = this._dataSource.cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities);

      this._dataBlob = dataBlob;
      this.rowIdentities = this._dataSource.rowIdentities;
      this.sectionIdentities = this._dataSource.sectionIdentities;

      return this;
    }
  }, {
    key: 'getDataSource',
    value: function getDataSource() {
      return this._dataSource;
    }
  }, {
    key: 'getOpenRowID',
    value: function getOpenRowID() {
      return this._openRowID;
    }
  }, {
    key: 'getFirstRowID',
    value: function getFirstRowID() {
      if (this.rowIdentities) {
        return this.rowIdentities[0] && this.rowIdentities[0][0];
      }
      return Object.keys(this._dataBlob)[0];
    }
  }, {
    key: 'setOpenRowID',
    value: function setOpenRowID(rowID) {
      this._previousOpenRowID = this._openRowID;
      this._openRowID = rowID;

      this._dataSource = this._dataSource.cloneWithRowsAndSections(this._dataBlob, this.sectionIdentities, this.rowIdentities);

      return this;
    }
  }]);
  return SwipeableListViewDataSource;
}();

module.exports = SwipeableListViewDataSource;
}, 297, null, "SwipeableListViewDataSource");
__d(/* TabBarIOS */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/TabBarIOS/TabBarIOS.android.js';
var React = require(129    ); // 129 = React
var StyleSheet = require(167         ); // 167 = StyleSheet
var TabBarItemIOS = require(299            ); // 299 = TabBarItemIOS
var View = require(169   ); // 169 = View

var DummyTabBarIOS = function (_React$Component) {
  babelHelpers.inherits(DummyTabBarIOS, _React$Component);

  function DummyTabBarIOS() {
    babelHelpers.classCallCheck(this, DummyTabBarIOS);
    return babelHelpers.possibleConstructorReturn(this, (DummyTabBarIOS.__proto__ || Object.getPrototypeOf(DummyTabBarIOS)).apply(this, arguments));
  }

  babelHelpers.createClass(DummyTabBarIOS, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        View,
        { style: [this.props.style, styles.tabGroup], __source: {
            fileName: _jsxFileName,
            lineNumber: 25
          }
        },
        this.props.children
      );
    }
  }]);
  return DummyTabBarIOS;
}(React.Component);

DummyTabBarIOS.Item = TabBarItemIOS;


var styles = StyleSheet.create({
  tabGroup: {
    flex: 1
  }
});

module.exports = DummyTabBarIOS;
}, 298, null, "TabBarIOS");
__d(/* TabBarItemIOS */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/TabBarIOS/TabBarItemIOS.android.js';
var React = require(129    ); // 129 = React
var View = require(169   ); // 169 = View
var StyleSheet = require(167         ); // 167 = StyleSheet

var DummyTab = function (_React$Component) {
  babelHelpers.inherits(DummyTab, _React$Component);

  function DummyTab() {
    babelHelpers.classCallCheck(this, DummyTab);
    return babelHelpers.possibleConstructorReturn(this, (DummyTab.__proto__ || Object.getPrototypeOf(DummyTab)).apply(this, arguments));
  }

  babelHelpers.createClass(DummyTab, [{
    key: 'render',
    value: function render() {
      if (!this.props.selected) {
        return React.createElement(View, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 21
          }
        });
      }
      return React.createElement(
        View,
        { style: [this.props.style, styles.tab], __source: {
            fileName: _jsxFileName,
            lineNumber: 24
          }
        },
        this.props.children
      );
    }
  }]);
  return DummyTab;
}(React.Component);

var styles = StyleSheet.create({
  tab: {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    borderColor: 'red',
    borderWidth: 1
  }
});

module.exports = DummyTab;
}, 299, null, "TabBarItemIOS");
__d(/* TextInput */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/TextInput/TextInput.js';
var ColorPropType = require(122            ); // 122 = ColorPropType
var DocumentSelectionState = require(301                     ); // 301 = DocumentSelectionState
var EventEmitter = require(81            ); // 81 = EventEmitter
var NativeMethodsMixin = require(124                 ); // 124 = NativeMethodsMixin
var Platform = require(46        ); // 46 = Platform
var React = require(129    ); // 129 = React
var createReactClass = require(171                 ); // 171 = create-react-class
var PropTypes = require(126         ); // 126 = prop-types
var ReactNative = require(21           ); // 21 = ReactNative
var StyleSheet = require(167         ); // 167 = StyleSheet
var Text = require(180   ); // 180 = Text
var TextInputState = require(45              ); // 45 = TextInputState

var TimerMixin = require(190                ); // 190 = react-timer-mixin
var TouchableWithoutFeedback = require(189                       ); // 189 = TouchableWithoutFeedback
var UIManager = require(47         ); // 47 = UIManager
var ViewPropTypes = require(130            ); // 130 = ViewPropTypes

var emptyFunction = require(24                      ); // 24 = fbjs/lib/emptyFunction
var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var requireNativeComponent = require(144                     ); // 144 = requireNativeComponent

var warning = require(23                ); // 23 = fbjs/lib/warning

var onlyMultiline = {
  onTextInput: true,
  children: true
};

if (Platform.OS === 'android') {
  var AndroidTextInput = requireNativeComponent('AndroidTextInput', null);
} else if (Platform.OS === 'ios') {
  var RCTTextView = requireNativeComponent('RCTTextView', null);
  var RCTTextField = requireNativeComponent('RCTTextField', null);
}

var DataDetectorTypes = ['phoneNumber', 'link', 'address', 'calendarEvent', 'none', 'all'];

var TextInput = createReactClass({
  displayName: 'TextInput',
  statics: {
    State: TextInputState
  },

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    autoCapitalize: PropTypes.oneOf(['none', 'sentences', 'words', 'characters']),

    autoCorrect: PropTypes.bool,

    spellCheck: PropTypes.bool,

    autoFocus: PropTypes.bool,

    autoGrow: PropTypes.bool,

    allowFontScaling: PropTypes.bool,

    editable: PropTypes.bool,

    keyboardType: PropTypes.oneOf(['default', 'email-address', 'numeric', 'phone-pad', 'ascii-capable', 'numbers-and-punctuation', 'url', 'number-pad', 'name-phone-pad', 'decimal-pad', 'twitter', 'web-search']),

    keyboardAppearance: PropTypes.oneOf(['default', 'light', 'dark']),

    returnKeyType: PropTypes.oneOf(['done', 'go', 'next', 'search', 'send', 'none', 'previous', 'default', 'emergency-call', 'google', 'join', 'route', 'yahoo']),

    returnKeyLabel: PropTypes.string,

    maxLength: PropTypes.number,

    maxHeight: PropTypes.number,

    numberOfLines: PropTypes.number,

    disableFullscreenUI: PropTypes.bool,

    enablesReturnKeyAutomatically: PropTypes.bool,

    multiline: PropTypes.bool,

    textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),

    onBlur: PropTypes.func,

    onFocus: PropTypes.func,

    onChange: PropTypes.func,

    onChangeText: PropTypes.func,

    onContentSizeChange: PropTypes.func,

    onEndEditing: PropTypes.func,

    onSelectionChange: PropTypes.func,

    onSubmitEditing: PropTypes.func,

    onKeyPress: PropTypes.func,

    onLayout: PropTypes.func,

    onScroll: PropTypes.func,

    placeholder: PropTypes.node,

    placeholderTextColor: ColorPropType,

    secureTextEntry: PropTypes.bool,

    selectionColor: ColorPropType,

    selectionState: PropTypes.instanceOf(DocumentSelectionState),

    selection: PropTypes.shape({
      start: PropTypes.number.isRequired,
      end: PropTypes.number
    }),

    value: PropTypes.string,

    defaultValue: PropTypes.string,

    clearButtonMode: PropTypes.oneOf(['never', 'while-editing', 'unless-editing', 'always']),

    clearTextOnFocus: PropTypes.bool,

    selectTextOnFocus: PropTypes.bool,

    blurOnSubmit: PropTypes.bool,

    style: Text.propTypes.style,

    underlineColorAndroid: ColorPropType,

    inlineImageLeft: PropTypes.string,

    inlineImagePadding: PropTypes.number,

    dataDetectorTypes: PropTypes.oneOfType([PropTypes.oneOf(DataDetectorTypes), PropTypes.arrayOf(PropTypes.oneOf(DataDetectorTypes))]),

    caretHidden: PropTypes.bool
  }),
  getDefaultProps: function getDefaultProps() {
    return {
      allowFontScaling: true
    };
  },

  mixins: [NativeMethodsMixin, TimerMixin],

  getInitialState: function getInitialState() {
    return { layoutHeight: this._layoutHeight };
  },

  isFocused: function isFocused() {
    return TextInputState.currentlyFocusedField() === ReactNative.findNodeHandle(this._inputRef);
  },

  contextTypes: {
    onFocusRequested: PropTypes.func,
    focusEmitter: PropTypes.instanceOf(EventEmitter)
  },

  _inputRef: undefined,
  _focusSubscription: undefined,
  _lastNativeText: undefined,
  _lastNativeSelection: undefined,
  _layoutHeight: -1,

  componentDidMount: function componentDidMount() {
    var _this = this;

    this._lastNativeText = this.props.value;
    if (!this.context.focusEmitter) {
      if (this.props.autoFocus) {
        this.requestAnimationFrame(this.focus);
      }
      return;
    }
    this._focusSubscription = this.context.focusEmitter.addListener('focus', function (el) {
      if (_this === el) {
        _this.requestAnimationFrame(_this.focus);
      } else if (_this.isFocused()) {
        _this.blur();
      }
    });
    if (this.props.autoFocus) {
      this.context.onFocusRequested(this);
    }
  },

  componentWillUnmount: function componentWillUnmount() {
    this._focusSubscription && this._focusSubscription.remove();
    if (this.isFocused()) {
      this.blur();
    }
  },

  getChildContext: function getChildContext() {
    return { isInAParentText: true };
  },

  childContextTypes: {
    isInAParentText: PropTypes.bool
  },

  clear: function clear() {
    this.setNativeProps({ text: '' });
  },

  render: function render() {
    if (Platform.OS === 'ios') {
      return this._renderIOS();
    } else if (Platform.OS === 'android') {
      return this._renderAndroid();
    }
  },

  _getText: function _getText() {
    return typeof this.props.value === 'string' ? this.props.value : typeof this.props.defaultValue === 'string' ? this.props.defaultValue : '';
  },

  _setNativeRef: function _setNativeRef(ref) {
    this._inputRef = ref;
  },

  _renderIOS: function _renderIOS() {
    var textContainer;

    var props = babelHelpers.extends({}, this.props);
    props.style = [this.props.style];

    if (props.selection && props.selection.end == null) {
      props.selection = { start: props.selection.start, end: props.selection.start };
    }

    if (!props.multiline) {
      if (__DEV__) {
        for (var propKey in onlyMultiline) {
          if (props[propKey]) {
            var error = new Error('TextInput prop `' + propKey + '` is only supported with multiline.');
            warning(false, '%s', error.stack);
          }
        }
      }
      textContainer = React.createElement(RCTTextField, babelHelpers.extends({
        ref: this._setNativeRef
      }, props, {
        onFocus: this._onFocus,
        onBlur: this._onBlur,
        onChange: this._onChange,
        onSelectionChange: this._onSelectionChange,
        onSelectionChangeShouldSetResponder: emptyFunction.thatReturnsTrue,
        text: this._getText(),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 697
        }
      }));
    } else {
      var children = props.children;
      var childCount = 0;
      React.Children.forEach(children, function () {
        return ++childCount;
      });
      invariant(!(props.value && childCount), 'Cannot specify both value and children.');
      if (childCount >= 1) {
        children = React.createElement(
          Text,
          { style: props.style, allowFontScaling: props.allowFontScaling, __source: {
              fileName: _jsxFileName,
              lineNumber: 716
            }
          },
          children
        );
      }
      if (props.inputView) {
        children = [children, props.inputView];
      }
      props.style.unshift(styles.multilineInput);
      textContainer = React.createElement(RCTTextView, babelHelpers.extends({
        ref: this._setNativeRef
      }, props, {
        children: children,
        onFocus: this._onFocus,
        onBlur: this._onBlur,
        onChange: this._onChange,
        onContentSizeChange: this.props.onContentSizeChange,
        onSelectionChange: this._onSelectionChange,
        onTextInput: this._onTextInput,
        onSelectionChangeShouldSetResponder: emptyFunction.thatReturnsTrue,
        text: this._getText(),
        dataDetectorTypes: this.props.dataDetectorTypes,
        onScroll: this._onScroll,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 723
        }
      }));
    }
    return React.createElement(
      TouchableWithoutFeedback,
      {
        onLayout: props.onLayout,
        onPress: this._onPress,
        rejectResponderTermination: true,
        accessible: props.accessible,
        accessibilityLabel: props.accessibilityLabel,
        accessibilityTraits: props.accessibilityTraits,
        nativeID: this.props.nativeID,
        testID: props.testID, __source: {
          fileName: _jsxFileName,
          lineNumber: 740
        }
      },
      textContainer
    );
  },

  _renderAndroid: function _renderAndroid() {
    var props = babelHelpers.extends({}, this.props);
    props.style = this.props.style;
    if (this.state.layoutHeight >= 0) {
      props.style = [props.style, { height: this.state.layoutHeight }];
    }
    props.autoCapitalize = UIManager.AndroidTextInput.Constants.AutoCapitalizationType[props.autoCapitalize || 'sentences'];

    var children = this.props.children;
    var childCount = 0;
    React.Children.forEach(children, function () {
      return ++childCount;
    });
    invariant(!(this.props.value && childCount), 'Cannot specify both value and children.');
    if (childCount > 1) {
      children = React.createElement(
        Text,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 775
          }
        },
        children
      );
    }
    if (props.selection && props.selection.end == null) {
      props.selection = { start: props.selection.start, end: props.selection.start };
    }
    var textContainer = React.createElement(AndroidTextInput, babelHelpers.extends({
      ref: this._setNativeRef
    }, props, {
      mostRecentEventCount: 0,
      onFocus: this._onFocus,
      onBlur: this._onBlur,
      onChange: this._onChange,
      onContentSizeChange: this._onContentSizeChange,
      onSelectionChange: this._onSelectionChange,
      onTextInput: this._onTextInput,
      text: this._getText(),
      children: children,
      disableFullscreenUI: this.props.disableFullscreenUI,
      textBreakStrategy: this.props.textBreakStrategy,
      onScroll: this._onScroll,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 781
      }
    }));

    return React.createElement(
      TouchableWithoutFeedback,
      {
        onLayout: this._onLayout,
        onPress: this._onPress,
        accessible: this.props.accessible,
        accessibilityLabel: this.props.accessibilityLabel,
        accessibilityComponentType: this.props.accessibilityComponentType,
        nativeID: this.props.nativeID,
        testID: this.props.testID, __source: {
          fileName: _jsxFileName,
          lineNumber: 799
        }
      },
      textContainer
    );
  },

  _onFocus: function _onFocus(event) {
    if (this.props.onFocus) {
      this.props.onFocus(event);
    }

    if (this.props.selectionState) {
      this.props.selectionState.focus();
    }
  },

  _onPress: function _onPress(event) {
    if (this.props.editable || this.props.editable === undefined) {
      this.focus();
    }
  },

  _onChange: function _onChange(event) {
    if (this._inputRef) {
      this._inputRef.setNativeProps({
        mostRecentEventCount: event.nativeEvent.eventCount
      });
    }

    var text = event.nativeEvent.text;
    this.props.onChange && this.props.onChange(event);
    this.props.onChangeText && this.props.onChangeText(text);

    if (!this._inputRef) {
      return;
    }

    this._lastNativeText = text;
    this.forceUpdate();
  },

  _onContentSizeChange: function _onContentSizeChange(event) {
    var contentHeight = event.nativeEvent.contentSize.height;
    if (this.props.autoGrow) {
      if (this.props.maxHeight) {
        contentHeight = Math.min(this.props.maxHeight, contentHeight);
      }
      this.setState({ layoutHeight: Math.max(this._layoutHeight, contentHeight) });
    }

    this.props.onContentSizeChange && this.props.onContentSizeChange(event);
  },

  _onLayout: function _onLayout(event) {
    var height = event.nativeEvent.layout.height;
    if (height) {
      this._layoutHeight = event.nativeEvent.layout.height;
    }
    this.props.onLayout && this.props.onLayout(event);
  },

  _onSelectionChange: function _onSelectionChange(event) {
    this.props.onSelectionChange && this.props.onSelectionChange(event);

    if (!this._inputRef) {
      return;
    }

    this._lastNativeSelection = event.nativeEvent.selection;

    if (this.props.selection || this.props.selectionState) {
      this.forceUpdate();
    }
  },

  componentDidUpdate: function componentDidUpdate() {
    var nativeProps = {};

    if (this._lastNativeText !== this.props.value && typeof this.props.value === 'string') {
      nativeProps.text = this.props.value;
    }

    var selection = this.props.selection;

    if (this._lastNativeSelection && selection && (this._lastNativeSelection.start !== selection.start || this._lastNativeSelection.end !== selection.end)) {
      nativeProps.selection = this.props.selection;
    }

    if (Object.keys(nativeProps).length > 0 && this._inputRef) {
      this._inputRef.setNativeProps(nativeProps);
    }

    if (this.props.selectionState && selection) {
      this.props.selectionState.update(selection.start, selection.end);
    }
  },

  _onBlur: function _onBlur(event) {
    this.blur();
    if (this.props.onBlur) {
      this.props.onBlur(event);
    }

    if (this.props.selectionState) {
      this.props.selectionState.blur();
    }
  },

  _onTextInput: function _onTextInput(event) {
    this.props.onTextInput && this.props.onTextInput(event);
  },

  _onScroll: function _onScroll(event) {
    this.props.onScroll && this.props.onScroll(event);
  }
});

var styles = StyleSheet.create({
  multilineInput: {
    paddingTop: 5
  }
});

module.exports = TextInput;
}, 300, null, "TextInput");
__d(/* DocumentSelectionState */function(global, require, module, exports) {

'use strict';

var mixInEventEmitter = require(302                ); // 302 = mixInEventEmitter

var DocumentSelectionState = function () {
  function DocumentSelectionState(anchor, focus) {
    babelHelpers.classCallCheck(this, DocumentSelectionState);

    this._anchorOffset = anchor;
    this._focusOffset = focus;
    this._hasFocus = false;
  }

  babelHelpers.createClass(DocumentSelectionState, [{
    key: 'update',
    value: function update(anchor, focus) {
      if (this._anchorOffset !== anchor || this._focusOffset !== focus) {
        this._anchorOffset = anchor;
        this._focusOffset = focus;
        this.emit('update');
      }
    }
  }, {
    key: 'constrainLength',
    value: function constrainLength(maxLength) {
      this.update(Math.min(this._anchorOffset, maxLength), Math.min(this._focusOffset, maxLength));
    }
  }, {
    key: 'focus',
    value: function focus() {
      if (!this._hasFocus) {
        this._hasFocus = true;
        this.emit('focus');
      }
    }
  }, {
    key: 'blur',
    value: function blur() {
      if (this._hasFocus) {
        this._hasFocus = false;
        this.emit('blur');
      }
    }
  }, {
    key: 'hasFocus',
    value: function hasFocus() {
      return this._hasFocus;
    }
  }, {
    key: 'isCollapsed',
    value: function isCollapsed() {
      return this._anchorOffset === this._focusOffset;
    }
  }, {
    key: 'isBackward',
    value: function isBackward() {
      return this._anchorOffset > this._focusOffset;
    }
  }, {
    key: 'getAnchorOffset',
    value: function getAnchorOffset() {
      return this._hasFocus ? this._anchorOffset : null;
    }
  }, {
    key: 'getFocusOffset',
    value: function getFocusOffset() {
      return this._hasFocus ? this._focusOffset : null;
    }
  }, {
    key: 'getStartOffset',
    value: function getStartOffset() {
      return this._hasFocus ? Math.min(this._anchorOffset, this._focusOffset) : null;
    }
  }, {
    key: 'getEndOffset',
    value: function getEndOffset() {
      return this._hasFocus ? Math.max(this._anchorOffset, this._focusOffset) : null;
    }
  }, {
    key: 'overlaps',
    value: function overlaps(start, end) {
      return this.hasFocus() && this.getStartOffset() <= end && start <= this.getEndOffset();
    }
  }]);
  return DocumentSelectionState;
}();

mixInEventEmitter(DocumentSelectionState, {
  'blur': true,
  'focus': true,
  'update': true
});

module.exports = DocumentSelectionState;
}, 301, null, "DocumentSelectionState");
__d(/* mixInEventEmitter */function(global, require, module, exports) {
'use strict';

var EventEmitter = require(81            ); // 81 = EventEmitter
var EventEmitterWithHolding = require(303                      ); // 303 = EventEmitterWithHolding
var EventHolder = require(304          ); // 304 = EventHolder

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var keyOf = require(271             ); // 271 = fbjs/lib/keyOf

var TYPES_KEY = keyOf({ __types: true });

function mixInEventEmitter(cls, types) {
  invariant(types, 'Must supply set of valid event types');

  var target = cls.prototype || cls;

  invariant(!target.__eventEmitter, 'An active emitter is already mixed in');

  var ctor = cls.constructor;
  if (ctor) {
    invariant(ctor === Object || ctor === Function, 'Mix EventEmitter into a class, not an instance');
  }

  if (target.hasOwnProperty(TYPES_KEY)) {
    babelHelpers.extends(target.__types, types);
  } else if (target.__types) {
    target.__types = babelHelpers.extends({}, target.__types, types);
  } else {
    target.__types = types;
  }
  babelHelpers.extends(target, EventEmitterMixin);
}

var EventEmitterMixin = {
  emit: function emit(eventType, a, b, c, d, e, _) {
    return this.__getEventEmitter().emit(eventType, a, b, c, d, e, _);
  },

  emitAndHold: function emitAndHold(eventType, a, b, c, d, e, _) {
    return this.__getEventEmitter().emitAndHold(eventType, a, b, c, d, e, _);
  },

  addListener: function addListener(eventType, listener, context) {
    return this.__getEventEmitter().addListener(eventType, listener, context);
  },

  once: function once(eventType, listener, context) {
    return this.__getEventEmitter().once(eventType, listener, context);
  },

  addRetroactiveListener: function addRetroactiveListener(eventType, listener, context) {
    return this.__getEventEmitter().addRetroactiveListener(eventType, listener, context);
  },

  addListenerMap: function addListenerMap(listenerMap, context) {
    return this.__getEventEmitter().addListenerMap(listenerMap, context);
  },

  addRetroactiveListenerMap: function addRetroactiveListenerMap(listenerMap, context) {
    return this.__getEventEmitter().addListenerMap(listenerMap, context);
  },

  removeAllListeners: function removeAllListeners() {
    this.__getEventEmitter().removeAllListeners();
  },

  removeCurrentListener: function removeCurrentListener() {
    this.__getEventEmitter().removeCurrentListener();
  },

  releaseHeldEventType: function releaseHeldEventType(eventType) {
    this.__getEventEmitter().releaseHeldEventType(eventType);
  },

  __getEventEmitter: function __getEventEmitter() {
    if (!this.__eventEmitter) {
      var emitter = new EventEmitter();
      if (__DEV__) {
        var EventValidator = require(305             ); // 305 = EventValidator
        emitter = EventValidator.addValidation(emitter, this.__types);
      }

      var holder = new EventHolder();
      this.__eventEmitter = new EventEmitterWithHolding(emitter, holder);
    }
    return this.__eventEmitter;
  }
};

module.exports = mixInEventEmitter;
}, 302, null, "mixInEventEmitter");
__d(/* EventEmitterWithHolding */function(global, require, module, exports) {
'use strict';

var EventEmitterWithHolding = function () {
  function EventEmitterWithHolding(emitter, holder) {
    babelHelpers.classCallCheck(this, EventEmitterWithHolding);

    this._emitter = emitter;
    this._eventHolder = holder;
    this._currentEventToken = null;
    this._emittingHeldEvents = false;
  }

  babelHelpers.createClass(EventEmitterWithHolding, [{
    key: 'addListener',
    value: function addListener(eventType, listener, context) {
      return this._emitter.addListener(eventType, listener, context);
    }
  }, {
    key: 'once',
    value: function once(eventType, listener, context) {
      return this._emitter.once(eventType, listener, context);
    }
  }, {
    key: 'addRetroactiveListener',
    value: function addRetroactiveListener(eventType, listener, context) {
      var subscription = this._emitter.addListener(eventType, listener, context);

      this._emittingHeldEvents = true;
      this._eventHolder.emitToListener(eventType, listener, context);
      this._emittingHeldEvents = false;

      return subscription;
    }
  }, {
    key: 'removeAllListeners',
    value: function removeAllListeners(eventType) {
      this._emitter.removeAllListeners(eventType);
    }
  }, {
    key: 'removeCurrentListener',
    value: function removeCurrentListener() {
      this._emitter.removeCurrentListener();
    }
  }, {
    key: 'listeners',
    value: function listeners(eventType) {
      return this._emitter.listeners(eventType);
    }
  }, {
    key: 'emit',
    value: function emit(eventType) {
      var _emitter;

      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      (_emitter = this._emitter).emit.apply(_emitter, [eventType].concat(babelHelpers.toConsumableArray(args)));
    }
  }, {
    key: 'emitAndHold',
    value: function emitAndHold(eventType) {
      var _eventHolder, _emitter2;

      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      this._currentEventToken = (_eventHolder = this._eventHolder).holdEvent.apply(_eventHolder, [eventType].concat(babelHelpers.toConsumableArray(args)));
      (_emitter2 = this._emitter).emit.apply(_emitter2, [eventType].concat(babelHelpers.toConsumableArray(args)));
      this._currentEventToken = null;
    }
  }, {
    key: 'releaseCurrentEvent',
    value: function releaseCurrentEvent() {
      if (this._currentEventToken) {
        this._eventHolder.releaseEvent(this._currentEventToken);
      } else if (this._emittingHeldEvents) {
        this._eventHolder.releaseCurrentEvent();
      }
    }
  }, {
    key: 'releaseHeldEventType',
    value: function releaseHeldEventType(eventType) {
      this._eventHolder.releaseEventType(eventType);
    }
  }]);
  return EventEmitterWithHolding;
}();

module.exports = EventEmitterWithHolding;
}, 303, null, "EventEmitterWithHolding");
__d(/* EventHolder */function(global, require, module, exports) {
'use strict';

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var EventHolder = function () {
  function EventHolder() {
    babelHelpers.classCallCheck(this, EventHolder);

    this._heldEvents = {};
    this._currentEventKey = null;
  }

  babelHelpers.createClass(EventHolder, [{
    key: 'holdEvent',
    value: function holdEvent(eventType) {
      this._heldEvents[eventType] = this._heldEvents[eventType] || [];
      var eventsOfType = this._heldEvents[eventType];
      var key = {
        eventType: eventType,
        index: eventsOfType.length
      };

      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      eventsOfType.push(args);
      return key;
    }
  }, {
    key: 'emitToListener',
    value: function emitToListener(eventType, listener, context) {
      var _this = this;

      var eventsOfType = this._heldEvents[eventType];
      if (!eventsOfType) {
        return;
      }
      var origEventKey = this._currentEventKey;
      eventsOfType.forEach(function (eventHeld, index) {
        if (!eventHeld) {
          return;
        }
        _this._currentEventKey = {
          eventType: eventType,
          index: index
        };
        listener.apply(context, eventHeld);
      });
      this._currentEventKey = origEventKey;
    }
  }, {
    key: 'releaseCurrentEvent',
    value: function releaseCurrentEvent() {
      invariant(this._currentEventKey !== null, 'Not in an emitting cycle; there is no current event');
      this._currentEventKey && this.releaseEvent(this._currentEventKey);
    }
  }, {
    key: 'releaseEvent',
    value: function releaseEvent(token) {
      delete this._heldEvents[token.eventType][token.index];
    }
  }, {
    key: 'releaseEventType',
    value: function releaseEventType(type) {
      this._heldEvents[type] = [];
    }
  }]);
  return EventHolder;
}();

module.exports = EventHolder;
}, 304, null, "EventHolder");
__d(/* EventValidator */function(global, require, module, exports) {
'use strict';

var EventValidator = {
  addValidation: function addValidation(emitter, types) {
    var eventTypes = Object.keys(types);
    var emitterWithValidation = Object.create(emitter);

    babelHelpers.extends(emitterWithValidation, {
      emit: function emit(type, a, b, c, d, e, _) {
        assertAllowsEventType(type, eventTypes);
        return emitter.emit.call(this, type, a, b, c, d, e, _);
      }
    });

    return emitterWithValidation;
  }
};

function assertAllowsEventType(type, allowedTypes) {
  if (allowedTypes.indexOf(type) === -1) {
    throw new TypeError(errorMessageFor(type, allowedTypes));
  }
}

function errorMessageFor(type, allowedTypes) {
  var message = 'Unknown event type "' + type + '". ';
  if (__DEV__) {
    message += recommendationFor(type, allowedTypes);
  }
  message += 'Known event types: ' + allowedTypes.join(', ') + '.';
  return message;
}

if (__DEV__) {
  var recommendationFor = function recommendationFor(type, allowedTypes) {
    var closestTypeRecommendation = closestTypeFor(type, allowedTypes);
    if (isCloseEnough(closestTypeRecommendation, type)) {
      return 'Did you mean "' + closestTypeRecommendation.type + '"? ';
    } else {
      return '';
    }
  };

  var closestTypeFor = function closestTypeFor(type, allowedTypes) {
    var typeRecommendations = allowedTypes.map(typeRecommendationFor.bind(this, type));
    return typeRecommendations.sort(recommendationSort)[0];
  };

  var typeRecommendationFor = function typeRecommendationFor(type, recomendedType) {
    return {
      type: recomendedType,
      distance: damerauLevenshteinDistance(type, recomendedType)
    };
  };

  var recommendationSort = function recommendationSort(recommendationA, recommendationB) {
    if (recommendationA.distance < recommendationB.distance) {
      return -1;
    } else if (recommendationA.distance > recommendationB.distance) {
      return 1;
    } else {
      return 0;
    }
  };

  var isCloseEnough = function isCloseEnough(closestType, actualType) {
    return closestType.distance / actualType.length < 0.334;
  };

  var damerauLevenshteinDistance = function damerauLevenshteinDistance(a, b) {
    var i = void 0,
        j = void 0;
    var d = [];

    for (i = 0; i <= a.length; i++) {
      d[i] = [i];
    }

    for (j = 1; j <= b.length; j++) {
      d[0][j] = j;
    }

    for (i = 1; i <= a.length; i++) {
      for (j = 1; j <= b.length; j++) {
        var cost = a.charAt(i - 1) === b.charAt(j - 1) ? 0 : 1;

        d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);

        if (i > 1 && j > 1 && a.charAt(i - 1) === b.charAt(j - 2) && a.charAt(i - 2) === b.charAt(j - 1)) {
          d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);
        }
      }
    }

    return d[a.length][b.length];
  };
}

module.exports = EventValidator;
}, 305, null, "EventValidator");
__d(/* ToolbarAndroid */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/ToolbarAndroid/ToolbarAndroid.android.js';
var Image = require(221    ); // 221 = Image
var NativeMethodsMixin = require(124                 ); // 124 = NativeMethodsMixin
var React = require(129    ); // 129 = React
var PropTypes = require(126         ); // 126 = prop-types
var ReactNativeViewAttributes = require(170                        ); // 170 = ReactNativeViewAttributes
var UIManager = require(47         ); // 47 = UIManager
var ViewPropTypes = require(130            ); // 130 = ViewPropTypes
var ColorPropType = require(122            ); // 122 = ColorPropType

var createReactClass = require(171                 ); // 171 = create-react-class
var requireNativeComponent = require(144                     ); // 144 = requireNativeComponent
var resolveAssetSource = require(159                 ); // 159 = resolveAssetSource

var optionalImageSource = PropTypes.oneOfType([Image.propTypes.source, PropTypes.oneOf([])]);

var ToolbarAndroid = createReactClass({
  displayName: 'ToolbarAndroid',
  mixins: [NativeMethodsMixin],

  propTypes: babelHelpers.extends({}, ViewPropTypes, {
    actions: PropTypes.arrayOf(PropTypes.shape({
      title: PropTypes.string.isRequired,
      icon: optionalImageSource,
      show: PropTypes.oneOf(['always', 'ifRoom', 'never']),
      showWithText: PropTypes.bool
    })),

    logo: optionalImageSource,

    navIcon: optionalImageSource,

    onActionSelected: PropTypes.func,

    onIconClicked: PropTypes.func,

    overflowIcon: optionalImageSource,

    subtitle: PropTypes.string,

    subtitleColor: ColorPropType,

    title: PropTypes.string,

    titleColor: ColorPropType,

    contentInsetStart: PropTypes.number,

    contentInsetEnd: PropTypes.number,

    rtl: PropTypes.bool,

    testID: PropTypes.string
  }),

  render: function render() {
    var nativeProps = babelHelpers.extends({}, this.props);
    if (this.props.logo) {
      nativeProps.logo = resolveAssetSource(this.props.logo);
    }
    if (this.props.navIcon) {
      nativeProps.navIcon = resolveAssetSource(this.props.navIcon);
    }
    if (this.props.overflowIcon) {
      nativeProps.overflowIcon = resolveAssetSource(this.props.overflowIcon);
    }
    if (this.props.actions) {
      var nativeActions = [];
      for (var i = 0; i < this.props.actions.length; i++) {
        var action = babelHelpers.extends({}, this.props.actions[i]);
        if (action.icon) {
          action.icon = resolveAssetSource(action.icon);
        }
        if (action.show) {
          action.show = UIManager.ToolbarAndroid.Constants.ShowAsAction[action.show];
        }
        nativeActions.push(action);
      }
      nativeProps.nativeActions = nativeActions;
    }

    return React.createElement(NativeToolbar, babelHelpers.extends({ onSelect: this._onSelect }, nativeProps, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 196
      }
    }));
  },

  _onSelect: function _onSelect(event) {
    var position = event.nativeEvent.position;
    if (position === -1) {
      this.props.onIconClicked && this.props.onIconClicked();
    } else {
      this.props.onActionSelected && this.props.onActionSelected(position);
    }
  }
});

var NativeToolbar = requireNativeComponent('ToolbarAndroid', ToolbarAndroid, {
  nativeOnly: {
    nativeActions: true
  }
});

module.exports = ToolbarAndroid;
}, 306, null, "ToolbarAndroid");
__d(/* ViewPagerAndroid */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/ViewPager/ViewPagerAndroid.android.js';
var React = require(129    ); // 129 = React
var PropTypes = require(126         ); // 126 = prop-types
var ReactNative = require(21           ); // 21 = ReactNative
var UIManager = require(47         ); // 47 = UIManager
var ViewPropTypes = require(130            ); // 130 = ViewPropTypes

var dismissKeyboard = require(228              ); // 228 = dismissKeyboard
var requireNativeComponent = require(144                     ); // 144 = requireNativeComponent

var VIEWPAGER_REF = 'viewPager';

var ViewPagerAndroid = function (_React$Component) {
  babelHelpers.inherits(ViewPagerAndroid, _React$Component);

  function ViewPagerAndroid() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, ViewPagerAndroid);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = ViewPagerAndroid.__proto__ || Object.getPrototypeOf(ViewPagerAndroid)).call.apply(_ref, [this].concat(args))), _this), _this.getInnerViewNode = function () {
      return _this.refs[VIEWPAGER_REF].getInnerViewNode();
    }, _this._childrenWithOverridenStyle = function () {
      return React.Children.map(_this.props.children, function (child) {
        if (!child) {
          return null;
        }
        var newProps = babelHelpers.extends({}, child.props, {
          style: [child.props.style, {
            position: 'absolute',
            left: 0,
            top: 0,
            right: 0,
            bottom: 0,
            width: undefined,
            height: undefined
          }],
          collapsable: false
        });
        if (child.type && child.type.displayName && child.type.displayName !== 'RCTView' && child.type.displayName !== 'View') {
          console.warn('Each ViewPager child must be a <View>. Was ' + child.type.displayName);
        }
        return React.createElement(child.type, newProps);
      });
    }, _this._onPageScroll = function (e) {
      if (_this.props.onPageScroll) {
        _this.props.onPageScroll(e);
      }
      if (_this.props.keyboardDismissMode === 'on-drag') {
        dismissKeyboard();
      }
    }, _this._onPageScrollStateChanged = function (e) {
      if (_this.props.onPageScrollStateChanged) {
        _this.props.onPageScrollStateChanged(e.nativeEvent.pageScrollState);
      }
    }, _this._onPageSelected = function (e) {
      if (_this.props.onPageSelected) {
        _this.props.onPageSelected(e);
      }
    }, _this.setPage = function (selectedPage) {
      UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(_this), UIManager.AndroidViewPager.Commands.setPage, [selectedPage]);
    }, _this.setPageWithoutAnimation = function (selectedPage) {
      UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(_this), UIManager.AndroidViewPager.Commands.setPageWithoutAnimation, [selectedPage]);
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(ViewPagerAndroid, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.props.initialPage != null) {
        this.setPageWithoutAnimation(this.props.initialPage);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(NativeAndroidViewPager, babelHelpers.extends({}, this.props, {
        ref: VIEWPAGER_REF,
        style: this.props.style,
        onPageScroll: this._onPageScroll,
        onPageScrollStateChanged: this._onPageScrollStateChanged,
        onPageSelected: this._onPageSelected,
        children: this._childrenWithOverridenStyle(),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 238
        }
      }));
    }
  }]);
  return ViewPagerAndroid;
}(React.Component);

ViewPagerAndroid.propTypes = babelHelpers.extends({}, ViewPropTypes, {
  initialPage: PropTypes.number,

  onPageScroll: PropTypes.func,

  onPageScrollStateChanged: PropTypes.func,

  onPageSelected: PropTypes.func,

  pageMargin: PropTypes.number,

  keyboardDismissMode: PropTypes.oneOf(['none', 'on-drag']),

  scrollEnabled: PropTypes.bool,

  peekEnabled: PropTypes.bool
});


var NativeAndroidViewPager = requireNativeComponent('AndroidViewPager', ViewPagerAndroid);

module.exports = ViewPagerAndroid;
}, 307, null, "ViewPagerAndroid");
__d(/* WebView */function(global, require, module, exports) {
'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/Components/WebView/WebView.android.js';
var EdgeInsetsPropType = require(131                 ); // 131 = EdgeInsetsPropType
var ActivityIndicator = require(121                ); // 121 = ActivityIndicator
var React = require(129    ); // 129 = React
var PropTypes = require(126         ); // 126 = prop-types
var ReactNative = require(21           ); // 21 = ReactNative
var StyleSheet = require(167         ); // 167 = StyleSheet
var UIManager = require(47         ); // 47 = UIManager
var View = require(169   ); // 169 = View
var ViewPropTypes = require(130            ); // 130 = ViewPropTypes

var deprecatedPropType = require(142                 ); // 142 = deprecatedPropType
var keyMirror = require(149                 ); // 149 = fbjs/lib/keyMirror
var requireNativeComponent = require(144                     ); // 144 = requireNativeComponent
var resolveAssetSource = require(159                 ); // 159 = resolveAssetSource

var RCT_WEBVIEW_REF = 'webview';

var WebViewState = keyMirror({
  IDLE: null,
  LOADING: null,
  ERROR: null
});

var defaultRenderLoading = function defaultRenderLoading() {
  return React.createElement(
    View,
    { style: styles.loadingView, __source: {
        fileName: _jsxFileName,
        lineNumber: 37
      }
    },
    React.createElement(ActivityIndicator, {
      style: styles.loadingProgressBar,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 38
      }
    })
  );
};

var WebView = function (_React$Component) {
  babelHelpers.inherits(WebView, _React$Component);

  function WebView() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, WebView);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = WebView.__proto__ || Object.getPrototypeOf(WebView)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      viewState: WebViewState.IDLE,
      lastErrorEvent: null,
      startInLoadingState: true
    }, _this.goForward = function () {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.goForward, null);
    }, _this.goBack = function () {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.goBack, null);
    }, _this.reload = function () {
      _this.setState({
        viewState: WebViewState.LOADING
      });
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.reload, null);
    }, _this.stopLoading = function () {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.stopLoading, null);
    }, _this.postMessage = function (data) {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.postMessage, [String(data)]);
    }, _this.injectJavaScript = function (data) {
      UIManager.dispatchViewManagerCommand(_this.getWebViewHandle(), UIManager.RCTWebView.Commands.injectJavaScript, [data]);
    }, _this.updateNavigationState = function (event) {
      if (_this.props.onNavigationStateChange) {
        _this.props.onNavigationStateChange(event.nativeEvent);
      }
    }, _this.getWebViewHandle = function () {
      return ReactNative.findNodeHandle(_this.refs[RCT_WEBVIEW_REF]);
    }, _this.onLoadingStart = function (event) {
      var onLoadStart = _this.props.onLoadStart;
      onLoadStart && onLoadStart(event);
      _this.updateNavigationState(event);
    }, _this.onLoadingError = function (event) {
      event.persist();var _this$props = _this.props,
          onError = _this$props.onError,
          onLoadEnd = _this$props.onLoadEnd;

      onError && onError(event);
      onLoadEnd && onLoadEnd(event);
      console.warn('Encountered an error loading page', event.nativeEvent);

      _this.setState({
        lastErrorEvent: event.nativeEvent,
        viewState: WebViewState.ERROR
      });
    }, _this.onLoadingFinish = function (event) {
      var _this$props2 = _this.props,
          onLoad = _this$props2.onLoad,
          onLoadEnd = _this$props2.onLoadEnd;

      onLoad && onLoad(event);
      onLoadEnd && onLoadEnd(event);
      _this.setState({
        viewState: WebViewState.IDLE
      });
      _this.updateNavigationState(event);
    }, _this.onMessage = function (event) {
      var onMessage = _this.props.onMessage;

      onMessage && onMessage(event);
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(WebView, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      if (this.props.startInLoadingState) {
        this.setState({ viewState: WebViewState.LOADING });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var otherView = null;

      if (this.state.viewState === WebViewState.LOADING) {
        otherView = (this.props.renderLoading || defaultRenderLoading)();
      } else if (this.state.viewState === WebViewState.ERROR) {
        var errorEvent = this.state.lastErrorEvent;
        otherView = this.props.renderError && this.props.renderError(errorEvent.domain, errorEvent.code, errorEvent.description);
      } else if (this.state.viewState !== WebViewState.IDLE) {
        console.error('RCTWebView invalid state encountered: ' + this.state.loading);
      }

      var webViewStyles = [styles.container, this.props.style];
      if (this.state.viewState === WebViewState.LOADING || this.state.viewState === WebViewState.ERROR) {
        webViewStyles.push(styles.hidden);
      }

      var source = this.props.source || {};
      if (this.props.html) {
        source.html = this.props.html;
      } else if (this.props.url) {
        source.uri = this.props.url;
      }

      if (source.method === 'POST' && source.headers) {
        console.warn('WebView: `source.headers` is not supported when using POST.');
      } else if (source.method === 'GET' && source.body) {
        console.warn('WebView: `source.body` is not supported when using GET.');
      }

      var nativeConfig = this.props.nativeConfig || {};

      var NativeWebView = nativeConfig.component || RCTWebView;

      var webView = React.createElement(NativeWebView, babelHelpers.extends({
        ref: RCT_WEBVIEW_REF,
        key: 'webViewKey',
        style: webViewStyles,
        source: resolveAssetSource(source),
        scalesPageToFit: this.props.scalesPageToFit,
        injectedJavaScript: this.props.injectedJavaScript,
        userAgent: this.props.userAgent,
        javaScriptEnabled: this.props.javaScriptEnabled,
        thirdPartyCookiesEnabled: this.props.thirdPartyCookiesEnabled,
        domStorageEnabled: this.props.domStorageEnabled,
        messagingEnabled: typeof this.props.onMessage === 'function',
        onMessage: this.onMessage,
        contentInset: this.props.contentInset,
        automaticallyAdjustContentInsets: this.props.automaticallyAdjustContentInsets,
        onContentSizeChange: this.props.onContentSizeChange,
        onLoadingStart: this.onLoadingStart,
        onLoadingFinish: this.onLoadingFinish,
        onLoadingError: this.onLoadingError,
        testID: this.props.testID,
        mediaPlaybackRequiresUserAction: this.props.mediaPlaybackRequiresUserAction,
        allowUniversalAccessFromFileURLs: this.props.allowUniversalAccessFromFileURLs,
        mixedContentMode: this.props.mixedContentMode,
        saveFormDataDisabled: this.props.saveFormDataDisabled,
        urlPrefixesForDefaultIntent: this.props.urlPrefixesForDefaultIntent
      }, nativeConfig.props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 296
        }
      }));

      return React.createElement(
        View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 325
          }
        },
        webView,
        otherView
      );
    }
  }], [{
    key: 'extraNativeComponentConfig',
    get: function get() {
      return {
        nativeOnly: {
          messagingEnabled: PropTypes.bool
        }
      };
    }
  }]);
  return WebView;
}(React.Component);

WebView.propTypes = babelHelpers.extends({}, ViewPropTypes, {
  renderError: PropTypes.func,
  renderLoading: PropTypes.func,
  onLoad: PropTypes.func,
  onLoadEnd: PropTypes.func,
  onLoadStart: PropTypes.func,
  onError: PropTypes.func,
  automaticallyAdjustContentInsets: PropTypes.bool,
  contentInset: EdgeInsetsPropType,
  onNavigationStateChange: PropTypes.func,
  onMessage: PropTypes.func,
  onContentSizeChange: PropTypes.func,
  startInLoadingState: PropTypes.bool,
  style: ViewPropTypes.style,

  html: deprecatedPropType(PropTypes.string, 'Use the `source` prop instead.'),

  url: deprecatedPropType(PropTypes.string, 'Use the `source` prop instead.'),

  source: PropTypes.oneOfType([PropTypes.shape({
    uri: PropTypes.string,

    method: PropTypes.oneOf(['GET', 'POST']),

    headers: PropTypes.object,

    body: PropTypes.string
  }), PropTypes.shape({
    html: PropTypes.string,

    baseUrl: PropTypes.string
  }), PropTypes.number]),

  javaScriptEnabled: PropTypes.bool,

  thirdPartyCookiesEnabled: PropTypes.bool,

  domStorageEnabled: PropTypes.bool,

  injectedJavaScript: PropTypes.string,

  scalesPageToFit: PropTypes.bool,

  userAgent: PropTypes.string,

  testID: PropTypes.string,

  mediaPlaybackRequiresUserAction: PropTypes.bool,

  allowUniversalAccessFromFileURLs: PropTypes.bool,

  injectJavaScript: PropTypes.func,

  mixedContentMode: PropTypes.oneOf(['never', 'always', 'compatibility']),

  saveFormDataDisabled: PropTypes.bool,

  nativeConfig: PropTypes.shape({
    component: PropTypes.any,

    props: PropTypes.object,

    viewManager: PropTypes.object
  }),

  urlPrefixesForDefaultIntent: PropTypes.arrayOf(PropTypes.string)
});
WebView.defaultProps = {
  javaScriptEnabled: true,
  thirdPartyCookiesEnabled: true,
  scalesPageToFit: true,
  saveFormDataDisabled: false
};


var RCTWebView = requireNativeComponent('RCTWebView', WebView, WebView.extraNativeComponentConfig);

var styles = StyleSheet.create({
  container: {
    flex: 1
  },
  hidden: {
    height: 0,
    flex: 0 },
  loadingView: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center'
  },
  loadingProgressBar: {
    height: 20
  }
});

module.exports = WebView;
}, 308, null, "WebView");
__d(/* ActionSheetIOS */function(global, require, module, exports) {
'use strict';

var RCTActionSheetManager = require(15             ).ActionSheetManager; // 15 = NativeModules

var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var processColor = require(151           ); // 151 = processColor

var ActionSheetIOS = {
  showActionSheetWithOptions: function showActionSheetWithOptions(options, callback) {
    invariant(typeof options === 'object' && options !== null, 'Options must be a valid object');
    invariant(typeof callback === 'function', 'Must provide a valid callback');
    RCTActionSheetManager.showActionSheetWithOptions(babelHelpers.extends({}, options, { tintColor: processColor(options.tintColor) }), callback);
  },
  showShareActionSheetWithOptions: function showShareActionSheetWithOptions(options, failureCallback, successCallback) {
    invariant(typeof options === 'object' && options !== null, 'Options must be a valid object');
    invariant(typeof failureCallback === 'function', 'Must provide a valid failureCallback');
    invariant(typeof successCallback === 'function', 'Must provide a valid successCallback');
    RCTActionSheetManager.showShareActionSheetWithOptions(babelHelpers.extends({}, options, { tintColor: processColor(options.tintColor) }), failureCallback, successCallback);
  }
};

module.exports = ActionSheetIOS;
}, 309, null, "ActionSheetIOS");
__d(/* AppRegistry */function(global, require, module, exports) {
'use strict';

var BatchedBridge = require(16             ); // 16 = BatchedBridge
var BugReporting = require(311           ); // 311 = BugReporting
var NativeModules = require(15             ); // 15 = NativeModules
var ReactNative = require(21           ); // 21 = ReactNative
var SceneTracker = require(313           ); // 313 = SceneTracker

var infoLog = require(108      ); // 108 = infoLog
var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var renderApplication = require(314                ); // 314 = renderApplication

var runnables = {};
var runCount = 1;
var sections = {};
var tasks = new Map();
var componentProviderInstrumentationHook = function componentProviderInstrumentationHook(component) {
  return component();
};

var wrapperComponentProvider = void 0;

var AppRegistry = {
  setWrapperComponentProvider: function setWrapperComponentProvider(provider) {
    wrapperComponentProvider = provider;
  },
  registerConfig: function registerConfig(config) {
    config.forEach(function (appConfig) {
      if (appConfig.run) {
        AppRegistry.registerRunnable(appConfig.appKey, appConfig.run);
      } else {
        invariant(appConfig.component != null, 'AppRegistry.registerConfig(...): Every config is expected to set ' + 'either `run` or `component`, but `%s` has neither.', appConfig.appKey);
        AppRegistry.registerComponent(appConfig.appKey, appConfig.component, appConfig.section);
      }
    });
  },
  registerComponent: function registerComponent(appKey, componentProvider, section) {
    runnables[appKey] = {
      componentProvider: componentProvider,
      run: function run(appParameters) {
        return renderApplication(componentProviderInstrumentationHook(componentProvider), appParameters.initialProps, appParameters.rootTag, wrapperComponentProvider && wrapperComponentProvider(appParameters));
      }
    };
    if (section) {
      sections[appKey] = runnables[appKey];
    }
    return appKey;
  },
  registerRunnable: function registerRunnable(appKey, run) {
    runnables[appKey] = { run: run };
    return appKey;
  },
  registerSection: function registerSection(appKey, component) {
    AppRegistry.registerComponent(appKey, component, true);
  },
  getAppKeys: function getAppKeys() {
    return Object.keys(runnables);
  },
  getSectionKeys: function getSectionKeys() {
    return Object.keys(sections);
  },
  getSections: function getSections() {
    return babelHelpers.extends({}, sections);
  },
  getRunnable: function getRunnable(appKey) {
    return runnables[appKey];
  },
  getRegistry: function getRegistry() {
    return {
      sections: AppRegistry.getSectionKeys(),
      runnables: babelHelpers.extends({}, runnables)
    };
  },
  setComponentProviderInstrumentationHook: function setComponentProviderInstrumentationHook(hook) {
    componentProviderInstrumentationHook = hook;
  },
  runApplication: function runApplication(appKey, appParameters) {
    var msg = 'Running application "' + appKey + '" with appParams: ' + JSON.stringify(appParameters) + '. ' + '__DEV__ === ' + String(__DEV__) + ', development-level warning are ' + (__DEV__ ? 'ON' : 'OFF') + ', performance optimizations are ' + (__DEV__ ? 'OFF' : 'ON');
    infoLog(msg);
    BugReporting.addSource('AppRegistry.runApplication' + runCount++, function () {
      return msg;
    });
    invariant(runnables[appKey] && runnables[appKey].run, 'Application ' + appKey + ' has not been registered.\n\n' + "Hint: This error often happens when you're running the packager " + '(local dev server) from a wrong folder. For example you have ' + 'multiple apps and the packager is still running for the app you ' + 'were working on before.\nIf this is the case, simply kill the old ' + 'packager instance (e.g. close the packager terminal window) ' + 'and start the packager in the correct app folder (e.g. cd into app ' + "folder and run 'npm start').\n\n" + 'This error can also happen due to a require() error during ' + 'initialization or failure to call AppRegistry.registerComponent.\n\n');

    SceneTracker.setActiveScene({ name: appKey });
    runnables[appKey].run(appParameters);
  },
  unmountApplicationComponentAtRootTag: function unmountApplicationComponentAtRootTag(rootTag) {
    ReactNative.unmountComponentAtNodeAndRemoveContainer(rootTag);
  },
  registerHeadlessTask: function registerHeadlessTask(taskKey, task) {
    if (tasks.has(taskKey)) {
      console.warn('registerHeadlessTask called multiple times for same key \'' + taskKey + '\'');
    }
    tasks.set(taskKey, task);
  },
  startHeadlessTask: function startHeadlessTask(taskId, taskKey, data) {
    var taskProvider = tasks.get(taskKey);
    if (!taskProvider) {
      throw new Error('No task registered for key ' + taskKey);
    }
    taskProvider()(data).then(function () {
      return NativeModules.HeadlessJsTaskSupport.notifyTaskFinished(taskId);
    }).catch(function (reason) {
      console.error(reason);
      NativeModules.HeadlessJsTaskSupport.notifyTaskFinished(taskId);
    });
  }
};

BatchedBridge.registerCallableModule('AppRegistry', AppRegistry);

module.exports = AppRegistry;
}, 310, null, "AppRegistry");
__d(/* BugReporting */function(global, require, module, exports) {
'use strict';

var RCTDeviceEventEmitter = require(84                     ); // 84 = RCTDeviceEventEmitter
var Map = require(54   ); // 54 = Map
var infoLog = require(108      ); // 108 = infoLog

function defaultExtras() {
  BugReporting.addFileSource('react_hierarchy.txt', function () {
    return require(312            )(); // 312 = dumpReactTree
  });
}

var BugReporting = function () {
  function BugReporting() {
    babelHelpers.classCallCheck(this, BugReporting);
  }

  babelHelpers.createClass(BugReporting, null, [{
    key: '_maybeInit',
    value: function _maybeInit() {
      if (!BugReporting._subscription) {
        BugReporting._subscription = RCTDeviceEventEmitter.addListener('collectBugExtraData', BugReporting.collectExtraData, null);
        defaultExtras();
      }
    }
  }, {
    key: 'addSource',
    value: function addSource(key, callback) {
      return this._addSource(key, callback, BugReporting._extraSources);
    }
  }, {
    key: 'addFileSource',
    value: function addFileSource(key, callback) {
      return this._addSource(key, callback, BugReporting._fileSources);
    }
  }, {
    key: '_addSource',
    value: function _addSource(key, callback, source) {
      BugReporting._maybeInit();
      if (source.has(key)) {
        console.warn('BugReporting.add* called multiple times for same key \'' + key + '\'');
      }
      source.set(key, callback);
      return { remove: function remove() {
          source.delete(key);
        } };
    }
  }, {
    key: 'collectExtraData',
    value: function collectExtraData() {
      var extraData = {};
      for (var _iterator = BugReporting._extraSources, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
        var _ref3;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref3 = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref3 = _i.value;
        }

        var _ref = _ref3;

        var _ref2 = babelHelpers.slicedToArray(_ref, 2);

        var _key = _ref2[0];
        var callback = _ref2[1];

        extraData[_key] = callback();
      }
      var fileData = {};
      for (var _iterator2 = BugReporting._fileSources, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
        var _ref6;

        if (_isArray2) {
          if (_i2 >= _iterator2.length) break;
          _ref6 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done) break;
          _ref6 = _i2.value;
        }

        var _ref4 = _ref6;

        var _ref5 = babelHelpers.slicedToArray(_ref4, 2);

        var _key2 = _ref5[0];
        var _callback = _ref5[1];

        fileData[_key2] = _callback();
      }
      infoLog('BugReporting extraData:', extraData);
      var BugReportingNativeModule = require(15             ).BugReporting; // 15 = NativeModules
      BugReportingNativeModule && BugReportingNativeModule.setExtraData && BugReportingNativeModule.setExtraData(extraData, fileData);

      return { extras: extraData, files: fileData };
    }
  }]);
  return BugReporting;
}();

BugReporting._extraSources = new Map();
BugReporting._fileSources = new Map();
BugReporting._subscription = null;


module.exports = BugReporting;
}, 311, null, "BugReporting");
__d(/* dumpReactTree */function(global, require, module, exports) {
'use strict';

function dumpReactTree() {
  try {
    return getReactTree();
  } catch (e) {
    return 'Failed to dump react tree: ' + e;
  }
}

function getReactTree() {
  return 'React tree dumps have been temporarily disabled while React is ' + 'upgraded to Fiber.';
}

module.exports = dumpReactTree;
}, 312, null, "dumpReactTree");
__d(/* SceneTracker */function(global, require, module, exports) {

'use strict';

var _listeners = [];

var _activeScene = { name: 'default' };

var SceneTracker = {
  setActiveScene: function setActiveScene(scene) {
    _activeScene = scene;
    _listeners.forEach(function (listener) {
      return listener(_activeScene);
    });
  },
  getActiveScene: function getActiveScene() {
    return _activeScene;
  },
  addActiveSceneChangedListener: function addActiveSceneChangedListener(callback) {
    _listeners.push(callback);
    return {
      remove: function remove() {
        _listeners = _listeners.filter(function (listener) {
          return callback !== listener;
        });
      }
    };
  }
};

module.exports = SceneTracker;
}, 313, null, "SceneTracker");
__d(/* renderApplication */function(global, require, module, exports) {

'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native/Libraries/ReactNative/renderApplication.js';
var AppContainer = require(260           ); // 260 = AppContainer
var React = require(129    ); // 129 = React
var ReactNative = require(21           ); // 21 = ReactNative

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

require(315          ); // 315 = BackHandler

function renderApplication(RootComponent, initialProps, rootTag, WrapperComponent) {
  invariant(rootTag, 'Expect to have a valid rootTag, instead got ', rootTag);

  ReactNative.render(React.createElement(
    AppContainer,
    { rootTag: rootTag, WrapperComponent: WrapperComponent, __source: {
        fileName: _jsxFileName,
        lineNumber: 34
      }
    },
    React.createElement(RootComponent, babelHelpers.extends({}, initialProps, { rootTag: rootTag, __source: {
        fileName: _jsxFileName,
        lineNumber: 35
      }
    }))
  ), rootTag);
}

module.exports = renderApplication;
}, 314, null, "renderApplication");
__d(/* BackHandler */function(global, require, module, exports) {

'use strict';

var DeviceEventManager = require(15             ).DeviceEventManager; // 15 = NativeModules
var RCTDeviceEventEmitter = require(84                     ); // 84 = RCTDeviceEventEmitter

var DEVICE_BACK_EVENT = 'hardwareBackPress';

var _backPressSubscriptions = new Set();

RCTDeviceEventEmitter.addListener(DEVICE_BACK_EVENT, function () {
  var backPressSubscriptions = new Set(_backPressSubscriptions);
  var invokeDefault = true;
  var subscriptions = [].concat(babelHelpers.toConsumableArray(backPressSubscriptions)).reverse();
  for (var i = 0; i < subscriptions.length; ++i) {
    if (subscriptions[i]()) {
      invokeDefault = false;
      break;
    }
  }

  if (invokeDefault) {
    BackHandler.exitApp();
  }
});

var BackHandler = {

  exitApp: function exitApp() {
    DeviceEventManager.invokeDefaultBackPressHandler();
  },

  addEventListener: function addEventListener(eventName, handler) {
    _backPressSubscriptions.add(handler);
    return {
      remove: function remove() {
        return BackHandler.removeEventListener(eventName, handler);
      }
    };
  },

  removeEventListener: function removeEventListener(eventName, handler) {
    _backPressSubscriptions.delete(handler);
  }

};

module.exports = BackHandler;
}, 315, null, "BackHandler");
__d(/* AsyncStorage */function(global, require, module, exports) {
'use strict';

var NativeModules = require(15             ); // 15 = NativeModules

var RCTAsyncStorage = NativeModules.AsyncRocksDBStorage || NativeModules.AsyncSQLiteDBStorage || NativeModules.AsyncLocalStorage;

var AsyncStorage = {
  _getRequests: [],
  _getKeys: [],
  _immediate: null,

  getItem: function getItem(key, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiGet([key], function (errors, result) {
        var value = result && result[0] && result[0][1] ? result[0][1] : null;
        var errs = convertErrors(errors);
        callback && callback(errs && errs[0], value);
        if (errs) {
          reject(errs[0]);
        } else {
          resolve(value);
        }
      });
    });
  },

  setItem: function setItem(key, value, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiSet([[key, value]], function (errors) {
        var errs = convertErrors(errors);
        callback && callback(errs && errs[0]);
        if (errs) {
          reject(errs[0]);
        } else {
          resolve(null);
        }
      });
    });
  },

  removeItem: function removeItem(key, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiRemove([key], function (errors) {
        var errs = convertErrors(errors);
        callback && callback(errs && errs[0]);
        if (errs) {
          reject(errs[0]);
        } else {
          resolve(null);
        }
      });
    });
  },

  mergeItem: function mergeItem(key, value, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiMerge([[key, value]], function (errors) {
        var errs = convertErrors(errors);
        callback && callback(errs && errs[0]);
        if (errs) {
          reject(errs[0]);
        } else {
          resolve(null);
        }
      });
    });
  },

  clear: function clear(callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.clear(function (error) {
        callback && callback(convertError(error));
        if (error && convertError(error)) {
          reject(convertError(error));
        } else {
          resolve(null);
        }
      });
    });
  },

  getAllKeys: function getAllKeys(callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.getAllKeys(function (error, keys) {
        callback && callback(convertError(error), keys);
        if (error) {
          reject(convertError(error));
        } else {
          resolve(keys);
        }
      });
    });
  },

  flushGetRequests: function flushGetRequests() {
    var getRequests = this._getRequests;
    var getKeys = this._getKeys;

    this._getRequests = [];
    this._getKeys = [];

    RCTAsyncStorage.multiGet(getKeys, function (errors, result) {
      var map = {};
      result && result.forEach(function (_ref) {
        var _ref2 = babelHelpers.slicedToArray(_ref, 2),
            key = _ref2[0],
            value = _ref2[1];

        map[key] = value;return value;
      });
      var reqLength = getRequests.length;
      for (var i = 0; i < reqLength; i++) {
        var request = getRequests[i];
        var requestKeys = request.keys;
        var requestResult = requestKeys.map(function (key) {
          return [key, map[key]];
        });
        request.callback && request.callback(null, requestResult);
        request.resolve && request.resolve(requestResult);
      }
    });
  },

  multiGet: function multiGet(keys, callback) {
    var _this = this;

    if (!this._immediate) {
      this._immediate = setImmediate(function () {
        _this._immediate = null;
        _this.flushGetRequests();
      });
    }

    var getRequest = {
      keys: keys,
      callback: callback,

      keyIndex: this._getKeys.length,
      resolve: null,
      reject: null
    };

    var promiseResult = new Promise(function (resolve, reject) {
      getRequest.resolve = resolve;
      getRequest.reject = reject;
    });

    this._getRequests.push(getRequest);

    keys.forEach(function (key) {
      if (_this._getKeys.indexOf(key) === -1) {
        _this._getKeys.push(key);
      }
    });

    return promiseResult;
  },

  multiSet: function multiSet(keyValuePairs, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiSet(keyValuePairs, function (errors) {
        var error = convertErrors(errors);
        callback && callback(error);
        if (error) {
          reject(error);
        } else {
          resolve(null);
        }
      });
    });
  },

  multiRemove: function multiRemove(keys, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiRemove(keys, function (errors) {
        var error = convertErrors(errors);
        callback && callback(error);
        if (error) {
          reject(error);
        } else {
          resolve(null);
        }
      });
    });
  },

  multiMerge: function multiMerge(keyValuePairs, callback) {
    return new Promise(function (resolve, reject) {
      RCTAsyncStorage.multiMerge(keyValuePairs, function (errors) {
        var error = convertErrors(errors);
        callback && callback(error);
        if (error) {
          reject(error);
        } else {
          resolve(null);
        }
      });
    });
  }
};

if (!RCTAsyncStorage.multiMerge) {
  delete AsyncStorage.mergeItem;
  delete AsyncStorage.multiMerge;
}

function convertErrors(errs) {
  if (!errs) {
    return null;
  }
  return (Array.isArray(errs) ? errs : [errs]).map(function (e) {
    return convertError(e);
  });
}

function convertError(error) {
  if (!error) {
    return null;
  }
  var out = new Error(error.message);
  out.key = error.key;
  return out;
}

module.exports = AsyncStorage;
}, 316, null, "AsyncStorage");
__d(/* BackAndroid */function(global, require, module, exports) {

'use strict';

var BackHandler = require(315          ); // 315 = BackHandler

var warning = require(23                ); // 23 = fbjs/lib/warning

var BackAndroid = {

  exitApp: function exitApp() {
    warning(false, 'BackAndroid is deprecated.  Please use BackHandler instead.');
    BackHandler.exitApp();
  },

  addEventListener: function addEventListener(eventName, handler) {
    warning(false, 'BackAndroid is deprecated.  Please use BackHandler instead.');
    return BackHandler.addEventListener(eventName, handler);
  },

  removeEventListener: function removeEventListener(eventName, handler) {
    warning(false, 'BackAndroid is deprecated.  Please use BackHandler instead.');
    BackHandler.removeEventListener(eventName, handler);
  }

};

module.exports = BackAndroid;
}, 317, null, "BackAndroid");
__d(/* CameraRoll */function(global, require, module, exports) {
'use strict';

var PropTypes = require(126         ); // 126 = prop-types
var checkPropTypes = PropTypes.checkPropTypes;

var RCTCameraRollManager = require(15             ).CameraRollManager; // 15 = NativeModules

var createStrictShapeTypeChecker = require(132                           ); // 132 = createStrictShapeTypeChecker
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var GROUP_TYPES_OPTIONS = {
  Album: 'Album',
  All: 'All',
  Event: 'Event',
  Faces: 'Faces',
  Library: 'Library',
  PhotoStream: 'PhotoStream',
  SavedPhotos: 'SavedPhotos' };

var ASSET_TYPE_OPTIONS = {
  All: 'All',
  Videos: 'Videos',
  Photos: 'Photos'
};

var getPhotosParamChecker = createStrictShapeTypeChecker({
  first: PropTypes.number.isRequired,

  after: PropTypes.string,

  groupTypes: PropTypes.oneOf(Object.keys(GROUP_TYPES_OPTIONS)),

  groupName: PropTypes.string,

  assetType: PropTypes.oneOf(Object.keys(ASSET_TYPE_OPTIONS)),

  mimeTypes: PropTypes.arrayOf(PropTypes.string)
});

var getPhotosReturnChecker = createStrictShapeTypeChecker({
  edges: PropTypes.arrayOf(createStrictShapeTypeChecker({
    node: createStrictShapeTypeChecker({
      type: PropTypes.string.isRequired,
      group_name: PropTypes.string.isRequired,
      image: createStrictShapeTypeChecker({
        uri: PropTypes.string.isRequired,
        height: PropTypes.number.isRequired,
        width: PropTypes.number.isRequired,
        isStored: PropTypes.bool,
        playableDuration: PropTypes.number.isRequired
      }).isRequired,
      timestamp: PropTypes.number.isRequired,
      location: createStrictShapeTypeChecker({
        latitude: PropTypes.number,
        longitude: PropTypes.number,
        altitude: PropTypes.number,
        heading: PropTypes.number,
        speed: PropTypes.number
      })
    }).isRequired
  })).isRequired,
  page_info: createStrictShapeTypeChecker({
    has_next_page: PropTypes.bool.isRequired,
    start_cursor: PropTypes.string,
    end_cursor: PropTypes.string
  }).isRequired
});

var CameraRoll = function () {
  function CameraRoll() {
    babelHelpers.classCallCheck(this, CameraRoll);
  }

  babelHelpers.createClass(CameraRoll, null, [{
    key: 'saveImageWithTag',
    value: function saveImageWithTag(tag) {
      console.warn('`CameraRoll.saveImageWithTag()` is deprecated. Use `CameraRoll.saveToCameraRoll()` instead.');
      return this.saveToCameraRoll(tag, 'photo');
    }
  }, {
    key: 'saveToCameraRoll',
    value: function saveToCameraRoll(tag, type) {
      invariant(typeof tag === 'string', 'CameraRoll.saveToCameraRoll must be a valid string.');

      invariant(type === 'photo' || type === 'video' || type === undefined, 'The second argument to saveToCameraRoll must be \'photo\' or \'video\'. You passed ' + type);

      var mediaType = 'photo';
      if (type) {
        mediaType = type;
      } else if (['mov', 'mp4'].indexOf(tag.split('.').slice(-1)[0]) >= 0) {
        mediaType = 'video';
      }

      return RCTCameraRollManager.saveToCameraRoll(tag, mediaType);
    }
  }, {
    key: 'getPhotos',
    value: function getPhotos(params) {
      if (__DEV__) {
        checkPropTypes({ params: getPhotosParamChecker }, { params: params }, 'params', 'CameraRoll.getPhotos');
      }
      if (arguments.length > 1) {
        console.warn('CameraRoll.getPhotos(tag, success, error) is deprecated.  Use the returned Promise instead');
        var successCallback = arguments[1];
        if (__DEV__) {
          var callback = arguments[1];
          successCallback = function successCallback(response) {
            checkPropTypes({ response: getPhotosReturnChecker }, { response: response }, 'response', 'CameraRoll.getPhotos callback');
            callback(response);
          };
        }
        var errorCallback = arguments[2] || function () {};
        RCTCameraRollManager.getPhotos(params).then(successCallback, errorCallback);
      }

      return RCTCameraRollManager.getPhotos(params);
    }
  }]);
  return CameraRoll;
}();

CameraRoll.GroupTypesOptions = GROUP_TYPES_OPTIONS;
CameraRoll.AssetTypeOptions = ASSET_TYPE_OPTIONS;


module.exports = CameraRoll;
}, 318, null, "CameraRoll");
__d(/* Clipboard */function(global, require, module, exports) {
'use strict';

var Clipboard = require(15             ).Clipboard; // 15 = NativeModules

module.exports = {
  getString: function getString() {
    return Clipboard.getString();
  },
  setString: function setString(content) {
    Clipboard.setString(content);
  }
};
}, 319, null, "Clipboard");
__d(/* DatePickerAndroid */function(global, require, module, exports) {
'use strict';

var DatePickerModule = require(15             ).DatePickerAndroid; // 15 = NativeModules

function _toMillis(options, key) {
  var dateVal = options[key];

  if (typeof dateVal === 'object' && typeof dateVal.getMonth === 'function') {
    options[key] = dateVal.getTime();
  }
}

var DatePickerAndroid = function () {
  function DatePickerAndroid() {
    babelHelpers.classCallCheck(this, DatePickerAndroid);
  }

  babelHelpers.createClass(DatePickerAndroid, null, [{
    key: 'open',
    value: function open(options) {
      var optionsMs;
      return regeneratorRuntime.async(function open$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              optionsMs = options;

              if (optionsMs) {
                _toMillis(options, 'date');
                _toMillis(options, 'minDate');
                _toMillis(options, 'maxDate');
              }
              return _context.abrupt('return', DatePickerModule.open(options));

            case 3:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'dateSetAction',
    get: function get() {
      return 'dateSetAction';
    }
  }, {
    key: 'dismissedAction',
    get: function get() {
      return 'dismissedAction';
    }
  }]);
  return DatePickerAndroid;
}();

module.exports = DatePickerAndroid;
}, 320, null, "DatePickerAndroid");
__d(/* ImagePickerIOS */function(global, require, module, exports) {
'use strict';

var RCTImagePicker = require(15             ).ImagePickerIOS; // 15 = NativeModules

var ImagePickerIOS = {
  canRecordVideos: function canRecordVideos(callback) {
    return RCTImagePicker.canRecordVideos(callback);
  },
  canUseCamera: function canUseCamera(callback) {
    return RCTImagePicker.canUseCamera(callback);
  },
  openCameraDialog: function openCameraDialog(config, successCallback, cancelCallback) {
    config = babelHelpers.extends({
      videoMode: false
    }, config);
    return RCTImagePicker.openCameraDialog(config, successCallback, cancelCallback);
  },
  openSelectDialog: function openSelectDialog(config, successCallback, cancelCallback) {
    config = babelHelpers.extends({
      showImages: true,
      showVideos: false
    }, config);
    return RCTImagePicker.openSelectDialog(config, successCallback, cancelCallback);
  }
};

module.exports = ImagePickerIOS;
}, 321, null, "ImagePickerIOS");
__d(/* Linking */function(global, require, module, exports) {
'use strict';

var NativeEventEmitter = require(83                  ); // 83 = NativeEventEmitter
var NativeModules = require(15             ); // 15 = NativeModules
var Platform = require(46        ); // 46 = Platform

var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var LinkingManager = Platform.OS === 'android' ? NativeModules.IntentAndroid : NativeModules.LinkingManager;

var Linking = function (_NativeEventEmitter) {
  babelHelpers.inherits(Linking, _NativeEventEmitter);

  function Linking() {
    babelHelpers.classCallCheck(this, Linking);
    return babelHelpers.possibleConstructorReturn(this, (Linking.__proto__ || Object.getPrototypeOf(Linking)).call(this, LinkingManager));
  }

  babelHelpers.createClass(Linking, [{
    key: 'addEventListener',
    value: function addEventListener(type, handler) {
      this.addListener(type, handler);
    }
  }, {
    key: 'removeEventListener',
    value: function removeEventListener(type, handler) {
      this.removeListener(type, handler);
    }
  }, {
    key: 'openURL',
    value: function openURL(url) {
      this._validateURL(url);
      return LinkingManager.openURL(url);
    }
  }, {
    key: 'canOpenURL',
    value: function canOpenURL(url) {
      this._validateURL(url);
      return LinkingManager.canOpenURL(url);
    }
  }, {
    key: 'getInitialURL',
    value: function getInitialURL() {
      return LinkingManager.getInitialURL();
    }
  }, {
    key: '_validateURL',
    value: function _validateURL(url) {
      invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);
      invariant(url, 'Invalid URL: cannot be empty');
    }
  }]);
  return Linking;
}(NativeEventEmitter);

module.exports = new Linking();
}, 322, null, "Linking");
__d(/* NetInfo */function(global, require, module, exports) {
'use strict';

var Map = require(54   ); // 54 = Map
var NativeEventEmitter = require(83                  ); // 83 = NativeEventEmitter
var NativeModules = require(15             ); // 15 = NativeModules
var Platform = require(46        ); // 46 = Platform
var RCTNetInfo = NativeModules.NetInfo;

var NetInfoEventEmitter = new NativeEventEmitter(RCTNetInfo);

var DEVICE_CONNECTIVITY_EVENT = 'networkStatusDidChange';

var _subscriptions = new Map();

var _isConnectedDeprecated = void 0;
if (Platform.OS === 'ios') {
  _isConnectedDeprecated = function _isConnectedDeprecated(reachability) {
    return reachability !== 'none' && reachability !== 'unknown';
  };
} else if (Platform.OS === 'android') {
  _isConnectedDeprecated = function _isConnectedDeprecated(connectionType) {
    return connectionType !== 'NONE' && connectionType !== 'UNKNOWN';
  };
}

function _isConnected(connection) {
  return connection.type !== 'none' && connection.type !== 'unknown';
}

var _isConnectedSubscriptions = new Map();

var NetInfo = {
  addEventListener: function addEventListener(eventName, handler) {
    var listener = void 0;
    if (eventName === 'connectionChange') {
      listener = NetInfoEventEmitter.addListener(DEVICE_CONNECTIVITY_EVENT, function (appStateData) {
        handler({
          type: appStateData.connectionType,
          effectiveType: appStateData.effectiveConnectionType
        });
      });
    } else if (eventName === 'change') {
      console.warn('NetInfo\'s "change" event is deprecated. Listen to the "connectionChange" event instead.');

      listener = NetInfoEventEmitter.addListener(DEVICE_CONNECTIVITY_EVENT, function (appStateData) {
        handler(appStateData.network_info);
      });
    } else {
      console.warn('Trying to subscribe to unknown event: "' + eventName + '"');
      return {
        remove: function remove() {}
      };
    }

    _subscriptions.set(handler, listener);
    return {
      remove: function remove() {
        return NetInfo.removeEventListener(eventName, handler);
      }
    };
  },
  removeEventListener: function removeEventListener(eventName, handler) {
    var listener = _subscriptions.get(handler);
    if (!listener) {
      return;
    }
    listener.remove();
    _subscriptions.delete(handler);
  },
  fetch: function fetch() {
    console.warn('NetInfo.fetch() is deprecated. Use NetInfo.getConnectionInfo() instead.');
    return RCTNetInfo.getCurrentConnectivity().then(function (resp) {
      return resp.network_info;
    });
  },
  getConnectionInfo: function getConnectionInfo() {
    return RCTNetInfo.getCurrentConnectivity().then(function (resp) {
      return {
        type: resp.connectionType,
        effectiveType: resp.effectiveConnectionType
      };
    });
  },

  isConnected: {
    addEventListener: function addEventListener(eventName, handler) {
      var listener = function listener(connection) {
        if (eventName === 'change') {
          handler(_isConnectedDeprecated(connection));
        } else if (eventName === 'connectionChange') {
          handler(_isConnected(connection));
        }
      };
      _isConnectedSubscriptions.set(handler, listener);
      NetInfo.addEventListener(eventName, listener);
      return {
        remove: function remove() {
          return NetInfo.isConnected.removeEventListener(eventName, handler);
        }
      };
    },
    removeEventListener: function removeEventListener(eventName, handler) {
      var listener = _isConnectedSubscriptions.get(handler);
      NetInfo.removeEventListener(eventName, listener);
      _isConnectedSubscriptions.delete(handler);
    },
    fetch: function fetch() {
      return NetInfo.getConnectionInfo().then(_isConnected);
    }
  },

  isConnectionExpensive: function isConnectionExpensive() {
    return Platform.OS === 'android' ? RCTNetInfo.isConnectionMetered() : Promise.reject(new Error('Currently not supported on iOS'));
  }
};

module.exports = NetInfo;
}, 323, null, "NetInfo");
__d(/* PushNotificationIOS */function(global, require, module, exports) {
'use strict';

var NativeEventEmitter = require(83                  ); // 83 = NativeEventEmitter
var RCTPushNotificationManager = require(15             ).PushNotificationManager; // 15 = NativeModules
var invariant = require(13                  ); // 13 = fbjs/lib/invariant

var PushNotificationEmitter = new NativeEventEmitter(RCTPushNotificationManager);

var _notifHandlers = new Map();

var DEVICE_NOTIF_EVENT = 'remoteNotificationReceived';
var NOTIF_REGISTER_EVENT = 'remoteNotificationsRegistered';
var NOTIF_REGISTRATION_ERROR_EVENT = 'remoteNotificationRegistrationError';
var DEVICE_LOCAL_NOTIF_EVENT = 'localNotificationReceived';

var PushNotificationIOS = function () {
  babelHelpers.createClass(PushNotificationIOS, null, [{
    key: 'presentLocalNotification',
    value: function presentLocalNotification(details) {
      RCTPushNotificationManager.presentLocalNotification(details);
    }
  }, {
    key: 'scheduleLocalNotification',
    value: function scheduleLocalNotification(details) {
      RCTPushNotificationManager.scheduleLocalNotification(details);
    }
  }, {
    key: 'cancelAllLocalNotifications',
    value: function cancelAllLocalNotifications() {
      RCTPushNotificationManager.cancelAllLocalNotifications();
    }
  }, {
    key: 'removeAllDeliveredNotifications',
    value: function removeAllDeliveredNotifications() {
      RCTPushNotificationManager.removeAllDeliveredNotifications();
    }
  }, {
    key: 'getDeliveredNotifications',
    value: function getDeliveredNotifications(callback) {
      RCTPushNotificationManager.getDeliveredNotifications(callback);
    }
  }, {
    key: 'removeDeliveredNotifications',
    value: function removeDeliveredNotifications(identifiers) {
      RCTPushNotificationManager.removeDeliveredNotifications(identifiers);
    }
  }, {
    key: 'setApplicationIconBadgeNumber',
    value: function setApplicationIconBadgeNumber(number) {
      RCTPushNotificationManager.setApplicationIconBadgeNumber(number);
    }
  }, {
    key: 'getApplicationIconBadgeNumber',
    value: function getApplicationIconBadgeNumber(callback) {
      RCTPushNotificationManager.getApplicationIconBadgeNumber(callback);
    }
  }, {
    key: 'cancelLocalNotifications',
    value: function cancelLocalNotifications(userInfo) {
      RCTPushNotificationManager.cancelLocalNotifications(userInfo);
    }
  }, {
    key: 'getScheduledLocalNotifications',
    value: function getScheduledLocalNotifications(callback) {
      RCTPushNotificationManager.getScheduledLocalNotifications(callback);
    }
  }, {
    key: 'addEventListener',
    value: function addEventListener(type, handler) {
      invariant(type === 'notification' || type === 'register' || type === 'registrationError' || type === 'localNotification', 'PushNotificationIOS only supports `notification`, `register`, `registrationError`, and `localNotification` events');
      var listener;
      if (type === 'notification') {
        listener = PushNotificationEmitter.addListener(DEVICE_NOTIF_EVENT, function (notifData) {
          handler(new PushNotificationIOS(notifData));
        });
      } else if (type === 'localNotification') {
        listener = PushNotificationEmitter.addListener(DEVICE_LOCAL_NOTIF_EVENT, function (notifData) {
          handler(new PushNotificationIOS(notifData));
        });
      } else if (type === 'register') {
        listener = PushNotificationEmitter.addListener(NOTIF_REGISTER_EVENT, function (registrationInfo) {
          handler(registrationInfo.deviceToken);
        });
      } else if (type === 'registrationError') {
        listener = PushNotificationEmitter.addListener(NOTIF_REGISTRATION_ERROR_EVENT, function (errorInfo) {
          handler(errorInfo);
        });
      }
      _notifHandlers.set(type, listener);
    }
  }, {
    key: 'removeEventListener',
    value: function removeEventListener(type, handler) {
      invariant(type === 'notification' || type === 'register' || type === 'registrationError' || type === 'localNotification', 'PushNotificationIOS only supports `notification`, `register`, `registrationError`, and `localNotification` events');
      var listener = _notifHandlers.get(type);
      if (!listener) {
        return;
      }
      listener.remove();
      _notifHandlers.delete(type);
    }
  }, {
    key: 'requestPermissions',
    value: function requestPermissions(permissions) {
      var requestedPermissions = {};
      if (permissions) {
        requestedPermissions = {
          alert: !!permissions.alert,
          badge: !!permissions.badge,
          sound: !!permissions.sound
        };
      } else {
        requestedPermissions = {
          alert: true,
          badge: true,
          sound: true
        };
      }
      return RCTPushNotificationManager.requestPermissions(requestedPermissions);
    }
  }, {
    key: 'abandonPermissions',
    value: function abandonPermissions() {
      RCTPushNotificationManager.abandonPermissions();
    }
  }, {
    key: 'checkPermissions',
    value: function checkPermissions(callback) {
      invariant(typeof callback === 'function', 'Must provide a valid callback');
      RCTPushNotificationManager.checkPermissions(callback);
    }
  }, {
    key: 'getInitialNotification',
    value: function getInitialNotification() {
      return RCTPushNotificationManager.getInitialNotification().then(function (notification) {
        return notification && new PushNotificationIOS(notification);
      });
    }
  }]);

  function PushNotificationIOS(nativeNotif) {
    var _this = this;

    babelHelpers.classCallCheck(this, PushNotificationIOS);

    this._data = {};
    this._remoteNotificationCompleteCallbackCalled = false;
    this._isRemote = nativeNotif.remote;
    if (this._isRemote) {
      this._notificationId = nativeNotif.notificationId;
    }

    if (nativeNotif.remote) {
      Object.keys(nativeNotif).forEach(function (notifKey) {
        var notifVal = nativeNotif[notifKey];
        if (notifKey === 'aps') {
          _this._alert = notifVal.alert;
          _this._sound = notifVal.sound;
          _this._badgeCount = notifVal.badge;
          _this._category = notifVal.category;
          _this._contentAvailable = notifVal['content-available'];
        } else {
          _this._data[notifKey] = notifVal;
        }
      });
    } else {
      this._badgeCount = nativeNotif.applicationIconBadgeNumber;
      this._sound = nativeNotif.soundName;
      this._alert = nativeNotif.alertBody;
      this._data = nativeNotif.userInfo;
      this._category = nativeNotif.category;
    }
  }

  babelHelpers.createClass(PushNotificationIOS, [{
    key: 'finish',
    value: function finish(fetchResult) {
      if (!this._isRemote || !this._notificationId || this._remoteNotificationCompleteCallbackCalled) {
        return;
      }
      this._remoteNotificationCompleteCallbackCalled = true;

      RCTPushNotificationManager.onFinishRemoteNotification(this._notificationId, fetchResult);
    }
  }, {
    key: 'getMessage',
    value: function getMessage() {
      return this._alert;
    }
  }, {
    key: 'getSound',
    value: function getSound() {
      return this._sound;
    }
  }, {
    key: 'getCategory',
    value: function getCategory() {
      return this._category;
    }
  }, {
    key: 'getAlert',
    value: function getAlert() {
      return this._alert;
    }
  }, {
    key: 'getContentAvailable',
    value: function getContentAvailable() {
      return this._contentAvailable;
    }
  }, {
    key: 'getBadgeCount',
    value: function getBadgeCount() {
      return this._badgeCount;
    }
  }, {
    key: 'getData',
    value: function getData() {
      return this._data;
    }
  }]);
  return PushNotificationIOS;
}();

PushNotificationIOS.FetchResult = {
  NewData: 'UIBackgroundFetchResultNewData',
  NoData: 'UIBackgroundFetchResultNoData',
  ResultFailed: 'UIBackgroundFetchResultFailed'
};


module.exports = PushNotificationIOS;
}, 324, null, "PushNotificationIOS");
__d(/* Settings */function(global, require, module, exports) {
'use strict';

var Settings = {
  get: function get(key) {
    console.warn('Settings is not yet supported on Android');
    return null;
  },
  set: function set(settings) {
    console.warn('Settings is not yet supported on Android');
  },
  watchKeys: function watchKeys(keys, callback) {
    console.warn('Settings is not yet supported on Android');
    return -1;
  },
  clearWatch: function clearWatch(watchId) {
    console.warn('Settings is not yet supported on Android');
  }
};

module.exports = Settings;
}, 325, null, "Settings");
__d(/* Share */function(global, require, module, exports) {
'use strict';

var Platform = require(46        ); // 46 = Platform

var invariant = require(13                  ); // 13 = fbjs/lib/invariant
var processColor = require(151           ); // 151 = processColor

var _require = require(15             ), // 15 = NativeModules
    ActionSheetManager = _require.ActionSheetManager,
    ShareModule = _require.ShareModule;

var Share = function () {
  function Share() {
    babelHelpers.classCallCheck(this, Share);
  }

  babelHelpers.createClass(Share, null, [{
    key: 'share',
    value: function share(content) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      invariant(typeof content === 'object' && content !== null, 'Content to share must be a valid object');
      invariant(typeof content.url === 'string' || typeof content.message === 'string', 'At least one of URL and message is required');
      invariant(typeof options === 'object' && options !== null, 'Options must be a valid object');

      if (Platform.OS === 'android') {
        invariant(!content.title || typeof content.title === 'string', 'Invalid title: title should be a string.');
        return ShareModule.share(content, options.dialogTitle);
      } else if (Platform.OS === 'ios') {
        return new Promise(function (resolve, reject) {
          ActionSheetManager.showShareActionSheetWithOptions(babelHelpers.extends({}, content, options, { tintColor: processColor(options.tintColor) }), function (error) {
            return reject(error);
          }, function (success, activityType) {
            if (success) {
              resolve({
                'action': 'sharedAction',
                'activityType': activityType
              });
            } else {
              resolve({
                'action': 'dismissedAction'
              });
            }
          });
        });
      } else {
        return Promise.reject(new Error('Unsupported platform'));
      }
    }
  }, {
    key: 'sharedAction',
    get: function get() {
      return 'sharedAction';
    }
  }, {
    key: 'dismissedAction',
    get: function get() {
      return 'dismissedAction';
    }
  }]);
  return Share;
}();

module.exports = Share;
}, 326, null, "Share");
__d(/* StatusBarIOS */function(global, require, module, exports) {
'use strict';

var NativeEventEmitter = require(83                  ); // 83 = NativeEventEmitter

module.exports = new NativeEventEmitter('StatusBarManager');
}, 327, null, "StatusBarIOS");
__d(/* TimePickerAndroid */function(global, require, module, exports) {
'use strict';

var TimePickerModule = require(15             ).TimePickerAndroid; // 15 = NativeModules

var TimePickerAndroid = function () {
  function TimePickerAndroid() {
    babelHelpers.classCallCheck(this, TimePickerAndroid);
  }

  babelHelpers.createClass(TimePickerAndroid, null, [{
    key: 'open',
    value: function open(options) {
      return regeneratorRuntime.async(function open$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              return _context.abrupt('return', TimePickerModule.open(options));

            case 1:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'timeSetAction',
    get: function get() {
      return 'timeSetAction';
    }
  }, {
    key: 'dismissedAction',
    get: function get() {
      return 'dismissedAction';
    }
  }]);
  return TimePickerAndroid;
}();

module.exports = TimePickerAndroid;
}, 328, null, "TimePickerAndroid");
__d(/* Vibration */function(global, require, module, exports) {
'use strict';

var RCTVibration = require(15             ).Vibration; // 15 = NativeModules
var Platform = require(46        ); // 46 = Platform

var _vibrating = false;
var _id = 0;

function vibrateByPattern(pattern) {
  var repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if (_vibrating) {
    return;
  }
  _vibrating = true;
  if (pattern[0] === 0) {
    RCTVibration.vibrate();
    pattern = pattern.slice(1);
  }
  if (pattern.length === 0) {
    _vibrating = false;
    return;
  }
  setTimeout(function () {
    return vibrateScheduler(++_id, pattern, repeat, 1);
  }, pattern[0]);
}

function vibrateScheduler(id, pattern, repeat, nextIndex) {
  if (!_vibrating || id !== _id) {
    return;
  }
  RCTVibration.vibrate();
  if (nextIndex >= pattern.length) {
    if (repeat) {
      nextIndex = 0;
    } else {
      _vibrating = false;
      return;
    }
  }
  setTimeout(function () {
    return vibrateScheduler(id, pattern, repeat, nextIndex + 1);
  }, pattern[nextIndex]);
}

var Vibration = {
  vibrate: function vibrate() {
    var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 400;
    var repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    if (Platform.OS === 'android') {
      if (typeof pattern === 'number') {
        RCTVibration.vibrate(pattern);
      } else if (Array.isArray(pattern)) {
        RCTVibration.vibrateByPattern(pattern, repeat ? 0 : -1);
      } else {
        throw new Error('Vibration pattern should be a number or array');
      }
    } else {
      if (_vibrating) {
        return;
      }
      if (typeof pattern === 'number') {
        RCTVibration.vibrate();
      } else if (Array.isArray(pattern)) {
        vibrateByPattern(pattern, repeat);
      } else {
        throw new Error('Vibration pattern should be a number or array');
      }
    }
  },

  cancel: function cancel() {
    if (Platform.OS === 'ios') {
      _vibrating = false;
    } else {
      RCTVibration.cancel();
    }
  }
};

module.exports = Vibration;
}, 329, null, "Vibration");
__d(/* VibrationIOS */function(global, require, module, exports) {
'use strict';

var warning = require(23                ); // 23 = fbjs/lib/warning

var VibrationIOS = {
  vibrate: function vibrate() {
    warning('VibrationIOS is not supported on this platform!');
  }
};

module.exports = VibrationIOS;
}, 330, null, "VibrationIOS");
__d(/* takeSnapshot */function(global, require, module, exports) {

'use strict';

var _require = require(21           ), // 21 = ReactNative
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = _require.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

module.exports = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.takeSnapshot;
}, 331, null, "takeSnapshot");
__d(/* YuanXC/src/index.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/index.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _reactRedux = require(333          ); // 333 = react-redux

var _stackNavigator = require(370                      ); // 370 = ./config/stackNavigator

var _stackNavigator2 = babelHelpers.interopRequireDefault(_stackNavigator);

var _Modal = require(706                 ); // 706 = ./components/Modal

var _Modal2 = babelHelpers.interopRequireDefault(_Modal);

var _ToastWrapper = require(707                        ); // 707 = ./components/ToastWrapper

var _ToastWrapper2 = babelHelpers.interopRequireDefault(_ToastWrapper);

var _Splash = require(708             ); // 708 = ./pages/Splash

var _Splash2 = babelHelpers.interopRequireDefault(_Splash);

var _reactNavigation = require(371               ); // 371 = react-navigation

var _reactNativeCodePush = require(575                     ); // 575 = react-native-code-push

var _reactNativeCodePush2 = babelHelpers.interopRequireDefault(_reactNativeCodePush);

var _financeListActions = require(635                           ); // 635 = ./actions/financeListActions

var financeListActions = babelHelpers.interopRequireWildcard(_financeListActions);

var _workingTableActions = require(623                            ); // 623 = ./actions/workingTableActions

var workingTableActions = babelHelpers.interopRequireWildcard(_workingTableActions);

var _userActions = require(630                    ); // 630 = ./actions/userActions

var userActions = babelHelpers.interopRequireWildcard(_userActions);

var _constants = require(434                 ); // 434 = ./config/constants

var _LocalStorage = require(620                   ); // 620 = ./utils/LocalStorage

var _LocalStorage2 = babelHelpers.interopRequireDefault(_LocalStorage);

var _store = require(714             ); // 714 = ./config/store

var _store2 = babelHelpers.interopRequireDefault(_store);

var _reactNativeWechat = require(663                  ); // 663 = react-native-wechat

var WeChat = babelHelpers.interopRequireWildcard(_reactNativeWechat);

var _TD = require(639         ); // 639 = ./utils/TD

var RNTD = babelHelpers.interopRequireWildcard(_TD);

var store = (0, _store2.default)();
var Channel = _reactNative.NativeModules.RNChannel;

if (!__DEV__) {
  ErrorUtils.setGlobalHandler(function () {
    return void 0;
  });
}
global.splashInit = "yxcInit";

function getCurrentRouteName(navigationState) {
  if (!navigationState) {
    return null;
  }
  var route = navigationState.routes[navigationState.index];
  if (route.routes) {
    return getCurrentRouteName(route);
  }
  return route.routeName;
}

var App = function (_Component) {
  babelHelpers.inherits(App, _Component);

  function App(props) {
    babelHelpers.classCallCheck(this, App);

    var _this = babelHelpers.possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));

    _this.state = { visible: false };
    _this.backAndroidTime = Date.now();

    _this.androidBackCallback = function () {
      if (_this.refs.navigator.state.nav.index === 0) {
        var prevAndroidBackTimestamp = _this.backAndroidTime,
            currentTimestamp = Date.now();
        _this.backAndroidTime = currentTimestamp;
        if (currentTimestamp - prevAndroidBackTimestamp < 1000) {
          global.hasChecked = false;
          _reactNative.BackHandler.exitApp();
          return false;
        } else {
          _this.refs.toast.callToast('再按一次退出程序');
          return true;
        }
      }
      return false;
    };
    _this.refresh = _this._refresh.bind(_this);
    return _this;
  }

  babelHelpers.createClass(App, [{
    key: '_pushNavigator',
    value: function _pushNavigator(pushType) {
      if (pushType === 1 || pushType === '1') {
        this.refs.navigator && this.refs.navigator._navigation.navigate("MessageList");
      }
    }
  }, {
    key: 'componentWillMount',
    value: function componentWillMount() {
      var _this2 = this;

      _reactNative.BackHandler.removeEventListener('hardwareBackPress', this.androidBackCallback);
      _reactNative.BackHandler.addEventListener('hardwareBackPress', this.androidBackCallback);

      _LocalStorage2.default.getItem(global.splashInit, function (data) {
        if (data) {
          _this2.setState({ visible: true });
        } else {
          setTimeout(function () {
            _this2.setState({ visible: true });
          }, 500);
        }
      });
      Channel && Channel.startCount("Home");
      RNTD.init(_constants.TDkey, _constants.Channel);
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      return regeneratorRuntime.async(function componentDidMount$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.prev = 0;
              _context.next = 3;
              return regeneratorRuntime.awrap(WeChat.registerApp(_constants.WeChatKey));

            case 3:
              _context.next = 7;
              break;

            case 5:
              _context.prev = 5;
              _context.t0 = _context['catch'](0);

            case 7:
              global.initRouter = "";
              this.listener = _reactNative.DeviceEventEmitter.addListener('changeTab', this.refresh);

            case 9:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this, [[0, 5]]);
    }
  }, {
    key: '_refresh',
    value: function _refresh() {
      if (!this.refs.redux) {
        return;
      }
      if (global.currentTab === "Home") {
        this.refs.redux.store.dispatch(workingTableActions.getData(false));
        this.refs.redux.store.dispatch(workingTableActions.getBanner());
      } else if (global.currentTab === "FinanceList") {
        global.financeListoLoaded && this.refs.redux.store.dispatch(financeListActions.refresh());
      } else if (global.currentTab === "UserInfo") {
        global.userInfoLoaded && this.refs.redux.store.dispatch(userActions.userProfile(false));
      }
    }
  }, {
    key: '_stateChange',
    value: function _stateChange(prevState, currentState) {
      var current = getCurrentRouteName(currentState);
      var prev = getCurrentRouteName(prevState);
      if (current === "Main") {
        this._refresh();
      }
      Channel && Channel.stopCount(prev);
      Channel && Channel.startCount(current);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      _reactNative.BackHandler.removeEventListener('hardwareBackPress', this.androidBackCallback);
      this.listener && this.listener.remove();
      this.timer && clearTimeout(this.timer);
      global.initRouter = "";
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactRedux.Provider,
        { store: store, ref: 'redux', __source: {
            fileName: _jsxFileName,
            lineNumber: 132
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          { style: { flex: 1 }, __source: {
              fileName: _jsxFileName,
              lineNumber: 133
            }
          },
          _react2.default.createElement(_reactNative.StatusBar, { hidden: true, __source: {
              fileName: _jsxFileName,
              lineNumber: 134
            }
          }),
          _react2.default.createElement(
            _ToastWrapper2.default,
            { ref: 'toast', __source: {
                fileName: _jsxFileName,
                lineNumber: 135
              }
            },
            this.state.visible && _react2.default.createElement(_stackNavigator2.default, { ref: 'navigator', onNavigationStateChange: this._stateChange.bind(this), __source: {
                fileName: _jsxFileName,
                lineNumber: 137
              }
            }),
            _react2.default.createElement(_Modal2.default, {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 138
              }
            })
          ),
          _react2.default.createElement(_Splash2.default, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 140
            }
          })
        )
      );
    }
  }]);
  return App;
}(_react.Component);

var codePushOptions = { checkFrequency: _reactNativeCodePush2.default.CheckFrequency.MANUAL };
exports.default = (0, _reactNativeCodePush2.default)(codePushOptions)(App);
}, 332, null, "YuanXC/src/index.js");
__d(/* react-redux/lib/index.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.connect = exports.connectAdvanced = exports.createProvider = exports.Provider = undefined;

var _Provider = require(334                    ); // 334 = ./components/Provider

var _Provider2 = _interopRequireDefault(_Provider);

var _connectAdvanced = require(337                           ); // 337 = ./components/connectAdvanced

var _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);

var _connect = require(341                ); // 341 = ./connect/connect

var _connect2 = _interopRequireDefault(_connect);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

exports.Provider = _Provider2.default;
exports.createProvider = _Provider.createProvider;
exports.connectAdvanced = _connectAdvanced2.default;
exports.connect = _connect2.default;
}, 333, null, "react-redux/lib/index.js");
__d(/* react-redux/lib/components/Provider.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.createProvider = createProvider;

var _react = require(35     ); // 35 = react

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = _interopRequireDefault(_propTypes);

var _PropTypes = require(335                 ); // 335 = ../utils/PropTypes

var _warning = require(336               ); // 336 = ../utils/warning

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var didWarnAboutReceivingStore = false;
function warnAboutReceivingStore() {
  if (didWarnAboutReceivingStore) {
    return;
  }
  didWarnAboutReceivingStore = true;

  (0, _warning2.default)('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reactjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');
}

function createProvider() {
  var _Provider$childContex;

  var storeKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'store';
  var subKey = arguments[1];

  var subscriptionKey = subKey || storeKey + 'Subscription';

  var Provider = function (_Component) {
    _inherits(Provider, _Component);

    Provider.prototype.getChildContext = function getChildContext() {
      var _ref;

      return _ref = {}, _ref[storeKey] = this[storeKey], _ref[subscriptionKey] = null, _ref;
    };

    function Provider(props, context) {
      _classCallCheck(this, Provider);

      var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

      _this[storeKey] = props.store;
      return _this;
    }

    Provider.prototype.render = function render() {
      return _react.Children.only(this.props.children);
    };

    return Provider;
  }(_react.Component);

  if (process.env.NODE_ENV !== 'production') {
    Provider.prototype.componentWillReceiveProps = function (nextProps) {
      if (this[storeKey] !== nextProps.store) {
        warnAboutReceivingStore();
      }
    };
  }

  Provider.propTypes = {
    store: _PropTypes.storeShape.isRequired,
    children: _propTypes2.default.element.isRequired
  };
  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[storeKey] = _PropTypes.storeShape.isRequired, _Provider$childContex[subscriptionKey] = _PropTypes.subscriptionShape, _Provider$childContex);

  return Provider;
}

exports.default = createProvider();
}, 334, null, "react-redux/lib/components/Provider.js");
__d(/* react-redux/lib/utils/PropTypes.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.storeShape = exports.subscriptionShape = undefined;

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

var subscriptionShape = exports.subscriptionShape = _propTypes2.default.shape({
  trySubscribe: _propTypes2.default.func.isRequired,
  tryUnsubscribe: _propTypes2.default.func.isRequired,
  notifyNestedSubs: _propTypes2.default.func.isRequired,
  isSubscribed: _propTypes2.default.func.isRequired
});

var storeShape = exports.storeShape = _propTypes2.default.shape({
  subscribe: _propTypes2.default.func.isRequired,
  dispatch: _propTypes2.default.func.isRequired,
  getState: _propTypes2.default.func.isRequired
});
}, 335, null, "react-redux/lib/utils/PropTypes.js");
__d(/* react-redux/lib/utils/warning.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = warning;

function warning(message) {
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }

  try {
    throw new Error(message);
  } catch (e) {}
}
}, 336, null, "react-redux/lib/utils/warning.js");
__d(/* react-redux/lib/components/connectAdvanced.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

exports.default = connectAdvanced;

var _hoistNonReactStatics = require(338                      ); // 338 = hoist-non-react-statics

var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

var _invariant = require(339        ); // 339 = invariant

var _invariant2 = _interopRequireDefault(_invariant);

var _react = require(35     ); // 35 = react

var _Subscription = require(340                    ); // 340 = ../utils/Subscription

var _Subscription2 = _interopRequireDefault(_Subscription);

var _PropTypes = require(335                 ); // 335 = ../utils/PropTypes

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

function _objectWithoutProperties(obj, keys) {
  var target = {};for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
  }return target;
}

var hotReloadingVersion = 0;
var dummyState = {};
function noop() {}
function makeSelectorStateful(sourceSelector, store) {
  var selector = {
    run: function runComponentSelector(props) {
      try {
        var nextProps = sourceSelector(store.getState(), props);
        if (nextProps !== selector.props || selector.error) {
          selector.shouldComponentUpdate = true;
          selector.props = nextProps;
          selector.error = null;
        }
      } catch (error) {
        selector.shouldComponentUpdate = true;
        selector.error = error;
      }
    }
  };

  return selector;
}

function connectAdvanced(selectorFactory) {
  var _contextTypes, _childContextTypes;

  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref$getDisplayName = _ref.getDisplayName,
      getDisplayName = _ref$getDisplayName === undefined ? function (name) {
    return 'ConnectAdvanced(' + name + ')';
  } : _ref$getDisplayName,
      _ref$methodName = _ref.methodName,
      methodName = _ref$methodName === undefined ? 'connectAdvanced' : _ref$methodName,
      _ref$renderCountProp = _ref.renderCountProp,
      renderCountProp = _ref$renderCountProp === undefined ? undefined : _ref$renderCountProp,
      _ref$shouldHandleStat = _ref.shouldHandleStateChanges,
      shouldHandleStateChanges = _ref$shouldHandleStat === undefined ? true : _ref$shouldHandleStat,
      _ref$storeKey = _ref.storeKey,
      storeKey = _ref$storeKey === undefined ? 'store' : _ref$storeKey,
      _ref$withRef = _ref.withRef,
      withRef = _ref$withRef === undefined ? false : _ref$withRef,
      connectOptions = _objectWithoutProperties(_ref, ['getDisplayName', 'methodName', 'renderCountProp', 'shouldHandleStateChanges', 'storeKey', 'withRef']);

  var subscriptionKey = storeKey + 'Subscription';
  var version = hotReloadingVersion++;

  var contextTypes = (_contextTypes = {}, _contextTypes[storeKey] = _PropTypes.storeShape, _contextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _contextTypes);
  var childContextTypes = (_childContextTypes = {}, _childContextTypes[subscriptionKey] = _PropTypes.subscriptionShape, _childContextTypes);

  return function wrapWithConnect(WrappedComponent) {
    (0, _invariant2.default)(typeof WrappedComponent == 'function', 'You must pass a component to the function returned by ' + ('connect. Instead received ' + JSON.stringify(WrappedComponent)));

    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';

    var displayName = getDisplayName(wrappedComponentName);

    var selectorFactoryOptions = _extends({}, connectOptions, {
      getDisplayName: getDisplayName,
      methodName: methodName,
      renderCountProp: renderCountProp,
      shouldHandleStateChanges: shouldHandleStateChanges,
      storeKey: storeKey,
      withRef: withRef,
      displayName: displayName,
      wrappedComponentName: wrappedComponentName,
      WrappedComponent: WrappedComponent
    });

    var Connect = function (_Component) {
      _inherits(Connect, _Component);

      function Connect(props, context) {
        _classCallCheck(this, Connect);

        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

        _this.version = version;
        _this.state = {};
        _this.renderCount = 0;
        _this.store = props[storeKey] || context[storeKey];
        _this.propsMode = Boolean(props[storeKey]);
        _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);

        (0, _invariant2.default)(_this.store, 'Could not find "' + storeKey + '" in either the context or props of ' + ('"' + displayName + '". Either wrap the root component in a <Provider>, ') + ('or explicitly pass "' + storeKey + '" as a prop to "' + displayName + '".'));

        _this.initSelector();
        _this.initSubscription();
        return _this;
      }

      Connect.prototype.getChildContext = function getChildContext() {
        var _ref2;

        var subscription = this.propsMode ? null : this.subscription;
        return _ref2 = {}, _ref2[subscriptionKey] = subscription || this.context[subscriptionKey], _ref2;
      };

      Connect.prototype.componentDidMount = function componentDidMount() {
        if (!shouldHandleStateChanges) return;

        this.subscription.trySubscribe();
        this.selector.run(this.props);
        if (this.selector.shouldComponentUpdate) this.forceUpdate();
      };

      Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
        this.selector.run(nextProps);
      };

      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
        return this.selector.shouldComponentUpdate;
      };

      Connect.prototype.componentWillUnmount = function componentWillUnmount() {
        if (this.subscription) this.subscription.tryUnsubscribe();
        this.subscription = null;
        this.notifyNestedSubs = noop;
        this.store = null;
        this.selector.run = noop;
        this.selector.shouldComponentUpdate = false;
      };

      Connect.prototype.getWrappedInstance = function getWrappedInstance() {
        (0, _invariant2.default)(withRef, 'To access the wrapped instance, you need to specify ' + ('{ withRef: true } in the options argument of the ' + methodName + '() call.'));
        return this.wrappedInstance;
      };

      Connect.prototype.setWrappedInstance = function setWrappedInstance(ref) {
        this.wrappedInstance = ref;
      };

      Connect.prototype.initSelector = function initSelector() {
        var sourceSelector = selectorFactory(this.store.dispatch, selectorFactoryOptions);
        this.selector = makeSelectorStateful(sourceSelector, this.store);
        this.selector.run(this.props);
      };

      Connect.prototype.initSubscription = function initSubscription() {
        if (!shouldHandleStateChanges) return;

        var parentSub = (this.propsMode ? this.props : this.context)[subscriptionKey];
        this.subscription = new _Subscription2.default(this.store, parentSub, this.onStateChange.bind(this));

        this.notifyNestedSubs = this.subscription.notifyNestedSubs.bind(this.subscription);
      };

      Connect.prototype.onStateChange = function onStateChange() {
        this.selector.run(this.props);

        if (!this.selector.shouldComponentUpdate) {
          this.notifyNestedSubs();
        } else {
          this.componentDidUpdate = this.notifyNestedSubsOnComponentDidUpdate;
          this.setState(dummyState);
        }
      };

      Connect.prototype.notifyNestedSubsOnComponentDidUpdate = function notifyNestedSubsOnComponentDidUpdate() {
        this.componentDidUpdate = undefined;
        this.notifyNestedSubs();
      };

      Connect.prototype.isSubscribed = function isSubscribed() {
        return Boolean(this.subscription) && this.subscription.isSubscribed();
      };

      Connect.prototype.addExtraProps = function addExtraProps(props) {
        if (!withRef && !renderCountProp && !(this.propsMode && this.subscription)) return props;

        var withExtras = _extends({}, props);
        if (withRef) withExtras.ref = this.setWrappedInstance;
        if (renderCountProp) withExtras[renderCountProp] = this.renderCount++;
        if (this.propsMode && this.subscription) withExtras[subscriptionKey] = this.subscription;
        return withExtras;
      };

      Connect.prototype.render = function render() {
        var selector = this.selector;
        selector.shouldComponentUpdate = false;

        if (selector.error) {
          throw selector.error;
        } else {
          return (0, _react.createElement)(WrappedComponent, this.addExtraProps(selector.props));
        }
      };

      return Connect;
    }(_react.Component);

    Connect.WrappedComponent = WrappedComponent;
    Connect.displayName = displayName;
    Connect.childContextTypes = childContextTypes;
    Connect.contextTypes = contextTypes;
    Connect.propTypes = contextTypes;

    if (process.env.NODE_ENV !== 'production') {
      Connect.prototype.componentWillUpdate = function componentWillUpdate() {
        var _this2 = this;

        if (this.version !== version) {
          this.version = version;
          this.initSelector();

          var oldListeners = [];

          if (this.subscription) {
            oldListeners = this.subscription.listeners.get();
            this.subscription.tryUnsubscribe();
          }
          this.initSubscription();
          if (shouldHandleStateChanges) {
            this.subscription.trySubscribe();
            oldListeners.forEach(function (listener) {
              return _this2.subscription.listeners.subscribe(listener);
            });
          }
        }
      };
    }

    return (0, _hoistNonReactStatics2.default)(Connect, WrappedComponent);
  };
}
}, 337, null, "react-redux/lib/components/connectAdvanced.js");
__d(/* hoist-non-react-statics/index.js */function(global, require, module, exports) {
'use strict';

var REACT_STATICS = {
    childContextTypes: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    mixins: true,
    propTypes: true,
    type: true
};

var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true
};

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = getPrototypeOf && getPrototypeOf(Object);

module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
    if (typeof sourceComponent !== 'string') {

        if (objectPrototype) {
            var inheritedComponent = getPrototypeOf(sourceComponent);
            if (inheritedComponent && inheritedComponent !== objectPrototype) {
                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
            }
        }

        var keys = getOwnPropertyNames(sourceComponent);

        if (getOwnPropertySymbols) {
            keys = keys.concat(getOwnPropertySymbols(sourceComponent));
        }

        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
                try {
                    defineProperty(targetComponent, key, descriptor);
                } catch (e) {}
            }
        }

        return targetComponent;
    }

    return targetComponent;
};
}, 338, null, "hoist-non-react-statics/index.js");
__d(/* invariant/browser.js */function(global, require, module, exports) {

'use strict';

var invariant = function invariant(condition, format, a, b, c, d, e, f) {
  if (process.env.NODE_ENV !== 'production') {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1;
    throw error;
  }
};

module.exports = invariant;
}, 339, null, "invariant/browser.js");
__d(/* react-redux/lib/utils/Subscription.js */function(global, require, module, exports) {"use strict";

exports.__esModule = true;

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

var CLEARED = null;
var nullListeners = {
  notify: function notify() {}
};

function createListenerCollection() {
  var current = [];
  var next = [];

  return {
    clear: function clear() {
      next = CLEARED;
      current = CLEARED;
    },
    notify: function notify() {
      var listeners = current = next;
      for (var i = 0; i < listeners.length; i++) {
        listeners[i]();
      }
    },
    get: function get() {
      return next;
    },
    subscribe: function subscribe(listener) {
      var isSubscribed = true;
      if (next === current) next = current.slice();
      next.push(listener);

      return function unsubscribe() {
        if (!isSubscribed || current === CLEARED) return;
        isSubscribed = false;

        if (next === current) next = current.slice();
        next.splice(next.indexOf(listener), 1);
      };
    }
  };
}

var Subscription = function () {
  function Subscription(store, parentSub, onStateChange) {
    _classCallCheck(this, Subscription);

    this.store = store;
    this.parentSub = parentSub;
    this.onStateChange = onStateChange;
    this.unsubscribe = null;
    this.listeners = nullListeners;
  }

  Subscription.prototype.addNestedSub = function addNestedSub(listener) {
    this.trySubscribe();
    return this.listeners.subscribe(listener);
  };

  Subscription.prototype.notifyNestedSubs = function notifyNestedSubs() {
    this.listeners.notify();
  };

  Subscription.prototype.isSubscribed = function isSubscribed() {
    return Boolean(this.unsubscribe);
  };

  Subscription.prototype.trySubscribe = function trySubscribe() {
    if (!this.unsubscribe) {
      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);

      this.listeners = createListenerCollection();
    }
  };

  Subscription.prototype.tryUnsubscribe = function tryUnsubscribe() {
    if (this.unsubscribe) {
      this.unsubscribe();
      this.unsubscribe = null;
      this.listeners.clear();
      this.listeners = nullListeners;
    }
  };

  return Subscription;
}();

exports.default = Subscription;
}, 340, null, "react-redux/lib/utils/Subscription.js");
__d(/* react-redux/lib/connect/connect.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

exports.createConnect = createConnect;

var _connectAdvanced = require(337                            ); // 337 = ../components/connectAdvanced

var _connectAdvanced2 = _interopRequireDefault(_connectAdvanced);

var _shallowEqual = require(342                    ); // 342 = ../utils/shallowEqual

var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

var _mapDispatchToProps = require(343                   ); // 343 = ./mapDispatchToProps

var _mapDispatchToProps2 = _interopRequireDefault(_mapDispatchToProps);

var _mapStateToProps = require(366                ); // 366 = ./mapStateToProps

var _mapStateToProps2 = _interopRequireDefault(_mapStateToProps);

var _mergeProps = require(367           ); // 367 = ./mergeProps

var _mergeProps2 = _interopRequireDefault(_mergeProps);

var _selectorFactory = require(368                ); // 368 = ./selectorFactory

var _selectorFactory2 = _interopRequireDefault(_selectorFactory);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _objectWithoutProperties(obj, keys) {
  var target = {};for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
  }return target;
}

function match(arg, factories, name) {
  for (var i = factories.length - 1; i >= 0; i--) {
    var result = factories[i](arg);
    if (result) return result;
  }

  return function (dispatch, options) {
    throw new Error('Invalid value of type ' + typeof arg + ' for ' + name + ' argument when connecting component ' + options.wrappedComponentName + '.');
  };
}

function strictEqual(a, b) {
  return a === b;
}

function createConnect() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref$connectHOC = _ref.connectHOC,
      connectHOC = _ref$connectHOC === undefined ? _connectAdvanced2.default : _ref$connectHOC,
      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
      mapStateToPropsFactories = _ref$mapStateToPropsF === undefined ? _mapStateToProps2.default : _ref$mapStateToPropsF,
      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
      mapDispatchToPropsFactories = _ref$mapDispatchToPro === undefined ? _mapDispatchToProps2.default : _ref$mapDispatchToPro,
      _ref$mergePropsFactor = _ref.mergePropsFactories,
      mergePropsFactories = _ref$mergePropsFactor === undefined ? _mergeProps2.default : _ref$mergePropsFactor,
      _ref$selectorFactory = _ref.selectorFactory,
      selectorFactory = _ref$selectorFactory === undefined ? _selectorFactory2.default : _ref$selectorFactory;

  return function connect(mapStateToProps, mapDispatchToProps, mergeProps) {
    var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
        _ref2$pure = _ref2.pure,
        pure = _ref2$pure === undefined ? true : _ref2$pure,
        _ref2$areStatesEqual = _ref2.areStatesEqual,
        areStatesEqual = _ref2$areStatesEqual === undefined ? strictEqual : _ref2$areStatesEqual,
        _ref2$areOwnPropsEqua = _ref2.areOwnPropsEqual,
        areOwnPropsEqual = _ref2$areOwnPropsEqua === undefined ? _shallowEqual2.default : _ref2$areOwnPropsEqua,
        _ref2$areStatePropsEq = _ref2.areStatePropsEqual,
        areStatePropsEqual = _ref2$areStatePropsEq === undefined ? _shallowEqual2.default : _ref2$areStatePropsEq,
        _ref2$areMergedPropsE = _ref2.areMergedPropsEqual,
        areMergedPropsEqual = _ref2$areMergedPropsE === undefined ? _shallowEqual2.default : _ref2$areMergedPropsE,
        extraOptions = _objectWithoutProperties(_ref2, ['pure', 'areStatesEqual', 'areOwnPropsEqual', 'areStatePropsEqual', 'areMergedPropsEqual']);

    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');
    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');
    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');

    return connectHOC(selectorFactory, _extends({
      methodName: 'connect',

      getDisplayName: function getDisplayName(name) {
        return 'Connect(' + name + ')';
      },

      shouldHandleStateChanges: Boolean(mapStateToProps),

      initMapStateToProps: initMapStateToProps,
      initMapDispatchToProps: initMapDispatchToProps,
      initMergeProps: initMergeProps,
      pure: pure,
      areStatesEqual: areStatesEqual,
      areOwnPropsEqual: areOwnPropsEqual,
      areStatePropsEqual: areStatePropsEqual,
      areMergedPropsEqual: areMergedPropsEqual

    }, extraOptions));
  };
}

exports.default = createConnect();
}, 341, null, "react-redux/lib/connect/connect.js");
__d(/* react-redux/lib/utils/shallowEqual.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = shallowEqual;
var hasOwn = Object.prototype.hasOwnProperty;

function is(x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function shallowEqual(objA, objB) {
  if (is(objA, objB)) return true;

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) return false;

  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}
}, 342, null, "react-redux/lib/utils/shallowEqual.js");
__d(/* react-redux/lib/connect/mapDispatchToProps.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.whenMapDispatchToPropsIsFunction = whenMapDispatchToPropsIsFunction;
exports.whenMapDispatchToPropsIsMissing = whenMapDispatchToPropsIsMissing;
exports.whenMapDispatchToPropsIsObject = whenMapDispatchToPropsIsObject;

var _redux = require(344    ); // 344 = redux

var _wrapMapToProps = require(364               ); // 364 = ./wrapMapToProps

function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
  return typeof mapDispatchToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapDispatchToProps, 'mapDispatchToProps') : undefined;
}

function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
  return !mapDispatchToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
    return { dispatch: dispatch };
  }) : undefined;
}

function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function (dispatch) {
    return (0, _redux.bindActionCreators)(mapDispatchToProps, dispatch);
  }) : undefined;
}

exports.default = [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];
}, 343, null, "react-redux/lib/connect/mapDispatchToProps.js");
__d(/* redux/lib/index.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;

var _createStore = require(345            ); // 345 = ./createStore

var _createStore2 = _interopRequireDefault(_createStore);

var _combineReducers = require(359                ); // 359 = ./combineReducers

var _combineReducers2 = _interopRequireDefault(_combineReducers);

var _bindActionCreators = require(361                   ); // 361 = ./bindActionCreators

var _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);

var _applyMiddleware = require(362                ); // 362 = ./applyMiddleware

var _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);

var _compose = require(363        ); // 363 = ./compose

var _compose2 = _interopRequireDefault(_compose);

var _warning = require(360              ); // 360 = ./utils/warning

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { 'default': obj };
}

function isCrushed() {}

if (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {
  (0, _warning2['default'])('You are currently using minified code outside of NODE_ENV === \'production\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
}

exports.createStore = _createStore2['default'];
exports.combineReducers = _combineReducers2['default'];
exports.bindActionCreators = _bindActionCreators2['default'];
exports.applyMiddleware = _applyMiddleware2['default'];
exports.compose = _compose2['default'];
}, 344, null, "redux/lib/index.js");
__d(/* redux/lib/createStore.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.ActionTypes = undefined;
exports['default'] = createStore;

var _isPlainObject = require(346                   ); // 346 = lodash/isPlainObject

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _symbolObservable = require(356                ); // 356 = symbol-observable

var _symbolObservable2 = _interopRequireDefault(_symbolObservable);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { 'default': obj };
}

var ActionTypes = exports.ActionTypes = {
  INIT: '@@redux/INIT'

};function createStore(reducer, preloadedState, enhancer) {
  var _ref2;

  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
    enhancer = preloadedState;
    preloadedState = undefined;
  }

  if (typeof enhancer !== 'undefined') {
    if (typeof enhancer !== 'function') {
      throw new Error('Expected the enhancer to be a function.');
    }

    return enhancer(createStore)(reducer, preloadedState);
  }

  if (typeof reducer !== 'function') {
    throw new Error('Expected the reducer to be a function.');
  }

  var currentReducer = reducer;
  var currentState = preloadedState;
  var currentListeners = [];
  var nextListeners = currentListeners;
  var isDispatching = false;

  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }

  function getState() {
    return currentState;
  }

  function subscribe(listener) {
    if (typeof listener !== 'function') {
      throw new Error('Expected listener to be a function.');
    }

    var isSubscribed = true;

    ensureCanMutateNextListeners();
    nextListeners.push(listener);

    return function unsubscribe() {
      if (!isSubscribed) {
        return;
      }

      isSubscribed = false;

      ensureCanMutateNextListeners();
      var index = nextListeners.indexOf(listener);
      nextListeners.splice(index, 1);
    };
  }

  function dispatch(action) {
    if (!(0, _isPlainObject2['default'])(action)) {
      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
    }

    if (typeof action.type === 'undefined') {
      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
    }

    if (isDispatching) {
      throw new Error('Reducers may not dispatch actions.');
    }

    try {
      isDispatching = true;
      currentState = currentReducer(currentState, action);
    } finally {
      isDispatching = false;
    }

    var listeners = currentListeners = nextListeners;
    for (var i = 0; i < listeners.length; i++) {
      var listener = listeners[i];
      listener();
    }

    return action;
  }

  function replaceReducer(nextReducer) {
    if (typeof nextReducer !== 'function') {
      throw new Error('Expected the nextReducer to be a function.');
    }

    currentReducer = nextReducer;
    dispatch({ type: ActionTypes.INIT });
  }

  function observable() {
    var _ref;

    var outerSubscribe = subscribe;
    return _ref = {
      subscribe: function subscribe(observer) {
        if (typeof observer !== 'object') {
          throw new TypeError('Expected the observer to be an object.');
        }

        function observeState() {
          if (observer.next) {
            observer.next(getState());
          }
        }

        observeState();
        var unsubscribe = outerSubscribe(observeState);
        return { unsubscribe: unsubscribe };
      }
    }, _ref[_symbolObservable2['default']] = function () {
      return this;
    }, _ref;
  }

  dispatch({ type: ActionTypes.INIT });

  return _ref2 = {
    dispatch: dispatch,
    subscribe: subscribe,
    getState: getState,
    replaceReducer: replaceReducer
  }, _ref2[_symbolObservable2['default']] = observable, _ref2;
}
}, 345, null, "redux/lib/createStore.js");
__d(/* lodash/isPlainObject.js */function(global, require, module, exports) {var baseGetTag = require(347            ), // 347 = ./_baseGetTag
    getPrototype = require(353              ), // 353 = ./_getPrototype
    isObjectLike = require(355             ); // 355 = ./isObjectLike

var objectTag = '[object Object]';

var funcProto = Function.prototype,
    objectProto = Object.prototype;

var funcToString = funcProto.toString;

var hasOwnProperty = objectProto.hasOwnProperty;

var objectCtorString = funcToString.call(Object);

function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
}

module.exports = isPlainObject;
}, 346, null, "lodash/isPlainObject.js");
__d(/* lodash/_baseGetTag.js */function(global, require, module, exports) {var Symbol = require(348        ), // 348 = ./_Symbol
    getRawTag = require(351           ), // 351 = ./_getRawTag
    objectToString = require(352                ); // 352 = ./_objectToString

var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

var symToStringTag = Symbol ? typeof Symbol === 'function' ? Symbol.toStringTag : '@@toStringTag' : undefined;

function baseGetTag(value) {
    if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
    }
    return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
}

module.exports = baseGetTag;
}, 347, null, "lodash/_baseGetTag.js");
__d(/* lodash/_Symbol.js */function(global, require, module, exports) {var root = require(349      ); // 349 = ./_root

var Symbol = root.Symbol;

module.exports = Symbol;
}, 348, null, "lodash/_Symbol.js");
__d(/* lodash/_root.js */function(global, require, module, exports) {var freeGlobal = require(350            ); // 350 = ./_freeGlobal

var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;
}, 349, null, "lodash/_root.js");
__d(/* lodash/_freeGlobal.js */function(global, require, module, exports) {
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;
}, 350, null, "lodash/_freeGlobal.js");
__d(/* lodash/_getRawTag.js */function(global, require, module, exports) {var Symbol = require(348        ); // 348 = ./_Symbol

var objectProto = Object.prototype;

var hasOwnProperty = objectProto.hasOwnProperty;

var nativeObjectToString = objectProto.toString;

var symToStringTag = Symbol ? typeof Symbol === 'function' ? Symbol.toStringTag : '@@toStringTag' : undefined;

function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;
}, 351, null, "lodash/_getRawTag.js");
__d(/* lodash/_objectToString.js */function(global, require, module, exports) {
var objectProto = Object.prototype;

var nativeObjectToString = objectProto.toString;

function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;
}, 352, null, "lodash/_objectToString.js");
__d(/* lodash/_getPrototype.js */function(global, require, module, exports) {var overArg = require(354         ); // 354 = ./_overArg

var getPrototype = overArg(Object.getPrototypeOf, Object);

module.exports = getPrototype;
}, 353, null, "lodash/_getPrototype.js");
__d(/* lodash/_overArg.js */function(global, require, module, exports) {
function overArg(func, transform) {
  return function (arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;
}, 354, null, "lodash/_overArg.js");
__d(/* lodash/isObjectLike.js */function(global, require, module, exports) {
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;
}, 355, null, "lodash/isObjectLike.js");
__d(/* symbol-observable/index.js */function(global, require, module, exports) {module.exports = require(357          ); // 357 = ./lib/index
}, 356, null, "symbol-observable/index.js");
__d(/* symbol-observable/lib/index.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _ponyfill = require(358            ); // 358 = ./ponyfill.js

var _ponyfill2 = _interopRequireDefault(_ponyfill);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { 'default': obj };
}

var root;

if (typeof self !== 'undefined') {
  root = self;
} else if (typeof window !== 'undefined') {
  root = window;
} else if (typeof global !== 'undefined') {
  root = global;
} else if (typeof module !== 'undefined') {
  root = module;
} else {
  root = Function('return this')();
}

var result = (0, _ponyfill2['default'])(root);
exports['default'] = result;
}, 357, null, "symbol-observable/lib/index.js");
__d(/* symbol-observable/lib/ponyfill.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports['default'] = symbolObservablePonyfill;
function symbolObservablePonyfill(root) {
	var result;
	var _Symbol = root.Symbol;

	if (typeof _Symbol === 'function') {
		if (_Symbol.observable) {
			result = _Symbol.observable;
		} else {
			result = _Symbol('observable');
			_Symbol.observable = result;
		}
	} else {
		result = '@@observable';
	}

	return result;
};
}, 358, null, "symbol-observable/lib/ponyfill.js");
__d(/* redux/lib/combineReducers.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports['default'] = combineReducers;

var _createStore = require(345            ); // 345 = ./createStore

var _isPlainObject = require(346                   ); // 346 = lodash/isPlainObject

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _warning = require(360              ); // 360 = ./utils/warning

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { 'default': obj };
}

function getUndefinedStateErrorMessage(key, action) {
  var actionType = action && action.type;
  var actionName = actionType && '"' + actionType.toString() + '"' || 'an action';

  return 'Given action ' + actionName + ', reducer "' + key + '" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';
}

function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
  var reducerKeys = Object.keys(reducers);
  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';

  if (reducerKeys.length === 0) {
    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
  }

  if (!(0, _isPlainObject2['default'])(inputState)) {
    return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
  }

  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
  });

  unexpectedKeys.forEach(function (key) {
    unexpectedKeyCache[key] = true;
  });

  if (unexpectedKeys.length > 0) {
    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
  }
}

function assertReducerShape(reducers) {
  Object.keys(reducers).forEach(function (key) {
    var reducer = reducers[key];
    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });

    if (typeof initialState === 'undefined') {
      throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');
    }

    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
    if (typeof reducer(undefined, { type: type }) === 'undefined') {
      throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');
    }
  });
}

function combineReducers(reducers) {
  var reducerKeys = Object.keys(reducers);
  var finalReducers = {};
  for (var i = 0; i < reducerKeys.length; i++) {
    var key = reducerKeys[i];

    if (process.env.NODE_ENV !== 'production') {
      if (typeof reducers[key] === 'undefined') {
        (0, _warning2['default'])('No reducer provided for key "' + key + '"');
      }
    }

    if (typeof reducers[key] === 'function') {
      finalReducers[key] = reducers[key];
    }
  }
  var finalReducerKeys = Object.keys(finalReducers);

  var unexpectedKeyCache = void 0;
  if (process.env.NODE_ENV !== 'production') {
    unexpectedKeyCache = {};
  }

  var shapeAssertionError = void 0;
  try {
    assertReducerShape(finalReducers);
  } catch (e) {
    shapeAssertionError = e;
  }

  return function combination() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var action = arguments[1];

    if (shapeAssertionError) {
      throw shapeAssertionError;
    }

    if (process.env.NODE_ENV !== 'production') {
      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);
      if (warningMessage) {
        (0, _warning2['default'])(warningMessage);
      }
    }

    var hasChanged = false;
    var nextState = {};
    for (var _i = 0; _i < finalReducerKeys.length; _i++) {
      var _key = finalReducerKeys[_i];
      var reducer = finalReducers[_key];
      var previousStateForKey = state[_key];
      var nextStateForKey = reducer(previousStateForKey, action);
      if (typeof nextStateForKey === 'undefined') {
        var errorMessage = getUndefinedStateErrorMessage(_key, action);
        throw new Error(errorMessage);
      }
      nextState[_key] = nextStateForKey;
      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
    }
    return hasChanged ? nextState : state;
  };
}
}, 359, null, "redux/lib/combineReducers.js");
__d(/* redux/lib/utils/warning.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports['default'] = warning;

function warning(message) {
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }

  try {
    throw new Error(message);
  } catch (e) {}
}
}, 360, null, "redux/lib/utils/warning.js");
__d(/* redux/lib/bindActionCreators.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports['default'] = bindActionCreators;
function bindActionCreator(actionCreator, dispatch) {
  return function () {
    return dispatch(actionCreator.apply(undefined, arguments));
  };
}

function bindActionCreators(actionCreators, dispatch) {
  if (typeof actionCreators === 'function') {
    return bindActionCreator(actionCreators, dispatch);
  }

  if (typeof actionCreators !== 'object' || actionCreators === null) {
    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
  }

  var keys = Object.keys(actionCreators);
  var boundActionCreators = {};
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var actionCreator = actionCreators[key];
    if (typeof actionCreator === 'function') {
      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
    }
  }
  return boundActionCreators;
}
}, 361, null, "redux/lib/bindActionCreators.js");
__d(/* redux/lib/applyMiddleware.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

exports['default'] = applyMiddleware;

var _compose = require(363        ); // 363 = ./compose

var _compose2 = _interopRequireDefault(_compose);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { 'default': obj };
}

function applyMiddleware() {
  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
    middlewares[_key] = arguments[_key];
  }

  return function (createStore) {
    return function (reducer, preloadedState, enhancer) {
      var store = createStore(reducer, preloadedState, enhancer);
      var _dispatch = store.dispatch;
      var chain = [];

      var middlewareAPI = {
        getState: store.getState,
        dispatch: function dispatch(action) {
          return _dispatch(action);
        }
      };
      chain = middlewares.map(function (middleware) {
        return middleware(middlewareAPI);
      });
      _dispatch = _compose2['default'].apply(undefined, chain)(store.dispatch);

      return _extends({}, store, {
        dispatch: _dispatch
      });
    };
  };
}
}, 362, null, "redux/lib/applyMiddleware.js");
__d(/* redux/lib/compose.js */function(global, require, module, exports) {"use strict";

exports.__esModule = true;
exports["default"] = compose;


function compose() {
  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  if (funcs.length === 0) {
    return function (arg) {
      return arg;
    };
  }

  if (funcs.length === 1) {
    return funcs[0];
  }

  return funcs.reduce(function (a, b) {
    return function () {
      return a(b.apply(undefined, arguments));
    };
  });
}
}, 363, null, "redux/lib/compose.js");
__d(/* react-redux/lib/connect/wrapMapToProps.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.wrapMapToPropsConstant = wrapMapToPropsConstant;
exports.getDependsOnOwnProps = getDependsOnOwnProps;
exports.wrapMapToPropsFunc = wrapMapToPropsFunc;

var _verifyPlainObject = require(365                         ); // 365 = ../utils/verifyPlainObject

var _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function wrapMapToPropsConstant(getConstant) {
  return function initConstantSelector(dispatch, options) {
    var constant = getConstant(dispatch, options);

    function constantSelector() {
      return constant;
    }
    constantSelector.dependsOnOwnProps = false;
    return constantSelector;
  };
}

function getDependsOnOwnProps(mapToProps) {
  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
}

function wrapMapToPropsFunc(mapToProps, methodName) {
  return function initProxySelector(dispatch, _ref) {
    var displayName = _ref.displayName;

    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
    };

    proxy.dependsOnOwnProps = true;

    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
      proxy.mapToProps = mapToProps;
      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
      var props = proxy(stateOrDispatch, ownProps);

      if (typeof props === 'function') {
        proxy.mapToProps = props;
        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
        props = proxy(stateOrDispatch, ownProps);
      }

      if (process.env.NODE_ENV !== 'production') (0, _verifyPlainObject2.default)(props, displayName, methodName);

      return props;
    };

    return proxy;
  };
}
}, 364, null, "react-redux/lib/connect/wrapMapToProps.js");
__d(/* react-redux/lib/utils/verifyPlainObject.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = verifyPlainObject;

var _isPlainObject = require(346                   ); // 346 = lodash/isPlainObject

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _warning = require(336        ); // 336 = ./warning

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function verifyPlainObject(value, displayName, methodName) {
  if (!(0, _isPlainObject2.default)(value)) {
    (0, _warning2.default)(methodName + '() in ' + displayName + ' must return a plain object. Instead received ' + value + '.');
  }
}
}, 365, null, "react-redux/lib/utils/verifyPlainObject.js");
__d(/* react-redux/lib/connect/mapStateToProps.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.whenMapStateToPropsIsFunction = whenMapStateToPropsIsFunction;
exports.whenMapStateToPropsIsMissing = whenMapStateToPropsIsMissing;

var _wrapMapToProps = require(364               ); // 364 = ./wrapMapToProps

function whenMapStateToPropsIsFunction(mapStateToProps) {
  return typeof mapStateToProps === 'function' ? (0, _wrapMapToProps.wrapMapToPropsFunc)(mapStateToProps, 'mapStateToProps') : undefined;
}

function whenMapStateToPropsIsMissing(mapStateToProps) {
  return !mapStateToProps ? (0, _wrapMapToProps.wrapMapToPropsConstant)(function () {
    return {};
  }) : undefined;
}

exports.default = [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];
}, 366, null, "react-redux/lib/connect/mapStateToProps.js");
__d(/* react-redux/lib/connect/mergeProps.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

exports.defaultMergeProps = defaultMergeProps;
exports.wrapMergePropsFunc = wrapMergePropsFunc;
exports.whenMergePropsIsFunction = whenMergePropsIsFunction;
exports.whenMergePropsIsOmitted = whenMergePropsIsOmitted;

var _verifyPlainObject = require(365                         ); // 365 = ../utils/verifyPlainObject

var _verifyPlainObject2 = _interopRequireDefault(_verifyPlainObject);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function defaultMergeProps(stateProps, dispatchProps, ownProps) {
  return _extends({}, ownProps, stateProps, dispatchProps);
}

function wrapMergePropsFunc(mergeProps) {
  return function initMergePropsProxy(dispatch, _ref) {
    var displayName = _ref.displayName,
        pure = _ref.pure,
        areMergedPropsEqual = _ref.areMergedPropsEqual;

    var hasRunOnce = false;
    var mergedProps = void 0;

    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);

      if (hasRunOnce) {
        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
      } else {
        hasRunOnce = true;
        mergedProps = nextMergedProps;

        if (process.env.NODE_ENV !== 'production') (0, _verifyPlainObject2.default)(mergedProps, displayName, 'mergeProps');
      }

      return mergedProps;
    };
  };
}

function whenMergePropsIsFunction(mergeProps) {
  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
}

function whenMergePropsIsOmitted(mergeProps) {
  return !mergeProps ? function () {
    return defaultMergeProps;
  } : undefined;
}

exports.default = [whenMergePropsIsFunction, whenMergePropsIsOmitted];
}, 367, null, "react-redux/lib/connect/mergeProps.js");
__d(/* react-redux/lib/connect/selectorFactory.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.impureFinalPropsSelectorFactory = impureFinalPropsSelectorFactory;
exports.pureFinalPropsSelectorFactory = pureFinalPropsSelectorFactory;
exports.default = finalPropsSelectorFactory;

var _verifySubselectors = require(369                   ); // 369 = ./verifySubselectors

var _verifySubselectors2 = _interopRequireDefault(_verifySubselectors);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _objectWithoutProperties(obj, keys) {
  var target = {};for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
  }return target;
}

function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
  return function impureFinalPropsSelector(state, ownProps) {
    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
  };
}

function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
  var areStatesEqual = _ref.areStatesEqual,
      areOwnPropsEqual = _ref.areOwnPropsEqual,
      areStatePropsEqual = _ref.areStatePropsEqual;

  var hasRunAtLeastOnce = false;
  var state = void 0;
  var ownProps = void 0;
  var stateProps = void 0;
  var dispatchProps = void 0;
  var mergedProps = void 0;

  function handleFirstCall(firstState, firstOwnProps) {
    state = firstState;
    ownProps = firstOwnProps;
    stateProps = mapStateToProps(state, ownProps);
    dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    hasRunAtLeastOnce = true;
    return mergedProps;
  }

  function handleNewPropsAndNewState() {
    stateProps = mapStateToProps(state, ownProps);

    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);

    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewProps() {
    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);

    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);

    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewState() {
    var nextStateProps = mapStateToProps(state, ownProps);
    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
    stateProps = nextStateProps;

    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);

    return mergedProps;
  }

  function handleSubsequentCalls(nextState, nextOwnProps) {
    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
    var stateChanged = !areStatesEqual(nextState, state);
    state = nextState;
    ownProps = nextOwnProps;

    if (propsChanged && stateChanged) return handleNewPropsAndNewState();
    if (propsChanged) return handleNewProps();
    if (stateChanged) return handleNewState();
    return mergedProps;
  }

  return function pureFinalPropsSelector(nextState, nextOwnProps) {
    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
  };
}

function finalPropsSelectorFactory(dispatch, _ref2) {
  var initMapStateToProps = _ref2.initMapStateToProps,
      initMapDispatchToProps = _ref2.initMapDispatchToProps,
      initMergeProps = _ref2.initMergeProps,
      options = _objectWithoutProperties(_ref2, ['initMapStateToProps', 'initMapDispatchToProps', 'initMergeProps']);

  var mapStateToProps = initMapStateToProps(dispatch, options);
  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
  var mergeProps = initMergeProps(dispatch, options);

  if (process.env.NODE_ENV !== 'production') {
    (0, _verifySubselectors2.default)(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);
  }

  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;

  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
}
}, 368, null, "react-redux/lib/connect/selectorFactory.js");
__d(/* react-redux/lib/connect/verifySubselectors.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = verifySubselectors;

var _warning = require(336               ); // 336 = ../utils/warning

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function verify(selector, methodName, displayName) {
  if (!selector) {
    throw new Error('Unexpected value for ' + methodName + ' in ' + displayName + '.');
  } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {
    if (!selector.hasOwnProperty('dependsOnOwnProps')) {
      (0, _warning2.default)('The selector for ' + methodName + ' of ' + displayName + ' did not specify a value for dependsOnOwnProps.');
    }
  }
}

function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {
  verify(mapStateToProps, 'mapStateToProps', displayName);
  verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
  verify(mergeProps, 'mergeProps', displayName);
}
}, 369, null, "react-redux/lib/connect/verifySubselectors.js");
__d(/* YuanXC/src/config/stackNavigator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/config/stackNavigator.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _reactNavigation = require(371               ); // 371 = react-navigation

var _CardStackStyleInterpolator = require(397                                                              ); // 397 = react-navigation/src/views/CardStack/CardStackStyleInterpolator

var _CardStackStyleInterpolator2 = babelHelpers.interopRequireDefault(_CardStackStyleInterpolator);

var _global = require(433               ); // 433 = ../styles/global

var _global2 = babelHelpers.interopRequireDefault(_global);

var _imgs = require(436                ); // 436 = ../resources/imgs

var _imgs2 = babelHelpers.interopRequireDefault(_imgs);

var _Touchable = require(497                      ); // 497 = ../components/Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var _TabBar = require(498              ); // 498 = ../pages/TabBar

var _TabBar2 = babelHelpers.interopRequireDefault(_TabBar);

var _Login = require(636             ); // 636 = ../pages/Login

var _Login2 = babelHelpers.interopRequireDefault(_Login);

var _Setting = require(640               ); // 640 = ../pages/Setting

var _Setting2 = babelHelpers.interopRequireDefault(_Setting);

var _Feedback = require(642                ); // 642 = ../pages/Feedback

var _Feedback2 = babelHelpers.interopRequireDefault(_Feedback);

var _HelpCenter = require(643                  ); // 643 = ../pages/HelpCenter

var _HelpCenter2 = babelHelpers.interopRequireDefault(_HelpCenter);

var _ModifyPassword = require(644                      ); // 644 = ../pages/ModifyPassword

var _ModifyPassword2 = babelHelpers.interopRequireDefault(_ModifyPassword);

var _Register = require(645                ); // 645 = ../pages/Register

var _Register2 = babelHelpers.interopRequireDefault(_Register);

var _ForgetPassword = require(647                      ); // 647 = ../pages/ForgetPassword

var _ForgetPassword2 = babelHelpers.interopRequireDefault(_ForgetPassword);

var _SafeSetting = require(648                   ); // 648 = ../pages/SafeSetting

var _SafeSetting2 = babelHelpers.interopRequireDefault(_SafeSetting);

var _Authentication = require(649                      ); // 649 = ../pages/Authentication

var _Authentication2 = babelHelpers.interopRequireDefault(_Authentication);

var _BankCardBind = require(650                    ); // 650 = ../pages/BankCardBind

var _BankCardBind2 = babelHelpers.interopRequireDefault(_BankCardBind);

var _BankList = require(651                ); // 651 = ../pages/BankList

var _BankList2 = babelHelpers.interopRequireDefault(_BankList);

var _CapitalRecord = require(653                     ); // 653 = ../pages/CapitalRecord

var _CapitalRecord2 = babelHelpers.interopRequireDefault(_CapitalRecord);

var _CapitalList = require(655                   ); // 655 = ../pages/CapitalList

var _CapitalList2 = babelHelpers.interopRequireDefault(_CapitalList);

var _CapitalDetail = require(657                     ); // 657 = ../pages/CapitalDetail

var _CapitalDetail2 = babelHelpers.interopRequireDefault(_CapitalDetail);

var _BonusList = require(659                 ); // 659 = ../pages/BonusList

var _BonusList2 = babelHelpers.interopRequireDefault(_BonusList);

var _WebView = require(661               ); // 661 = ../pages/WebView

var _WebView2 = babelHelpers.interopRequireDefault(_WebView);

var _BankCardDetail = require(668                      ); // 668 = ../pages/BankCardDetail

var _BankCardDetail2 = babelHelpers.interopRequireDefault(_BankCardDetail);

var _PayPasswordInit = require(670                       ); // 670 = ../pages/PayPasswordInit

var _PayPasswordInit2 = babelHelpers.interopRequireDefault(_PayPasswordInit);

var _PayPasswordModify = require(671                         ); // 671 = ../pages/PayPasswordModify

var _PayPasswordModify2 = babelHelpers.interopRequireDefault(_PayPasswordModify);

var _MessageList = require(672                   ); // 672 = ../pages/MessageList

var _MessageList2 = babelHelpers.interopRequireDefault(_MessageList);

var _MessageDetail = require(675                     ); // 675 = ../pages/MessageDetail

var _MessageDetail2 = babelHelpers.interopRequireDefault(_MessageDetail);

var _Recharge = require(677                ); // 677 = ../pages/Recharge

var _Recharge2 = babelHelpers.interopRequireDefault(_Recharge);

var _Cash = require(679            ); // 679 = ../pages/Cash

var _Cash2 = babelHelpers.interopRequireDefault(_Cash);

var _Experience = require(680                  ); // 680 = ../pages/Experience

var _Experience2 = babelHelpers.interopRequireDefault(_Experience);

var _ExperienceDetail = require(681                        ); // 681 = ../pages/ExperienceDetail

var _ExperienceDetail2 = babelHelpers.interopRequireDefault(_ExperienceDetail);

var _Asset = require(682             ); // 682 = ../pages/Asset

var _Asset2 = babelHelpers.interopRequireDefault(_Asset);

var _Income = require(684              ); // 684 = ../pages/Income

var _Income2 = babelHelpers.interopRequireDefault(_Income);

var _FinanceDetail = require(685                     ); // 685 = ../pages/FinanceDetail

var _FinanceDetail2 = babelHelpers.interopRequireDefault(_FinanceDetail);

var _FinanceBuy = require(701                  ); // 701 = ../pages/FinanceBuy

var _FinanceBuy2 = babelHelpers.interopRequireDefault(_FinanceBuy);

var _AboutUs = require(703               ); // 703 = ../pages/AboutUs

var _AboutUs2 = babelHelpers.interopRequireDefault(_AboutUs);

var _NotifyDetail = require(704                    ); // 704 = ../pages/NotifyDetail

var _NotifyDetail2 = babelHelpers.interopRequireDefault(_NotifyDetail);

var _PhoneBind = require(705                 ); // 705 = ../pages/PhoneBind

var _PhoneBind2 = babelHelpers.interopRequireDefault(_PhoneBind);

var securityPages = ['UserInfo', 'FinanceBuy', 'MessageList'];
var StackOptions = function StackOptions(_ref, f) {
  var navigation = _ref.navigation;
  var state = navigation.state;


  var headerStyle = { backgroundColor: '#fff', borderBottomWidth: 0 };
  if (_reactNative.Platform.OS === "android") {
    var height = _reactNative.StatusBar.currentHeight;
    headerStyle.height = 56 + 10;
    headerStyle.paddingTop = height - 10;
  }
  var headerTitleStyle = { left: 0, alignSelf: 'center', fontSize: 17, color: '#333', fontWeight: 'normal' };
  var headerBackTitle = '';
  var headerTitle = state.params && state.params.title;
  var headerLeft = state.params && state.params.headerLeft || _react2.default.createElement(
    _Touchable2.default,
    { style: [_global2.default.headerButton],
      onPress: function onPress() {
        return navigation.dispatch(_reactNavigation.NavigationActions.back({ key: global.backRouter }));
      }, __source: {
        fileName: _jsxFileName,
        lineNumber: 58
      }
    },
    _imgs2.default.leftArrow()
  );
  var headerRight = state.params && state.params.headerRight;
  var gesturesEnabled = state.params && state.params.gesturesEnabled != undefined ? state.params.gesturesEnabled : true;
  var result = {
    headerStyle: headerStyle,
    headerTitleStyle: headerTitleStyle,
    headerBackTitle: headerBackTitle,
    headerTitle: headerTitle,
    headerLeft: headerLeft,
    gesturesEnabled: gesturesEnabled
  };
  state.params && state.params.hideHeader && (result.header = null);
  if (!f) {
    result.headerRight = _react2.default.createElement(_reactNative.View, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 74
      }
    });
  } else if (f === 2) {
    result.headerRight = headerRight || _react2.default.createElement(_reactNative.View, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 76
      }
    });
  }
  return result;
};

var App = (0, _reactNavigation.StackNavigator)({

  Main: {
    screen: _TabBar2.default,
    navigationOptions: { header: null }
  },
  Login: {
    screen: _Login2.default,
    navigationOptions: { header: null }
  },
  Feedback: {
    screen: _Feedback2.default,
    navigationOptions: function navigationOptions(_ref2) {
      var navigation = _ref2.navigation;
      return StackOptions({ navigation: navigation });
    }
  },
  HelpCenter: {
    screen: _HelpCenter2.default,
    navigationOptions: function navigationOptions(_ref3) {
      var navigation = _ref3.navigation;
      return StackOptions({ navigation: navigation });
    }
  },
  ModifyPassword: {
    screen: _ModifyPassword2.default,
    navigationOptions: function navigationOptions(_ref4) {
      var navigation = _ref4.navigation;
      return StackOptions({ navigation: navigation });
    }
  },
  Register: {
    screen: _Register2.default,
    navigationOptions: function navigationOptions(_ref5) {
      var navigation = _ref5.navigation;
      return StackOptions({ navigation: navigation });
    }
  },
  ForgetPassword: {
    screen: _ForgetPassword2.default,
    navigationOptions: function navigationOptions(_ref6) {
      var navigation = _ref6.navigation;
      return StackOptions({ navigation: navigation });
    }
  },
  Setting: {
    screen: _Setting2.default,
    navigationOptions: function navigationOptions(_ref7) {
      var navigation = _ref7.navigation;
      return StackOptions({ navigation: navigation });
    }
  },
  SafeSetting: {
    screen: _SafeSetting2.default,
    navigationOptions: function navigationOptions(_ref8) {
      var navigation = _ref8.navigation;
      return StackOptions({ navigation: navigation });
    }
  },
  Authentication: {
    screen: _Authentication2.default,
    navigationOptions: function navigationOptions(_ref9) {
      var navigation = _ref9.navigation;
      return StackOptions({ navigation: navigation });
    }
  },
  BankCardBind: {
    screen: _BankCardBind2.default,
    navigationOptions: function navigationOptions(_ref10) {
      var navigation = _ref10.navigation;
      return StackOptions({ navigation: navigation });
    }
  },
  BankList: {
    screen: _BankList2.default,
    navigationOptions: function navigationOptions(_ref11) {
      var navigation = _ref11.navigation;
      return StackOptions({ navigation: navigation });
    }
  },
  CapitalRecord: {
    screen: _CapitalRecord2.default,
    navigationOptions: function navigationOptions(_ref12) {
      var navigation = _ref12.navigation;
      return StackOptions({ navigation: navigation });
    }
  },
  CapitalList: {
    screen: _CapitalList2.default,
    navigationOptions: function navigationOptions(_ref13) {
      var navigation = _ref13.navigation;
      return StackOptions({ navigation: navigation });
    }
  },
  CapitalDetail: {
    screen: _CapitalDetail2.default,
    navigationOptions: function navigationOptions(_ref14) {
      var navigation = _ref14.navigation;
      return StackOptions({ navigation: navigation }, 2);
    }
  },
  BonusList: {
    screen: _BonusList2.default,
    navigationOptions: function navigationOptions(_ref15) {
      var navigation = _ref15.navigation;
      return StackOptions({ navigation: navigation }, 1);
    }
  },
  WebView: {
    screen: _WebView2.default,
    navigationOptions: function navigationOptions(_ref16) {
      var navigation = _ref16.navigation;
      return StackOptions({ navigation: navigation }, 2);
    }
  },
  BankCardDetail: {
    screen: _BankCardDetail2.default,
    navigationOptions: function navigationOptions(_ref17) {
      var navigation = _ref17.navigation;
      return StackOptions({ navigation: navigation }, 1);
    }
  },
  PayPasswordInit: {
    screen: _PayPasswordInit2.default,
    navigationOptions: function navigationOptions(_ref18) {
      var navigation = _ref18.navigation;
      return StackOptions({ navigation: navigation });
    }
  },
  PayPasswordModify: {
    screen: _PayPasswordModify2.default,
    navigationOptions: function navigationOptions(_ref19) {
      var navigation = _ref19.navigation;
      return StackOptions({ navigation: navigation });
    }
  },
  MessageList: {
    screen: _MessageList2.default,
    navigationOptions: function navigationOptions(_ref20) {
      var navigation = _ref20.navigation;
      return StackOptions({ navigation: navigation });
    }
  },
  MessageDetail: {
    screen: _MessageDetail2.default,
    navigationOptions: function navigationOptions(_ref21) {
      var navigation = _ref21.navigation;
      return StackOptions({ navigation: navigation });
    }
  },
  Recharge: {
    screen: _Recharge2.default,
    navigationOptions: function navigationOptions(_ref22) {
      var navigation = _ref22.navigation;
      return StackOptions({ navigation: navigation });
    }
  },
  Cash: {
    screen: _Cash2.default,
    navigationOptions: function navigationOptions(_ref23) {
      var navigation = _ref23.navigation;
      return StackOptions({ navigation: navigation });
    }
  },
  Experience: {
    screen: _Experience2.default,
    navigationOptions: { header: null }
  },
  ExperienceDetail: {
    screen: _ExperienceDetail2.default,
    navigationOptions: function navigationOptions(_ref24) {
      var navigation = _ref24.navigation;
      return StackOptions({ navigation: navigation });
    }
  },
  Asset: {
    screen: _Asset2.default,
    navigationOptions: function navigationOptions(_ref25) {
      var navigation = _ref25.navigation;
      return StackOptions({ navigation: navigation });
    }
  },
  Income: {
    screen: _Income2.default,
    navigationOptions: function navigationOptions(_ref26) {
      var navigation = _ref26.navigation;
      return StackOptions({ navigation: navigation });
    }
  },
  FinanceDetail: {
    screen: _FinanceDetail2.default,
    navigationOptions: function navigationOptions(_ref27) {
      var navigation = _ref27.navigation;
      return StackOptions({ navigation: navigation });
    }
  },
  FinanceBuy: {
    screen: _FinanceBuy2.default,
    navigationOptions: function navigationOptions(_ref28) {
      var navigation = _ref28.navigation;
      return StackOptions({ navigation: navigation });
    }
  },
  AboutUs: {
    screen: _AboutUs2.default,
    navigationOptions: function navigationOptions(_ref29) {
      var navigation = _ref29.navigation;
      return StackOptions({ navigation: navigation });
    }
  },
  NotifyDetail: {
    screen: _NotifyDetail2.default,
    navigationOptions: function navigationOptions(_ref30) {
      var navigation = _ref30.navigation;
      return StackOptions({ navigation: navigation });
    }
  },
  PhoneBind: {
    screen: _PhoneBind2.default,
    navigationOptions: function navigationOptions(_ref31) {
      var navigation = _ref31.navigation;
      return StackOptions({ navigation: navigation });
    }
  }
}, {
  initialRouteName: 'Main',
  headerMode: 'screen',
  transitionConfig: function transitionConfig() {
    return {
      screenInterpolator: _CardStackStyleInterpolator2.default.forHorizontal
    };
  },
  cardStyle: {
    backgroundColor: '#F7F7F7'
  }
});
var defaultGetStateForAction = App.router.getStateForAction;

App.router.getStateForAction = function (action, state) {
  if (!global.token && securityPages.indexOf(action.routeName) != -1) {
    action.routeName === "UserInfo" && (global.initRouter = action.routeName);
    action.routeName = 'Login';
    action.params && (action.params.hideHeader = false);
  } else if (action.type === "Navigation/BACK" && global.initRouter) {
    global.initRouter = null;
  }
  return defaultGetStateForAction(action, state);
};

exports.default = App;
}, 370, null, "YuanXC/src/config/stackNavigator.js");
__d(/* react-navigation/src/react-navigation.js */function(global, require, module, exports) {

module.exports = {
  get createNavigationContainer() {
    return require(372                          ).default; // 372 = ./createNavigationContainer
  },
  get StateUtils() {
    return require(377           ).default; // 377 = ./StateUtils
  },
  get addNavigationHelpers() {
    return require(375                     ).default; // 375 = ./addNavigationHelpers
  },
  get NavigationActions() {
    return require(374                  ).default; // 374 = ./NavigationActions
  },

  get createNavigator() {
    return require(378                           ).default; // 378 = ./navigators/createNavigator
  },
  get StackNavigator() {
    return require(379                          ).default; // 379 = ./navigators/StackNavigator
  },
  get TabNavigator() {
    return require(410                        ).default; // 410 = ./navigators/TabNavigator
  },
  get DrawerNavigator() {
    return require(426                           ).default; // 426 = ./navigators/DrawerNavigator
  },

  get StackRouter() {
    return require(401                    ).default; // 401 = ./routers/StackRouter
  },
  get TabRouter() {
    return require(411                  ).default; // 411 = ./routers/TabRouter
  },

  get Transitioner() {
    return require(398                   ).default; // 398 = ./views/Transitioner
  },
  get CardStackTransitioner() {
    return require(380                                      ).default; // 380 = ./views/CardStack/CardStackTransitioner
  },
  get CardStack() {
    return require(381                          ).default; // 381 = ./views/CardStack/CardStack
  },
  get Card() {
    return require(383                     ).default; // 383 = ./views/CardStack/Card
  },
  get SafeAreaView() {
    return require(393                   ).default; // 393 = ./views/SafeAreaView
  },

  get Header() {
    return require(386                    ).default; // 386 = ./views/Header/Header
  },
  get HeaderTitle() {
    return require(387                         ).default; // 387 = ./views/Header/HeaderTitle
  },
  get HeaderBackButton() {
    return require(388                              ).default; // 388 = ./views/Header/HeaderBackButton
  },

  get DrawerView() {
    return require(428                        ).default; // 428 = ./views/Drawer/DrawerView
  },
  get DrawerItems() {
    return require(431                                  ).default; // 431 = ./views/Drawer/DrawerNavigatorItems
  },

  get TabView() {
    return require(412                      ).default; // 412 = ./views/TabView/TabView
  },
  get TabBarTop() {
    return require(423                        ).default; // 423 = ./views/TabView/TabBarTop
  },
  get TabBarBottom() {
    return require(425                           ).default; // 425 = ./views/TabView/TabBarBottom
  },

  get withNavigation() {
    return require(432                     ).default; // 432 = ./views/withNavigation
  }
};
}, 371, null, "react-navigation/src/react-navigation.js");
__d(/* react-navigation/src/createNavigationContainer.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/createNavigationContainer.js';
exports.default = createNavigationContainer;

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _PlatformHelpers = require(373                ); // 373 = ./PlatformHelpers

var _NavigationActions = require(374                  ); // 374 = ./NavigationActions

var _NavigationActions2 = babelHelpers.interopRequireDefault(_NavigationActions);

var _addNavigationHelpers = require(375                     ); // 375 = ./addNavigationHelpers

var _addNavigationHelpers2 = babelHelpers.interopRequireDefault(_addNavigationHelpers);

var _invariant = require(376                ); // 376 = ./utils/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

function createNavigationContainer(Component) {
  var NavigationContainer = function (_React$Component) {
    babelHelpers.inherits(NavigationContainer, _React$Component);

    function NavigationContainer(props) {
      babelHelpers.classCallCheck(this, NavigationContainer);

      var _this = babelHelpers.possibleConstructorReturn(this, (NavigationContainer.__proto__ || Object.getPrototypeOf(NavigationContainer)).call(this, props));

      _this.subs = null;

      _this._handleOpenURL = function (_ref) {
        var url = _ref.url;

        var parsedUrl = _this._urlToPathAndParams(url);
        if (parsedUrl) {
          var path = parsedUrl.path,
              params = parsedUrl.params;

          var action = Component.router.getActionForPathAndParams(path, params);
          if (action) {
            _this.dispatch(action);
          }
        }
      };

      _this.dispatch = function (inputAction) {
        var action = _NavigationActions2.default.mapDeprecatedActionAndWarn(inputAction);
        if (!_this._isStateful()) {
          return false;
        }
        _this._nav = _this._nav || _this.state.nav;
        var oldNav = _this._nav;
        (0, _invariant2.default)(oldNav, 'should be set in constructor if stateful');
        var nav = Component.router.getStateForAction(action, oldNav);
        if (nav && nav !== oldNav) {
          _this._nav = nav;
          _this.setState({ nav: nav }, function () {
            return _this._onNavigationStateChange(oldNav, nav, action);
          });
          return true;
        }
        return false;
      };

      _this._validateProps(props);

      _this.state = {
        nav: _this._isStateful() ? Component.router.getStateForAction(_NavigationActions2.default.init()) : null
      };
      return _this;
    }

    babelHelpers.createClass(NavigationContainer, [{
      key: '_isStateful',
      value: function _isStateful() {
        return !this.props.navigation;
      }
    }, {
      key: '_validateProps',
      value: function _validateProps(props) {
        if (this._isStateful()) {
          return;
        }

        var navigation = props.navigation,
            screenProps = props.screenProps,
            containerProps = babelHelpers.objectWithoutProperties(props, ['navigation', 'screenProps']);


        var keys = Object.keys(containerProps);

        if (keys.length !== 0) {
          throw new Error('This navigator has both navigation and container props, so it is ' + ('unclear if it should own its own state. Remove props: "' + keys.join(', ') + '" ') + 'if the navigator should get its state from the navigation prop. If the ' + 'navigator should maintain its own state, do not pass a navigation prop.');
        }
      }
    }, {
      key: '_urlToPathAndParams',
      value: function _urlToPathAndParams(url) {
        var params = {};
        var delimiter = this.props.uriPrefix || '://';
        var path = url.split(delimiter)[1];
        if (typeof path === 'undefined') {
          path = url;
        }
        return {
          path: path,
          params: params
        };
      }
    }, {
      key: '_onNavigationStateChange',
      value: function _onNavigationStateChange(prevNav, nav, action) {
        if (typeof this.props.onNavigationStateChange === 'undefined' && this._isStateful() && !!process.env.REACT_NAV_LOGGING) {
          if (console.group) {
            console.group('Navigation Dispatch: ');
            console.log('Action: ', action);
            console.log('New State: ', nav);
            console.log('Last State: ', prevNav);
            console.groupEnd();
          } else {
            console.log('Navigation Dispatch: ', {
              action: action,
              newState: nav,
              lastState: prevNav
            });
          }

          return;
        }

        if (typeof this.props.onNavigationStateChange === 'function') {
          this.props.onNavigationStateChange(prevNav, nav, action);
        }
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        this._validateProps(nextProps);
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate() {
        if (this._nav === this.state.nav) {
          this._nav = null;
        }
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        var _this2 = this;

        if (!this._isStateful()) {
          return;
        }

        this.subs = _PlatformHelpers.BackHandler.addEventListener('hardwareBackPress', function () {
          return _this2.dispatch(_NavigationActions2.default.back());
        });

        _PlatformHelpers.Linking.addEventListener('url', this._handleOpenURL);

        _PlatformHelpers.Linking.getInitialURL().then(function (url) {
          return url && _this2._handleOpenURL({ url: url });
        });
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        _PlatformHelpers.Linking.removeEventListener('url', this._handleOpenURL);
        this.subs && this.subs.remove();
      }
    }, {
      key: 'render',
      value: function render() {
        var navigation = this.props.navigation;
        if (this._isStateful()) {
          var _nav = this.state.nav;
          (0, _invariant2.default)(_nav, 'should be set in constructor if stateful');
          if (!this._navigation || this._navigation.state !== _nav) {
            this._navigation = (0, _addNavigationHelpers2.default)({
              dispatch: this.dispatch,
              state: _nav
            });
          }
          navigation = this._navigation;
        }
        (0, _invariant2.default)(navigation, 'failed to get navigation');
        return _react2.default.createElement(Component, babelHelpers.extends({}, this.props, { navigation: navigation, __source: {
            fileName: _jsxFileName,
            lineNumber: 216
          }
        }));
      }
    }]);
    return NavigationContainer;
  }(_react2.default.Component);

  NavigationContainer.router = Component.router;


  return NavigationContainer;
}
}, 372, null, "react-navigation/src/createNavigationContainer.js");
__d(/* react-navigation/src/PlatformHelpers.native.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Linking = exports.BackHandler = undefined;

var _reactNative = require(12            ); // 12 = react-native

var BackHandler = _reactNative.BackHandler || _reactNative.BackAndroid;

exports.BackHandler = BackHandler;
exports.Linking = _reactNative.Linking;
}, 373, null, "react-navigation/src/PlatformHelpers.native.js");
__d(/* react-navigation/src/NavigationActions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});


var BACK = 'Navigation/BACK';
var INIT = 'Navigation/INIT';
var NAVIGATE = 'Navigation/NAVIGATE';
var RESET = 'Navigation/RESET';
var SET_PARAMS = 'Navigation/SET_PARAMS';
var URI = 'Navigation/URI';

var createAction = function createAction(type, fn) {
  fn.toString = function () {
    return type;
  };
  return fn;
};

var back = createAction(BACK, function () {
  var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return {
    type: BACK,
    key: payload.key
  };
});
var init = createAction(INIT, function () {
  var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var action = {
    type: INIT
  };
  if (payload.params) {
    action.params = payload.params;
  }
  return action;
});
var navigate = createAction(NAVIGATE, function (payload) {
  var action = {
    type: NAVIGATE,
    routeName: payload.routeName
  };
  if (payload.params) {
    action.params = payload.params;
  }
  if (payload.action) {
    action.action = payload.action;
  }
  return action;
});
var reset = createAction(RESET, function (payload) {
  return {
    type: RESET,
    index: payload.index,
    key: payload.key,
    actions: payload.actions
  };
});
var setParams = createAction(SET_PARAMS, function (payload) {
  return {
    type: SET_PARAMS,
    key: payload.key,
    params: payload.params
  };
});
var uri = createAction(URI, function (payload) {
  return {
    type: URI,
    uri: payload.uri
  };
});

var mapDeprecatedNavigateAction = function mapDeprecatedNavigateAction(action) {
  if (action.type === 'Navigate') {
    var payload = {
      routeName: action.routeName,
      params: action.params
    };
    if (action.action) {
      payload.action = mapDeprecatedNavigateAction(action.action);
    }
    return navigate(payload);
  }
  return action;
};

var mapDeprecatedAction = function mapDeprecatedAction(action) {
  if (action.type === 'Back') {
    return back(action);
  } else if (action.type === 'Init') {
    return init(action);
  } else if (action.type === 'Navigate') {
    return mapDeprecatedNavigateAction(action);
  } else if (action.type === 'Reset') {
    return reset({
      index: action.index,
      key: action.key,
      actions: action.actions.map(mapDeprecatedNavigateAction)
    });
  } else if (action.type === 'SetParams') {
    return setParams(action);
  }
  return action;
};

var mapDeprecatedActionAndWarn = function mapDeprecatedActionAndWarn(action) {
  var newAction = mapDeprecatedAction(action);
  if (newAction !== action) {
    var oldType = action.type;
    var newType = newAction.type;
    console.warn(['The action type \'' + oldType + '\' has been renamed to \'' + newType + '\'.', '\'' + oldType + '\' will continue to work while in beta but will be removed', 'in the first major release. Moving forward, you should use the', 'action constants and action creators exported by this library in', "the 'actions' object.", 'See https://github.com/react-community/react-navigation/pull/120 for', 'more details.'].join(' '));
  }
  return newAction;
};

exports.default = {
  BACK: BACK,
  INIT: INIT,
  NAVIGATE: NAVIGATE,
  RESET: RESET,
  SET_PARAMS: SET_PARAMS,
  URI: URI,

  back: back,
  init: init,
  navigate: navigate,
  reset: reset,
  setParams: setParams,
  uri: uri,

  mapDeprecatedActionAndWarn: mapDeprecatedActionAndWarn
};
}, 374, null, "react-navigation/src/NavigationActions.js");
__d(/* react-navigation/src/addNavigationHelpers.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (navigation) {
  return babelHelpers.extends({}, navigation, {
    goBack: function goBack(key) {
      var actualizedKey = key;
      if (key === undefined && navigation.state.key) {
        (0, _invariant2.default)(typeof navigation.state.key === 'string', 'key should be a string');
        actualizedKey = navigation.state.key;
      }
      return navigation.dispatch(_NavigationActions2.default.back({ key: actualizedKey }));
    },
    navigate: function navigate(routeName, params, action) {
      return navigation.dispatch(_NavigationActions2.default.navigate({ routeName: routeName, params: params, action: action }));
    },

    setParams: function setParams(params) {
      (0, _invariant2.default)(navigation.state.key && typeof navigation.state.key === 'string', 'setParams cannot be called by root navigator');
      var key = navigation.state.key;
      return navigation.dispatch(_NavigationActions2.default.setParams({ params: params, key: key }));
    }
  });
};

var _NavigationActions = require(374                  ); // 374 = ./NavigationActions

var _NavigationActions2 = babelHelpers.interopRequireDefault(_NavigationActions);

var _invariant = require(376                ); // 376 = ./utils/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);
}, 375, null, "react-navigation/src/addNavigationHelpers.js");
__d(/* react-navigation/src/utils/invariant.js */function(global, require, module, exports) {

'use strict';

var validateFormat = function validateFormat(format) {};

if (__DEV__) {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1;
    throw error;
  }
}

module.exports = invariant;
}, 376, null, "react-navigation/src/utils/invariant.js");
__d(/* react-navigation/src/StateUtils.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _invariant = require(376                ); // 376 = ./utils/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var StateUtils = {
  get: function get(state, key) {
    return state.routes.find(function (route) {
      return route.key === key;
    }) || null;
  },
  indexOf: function indexOf(state, key) {
    return state.routes.map(function (route) {
      return route.key;
    }).indexOf(key);
  },
  has: function has(state, key) {
    return !!state.routes.some(function (route) {
      return route.key === key;
    });
  },
  push: function push(state, route) {
    (0, _invariant2.default)(StateUtils.indexOf(state, route.key) === -1, 'should not push route with duplicated key %s', route.key);

    var routes = state.routes.slice();
    routes.push(route);

    return babelHelpers.extends({}, state, {
      index: routes.length - 1,
      routes: routes
    });
  },
  pop: function pop(state) {
    if (state.index <= 0) {
      return state;
    }
    var routes = state.routes.slice(0, -1);
    return babelHelpers.extends({}, state, {
      index: routes.length - 1,
      routes: routes
    });
  },
  jumpToIndex: function jumpToIndex(state, index) {
    if (index === state.index) {
      return state;
    }

    (0, _invariant2.default)(!!state.routes[index], 'invalid index %s to jump to', index);

    return babelHelpers.extends({}, state, {
      index: index
    });
  },
  jumpTo: function jumpTo(state, key) {
    var index = StateUtils.indexOf(state, key);
    return StateUtils.jumpToIndex(state, index);
  },
  back: function back(state) {
    var index = state.index - 1;
    var route = state.routes[index];
    return route ? StateUtils.jumpToIndex(state, index) : state;
  },
  forward: function forward(state) {
    var index = state.index + 1;
    var route = state.routes[index];
    return route ? StateUtils.jumpToIndex(state, index) : state;
  },
  replaceAt: function replaceAt(state, key, route) {
    var index = StateUtils.indexOf(state, key);
    return StateUtils.replaceAtIndex(state, index, route);
  },
  replaceAtIndex: function replaceAtIndex(state, index, route) {
    (0, _invariant2.default)(!!state.routes[index], 'invalid index %s for replacing route %s', index, route.key);

    if (state.routes[index] === route) {
      return state;
    }

    var routes = state.routes.slice();
    routes[index] = route;

    return babelHelpers.extends({}, state, {
      index: index,
      routes: routes
    });
  },
  reset: function reset(state, routes, index) {
    (0, _invariant2.default)(routes.length && Array.isArray(routes), 'invalid routes to replace');

    var nextIndex = index === undefined ? routes.length - 1 : index;

    if (state.routes.length === routes.length && state.index === nextIndex) {
      var compare = function compare(route, ii) {
        return routes[ii] === route;
      };
      if (state.routes.every(compare)) {
        return state;
      }
    }

    (0, _invariant2.default)(!!routes[nextIndex], 'invalid index %s to reset', nextIndex);

    return babelHelpers.extends({}, state, {
      index: nextIndex,
      routes: routes
    });
  }
};

exports.default = StateUtils;
}, 377, null, "react-navigation/src/StateUtils.js");
__d(/* react-navigation/src/navigators/createNavigator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/navigators/createNavigator.js';
exports.default = createNavigator;

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);
function createNavigator(router, routeConfigs, navigatorConfig, navigatorType) {
  return function (NavigationView) {
    var Navigator = function (_React$Component) {
      babelHelpers.inherits(Navigator, _React$Component);

      function Navigator() {
        babelHelpers.classCallCheck(this, Navigator);
        return babelHelpers.possibleConstructorReturn(this, (Navigator.__proto__ || Object.getPrototypeOf(Navigator)).apply(this, arguments));
      }

      babelHelpers.createClass(Navigator, [{
        key: 'render',
        value: function render() {
          return React.createElement(NavigationView, babelHelpers.extends({}, this.props, { router: router, __source: {
              fileName: _jsxFileName,
              lineNumber: 52
            }
          }));
        }
      }]);
      return Navigator;
    }(React.Component);

    Navigator.router = router;
    Navigator.routeConfigs = routeConfigs;
    Navigator.navigatorConfig = navigatorConfig;
    Navigator.navigatorType = navigatorType;
    Navigator.navigationOptions = null;


    return Navigator;
  };
}
}, 378, null, "react-navigation/src/navigators/createNavigator.js");
__d(/* react-navigation/src/navigators/StackNavigator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/navigators/StackNavigator.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _createNavigationContainer = require(372                           ); // 372 = ../createNavigationContainer

var _createNavigationContainer2 = babelHelpers.interopRequireDefault(_createNavigationContainer);

var _createNavigator = require(378                ); // 378 = ./createNavigator

var _createNavigator2 = babelHelpers.interopRequireDefault(_createNavigator);

var _CardStackTransitioner = require(380                                       ); // 380 = ../views/CardStack/CardStackTransitioner

var _CardStackTransitioner2 = babelHelpers.interopRequireDefault(_CardStackTransitioner);

var _StackRouter = require(401                     ); // 401 = ../routers/StackRouter

var _StackRouter2 = babelHelpers.interopRequireDefault(_StackRouter);

var _NavigatorTypes = require(409               ); // 409 = ./NavigatorTypes

var _NavigatorTypes2 = babelHelpers.interopRequireDefault(_NavigatorTypes);

exports.default = function (routeConfigMap) {
  var stackConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var initialRouteName = stackConfig.initialRouteName,
      initialRouteParams = stackConfig.initialRouteParams,
      paths = stackConfig.paths,
      headerMode = stackConfig.headerMode,
      mode = stackConfig.mode,
      cardStyle = stackConfig.cardStyle,
      transitionConfig = stackConfig.transitionConfig,
      onTransitionStart = stackConfig.onTransitionStart,
      onTransitionEnd = stackConfig.onTransitionEnd,
      navigationOptions = stackConfig.navigationOptions;


  var stackRouterConfig = {
    initialRouteName: initialRouteName,
    initialRouteParams: initialRouteParams,
    paths: paths,
    navigationOptions: navigationOptions
  };

  var router = (0, _StackRouter2.default)(routeConfigMap, stackRouterConfig);

  var navigator = (0, _createNavigator2.default)(router, routeConfigMap, stackConfig, _NavigatorTypes2.default.STACK)(function (props) {
    return React.createElement(_CardStackTransitioner2.default, babelHelpers.extends({}, props, {
      headerMode: headerMode,
      mode: mode,
      cardStyle: cardStyle,
      transitionConfig: transitionConfig,
      onTransitionStart: onTransitionStart,
      onTransitionEnd: onTransitionEnd,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 60
      }
    }));
  });

  return (0, _createNavigationContainer2.default)(navigator);
};
}, 379, null, "react-navigation/src/navigators/StackNavigator.js");
__d(/* react-navigation/src/views/CardStack/CardStackTransitioner.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/views/CardStack/CardStackTransitioner.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _CardStack = require(381          ); // 381 = ./CardStack

var _CardStack2 = babelHelpers.interopRequireDefault(_CardStack);

var _CardStackStyleInterpolator = require(397                           ); // 397 = ./CardStackStyleInterpolator

var _CardStackStyleInterpolator2 = babelHelpers.interopRequireDefault(_CardStackStyleInterpolator);

var _Transitioner = require(398              ); // 398 = ../Transitioner

var _Transitioner2 = babelHelpers.interopRequireDefault(_Transitioner);

var _TransitionConfigs = require(396                  ); // 396 = ./TransitionConfigs

var _TransitionConfigs2 = babelHelpers.interopRequireDefault(_TransitionConfigs);

var NativeAnimatedModule = _reactNative.NativeModules && _reactNative.NativeModules.NativeAnimatedModule;

var CardStackTransitioner = function (_React$Component) {
  babelHelpers.inherits(CardStackTransitioner, _React$Component);

  function CardStackTransitioner() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, CardStackTransitioner);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = CardStackTransitioner.__proto__ || Object.getPrototypeOf(CardStackTransitioner)).call.apply(_ref, [this].concat(args))), _this), _this._configureTransition = function (transitionProps, prevTransitionProps) {
      var isModal = _this.props.mode === 'modal';

      var transitionSpec = babelHelpers.extends({}, _TransitionConfigs2.default.getTransitionConfig(_this.props.transitionConfig, transitionProps, prevTransitionProps, isModal).transitionSpec);
      if (!!NativeAnimatedModule && _CardStackStyleInterpolator2.default.canUseNativeDriver()) {
        transitionSpec.useNativeDriver = true;
      }
      return transitionSpec;
    }, _this._render = function (props) {
      var _this$props = _this.props,
          screenProps = _this$props.screenProps,
          headerMode = _this$props.headerMode,
          mode = _this$props.mode,
          router = _this$props.router,
          cardStyle = _this$props.cardStyle,
          transitionConfig = _this$props.transitionConfig;

      return React.createElement(_CardStack2.default, babelHelpers.extends({
        screenProps: screenProps,
        headerMode: headerMode,
        mode: mode,
        router: router,
        cardStyle: cardStyle,
        transitionConfig: transitionConfig
      }, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 97
        }
      }));
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(CardStackTransitioner, [{
    key: 'render',
    value: function render() {
      return React.createElement(_Transitioner2.default, {
        configureTransition: this._configureTransition,
        navigation: this.props.navigation,
        render: this._render,
        onTransitionStart: this.props.onTransitionStart,
        onTransitionEnd: this.props.onTransitionEnd,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 49
        }
      });
    }
  }]);
  return CardStackTransitioner;
}(React.Component);

CardStackTransitioner.defaultProps = {
  mode: 'card'
};
exports.default = CardStackTransitioner;
}, 380, null, "react-navigation/src/views/CardStack/CardStackTransitioner.js");
__d(/* react-navigation/src/views/CardStack/CardStack.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/views/CardStack/CardStack.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _clamp = require(382    ); // 382 = clamp

var _clamp2 = babelHelpers.interopRequireDefault(_clamp);

var _reactNative = require(12            ); // 12 = react-native

var _Card = require(383     ); // 383 = ./Card

var _Card2 = babelHelpers.interopRequireDefault(_Card);

var _Header = require(386               ); // 386 = ../Header/Header

var _Header2 = babelHelpers.interopRequireDefault(_Header);

var _NavigationActions = require(374                      ); // 374 = ../../NavigationActions

var _NavigationActions2 = babelHelpers.interopRequireDefault(_NavigationActions);

var _addNavigationHelpers = require(375                         ); // 375 = ../../addNavigationHelpers

var _addNavigationHelpers2 = babelHelpers.interopRequireDefault(_addNavigationHelpers);

var _SceneView = require(395           ); // 395 = ../SceneView

var _SceneView2 = babelHelpers.interopRequireDefault(_SceneView);

var _TransitionConfigs = require(396                  ); // 396 = ./TransitionConfigs

var _TransitionConfigs2 = babelHelpers.interopRequireDefault(_TransitionConfigs);

var emptyFunction = function emptyFunction() {};

var ANIMATION_DURATION = 500;

var POSITION_THRESHOLD = 1 / 2;

var RESPOND_THRESHOLD = 20;

var GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 25;
var GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;

var animatedSubscribeValue = function animatedSubscribeValue(animatedValue) {
  if (!animatedValue.__isNative) {
    return;
  }
  if (Object.keys(animatedValue._listeners).length === 0) {
    animatedValue.addListener(emptyFunction);
  }
};

var CardStack = function (_React$Component) {
  babelHelpers.inherits(CardStack, _React$Component);

  function CardStack() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, CardStack);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = CardStack.__proto__ || Object.getPrototypeOf(CardStack)).call.apply(_ref, [this].concat(args))), _this), _this._gestureStartValue = 0, _this._isResponding = false, _this._immediateIndex = null, _this._screenDetails = {}, _this._getScreenDetails = function (scene) {
      var _this$props = _this.props,
          screenProps = _this$props.screenProps,
          navigation = _this$props.navigation,
          router = _this$props.router;

      var screenDetails = _this._screenDetails[scene.key];
      if (!screenDetails || screenDetails.state !== scene.route) {
        var screenNavigation = (0, _addNavigationHelpers2.default)({
          dispatch: navigation.dispatch,
          state: scene.route
        });
        screenDetails = {
          state: scene.route,
          navigation: screenNavigation,
          options: router.getScreenOptions(screenNavigation, screenProps)
        };
        _this._screenDetails[scene.key] = screenDetails;
      }
      return screenDetails;
    }, _this._getTransitionConfig = function () {
      var isModal = _this.props.mode === 'modal';

      return _TransitionConfigs2.default.getTransitionConfig(_this.props.transitionConfig, {}, {}, isModal);
    }, _this._renderCard = function (scene) {
      var _this$_getTransitionC = _this._getTransitionConfig(),
          screenInterpolator = _this$_getTransitionC.screenInterpolator;

      var style = screenInterpolator && screenInterpolator(babelHelpers.extends({}, _this.props, { scene: scene }));

      var SceneComponent = _this.props.router.getComponentForRouteName(scene.route.routeName);

      return React.createElement(
        _Card2.default,
        babelHelpers.extends({}, _this.props, {
          key: 'card_' + scene.key,
          style: [style, _this.props.cardStyle],
          scene: scene,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 436
          }
        }),
        _this._renderInnerScene(SceneComponent, scene)
      );
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(CardStack, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(props) {
      var _this2 = this;

      if (props.screenProps !== this.props.screenProps) {
        this._screenDetails = {};
      }
      props.scenes.forEach(function (newScene) {
        if (_this2._screenDetails[newScene.key] && _this2._screenDetails[newScene.key].state !== newScene.route) {
          _this2._screenDetails[newScene.key] = null;
        }
      });
    }
  }, {
    key: '_renderHeader',
    value: function _renderHeader(scene, headerMode) {
      var header = this._getScreenDetails(scene).options.header;

      if (typeof header !== 'undefined' && typeof header !== 'function') {
        return header;
      }

      var renderHeader = header || function (props) {
        return React.createElement(_Header2.default, babelHelpers.extends({}, props, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 165
          }
        }));
      };

      var _props = this.props,
          mode = _props.mode,
          passProps = babelHelpers.objectWithoutProperties(_props, ['mode']);


      return renderHeader(babelHelpers.extends({}, passProps, {
        scene: scene,
        mode: headerMode,
        getScreenDetails: this._getScreenDetails
      }));
    }
  }, {
    key: '_animatedSubscribe',
    value: function _animatedSubscribe(props) {
      animatedSubscribeValue(props.layout.width);
      animatedSubscribeValue(props.layout.height);
      animatedSubscribeValue(props.position);
    }
  }, {
    key: '_reset',
    value: function _reset(resetToIndex, duration) {
      _reactNative.Animated.timing(this.props.position, {
        toValue: resetToIndex,
        duration: duration,
        easing: _reactNative.Easing.linear(),
        useNativeDriver: this.props.position.__isNative
      }).start();
    }
  }, {
    key: '_goBack',
    value: function _goBack(backFromIndex, duration) {
      var _this3 = this;

      var _props2 = this.props,
          navigation = _props2.navigation,
          position = _props2.position,
          scenes = _props2.scenes;

      var toValue = Math.max(backFromIndex - 1, 0);

      this._immediateIndex = toValue;

      _reactNative.Animated.timing(position, {
        toValue: toValue,
        duration: duration,
        easing: _reactNative.Easing.linear(),
        useNativeDriver: position.__isNative
      }).start(function () {
        _this3._immediateIndex = null;
        var backFromScene = scenes.find(function (s) {
          return s.index === toValue + 1;
        });
        if (!_this3._isResponding && backFromScene) {
          navigation.dispatch(_NavigationActions2.default.back({ key: backFromScene.route.key }));
        }
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this4 = this;

      var floatingHeader = null;
      var headerMode = this._getHeaderMode();
      if (headerMode === 'float') {
        floatingHeader = this._renderHeader(this.props.scene, headerMode);
      }
      var _props3 = this.props,
          navigation = _props3.navigation,
          position = _props3.position,
          layout = _props3.layout,
          scene = _props3.scene,
          scenes = _props3.scenes,
          mode = _props3.mode;
      var index = navigation.state.index;

      var isVertical = mode === 'modal';

      var responder = _reactNative.PanResponder.create({
        onPanResponderTerminate: function onPanResponderTerminate() {
          _this4._isResponding = false;
          _this4._reset(index, 0);
        },
        onPanResponderGrant: function onPanResponderGrant() {
          position.stopAnimation(function (value) {
            _this4._isResponding = true;
            _this4._gestureStartValue = value;
          });
        },
        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(event, gesture) {
          if (index !== scene.index) {
            return false;
          }
          var immediateIndex = _this4._immediateIndex == null ? index : _this4._immediateIndex;
          var currentDragDistance = gesture[isVertical ? 'dy' : 'dx'];
          var currentDragPosition = event.nativeEvent[isVertical ? 'pageY' : 'pageX'];
          var axisLength = isVertical ? layout.height.__getValue() : layout.width.__getValue();
          var axisHasBeenMeasured = !!axisLength;

          var screenEdgeDistance = currentDragPosition - currentDragDistance;

          var _getScreenDetails$opt = _this4._getScreenDetails(scene).options.gestureResponseDistance,
              userGestureResponseDistance = _getScreenDetails$opt === undefined ? {} : _getScreenDetails$opt;

          var gestureResponseDistance = isVertical ? userGestureResponseDistance.vertical || GESTURE_RESPONSE_DISTANCE_VERTICAL : userGestureResponseDistance.horizontal || GESTURE_RESPONSE_DISTANCE_HORIZONTAL;

          if (screenEdgeDistance > gestureResponseDistance) {
            return false;
          }

          var hasDraggedEnough = Math.abs(currentDragDistance) > RESPOND_THRESHOLD;

          var isOnFirstCard = immediateIndex === 0;
          var shouldSetResponder = hasDraggedEnough && axisHasBeenMeasured && !isOnFirstCard;
          return shouldSetResponder;
        },
        onPanResponderMove: function onPanResponderMove(event, gesture) {
          var startValue = _this4._gestureStartValue;
          var axis = isVertical ? 'dy' : 'dx';
          var axisDistance = isVertical ? layout.height.__getValue() : layout.width.__getValue();
          var currentValue = _reactNative.I18nManager.isRTL && axis === 'dx' ? startValue + gesture[axis] / axisDistance : startValue - gesture[axis] / axisDistance;
          var value = (0, _clamp2.default)(index - 1, currentValue, index);
          position.setValue(value);
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return false;
        },
        onPanResponderRelease: function onPanResponderRelease(event, gesture) {
          if (!_this4._isResponding) {
            return;
          }
          _this4._isResponding = false;

          var immediateIndex = _this4._immediateIndex == null ? index : _this4._immediateIndex;

          var axisDistance = isVertical ? layout.height.__getValue() : layout.width.__getValue();
          var movedDistance = gesture[isVertical ? 'dy' : 'dx'];
          var gestureVelocity = gesture[isVertical ? 'vy' : 'vx'];
          var defaultVelocity = axisDistance / ANIMATION_DURATION;
          var velocity = Math.max(Math.abs(gestureVelocity), defaultVelocity);
          var resetDuration = movedDistance / velocity;
          var goBackDuration = (axisDistance - movedDistance) / velocity;

          position.stopAnimation(function (value) {
            if (gestureVelocity < -0.5) {
              _this4._reset(immediateIndex, resetDuration);
              return;
            }
            if (gestureVelocity > 0.5) {
              _this4._goBack(immediateIndex, goBackDuration);
              return;
            }

            if (value <= index - POSITION_THRESHOLD) {
              _this4._goBack(immediateIndex, goBackDuration);
            } else {
              _this4._reset(immediateIndex, resetDuration);
            }
          });
        }
      });

      var _getScreenDetails = this._getScreenDetails(scene),
          options = _getScreenDetails.options;

      var gesturesEnabled = typeof options.gesturesEnabled === 'boolean' ? options.gesturesEnabled : _reactNative.Platform.OS === 'ios';

      var handlers = gesturesEnabled ? responder.panHandlers : {};
      var containerStyle = [styles.container, this._getTransitionConfig().containerStyle];

      return React.createElement(
        _reactNative.View,
        babelHelpers.extends({}, handlers, { style: containerStyle, __source: {
            fileName: _jsxFileName,
            lineNumber: 364
          }
        }),
        React.createElement(
          _reactNative.View,
          { style: styles.scenes, __source: {
              fileName: _jsxFileName,
              lineNumber: 365
            }
          },
          scenes.map(function (s) {
            return _this4._renderCard(s);
          })
        ),
        floatingHeader
      );
    }
  }, {
    key: '_getHeaderMode',
    value: function _getHeaderMode() {
      if (this.props.headerMode) {
        return this.props.headerMode;
      }
      if (_reactNative.Platform.OS === 'android' || this.props.mode === 'modal') {
        return 'screen';
      }
      return 'float';
    }
  }, {
    key: '_renderInnerScene',
    value: function _renderInnerScene(SceneComponent, scene) {
      var _getScreenDetails2 = this._getScreenDetails(scene),
          navigation = _getScreenDetails2.navigation;

      var screenProps = this.props.screenProps;

      var headerMode = this._getHeaderMode();
      if (headerMode === 'screen') {
        return React.createElement(
          _reactNative.View,
          { style: styles.container, __source: {
              fileName: _jsxFileName,
              lineNumber: 392
            }
          },
          React.createElement(
            _reactNative.View,
            { style: { flex: 1 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 393
              }
            },
            React.createElement(_SceneView2.default, {
              screenProps: screenProps,
              navigation: navigation,
              component: SceneComponent,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 394
              }
            })
          ),
          this._renderHeader(scene, headerMode)
        );
      }
      return React.createElement(_SceneView2.default, {
        screenProps: this.props.screenProps,
        navigation: navigation,
        component: SceneComponent,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 405
        }
      });
    }
  }]);
  return CardStack;
}(React.Component);

var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,

    flexDirection: 'column-reverse'
  },
  scenes: {
    flex: 1
  }
});

exports.default = CardStack;
}, 381, null, "react-navigation/src/views/CardStack/CardStack.js");
__d(/* clamp/index.js */function(global, require, module, exports) {module.exports = clamp;

function clamp(value, min, max) {
  return min < max ? value < min ? min : value > max ? max : value : value < max ? max : value > min ? min : value;
}
}, 382, null, "clamp/index.js");
__d(/* react-navigation/src/views/CardStack/Card.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/views/CardStack/Card.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _PointerEventsContainer = require(384                       ); // 384 = ./PointerEventsContainer

var _PointerEventsContainer2 = babelHelpers.interopRequireDefault(_PointerEventsContainer);

var Card = function (_React$Component) {
  babelHelpers.inherits(Card, _React$Component);

  function Card() {
    babelHelpers.classCallCheck(this, Card);
    return babelHelpers.possibleConstructorReturn(this, (Card.__proto__ || Object.getPrototypeOf(Card)).apply(this, arguments));
  }

  babelHelpers.createClass(Card, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          pointerEvents = _props.pointerEvents,
          style = _props.style;

      return React.createElement(
        _reactNative.Animated.View,
        {
          pointerEvents: pointerEvents,
          ref: this.props.onComponentRef,
          style: [styles.main, style],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 26
          }
        },
        children
      );
    }
  }]);
  return Card;
}(React.Component);

var styles = _reactNative.StyleSheet.create({
  main: {
    backgroundColor: '#E9E9EF',
    bottom: 0,
    left: 0,
    position: 'absolute',
    right: 0,
    shadowColor: 'black',
    shadowOffset: { width: 0, height: 0 },
    shadowOpacity: 0.2,
    shadowRadius: 5,
    top: 0
  }
});

Card = (0, _PointerEventsContainer2.default)(Card);

exports.default = Card;
}, 383, null, "react-navigation/src/views/CardStack/Card.js");
__d(/* react-navigation/src/views/CardStack/PointerEventsContainer.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/views/CardStack/PointerEventsContainer.js';
exports.default = create;

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _invariant = require(376                    ); // 376 = ../../utils/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var _AnimatedValueSubscription = require(385                           ); // 385 = ../AnimatedValueSubscription

var _AnimatedValueSubscription2 = babelHelpers.interopRequireDefault(_AnimatedValueSubscription);

var MIN_POSITION_OFFSET = 0.01;

function create(Component) {
  var Container = function (_React$Component) {
    babelHelpers.inherits(Container, _React$Component);

    function Container(props, context) {
      babelHelpers.classCallCheck(this, Container);

      var _this = babelHelpers.possibleConstructorReturn(this, (Container.__proto__ || Object.getPrototypeOf(Container)).call(this, props, context));

      _this._pointerEvents = _this._computePointerEvents();
      return _this;
    }

    babelHelpers.createClass(Container, [{
      key: 'componentWillMount',
      value: function componentWillMount() {
        this._onPositionChange = this._onPositionChange.bind(this);
        this._onComponentRef = this._onComponentRef.bind(this);
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        this._bindPosition(this.props);
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        this._positionListener && this._positionListener.remove();
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        this._bindPosition(nextProps);
      }
    }, {
      key: 'render',
      value: function render() {
        this._pointerEvents = this._computePointerEvents();
        return React.createElement(Component, babelHelpers.extends({}, this.props, {
          pointerEvents: this._pointerEvents,
          onComponentRef: this._onComponentRef,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 55
          }
        }));
      }
    }, {
      key: '_onComponentRef',
      value: function _onComponentRef(component) {
        this._component = component;
        if (component) {
          (0, _invariant2.default)(typeof component.setNativeProps === 'function', 'component must implement method `setNativeProps`');
        }
      }
    }, {
      key: '_bindPosition',
      value: function _bindPosition(props) {
        this._positionListener && this._positionListener.remove();
        this._positionListener = new _AnimatedValueSubscription2.default(props.position, this._onPositionChange);
      }
    }, {
      key: '_onPositionChange',
      value: function _onPositionChange() {
        if (this._component) {
          var pointerEvents = this._computePointerEvents();
          if (this._pointerEvents !== pointerEvents) {
            this._pointerEvents = pointerEvents;
            this._component.setNativeProps({ pointerEvents: pointerEvents });
          }
        }
      }
    }, {
      key: '_computePointerEvents',
      value: function _computePointerEvents() {
        var _props = this.props,
            navigation = _props.navigation,
            position = _props.position,
            scene = _props.scene;


        if (scene.isStale || navigation.state.index !== scene.index) {
          return scene.index > navigation.state.index ? 'box-only' : 'none';
        }

        var offset = position.__getAnimatedValue() - navigation.state.index;
        if (Math.abs(offset) > MIN_POSITION_OFFSET) {
          return 'box-only';
        }

        return 'auto';
      }
    }]);
    return Container;
  }(React.Component);

  return Container;
}
}, 384, null, "react-navigation/src/views/CardStack/PointerEventsContainer.js");
__d(/* react-navigation/src/views/AnimatedValueSubscription.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(12            ); // 12 = react-native

var AnimatedValueSubscription = function () {
  function AnimatedValueSubscription(value, callback) {
    babelHelpers.classCallCheck(this, AnimatedValueSubscription);

    this._value = value;
    this._token = value.addListener(callback);
  }

  babelHelpers.createClass(AnimatedValueSubscription, [{
    key: 'remove',
    value: function remove() {
      this._value.removeListener(this._token);
    }
  }]);
  return AnimatedValueSubscription;
}();

exports.default = AnimatedValueSubscription;
}, 385, null, "react-navigation/src/views/AnimatedValueSubscription.js");
__d(/* react-navigation/src/views/Header/Header.js */function(global, require, module, exports) {

'no babel-plugin-flow-react-proptypes';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/views/Header/Header.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _HeaderTitle = require(387            ); // 387 = ./HeaderTitle

var _HeaderTitle2 = babelHelpers.interopRequireDefault(_HeaderTitle);

var _HeaderBackButton = require(388                 ); // 388 = ./HeaderBackButton

var _HeaderBackButton2 = babelHelpers.interopRequireDefault(_HeaderBackButton);

var _HeaderStyleInterpolator = require(391                        ); // 391 = ./HeaderStyleInterpolator

var _HeaderStyleInterpolator2 = babelHelpers.interopRequireDefault(_HeaderStyleInterpolator);

var _SafeAreaView = require(393              ); // 393 = ../SafeAreaView

var _SafeAreaView2 = babelHelpers.interopRequireDefault(_SafeAreaView);

var _withOrientation = require(394                 ); // 394 = ../withOrientation

var _withOrientation2 = babelHelpers.interopRequireDefault(_withOrientation);

var APPBAR_HEIGHT = _reactNative.Platform.OS === 'ios' ? 44 : 56;
var STATUSBAR_HEIGHT = _reactNative.Platform.OS === 'ios' ? 20 : 0;
var TITLE_OFFSET = _reactNative.Platform.OS === 'ios' ? 70 : 56;

var Header = function (_React$PureComponent) {
  babelHelpers.inherits(Header, _React$PureComponent);

  function Header() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, Header);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = Header.__proto__ || Object.getPrototypeOf(Header)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      widths: {}
    }, _this._navigateBack = function () {
      _this.props.navigation.goBack(null);
    }, _this._renderTitleComponent = function (props) {
      var details = _this.props.getScreenDetails(props.scene);
      var headerTitle = details.options.headerTitle;
      if (React.isValidElement(headerTitle)) {
        return headerTitle;
      }
      var titleString = _this._getHeaderTitleString(props.scene);

      var titleStyle = details.options.headerTitleStyle;
      var color = details.options.headerTintColor;
      var allowFontScaling = details.options.headerTitleAllowFontScaling;

      var onLayoutIOS = _reactNative.Platform.OS === 'ios' ? function (e) {
        _this.setState({
          widths: babelHelpers.extends({}, _this.state.widths, babelHelpers.defineProperty({}, props.scene.key, e.nativeEvent.layout.width))
        });
      } : undefined;

      var RenderedHeaderTitle = headerTitle && typeof headerTitle !== 'string' ? headerTitle : _HeaderTitle2.default;
      return React.createElement(
        RenderedHeaderTitle,
        {
          onLayout: onLayoutIOS,
          allowFontScaling: allowFontScaling == null ? true : allowFontScaling,
          style: [color ? { color: color } : null, titleStyle],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 132
          }
        },
        titleString
      );
    }, _this._renderLeftComponent = function (props) {
      var _this$props$getScreen = _this.props.getScreenDetails(props.scene),
          options = _this$props$getScreen.options;

      if (React.isValidElement(options.headerLeft) || options.headerLeft === null) {
        return options.headerLeft;
      }
      if (props.scene.index === 0) {
        return null;
      }
      var backButtonTitle = _this._getBackButtonTitleString(props.scene);
      var truncatedBackButtonTitle = _this._getTruncatedBackButtonTitle(props.scene);
      var width = _this.state.widths[props.scene.key] ? (_this.props.layout.initWidth - _this.state.widths[props.scene.key]) / 2 : undefined;
      var RenderedLeftComponent = options.headerLeft || _HeaderBackButton2.default;
      return React.createElement(RenderedLeftComponent, {
        onPress: _this._navigateBack,
        pressColorAndroid: options.headerPressColorAndroid,
        tintColor: options.headerTintColor,
        title: backButtonTitle,
        truncatedTitle: truncatedBackButtonTitle,
        titleStyle: options.headerBackTitleStyle,
        width: width,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 163
        }
      });
    }, _this._renderRightComponent = function (props) {
      var details = _this.props.getScreenDetails(props.scene);
      var headerRight = details.options.headerRight;

      return headerRight || null;
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(Header, [{
    key: '_getHeaderTitleString',
    value: function _getHeaderTitleString(scene) {
      var sceneOptions = this.props.getScreenDetails(scene).options;
      if (typeof sceneOptions.headerTitle === 'string') {
        return sceneOptions.headerTitle;
      }
      return sceneOptions.title;
    }
  }, {
    key: '_getLastScene',
    value: function _getLastScene(scene) {
      return this.props.scenes.find(function (s) {
        return s.index === scene.index - 1;
      });
    }
  }, {
    key: '_getBackButtonTitleString',
    value: function _getBackButtonTitleString(scene) {
      var lastScene = this._getLastScene(scene);
      if (!lastScene) {
        return null;
      }
      var headerBackTitle = this.props.getScreenDetails(lastScene).options.headerBackTitle;

      if (headerBackTitle || headerBackTitle === null) {
        return headerBackTitle;
      }
      return this._getHeaderTitleString(lastScene);
    }
  }, {
    key: '_getTruncatedBackButtonTitle',
    value: function _getTruncatedBackButtonTitle(scene) {
      var lastScene = this._getLastScene(scene);
      if (!lastScene) {
        return null;
      }
      return this.props.getScreenDetails(lastScene).options.headerTruncatedBackTitle;
    }
  }, {
    key: '_renderLeft',
    value: function _renderLeft(props) {
      return this._renderSubView(props, 'left', this._renderLeftComponent, _HeaderStyleInterpolator2.default.forLeft);
    }
  }, {
    key: '_renderTitle',
    value: function _renderTitle(props, options) {
      var style = {};

      if (_reactNative.Platform.OS === 'android') {
        if (!options.hasLeftComponent) {
          style.left = 0;
        }
        if (!options.hasRightComponent) {
          style.right = 0;
        }
      } else if (_reactNative.Platform.OS === 'ios' && !options.hasLeftComponent && !options.hasRightComponent) {
        style.left = 0;
        style.right = 0;
      }

      return this._renderSubView(babelHelpers.extends({}, props, { style: style }), 'title', this._renderTitleComponent, _HeaderStyleInterpolator2.default.forCenter);
    }
  }, {
    key: '_renderRight',
    value: function _renderRight(props) {
      return this._renderSubView(props, 'right', this._renderRightComponent, _HeaderStyleInterpolator2.default.forRight);
    }
  }, {
    key: '_renderSubView',
    value: function _renderSubView(props, name, renderer, styleInterpolator) {
      var scene = props.scene;
      var index = scene.index,
          isStale = scene.isStale,
          key = scene.key;


      var offset = this.props.navigation.state.index - index;

      if (Math.abs(offset) > 2) {
        return null;
      }

      var subView = renderer(props);

      if (subView == null) {
        return null;
      }

      var pointerEvents = offset !== 0 || isStale ? 'none' : 'box-none';

      return React.createElement(
        _reactNative.Animated.View,
        {
          pointerEvents: pointerEvents,
          key: name + '_' + key,
          style: [styles.item, styles[name], props.style, styleInterpolator(babelHelpers.extends({}, this.props, props))],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 252
          }
        },
        subView
      );
    }
  }, {
    key: '_renderHeader',
    value: function _renderHeader(props) {
      var left = this._renderLeft(props);
      var right = this._renderRight(props);
      var title = this._renderTitle(props, {
        hasLeftComponent: !!left,
        hasRightComponent: !!right
      });

      return React.createElement(
        _reactNative.View,
        {
          style: [_reactNative.StyleSheet.absoluteFill, styles.header],
          key: 'scene_' + props.scene.key,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 280
          }
        },
        title,
        left,
        right
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var appBar = void 0;

      if (this.props.mode === 'float') {
        var scenesProps = this.props.scenes.map(function (scene) {
          return {
            position: _this2.props.position,
            progress: _this2.props.progress,
            scene: scene
          };
        });
        appBar = scenesProps.map(this._renderHeader, this);
      } else {
        appBar = this._renderHeader({
          position: new _reactNative.Animated.Value(this.props.scene.index),
          progress: new _reactNative.Animated.Value(0),
          scene: this.props.scene
        });
      }

      var _props = this.props,
          scenes = _props.scenes,
          scene = _props.scene,
          position = _props.position,
          screenProps = _props.screenProps,
          progress = _props.progress,
          isLandscape = _props.isLandscape,
          rest = babelHelpers.objectWithoutProperties(_props, ['scenes', 'scene', 'position', 'screenProps', 'progress', 'isLandscape']);

      var _props$getScreenDetai = this.props.getScreenDetails(scene),
          options = _props$getScreenDetai.options;

      var headerStyle = options.headerStyle;

      var appBarHeight = _reactNative.Platform.OS === 'ios' ? isLandscape ? 32 : 44 : 56;
      var containerStyles = [styles.container, {
        height: appBarHeight
      }, headerStyle];

      return React.createElement(
        _reactNative.Animated.View,
        babelHelpers.extends({}, rest, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 334
          }
        }),
        React.createElement(
          _SafeAreaView2.default,
          {
            style: containerStyles,
            forceInset: { top: 'always', bottom: 'never' },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 335
            }
          },
          React.createElement(
            _reactNative.View,
            { style: styles.appBar, __source: {
                fileName: _jsxFileName,
                lineNumber: 339
              }
            },
            appBar
          )
        )
      );
    }
  }], [{
    key: 'HEIGHT',
    get: function get() {
      console.warn('Header.HEIGHT is deprecated and will be removed before react-navigation comes out of beta.');
      return APPBAR_HEIGHT + STATUSBAR_HEIGHT;
    }
  }]);
  return Header;
}(React.PureComponent);

var platformContainerStyles = void 0;
if (_reactNative.Platform.OS === 'ios') {
  platformContainerStyles = {
    borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,
    borderBottomColor: 'rgba(0, 0, 0, .3)'
  };
} else {
  platformContainerStyles = {
    shadowColor: 'black',
    shadowOpacity: 0.1,
    shadowRadius: _reactNative.StyleSheet.hairlineWidth,
    shadowOffset: {
      height: _reactNative.StyleSheet.hairlineWidth
    },
    elevation: 4
  };
}

var styles = _reactNative.StyleSheet.create({
  container: babelHelpers.extends({
    backgroundColor: _reactNative.Platform.OS === 'ios' ? '#F7F7F7' : '#FFF'
  }, platformContainerStyles),
  appBar: {
    flex: 1
  },
  header: {
    flexDirection: 'row'
  },
  item: {
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: 'transparent'
  },
  title: {
    bottom: 0,
    left: TITLE_OFFSET,
    right: TITLE_OFFSET,
    top: 0,
    position: 'absolute',
    alignItems: _reactNative.Platform.OS === 'ios' ? 'center' : 'flex-start'
  },
  left: {
    left: 0,
    bottom: 0,
    top: 0,
    position: 'absolute'
  },
  right: {
    right: 0,
    bottom: 0,
    top: 0,
    position: 'absolute'
  }
});

exports.default = (0, _withOrientation2.default)(Header);
}, 386, null, "react-navigation/src/views/Header/Header.js");
__d(/* react-navigation/src/views/Header/HeaderTitle.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/views/Header/HeaderTitle.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var AnimatedText = _reactNative.Animated.Text;

var HeaderTitle = function HeaderTitle(_ref) {
  var style = _ref.style,
      rest = babelHelpers.objectWithoutProperties(_ref, ['style']);
  return React.createElement(AnimatedText, babelHelpers.extends({
    numberOfLines: 1
  }, rest, {
    style: [styles.title, style],
    accessibilityTraits: 'header',
    __source: {
      fileName: _jsxFileName,
      lineNumber: 21
    }
  }));
};

var styles = _reactNative.StyleSheet.create({
  title: {
    fontSize: _reactNative.Platform.OS === 'ios' ? 17 : 20,
    fontWeight: _reactNative.Platform.OS === 'ios' ? '600' : '500',
    color: 'rgba(0, 0, 0, .9)',
    textAlign: _reactNative.Platform.OS === 'ios' ? 'center' : 'left',
    marginHorizontal: 16
  }
});

exports.default = HeaderTitle;
}, 387, null, "react-navigation/src/views/Header/HeaderTitle.js");
__d(/* react-navigation/src/views/Header/HeaderBackButton.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/views/Header/HeaderBackButton.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _TouchableItem = require(389               ); // 389 = ../TouchableItem

var _TouchableItem2 = babelHelpers.interopRequireDefault(_TouchableItem);

var HeaderBackButton = function (_React$PureComponent) {
  babelHelpers.inherits(HeaderBackButton, _React$PureComponent);

  function HeaderBackButton() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, HeaderBackButton);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = HeaderBackButton.__proto__ || Object.getPrototypeOf(HeaderBackButton)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this._onTextLayout = function (e) {
      if (_this.state.initialTextWidth) {
        return;
      }
      _this.setState({
        initialTextWidth: e.nativeEvent.layout.x + e.nativeEvent.layout.width
      });
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(HeaderBackButton, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          onPress = _props.onPress,
          pressColorAndroid = _props.pressColorAndroid,
          width = _props.width,
          title = _props.title,
          titleStyle = _props.titleStyle,
          tintColor = _props.tintColor,
          truncatedTitle = _props.truncatedTitle;


      var renderTruncated = this.state.initialTextWidth && width ? this.state.initialTextWidth > width : false;

      var backButtonTitle = renderTruncated ? truncatedTitle : title;

      var asset = require(390                      ); // 390 = ../assets/back-icon.png

      return React.createElement(
        _TouchableItem2.default,
        {
          accessibilityComponentType: 'button',
          accessibilityLabel: backButtonTitle,
          accessibilityTraits: 'button',
          testID: 'header-back',
          delayPressIn: 0,
          onPress: onPress,
          pressColor: pressColorAndroid,
          style: styles.container,
          borderless: true,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 73
          }
        },
        React.createElement(
          _reactNative.View,
          { style: styles.container, __source: {
              fileName: _jsxFileName,
              lineNumber: 84
            }
          },
          React.createElement(_reactNative.Image, {
            style: [styles.icon, !!title && styles.iconWithTitle, !!tintColor && { tintColor: tintColor }],
            source: asset,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 85
            }
          }),
          _reactNative.Platform.OS === 'ios' && typeof backButtonTitle === 'string' && React.createElement(
            _reactNative.Text,
            {
              onLayout: this._onTextLayout,
              style: [styles.title, !!tintColor && { color: tintColor }, titleStyle],
              numberOfLines: 1,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 95
              }
            },
            backButtonTitle
          )
        )
      );
    }
  }]);
  return HeaderBackButton;
}(React.PureComponent);

HeaderBackButton.defaultProps = {
  pressColorAndroid: 'rgba(0, 0, 0, .32)',
  tintColor: _reactNative.Platform.select({
    ios: '#037aff'
  }),
  truncatedTitle: 'Back'
};


var styles = _reactNative.StyleSheet.create({
  container: {
    alignItems: 'center',
    flexDirection: 'row',
    backgroundColor: 'transparent'
  },
  title: {
    fontSize: 17,
    paddingRight: 10
  },
  icon: _reactNative.Platform.OS === 'ios' ? {
    height: 21,
    width: 13,
    marginLeft: 10,
    marginRight: 22,
    marginVertical: 12,
    resizeMode: 'contain',
    transform: [{ scaleX: _reactNative.I18nManager.isRTL ? -1 : 1 }]
  } : {
    height: 24,
    width: 24,
    margin: 16,
    resizeMode: 'contain',
    transform: [{ scaleX: _reactNative.I18nManager.isRTL ? -1 : 1 }]
  },
  iconWithTitle: _reactNative.Platform.OS === 'ios' ? {
    marginRight: 5
  } : {}
});

exports.default = HeaderBackButton;
}, 388, null, "react-navigation/src/views/Header/HeaderBackButton.js");
__d(/* react-navigation/src/views/TouchableItem.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/views/TouchableItem.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var ANDROID_VERSION_LOLLIPOP = 21;

var TouchableItem = function (_React$Component) {
  babelHelpers.inherits(TouchableItem, _React$Component);

  function TouchableItem() {
    babelHelpers.classCallCheck(this, TouchableItem);
    return babelHelpers.possibleConstructorReturn(this, (TouchableItem.__proto__ || Object.getPrototypeOf(TouchableItem)).apply(this, arguments));
  }

  babelHelpers.createClass(TouchableItem, [{
    key: 'render',
    value: function render() {
      if (_reactNative.Platform.OS === 'android' && _reactNative.Platform.Version >= ANDROID_VERSION_LOLLIPOP) {
        var _props = this.props,
            _style = _props.style,
            rest = babelHelpers.objectWithoutProperties(_props, ['style']);

        return React.createElement(
          _reactNative.TouchableNativeFeedback,
          babelHelpers.extends({}, rest, {
            style: null,
            background: _reactNative.TouchableNativeFeedback.Ripple(this.props.pressColor || '', this.props.borderless || false),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 54
            }
          }),
          React.createElement(
            _reactNative.View,
            { style: _style, __source: {
                fileName: _jsxFileName,
                lineNumber: 62
              }
            },
            React.Children.only(this.props.children)
          )
        );
      }

      return React.createElement(
        _reactNative.TouchableOpacity,
        babelHelpers.extends({}, this.props, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 68
          }
        }),
        this.props.children
      );
    }
  }]);
  return TouchableItem;
}(React.Component);

TouchableItem.defaultProps = {
  borderless: false,
  pressColor: 'rgba(0, 0, 0, .32)'
};
exports.default = TouchableItem;
}, 389, null, "react-navigation/src/views/TouchableItem.js");
__d(/* react-navigation/src/views/assets/back-icon.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/node_modules/react-navigation/src/views/assets","width":24,"height":24,"scales":[1,1.5,2,3,4],"hash":"a364dc7a784101f7c8f6791c7b4514ce","name":"back-icon","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 390, null, "react-navigation/src/views/assets/back-icon.png");
__d(/* react-navigation/src/views/Header/HeaderStyleInterpolator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(12            ); // 12 = react-native

var _getSceneIndicesForInterpolationInputRange = require(392                                                    ); // 392 = ../../utils/getSceneIndicesForInterpolationInputRange

var _getSceneIndicesForInterpolationInputRange2 = babelHelpers.interopRequireDefault(_getSceneIndicesForInterpolationInputRange);

function forLeft(props) {
  var position = props.position,
      scene = props.scene,
      scenes = props.scenes;

  var interpolate = (0, _getSceneIndicesForInterpolationInputRange2.default)(props);

  if (!interpolate) return { opacity: 0 };

  var first = interpolate.first,
      last = interpolate.last;

  var index = scene.index;

  return {
    opacity: position.interpolate({
      inputRange: [first, first + Math.abs(index - first) / 2, index, last - Math.abs(last - index) / 2, last],
      outputRange: [0, 0, 1, 0, 0]
    })
  };
}

function forCenter(props) {
  var position = props.position,
      scene = props.scene;

  var interpolate = (0, _getSceneIndicesForInterpolationInputRange2.default)(props);

  if (!interpolate) return { opacity: 0 };

  var first = interpolate.first,
      last = interpolate.last;

  var index = scene.index;
  var inputRange = [first, index, last];

  return {
    opacity: position.interpolate({
      inputRange: inputRange,
      outputRange: [0, 1, 0]
    }),
    transform: [{
      translateX: position.interpolate({
        inputRange: inputRange,
        outputRange: _reactNative.I18nManager.isRTL ? [-200, 0, 200] : [200, 0, -200]
      })
    }]
  };
}

function forRight(props) {
  var position = props.position,
      scene = props.scene;

  var interpolate = (0, _getSceneIndicesForInterpolationInputRange2.default)(props);

  if (!interpolate) return { opacity: 0 };
  var first = interpolate.first,
      last = interpolate.last;

  var index = scene.index;

  return {
    opacity: position.interpolate({
      inputRange: [first, index, last],
      outputRange: [0, 1, 0]
    })
  };
}

exports.default = {
  forLeft: forLeft,
  forCenter: forCenter,
  forRight: forRight
};
}, 391, null, "react-navigation/src/views/Header/HeaderStyleInterpolator.js");
__d(/* react-navigation/src/utils/getSceneIndicesForInterpolationInputRange.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});


function getSceneIndicesForInterpolationInputRange(props) {
  var scene = props.scene,
      scenes = props.scenes;

  var index = scene.index;
  var lastSceneIndexInScenes = scenes.length - 1;
  var isBack = !scenes[lastSceneIndexInScenes].isActive;

  if (isBack) {
    var currentSceneIndexInScenes = scenes.findIndex(function (item) {
      return item === scene;
    });
    var targetSceneIndexInScenes = scenes.findIndex(function (item) {
      return item.isActive;
    });
    var targetSceneIndex = scenes[targetSceneIndexInScenes].index;
    var lastSceneIndex = scenes[lastSceneIndexInScenes].index;

    if (index !== targetSceneIndex && currentSceneIndexInScenes === lastSceneIndexInScenes) {
      return {
        first: Math.min(targetSceneIndex, index - 1),
        last: index + 1
      };
    } else if (index === targetSceneIndex && currentSceneIndexInScenes === targetSceneIndexInScenes) {
      return {
        first: index - 1,
        last: Math.max(lastSceneIndex, index + 1)
      };
    } else if (index === targetSceneIndex || currentSceneIndexInScenes > targetSceneIndexInScenes) {
      return null;
    } else {
      return { first: index - 1, last: index + 1 };
    }
  } else {
    return { first: index - 1, last: index + 1 };
  }
}

exports.default = getSceneIndicesForInterpolationInputRange;
}, 392, null, "react-navigation/src/utils/getSceneIndicesForInterpolationInputRange.js");
__d(/* react-navigation/src/views/SafeAreaView.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/views/SafeAreaView.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _withOrientation = require(394                ); // 394 = ./withOrientation

var _withOrientation2 = babelHelpers.interopRequireDefault(_withOrientation);

var X_WIDTH = 375;
var X_HEIGHT = 812;
var PAD_WIDTH = 768;
var PAD_HEIGHT = 1024;

var _Dimensions$get = _reactNative.Dimensions.get('window'),
    D_HEIGHT = _Dimensions$get.height,
    D_WIDTH = _Dimensions$get.width;

var _NativeModules$Platfo = _reactNative.NativeModules.PlatformConstants,
    PlatformConstants = _NativeModules$Platfo === undefined ? {} : _NativeModules$Platfo;

var _ref = PlatformConstants.reactNativeVersion || {},
    _ref$minor = _ref.minor,
    minor = _ref$minor === undefined ? 0 : _ref$minor;

var isIPhoneX = function () {
  if (_reactNative.Platform.OS === 'web') return false;

  if (minor >= 50) {
    return _reactNative.DeviceInfo.isIPhoneX_deprecated;
  }

  return _reactNative.Platform.OS === 'ios' && (D_HEIGHT === X_HEIGHT && D_WIDTH === X_WIDTH || D_HEIGHT === X_WIDTH && D_WIDTH === X_HEIGHT);
}();

var isIPad = function () {
  if (_reactNative.Platform.OS !== 'ios' || isIPhoneX) return false;

  if (D_HEIGHT > D_WIDTH && D_WIDTH < PAD_WIDTH) {
    return false;
  }

  if (D_WIDTH > D_HEIGHT && D_HEIGHT < PAD_WIDTH) {
    return false;
  }

  return true;
}();

var statusBarHeight = function statusBarHeight(isLandscape) {
  if (isIPhoneX) {
    return isLandscape ? 0 : 44;
  }

  if (isIPad) {
    return 20;
  }

  return isLandscape ? 0 : 20;
};

var doubleFromPercentString = function doubleFromPercentString(percent) {
  if (!percent.includes('%')) {
    return 0;
  }

  var dbl = parseFloat(percent) / 100;

  if (isNaN(dbl)) return 0;

  return dbl;
};

var SafeView = function (_Component) {
  babelHelpers.inherits(SafeView, _Component);

  function SafeView() {
    var _ref2;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, SafeView);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref2 = SafeView.__proto__ || Object.getPrototypeOf(SafeView)).call.apply(_ref2, [this].concat(args))), _this), _this.state = {
      touchesTop: true,
      touchesBottom: true,
      touchesLeft: true,
      touchesRight: true,
      orientation: null,
      viewWidth: 0,
      viewHeight: 0
    }, _this._onLayout = function () {
      if (!_this.view) return;

      var isLandscape = _this.props.isLandscape;
      var orientation = _this.state.orientation;

      var newOrientation = isLandscape ? 'landscape' : 'portrait';
      if (orientation && orientation === newOrientation) {
        return;
      }

      var WIDTH = isLandscape ? X_HEIGHT : X_WIDTH;
      var HEIGHT = isLandscape ? X_WIDTH : X_HEIGHT;

      _this.view.measureInWindow(function (winX, winY, winWidth, winHeight) {
        var realY = winY;
        var realX = winX;

        if (realY >= HEIGHT) {
          realY = realY % HEIGHT;
        } else if (realY < 0) {
          realY = realY % HEIGHT + HEIGHT;
        }

        if (realX >= WIDTH) {
          realX = realX % WIDTH;
        } else if (realX < 0) {
          realX = realX % WIDTH + WIDTH;
        }

        var touchesTop = realY === 0;
        var touchesBottom = realY + winHeight >= HEIGHT;
        var touchesLeft = realX === 0;
        var touchesRight = realX + winWidth >= WIDTH;

        _this.setState({
          touchesTop: touchesTop,
          touchesBottom: touchesBottom,
          touchesLeft: touchesLeft,
          touchesRight: touchesRight,
          orientation: newOrientation,
          viewWidth: winWidth,
          viewHeight: winHeight
        });
      });
    }, _this._getSafeAreaStyle = function () {
      var _this$state = _this.state,
          touchesTop = _this$state.touchesTop,
          touchesBottom = _this$state.touchesBottom,
          touchesLeft = _this$state.touchesLeft,
          touchesRight = _this$state.touchesRight;
      var _this$props = _this.props,
          forceInset = _this$props.forceInset,
          isLandscape = _this$props.isLandscape;

      var _this$_getViewStyles = _this._getViewStyles(),
          paddingTop = _this$_getViewStyles.paddingTop,
          paddingBottom = _this$_getViewStyles.paddingBottom,
          paddingLeft = _this$_getViewStyles.paddingLeft,
          paddingRight = _this$_getViewStyles.paddingRight,
          viewStyle = _this$_getViewStyles.viewStyle;

      var style = babelHelpers.extends({}, viewStyle, {
        paddingTop: touchesTop ? _this._getInset('top') : 0,
        paddingBottom: touchesBottom ? _this._getInset('bottom') : 0,
        paddingLeft: touchesLeft ? _this._getInset('left') : 0,
        paddingRight: touchesRight ? _this._getInset('right') : 0
      });

      if (forceInset) {
        Object.keys(forceInset).forEach(function (key) {
          var inset = forceInset[key];

          if (inset === 'always') {
            inset = _this._getInset(key);
          }

          if (inset === 'never') {
            inset = 0;
          }

          switch (key) {
            case 'horizontal':
              {
                style.paddingLeft = inset;
                style.paddingRight = inset;
                break;
              }
            case 'vertical':
              {
                style.paddingTop = inset;
                style.paddingBottom = inset;
                break;
              }
            case 'left':
            case 'right':
            case 'top':
            case 'bottom':
              {
                var padding = 'padding' + key[0].toUpperCase() + key.slice(1);
                style[padding] = inset;
                break;
              }
          }
        });
      }

      if (style.height && typeof style.height === 'number') {
        style.height += style.paddingTop + style.paddingBottom;
      }

      if (style.width && typeof style.width === 'number') {
        style.width += style.paddingLeft + style.paddingRight;
      }

      style.paddingTop += paddingTop;
      style.paddingBottom += paddingBottom;
      style.paddingLeft += paddingLeft;
      style.paddingRight += paddingRight;

      return style;
    }, _this._getViewStyles = function () {
      var viewWidth = _this.state.viewWidth;

      var _StyleSheet$flatten = _reactNative.StyleSheet.flatten(_this.props.style || {}),
          _StyleSheet$flatten$p = _StyleSheet$flatten.padding,
          padding = _StyleSheet$flatten$p === undefined ? 0 : _StyleSheet$flatten$p,
          _StyleSheet$flatten$p2 = _StyleSheet$flatten.paddingVertical,
          paddingVertical = _StyleSheet$flatten$p2 === undefined ? padding : _StyleSheet$flatten$p2,
          _StyleSheet$flatten$p3 = _StyleSheet$flatten.paddingHorizontal,
          paddingHorizontal = _StyleSheet$flatten$p3 === undefined ? padding : _StyleSheet$flatten$p3,
          _StyleSheet$flatten$p4 = _StyleSheet$flatten.paddingTop,
          paddingTop = _StyleSheet$flatten$p4 === undefined ? paddingVertical : _StyleSheet$flatten$p4,
          _StyleSheet$flatten$p5 = _StyleSheet$flatten.paddingBottom,
          paddingBottom = _StyleSheet$flatten$p5 === undefined ? paddingVertical : _StyleSheet$flatten$p5,
          _StyleSheet$flatten$p6 = _StyleSheet$flatten.paddingLeft,
          paddingLeft = _StyleSheet$flatten$p6 === undefined ? paddingHorizontal : _StyleSheet$flatten$p6,
          _StyleSheet$flatten$p7 = _StyleSheet$flatten.paddingRight,
          paddingRight = _StyleSheet$flatten$p7 === undefined ? paddingHorizontal : _StyleSheet$flatten$p7,
          viewStyle = babelHelpers.objectWithoutProperties(_StyleSheet$flatten, ['padding', 'paddingVertical', 'paddingHorizontal', 'paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight']);

      if (typeof paddingTop !== 'number') {
        paddingTop = doubleFromPercentString(paddingTop) * viewWidth;
      }

      if (typeof paddingBottom !== 'number') {
        paddingBottom = doubleFromPercentString(paddingBottom) * viewWidth;
      }

      if (typeof paddingLeft !== 'number') {
        paddingLeft = doubleFromPercentString(paddingLeft) * viewWidth;
      }

      if (typeof paddingRight !== 'number') {
        paddingRight = doubleFromPercentString(paddingRight) * viewWidth;
      }

      return {
        paddingTop: paddingTop,
        paddingBottom: paddingBottom,
        paddingLeft: paddingLeft,
        paddingRight: paddingRight,
        viewStyle: viewStyle
      };
    }, _this._getInset = function (key) {
      var isLandscape = _this.props.isLandscape;

      switch (key) {
        case 'horizontal':
        case 'right':
        case 'left':
          {
            return isLandscape ? isIPhoneX ? 44 : 0 : 0;
          }
        case 'vertical':
        case 'top':
          {
            return statusBarHeight(isLandscape);
          }
        case 'bottom':
          {
            return isIPhoneX ? isLandscape ? 24 : 34 : 0;
          }
      }
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(SafeView, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      _reactNative.InteractionManager.runAfterInteractions(function () {
        _this2._onLayout();
      });
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps() {
      this._onLayout();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var _props = this.props,
          _props$forceInset = _props.forceInset,
          forceInset = _props$forceInset === undefined ? false : _props$forceInset,
          isLandscape = _props.isLandscape,
          children = _props.children,
          style = _props.style;


      if (_reactNative.Platform.OS !== 'ios') {
        return _react2.default.createElement(
          _reactNative.View,
          { style: style, __source: {
              fileName: _jsxFileName,
              lineNumber: 104
            }
          },
          this.props.children
        );
      }

      var safeAreaStyle = this._getSafeAreaStyle();

      return _react2.default.createElement(
        _reactNative.View,
        {
          ref: function ref(c) {
            return _this3.view = c;
          },
          onLayout: this._onLayout,
          style: safeAreaStyle,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 110
          }
        },
        this.props.children
      );
    }
  }]);
  return SafeView;
}(_react.Component);

exports.default = (0, _withOrientation2.default)(SafeView);
}, 393, null, "react-navigation/src/views/SafeAreaView.js");
__d(/* react-navigation/src/views/withOrientation.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isOrientationLandscape = undefined;
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/views/withOrientation.js';

exports.default = function (WrappedComponent) {
  var withOrientation = function (_React$Component) {
    babelHelpers.inherits(withOrientation, _React$Component);

    function withOrientation() {
      babelHelpers.classCallCheck(this, withOrientation);

      var _this = babelHelpers.possibleConstructorReturn(this, (withOrientation.__proto__ || Object.getPrototypeOf(withOrientation)).call(this));

      _initialiseProps.call(_this);

      var isLandscape = isOrientationLandscape(_reactNative.Dimensions.get('window'));
      _this.state = { isLandscape: isLandscape };
      return _this;
    }

    babelHelpers.createClass(withOrientation, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        _reactNative.Dimensions.addEventListener('change', this.handleOrientationChange);
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        _reactNative.Dimensions.removeEventListener('change', this.handleOrientationChange);
      }
    }, {
      key: 'render',
      value: function render() {
        return React.createElement(WrappedComponent, babelHelpers.extends({}, this.props, this.state, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 50
          }
        }));
      }
    }]);
    return withOrientation;
  }(React.Component);

  var _initialiseProps = function _initialiseProps() {
    var _this2 = this;

    this.handleOrientationChange = function (_ref2) {
      var window = _ref2.window;

      var isLandscape = isOrientationLandscape(window);
      _this2.setState({ isLandscape: isLandscape });
    };
  };

  return (0, _hoistNonReactStatics2.default)(withOrientation, WrappedComponent);
};

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _hoistNonReactStatics = require(338                      ); // 338 = hoist-non-react-statics

var _hoistNonReactStatics2 = babelHelpers.interopRequireDefault(_hoistNonReactStatics);

var isOrientationLandscape = exports.isOrientationLandscape = function isOrientationLandscape(_ref) {
  var width = _ref.width,
      height = _ref.height;
  return width > height;
};
}, 394, null, "react-navigation/src/views/withOrientation.js");
__d(/* react-navigation/src/views/SceneView.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/views/SceneView.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var SceneView = function (_React$PureComponent) {
  babelHelpers.inherits(SceneView, _React$PureComponent);

  function SceneView() {
    babelHelpers.classCallCheck(this, SceneView);
    return babelHelpers.possibleConstructorReturn(this, (SceneView.__proto__ || Object.getPrototypeOf(SceneView)).apply(this, arguments));
  }

  babelHelpers.createClass(SceneView, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        navigation: this.props.navigation
      };
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          screenProps = _props.screenProps,
          navigation = _props.navigation,
          Component = _props.component;

      return React.createElement(Component, { screenProps: screenProps, navigation: navigation, __source: {
          fileName: _jsxFileName,
          lineNumber: 31
        }
      });
    }
  }]);
  return SceneView;
}(React.PureComponent);

SceneView.childContextTypes = {
  navigation: _propTypes2.default.object.isRequired
};
exports.default = SceneView;
}, 395, null, "react-navigation/src/views/SceneView.js");
__d(/* react-navigation/src/views/CardStack/TransitionConfigs.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(12            ); // 12 = react-native

var _CardStackStyleInterpolator = require(397                           ); // 397 = ./CardStackStyleInterpolator

var _CardStackStyleInterpolator2 = babelHelpers.interopRequireDefault(_CardStackStyleInterpolator);

var IOSTransitionSpec = {
  duration: 500,
  easing: _reactNative.Easing.bezier(0.2833, 0.99, 0.31833, 0.99),
  timing: _reactNative.Animated.timing
};

var SlideFromRightIOS = {
  transitionSpec: IOSTransitionSpec,
  screenInterpolator: _CardStackStyleInterpolator2.default.forHorizontal,
  containerStyle: {
    backgroundColor: '#000'
  }
};

var ModalSlideFromBottomIOS = {
  transitionSpec: IOSTransitionSpec,
  screenInterpolator: _CardStackStyleInterpolator2.default.forVertical,
  containerStyle: {
    backgroundColor: '#000'
  }
};

var FadeInFromBottomAndroid = {
  transitionSpec: {
    duration: 350,
    easing: _reactNative.Easing.out(_reactNative.Easing.poly(5)),
    timing: _reactNative.Animated.timing
  },
  screenInterpolator: _CardStackStyleInterpolator2.default.forFadeFromBottomAndroid
};

var FadeOutToBottomAndroid = {
  transitionSpec: {
    duration: 230,
    easing: _reactNative.Easing.in(_reactNative.Easing.poly(4)),
    timing: _reactNative.Animated.timing
  },
  screenInterpolator: _CardStackStyleInterpolator2.default.forFadeFromBottomAndroid
};

function defaultTransitionConfig(transitionProps, prevTransitionProps, isModal) {
  if (_reactNative.Platform.OS === 'android') {
    if (prevTransitionProps && transitionProps.index < prevTransitionProps.index) {
      return FadeOutToBottomAndroid;
    }
    return FadeInFromBottomAndroid;
  }

  if (isModal) {
    return ModalSlideFromBottomIOS;
  }
  return SlideFromRightIOS;
}

function getTransitionConfig(transitionConfigurer, transitionProps, prevTransitionProps, isModal) {
  var defaultConfig = defaultTransitionConfig(transitionProps, prevTransitionProps, isModal);
  if (transitionConfigurer) {
    return babelHelpers.extends({}, defaultConfig, transitionConfigurer(transitionProps, prevTransitionProps, isModal));
  }
  return defaultConfig;
}

exports.default = {
  defaultTransitionConfig: defaultTransitionConfig,
  getTransitionConfig: getTransitionConfig
};
}, 396, null, "react-navigation/src/views/CardStack/TransitionConfigs.js");
__d(/* react-navigation/src/views/CardStack/CardStackStyleInterpolator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(12            ); // 12 = react-native

var _getSceneIndicesForInterpolationInputRange = require(392                                                    ); // 392 = ../../utils/getSceneIndicesForInterpolationInputRange

var _getSceneIndicesForInterpolationInputRange2 = babelHelpers.interopRequireDefault(_getSceneIndicesForInterpolationInputRange);

function forInitial(props) {
  var navigation = props.navigation,
      scene = props.scene;


  var focused = navigation.state.index === scene.index;
  var opacity = focused ? 1 : 0;

  var translate = focused ? 0 : 1000000;
  return {
    opacity: opacity,
    transform: [{ translateX: translate }, { translateY: translate }]
  };
}

function forHorizontal(props) {
  var layout = props.layout,
      position = props.position,
      scene = props.scene;


  if (!layout.isMeasured) {
    return forInitial(props);
  }
  var interpolate = (0, _getSceneIndicesForInterpolationInputRange2.default)(props);

  if (!interpolate) return { opacity: 0 };

  var first = interpolate.first,
      last = interpolate.last;

  var index = scene.index;
  var opacity = position.interpolate({
    inputRange: [first, first + 0.01, index, last - 0.01, last],
    outputRange: [0, 1, 1, 0.85, 0]
  });

  var width = layout.initWidth;
  var translateX = position.interpolate({
    inputRange: [first, index, last],
    outputRange: _reactNative.I18nManager.isRTL ? [-width, 0, width * 0.3] : [width, 0, width * -0.3]
  });
  var translateY = 0;

  return {
    opacity: opacity,
    transform: [{ translateX: translateX }, { translateY: translateY }]
  };
}

function forVertical(props) {
  var layout = props.layout,
      position = props.position,
      scene = props.scene;


  if (!layout.isMeasured) {
    return forInitial(props);
  }
  var interpolate = (0, _getSceneIndicesForInterpolationInputRange2.default)(props);

  if (!interpolate) return { opacity: 0 };

  var first = interpolate.first,
      last = interpolate.last;

  var index = scene.index;
  var opacity = position.interpolate({
    inputRange: [first, first + 0.01, index, last - 0.01, last],
    outputRange: [0, 1, 1, 0.85, 0]
  });

  var height = layout.initHeight;
  var translateY = position.interpolate({
    inputRange: [first, index, last],
    outputRange: [height, 0, 0]
  });
  var translateX = 0;

  return {
    opacity: opacity,
    transform: [{ translateX: translateX }, { translateY: translateY }]
  };
}

function forFadeFromBottomAndroid(props) {
  var layout = props.layout,
      position = props.position,
      scene = props.scene;


  if (!layout.isMeasured) {
    return forInitial(props);
  }
  var interpolate = (0, _getSceneIndicesForInterpolationInputRange2.default)(props);

  if (!interpolate) return { opacity: 0 };

  var first = interpolate.first,
      last = interpolate.last;

  var index = scene.index;
  var inputRange = [first, index, last - 0.01, last];

  var opacity = position.interpolate({
    inputRange: inputRange,
    outputRange: [0, 1, 1, 0]
  });

  var translateY = position.interpolate({
    inputRange: inputRange,
    outputRange: [50, 0, 0, 0]
  });
  var translateX = 0;

  return {
    opacity: opacity,
    transform: [{ translateX: translateX }, { translateY: translateY }]
  };
}

function forFade(props) {
  var layout = props.layout,
      position = props.position,
      scene = props.scene;


  if (!layout.isMeasured) {
    return forInitial(props);
  }
  var interpolate = (0, _getSceneIndicesForInterpolationInputRange2.default)(props);

  if (!interpolate) return { opacity: 0 };

  var first = interpolate.first,
      last = interpolate.last;

  var index = scene.index;
  var opacity = position.interpolate({
    inputRange: [first, index, last],
    outputRange: [0, 1, 1]
  });

  return {
    opacity: opacity
  };
}

function canUseNativeDriver() {
  return true;
}

exports.default = {
  forHorizontal: forHorizontal,
  forVertical: forVertical,
  forFadeFromBottomAndroid: forFadeFromBottomAndroid,
  forFade: forFade,
  canUseNativeDriver: canUseNativeDriver
};
}, 397, null, "react-navigation/src/views/CardStack/CardStackStyleInterpolator.js");
__d(/* react-navigation/src/views/Transitioner.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/views/Transitioner.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _invariant = require(376                 ); // 376 = ../utils/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var _ScenesReducer = require(399              ); // 399 = ./ScenesReducer

var _ScenesReducer2 = babelHelpers.interopRequireDefault(_ScenesReducer);

var DefaultTransitionSpec = {
  duration: 250,
  easing: _reactNative.Easing.inOut(_reactNative.Easing.ease),
  timing: _reactNative.Animated.timing
};

var Transitioner = function (_React$Component) {
  babelHelpers.inherits(Transitioner, _React$Component);

  function Transitioner(props, context) {
    babelHelpers.classCallCheck(this, Transitioner);

    var _this = babelHelpers.possibleConstructorReturn(this, (Transitioner.__proto__ || Object.getPrototypeOf(Transitioner)).call(this, props, context));

    var layout = {
      height: new _reactNative.Animated.Value(0),
      initHeight: 0,
      initWidth: 0,
      isMeasured: false,
      width: new _reactNative.Animated.Value(0)
    };

    _this.state = {
      layout: layout,
      position: new _reactNative.Animated.Value(_this.props.navigation.state.index),
      progress: new _reactNative.Animated.Value(1),
      scenes: (0, _ScenesReducer2.default)([], _this.props.navigation.state)
    };

    _this._prevTransitionProps = null;
    _this._transitionProps = buildTransitionProps(props, _this.state);
    _this._isMounted = false;
    _this._isTransitionRunning = false;
    _this._queuedTransition = null;
    return _this;
  }

  babelHelpers.createClass(Transitioner, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._onLayout = this._onLayout.bind(this);
      this._onTransitionEnd = this._onTransitionEnd.bind(this);
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._isMounted = true;
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._isMounted = false;
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var nextScenes = (0, _ScenesReducer2.default)(this.state.scenes, nextProps.navigation.state, this.props.navigation.state);

      if (nextScenes === this.state.scenes) {
        return;
      }

      var indexHasChanged = nextProps.navigation.state.index !== this.props.navigation.state.index;
      if (this._isTransitionRunning) {
        this._queuedTransition = { nextProps: nextProps, nextScenes: nextScenes, indexHasChanged: indexHasChanged };
        return;
      }

      this._startTransition(nextProps, nextScenes, indexHasChanged);
    }
  }, {
    key: '_startTransition',
    value: function _startTransition(nextProps, nextScenes, indexHasChanged) {
      var _this2 = this;

      var nextState = babelHelpers.extends({}, this.state, {
        scenes: nextScenes
      });

      var position = nextState.position,
          progress = nextState.progress;


      progress.setValue(0);

      this._prevTransitionProps = this._transitionProps;
      this._transitionProps = buildTransitionProps(nextProps, nextState);

      var transitionUserSpec = nextProps.configureTransition ? nextProps.configureTransition(this._transitionProps, this._prevTransitionProps) : null;

      var transitionSpec = babelHelpers.extends({}, DefaultTransitionSpec, transitionUserSpec);

      var timing = transitionSpec.timing;

      delete transitionSpec.timing;

      var toValue = nextProps.navigation.state.index;
      var positionHasChanged = position.__getValue() !== toValue;

      var animations = indexHasChanged && positionHasChanged ? [timing(progress, babelHelpers.extends({}, transitionSpec, {
        toValue: 1
      })), timing(position, babelHelpers.extends({}, transitionSpec, {
        toValue: nextProps.navigation.state.index
      }))] : [];

      this._isTransitionRunning = true;
      this.setState(nextState, function () {
        nextProps.onTransitionStart && nextProps.onTransitionStart(_this2._transitionProps, _this2._prevTransitionProps);
        _reactNative.Animated.parallel(animations).start(_this2._onTransitionEnd);
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(
        _reactNative.View,
        { onLayout: this._onLayout, style: [styles.main], __source: {
            fileName: _jsxFileName,
            lineNumber: 187
          }
        },
        this.props.render(this._transitionProps, this._prevTransitionProps)
      );
    }
  }, {
    key: '_onLayout',
    value: function _onLayout(event) {
      var _event$nativeEvent$la = event.nativeEvent.layout,
          height = _event$nativeEvent$la.height,
          width = _event$nativeEvent$la.width;

      if (this.state.layout.initWidth === width && this.state.layout.initHeight === height) {
        return;
      }
      var layout = babelHelpers.extends({}, this.state.layout, {
        initHeight: height,
        initWidth: width,
        isMeasured: true
      });

      layout.height.setValue(height);
      layout.width.setValue(width);

      var nextState = babelHelpers.extends({}, this.state, {
        layout: layout
      });

      this._transitionProps = buildTransitionProps(this.props, nextState);
      this.setState(nextState);
    }
  }, {
    key: '_onTransitionEnd',
    value: function _onTransitionEnd() {
      var _this3 = this;

      if (!this._isMounted) {
        return;
      }
      var prevTransitionProps = this._prevTransitionProps;
      this._prevTransitionProps = null;

      var nextState = babelHelpers.extends({}, this.state, {
        scenes: this.state.scenes.filter(isSceneNotStale)
      });

      this._transitionProps = buildTransitionProps(this.props, nextState);

      this.setState(nextState, function () {
        _this3.props.onTransitionEnd && _this3.props.onTransitionEnd(_this3._transitionProps, prevTransitionProps);
        if (_this3._queuedTransition) {
          _this3._startTransition(_this3._queuedTransition.nextProps, _this3._queuedTransition.nextScenes, _this3._queuedTransition.indexHasChanged);
          _this3._queuedTransition = null;
        } else {
          _this3._isTransitionRunning = false;
        }
      });
    }
  }]);
  return Transitioner;
}(React.Component);

function buildTransitionProps(props, state) {
  var navigation = props.navigation;
  var layout = state.layout,
      position = state.position,
      progress = state.progress,
      scenes = state.scenes;


  var scene = scenes.find(isSceneActive);

  (0, _invariant2.default)(scene, 'Could not find active scene');

  return {
    layout: layout,
    navigation: navigation,
    position: position,
    progress: progress,
    scenes: scenes,
    scene: scene,
    index: scene.index
  };
}

function isSceneNotStale(scene) {
  return !scene.isStale;
}

function isSceneActive(scene) {
  return scene.isActive;
}

var styles = _reactNative.StyleSheet.create({
  main: {
    flex: 1
  }
});

exports.default = Transitioner;
}, 398, null, "react-navigation/src/views/Transitioner.js");
__d(/* react-navigation/src/views/ScenesReducer.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ScenesReducer;

var _invariant = require(376                 ); // 376 = ../utils/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var _shallowEqual = require(400                    ); // 400 = ../utils/shallowEqual

var _shallowEqual2 = babelHelpers.interopRequireDefault(_shallowEqual);

var SCENE_KEY_PREFIX = 'scene_';

function compareKey(one, two) {
  var delta = one.length - two.length;
  if (delta > 0) {
    return 1;
  }
  if (delta < 0) {
    return -1;
  }
  return one > two ? 1 : -1;
}

function compareScenes(one, two) {
  if (one.index > two.index) {
    return 1;
  }
  if (one.index < two.index) {
    return -1;
  }

  return compareKey(one.key, two.key);
}

function areScenesShallowEqual(one, two) {
  return one.key === two.key && one.index === two.index && one.isStale === two.isStale && one.isActive === two.isActive && areRoutesShallowEqual(one.route, two.route);
}

function areRoutesShallowEqual(one, two) {
  if (!one || !two) {
    return one === two;
  }

  if (one.key !== two.key) {
    return false;
  }

  return (0, _shallowEqual2.default)(one, two);
}

function ScenesReducer(scenes, nextState, prevState) {
  if (prevState === nextState) {
    return scenes;
  }

  var prevScenes = new Map();
  var freshScenes = new Map();
  var staleScenes = new Map();

  scenes.forEach(function (scene) {
    var key = scene.key;

    if (scene.isStale) {
      staleScenes.set(key, scene);
    }
    prevScenes.set(key, scene);
  });

  var nextKeys = new Set();
  nextState.routes.forEach(function (route, index) {
    var key = SCENE_KEY_PREFIX + route.key;
    var scene = {
      index: index,
      isActive: false,
      isStale: false,
      key: key,
      route: route
    };
    (0, _invariant2.default)(!nextKeys.has(key), 'navigation.state.routes[' + index + '].key "' + key + '" conflicts with ' + 'another route!');
    nextKeys.add(key);

    if (staleScenes.has(key)) {
      staleScenes.delete(key);
    }
    freshScenes.set(key, scene);
  });

  if (prevState) {
    prevState.routes.forEach(function (route, index) {
      var key = SCENE_KEY_PREFIX + route.key;
      if (freshScenes.has(key)) {
        return;
      }
      staleScenes.set(key, {
        index: index,
        isActive: false,
        isStale: true,
        key: key,
        route: route
      });
    });
  }

  var nextScenes = [];

  var mergeScene = function mergeScene(nextScene) {
    var key = nextScene.key;

    var prevScene = prevScenes.has(key) ? prevScenes.get(key) : null;
    if (prevScene && areScenesShallowEqual(prevScene, nextScene)) {
      nextScenes.push(prevScene);
    } else {
      nextScenes.push(nextScene);
    }
  };

  staleScenes.forEach(mergeScene);
  freshScenes.forEach(mergeScene);

  nextScenes.sort(compareScenes);

  var activeScenesCount = 0;
  nextScenes.forEach(function (scene, ii) {
    var isActive = !scene.isStale && scene.index === nextState.index;
    if (isActive !== scene.isActive) {
      nextScenes[ii] = babelHelpers.extends({}, scene, {
        isActive: isActive
      });
    }
    if (isActive) {
      activeScenesCount++;
    }
  });

  (0, _invariant2.default)(activeScenesCount === 1, 'there should always be only one scene active, not %s.', activeScenesCount);

  if (nextScenes.length !== scenes.length) {
    return nextScenes;
  }

  if (nextScenes.some(function (scene, index) {
    return !areScenesShallowEqual(scenes[index], scene);
  })) {
    return nextScenes;
  }

  return scenes;
}
}, 399, null, "react-navigation/src/views/ScenesReducer.js");
__d(/* react-navigation/src/utils/shallowEqual.js */function(global, require, module, exports) {

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

function is(x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }
  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;
}, 400, null, "react-navigation/src/utils/shallowEqual.js");
__d(/* react-navigation/src/routers/StackRouter.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _pathToRegexp = require(402             ); // 402 = path-to-regexp

var _pathToRegexp2 = babelHelpers.interopRequireDefault(_pathToRegexp);

var _NavigationActions = require(374                   ); // 374 = ../NavigationActions

var _NavigationActions2 = babelHelpers.interopRequireDefault(_NavigationActions);

var _createConfigGetter = require(404                   ); // 404 = ./createConfigGetter

var _createConfigGetter2 = babelHelpers.interopRequireDefault(_createConfigGetter);

var _getScreenForRouteName = require(405                      ); // 405 = ./getScreenForRouteName

var _getScreenForRouteName2 = babelHelpers.interopRequireDefault(_getScreenForRouteName);

var _StateUtils = require(377            ); // 377 = ../StateUtils

var _StateUtils2 = babelHelpers.interopRequireDefault(_StateUtils);

var _validateRouteConfigMap = require(407                       ); // 407 = ./validateRouteConfigMap

var _validateRouteConfigMap2 = babelHelpers.interopRequireDefault(_validateRouteConfigMap);

var _getScreenConfigDeprecated = require(408                          ); // 408 = ./getScreenConfigDeprecated

var _getScreenConfigDeprecated2 = babelHelpers.interopRequireDefault(_getScreenConfigDeprecated);

var _invariant = require(376                 ); // 376 = ../utils/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var uniqueBaseId = 'id-' + Date.now();
var uuidCount = 0;
function _getUuid() {
  return uniqueBaseId + '-' + uuidCount++;
}

function isEmpty(obj) {
  if (!obj) return true;
  for (var key in obj) {
    return false;
  }
  return true;
}

exports.default = function (routeConfigs) {
  var stackConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  (0, _validateRouteConfigMap2.default)(routeConfigs);

  var childRouters = {};
  var routeNames = Object.keys(routeConfigs);

  routeNames.forEach(function (routeName) {
    var screen = (0, _getScreenForRouteName2.default)(routeConfigs, routeName);
    if (screen && screen.router) {
      childRouters[routeName] = screen.router;
    } else {
      childRouters[routeName] = null;
    }
  });

  var initialRouteParams = stackConfig.initialRouteParams;


  var initialRouteName = stackConfig.initialRouteName || routeNames[0];

  var initialChildRouter = childRouters[initialRouteName];
  var paths = stackConfig.paths || {};

  routeNames.forEach(function (routeName) {
    var pathPattern = paths[routeName] || routeConfigs[routeName].path;
    var matchExact = !!pathPattern && !childRouters[routeName];
    if (typeof pathPattern !== 'string') {
      pathPattern = routeName;
    }
    var keys = [];
    var re = (0, _pathToRegexp2.default)(pathPattern, keys);
    if (!matchExact) {
      var wildcardRe = (0, _pathToRegexp2.default)(pathPattern + '/*', keys);
      re = new RegExp('(?:' + re.source + ')|(?:' + wildcardRe.source + ')');
    }

    paths[routeName] = { re: re, keys: keys, toPath: _pathToRegexp2.default.compile(pathPattern) };
  });

  return {
    getComponentForState: function getComponentForState(state) {
      var activeChildRoute = state.routes[state.index];
      var routeName = activeChildRoute.routeName;

      if (childRouters[routeName]) {
        return childRouters[routeName].getComponentForState(activeChildRoute);
      }
      return (0, _getScreenForRouteName2.default)(routeConfigs, routeName);
    },
    getComponentForRouteName: function getComponentForRouteName(routeName) {
      return (0, _getScreenForRouteName2.default)(routeConfigs, routeName);
    },
    getStateForAction: function getStateForAction(action, state) {
      if (!state) {
        var route = {};
        if (action.type === _NavigationActions2.default.NAVIGATE && childRouters[action.routeName] !== undefined) {
          return {
            index: 0,
            routes: [babelHelpers.extends({}, action, {
              type: undefined,
              key: 'Init-' + _getUuid()
            })]
          };
        }
        if (initialChildRouter) {
          route = initialChildRouter.getStateForAction(_NavigationActions2.default.navigate({
            routeName: initialRouteName,
            params: initialRouteParams
          }));
        }
        var params = (route.params || action.params || initialRouteParams) && babelHelpers.extends({}, route.params || {}, action.params || {}, initialRouteParams || {});
        route = babelHelpers.extends({}, route, {
          routeName: initialRouteName,
          key: 'Init-' + _getUuid()
        }, params ? { params: params } : {});

        state = {
          index: 0,
          routes: [route]
        };
      }

      if (action.type !== _NavigationActions2.default.RESET || action.key !== null) {
        var keyIndex = action.key ? _StateUtils2.default.indexOf(state, action.key) : -1;
        var childIndex = keyIndex >= 0 ? keyIndex : state.index;
        var childRoute = state.routes[childIndex];
        (0, _invariant2.default)(childRoute, 'StateUtils erroneously thought index ' + childIndex + ' exists');
        var childRouter = childRouters[childRoute.routeName];
        if (childRouter) {
          var _route = childRouter.getStateForAction(action, childRoute);
          if (_route === null) {
            return state;
          }
          if (_route && _route !== childRoute) {
            return _StateUtils2.default.replaceAt(state, childRoute.key, _route);
          }
        }
      }

      if (action.type === _NavigationActions2.default.NAVIGATE && childRouters[action.routeName] !== undefined) {
        var _childRouter = childRouters[action.routeName];
        var _route2 = void 0;
        if (_childRouter) {
          var childAction = action.action || _NavigationActions2.default.init({ params: action.params });
          _route2 = babelHelpers.extends({
            params: action.params
          }, _childRouter.getStateForAction(childAction), {
            key: _getUuid(),
            routeName: action.routeName
          });
        } else {
          _route2 = {
            params: action.params,
            key: _getUuid(),
            routeName: action.routeName
          };
        }
        return _StateUtils2.default.push(state, _route2);
      }

      if (action.type === _NavigationActions2.default.NAVIGATE) {
        var childRouterNames = Object.keys(childRouters);
        for (var i = 0; i < childRouterNames.length; i++) {
          var childRouterName = childRouterNames[i];
          var _childRouter2 = childRouters[childRouterName];
          if (_childRouter2) {
            var initChildRoute = _childRouter2.getStateForAction(_NavigationActions2.default.init());

            var navigatedChildRoute = _childRouter2.getStateForAction(action, initChildRoute);
            var routeToPush = null;
            if (navigatedChildRoute === null) {
              routeToPush = initChildRoute;
            } else if (navigatedChildRoute !== initChildRoute) {
              routeToPush = navigatedChildRoute;
            }
            if (routeToPush) {
              return _StateUtils2.default.push(state, babelHelpers.extends({}, routeToPush, {
                key: _getUuid(),
                routeName: childRouterName
              }));
            }
          }
        }
      }

      if (action.type === _NavigationActions2.default.SET_PARAMS) {
        var key = action.key;
        var lastRoute = state.routes.find(function (route) {
          return route.key === key;
        });
        if (lastRoute) {
          var _params = babelHelpers.extends({}, lastRoute.params, action.params);
          var routes = [].concat(babelHelpers.toConsumableArray(state.routes));
          routes[state.routes.indexOf(lastRoute)] = babelHelpers.extends({}, lastRoute, {
            params: _params
          });
          return babelHelpers.extends({}, state, {
            routes: routes
          });
        }
      }

      if (action.type === _NavigationActions2.default.RESET) {
        var resetAction = action;

        return babelHelpers.extends({}, state, {
          routes: resetAction.actions.map(function (childAction) {
            var router = childRouters[childAction.routeName];
            if (router) {
              return babelHelpers.extends({}, childAction, router.getStateForAction(childAction), {
                routeName: childAction.routeName,
                key: _getUuid()
              });
            }
            var route = babelHelpers.extends({}, childAction, {
              key: _getUuid()
            });
            delete route.type;
            return route;
          }),
          index: action.index
        });
      }

      if (action.type === _NavigationActions2.default.BACK) {
        var _key = action.key;
        var backRouteIndex = null;
        if (_key) {
          var backRoute = state.routes.find(function (route) {
            return route.key === _key;
          });

          backRouteIndex = state.routes.indexOf(backRoute);
        }
        if (backRouteIndex == null) {
          return _StateUtils2.default.pop(state);
        }
        if (backRouteIndex > 0) {
          return babelHelpers.extends({}, state, {
            routes: state.routes.slice(0, backRouteIndex),
            index: backRouteIndex - 1
          });
        }
      }
      return state;
    },
    getPathAndParamsForState: function getPathAndParamsForState(state) {
      var route = state.routes[state.index];
      var routeName = route.routeName;
      var screen = (0, _getScreenForRouteName2.default)(routeConfigs, routeName);

      var subPath = paths[routeName].toPath(route.params);
      var path = subPath;
      var params = route.params;
      if (screen && screen.router) {
        var stateRoute = route;

        var child = screen.router.getPathAndParamsForState(stateRoute);
        path = subPath ? subPath + '/' + child.path : child.path;
        params = child.params ? babelHelpers.extends({}, params, child.params) : params;
      }
      return {
        path: path,
        params: params
      };
    },
    getActionForPathAndParams: function getActionForPathAndParams(pathToResolve, inputParams) {
      if (!pathToResolve) {
        return _NavigationActions2.default.navigate({
          routeName: initialRouteName
        });
      }

      var _pathToResolve$split = pathToResolve.split('?'),
          _pathToResolve$split2 = babelHelpers.slicedToArray(_pathToResolve$split, 2),
          pathNameToResolve = _pathToResolve$split2[0],
          queryString = _pathToResolve$split2[1];

      var matchedRouteName = void 0;
      var pathMatch = void 0;
      var pathMatchKeys = void 0;

      for (var _iterator = Object.entries(paths), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === 'function' ? Symbol.iterator : '@@iterator']();;) {
        var _ref3;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref3 = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref3 = _i.value;
        }

        var _ref = _ref3;

        var _ref2 = babelHelpers.slicedToArray(_ref, 2);

        var routeName = _ref2[0];
        var path = _ref2[1];
        var re = path.re,
            keys = path.keys;

        pathMatch = re.exec(pathNameToResolve);
        if (pathMatch && pathMatch.length) {
          pathMatchKeys = keys;
          matchedRouteName = routeName;
          break;
        }
      }

      if (!matchedRouteName) {
        return null;
      }

      var nestedAction = void 0;
      var nestedQueryString = queryString ? '?' + queryString : '';
      if (childRouters[matchedRouteName]) {
        nestedAction = childRouters[matchedRouteName].getActionForPathAndParams(pathMatch.slice(pathMatchKeys.length).join('/') + nestedQueryString);
      }

      var queryParams = !isEmpty(inputParams) ? inputParams : (queryString || '').split('&').reduce(function (result, item) {
        if (item !== '') {
          var nextResult = result || {};

          var _item$split = item.split('='),
              _item$split2 = babelHelpers.slicedToArray(_item$split, 2),
              key = _item$split2[0],
              value = _item$split2[1];

          nextResult[key] = value;
          return nextResult;
        }
        return result;
      }, null);

      var params = pathMatch.slice(1).reduce(function (result, matchResult, i) {
        var key = pathMatchKeys[i];
        if (key.asterisk || !key) {
          return result;
        }
        var nextResult = result || {};
        var paramName = key.name;
        nextResult[paramName] = matchResult;
        return nextResult;
      }, queryParams);

      return _NavigationActions2.default.navigate(babelHelpers.extends({
        routeName: matchedRouteName
      }, params ? { params: params } : {}, nestedAction ? { action: nestedAction } : {}));
    },


    getScreenOptions: (0, _createConfigGetter2.default)(routeConfigs, stackConfig.navigationOptions),

    getScreenConfig: _getScreenConfigDeprecated2.default
  };
};
}, 401, null, "react-navigation/src/routers/StackRouter.js");
__d(/* path-to-regexp/index.js */function(global, require, module, exports) {var isarray = require(403      ); // 403 = isarray

module.exports = pathToRegexp;
module.exports.parse = parse;
module.exports.compile = compile;
module.exports.tokensToFunction = tokensToFunction;
module.exports.tokensToRegExp = tokensToRegExp;

var PATH_REGEXP = new RegExp(['(\\\\.)', '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'].join('|'), 'g');

function parse(str, options) {
  var tokens = [];
  var key = 0;
  var index = 0;
  var path = '';
  var defaultDelimiter = options && options.delimiter || '/';
  var res;

  while ((res = PATH_REGEXP.exec(str)) != null) {
    var m = res[0];
    var escaped = res[1];
    var offset = res.index;
    path += str.slice(index, offset);
    index = offset + m.length;

    if (escaped) {
      path += escaped[1];
      continue;
    }

    var next = str[index];
    var prefix = res[2];
    var name = res[3];
    var capture = res[4];
    var group = res[5];
    var modifier = res[6];
    var asterisk = res[7];

    if (path) {
      tokens.push(path);
      path = '';
    }

    var partial = prefix != null && next != null && next !== prefix;
    var repeat = modifier === '+' || modifier === '*';
    var optional = modifier === '?' || modifier === '*';
    var delimiter = res[2] || defaultDelimiter;
    var pattern = capture || group;

    tokens.push({
      name: name || key++,
      prefix: prefix || '',
      delimiter: delimiter,
      optional: optional,
      repeat: repeat,
      partial: partial,
      asterisk: !!asterisk,
      pattern: pattern ? escapeGroup(pattern) : asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?'
    });
  }

  if (index < str.length) {
    path += str.substr(index);
  }

  if (path) {
    tokens.push(path);
  }

  return tokens;
}

function compile(str, options) {
  return tokensToFunction(parse(str, options));
}

function encodeURIComponentPretty(str) {
  return encodeURI(str).replace(/[\/?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase();
  });
}

function encodeAsterisk(str) {
  return encodeURI(str).replace(/[?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase();
  });
}

function tokensToFunction(tokens) {
  var matches = new Array(tokens.length);

  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] === 'object') {
      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');
    }
  }

  return function (obj, opts) {
    var path = '';
    var data = obj || {};
    var options = opts || {};
    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i];

      if (typeof token === 'string') {
        path += token;

        continue;
      }

      var value = data[token.name];
      var segment;

      if (value == null) {
        if (token.optional) {
          if (token.partial) {
            path += token.prefix;
          }

          continue;
        } else {
          throw new TypeError('Expected "' + token.name + '" to be defined');
        }
      }

      if (isarray(value)) {
        if (!token.repeat) {
          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`');
        }

        if (value.length === 0) {
          if (token.optional) {
            continue;
          } else {
            throw new TypeError('Expected "' + token.name + '" to not be empty');
          }
        }

        for (var j = 0; j < value.length; j++) {
          segment = encode(value[j]);

          if (!matches[i].test(segment)) {
            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`');
          }

          path += (j === 0 ? token.prefix : token.delimiter) + segment;
        }

        continue;
      }

      segment = token.asterisk ? encodeAsterisk(value) : encode(value);

      if (!matches[i].test(segment)) {
        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"');
      }

      path += token.prefix + segment;
    }

    return path;
  };
}

function escapeString(str) {
  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1');
}

function escapeGroup(group) {
  return group.replace(/([=!:$\/()])/g, '\\$1');
}

function attachKeys(re, keys) {
  re.keys = keys;
  return re;
}

function flags(options) {
  return options.sensitive ? '' : 'i';
}

function regexpToRegexp(path, keys) {
  var groups = path.source.match(/\((?!\?)/g);

  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys.push({
        name: i,
        prefix: null,
        delimiter: null,
        optional: false,
        repeat: false,
        partial: false,
        asterisk: false,
        pattern: null
      });
    }
  }

  return attachKeys(path, keys);
}

function arrayToRegexp(path, keys, options) {
  var parts = [];

  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys, options).source);
  }

  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));

  return attachKeys(regexp, keys);
}

function stringToRegexp(path, keys, options) {
  return tokensToRegExp(parse(path, options), keys, options);
}

function tokensToRegExp(tokens, keys, options) {
  if (!isarray(keys)) {
    options = keys || options;
    keys = [];
  }

  options = options || {};

  var strict = options.strict;
  var end = options.end !== false;
  var route = '';

  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i];

    if (typeof token === 'string') {
      route += escapeString(token);
    } else {
      var prefix = escapeString(token.prefix);
      var capture = '(?:' + token.pattern + ')';

      keys.push(token);

      if (token.repeat) {
        capture += '(?:' + prefix + capture + ')*';
      }

      if (token.optional) {
        if (!token.partial) {
          capture = '(?:' + prefix + '(' + capture + '))?';
        } else {
          capture = prefix + '(' + capture + ')?';
        }
      } else {
        capture = prefix + '(' + capture + ')';
      }

      route += capture;
    }
  }

  var delimiter = escapeString(options.delimiter || '/');
  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;

  if (!strict) {
    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';
  }

  if (end) {
    route += '$';
  } else {
    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';
  }

  return attachKeys(new RegExp('^' + route, flags(options)), keys);
}

function pathToRegexp(path, keys, options) {
  if (!isarray(keys)) {
    options = keys || options;
    keys = [];
  }

  options = options || {};

  if (path instanceof RegExp) {
    return regexpToRegexp(path, keys);
  }

  if (isarray(path)) {
    return arrayToRegexp(path, keys, options);
  }

  return stringToRegexp(path, keys, options);
}
}, 402, null, "path-to-regexp/index.js");
__d(/* isarray/index.js */function(global, require, module, exports) {module.exports = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};
}, 403, null, "isarray/index.js");
__d(/* react-navigation/src/routers/createConfigGetter.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _invariant = require(376                 ); // 376 = ../utils/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var _getScreenForRouteName = require(405                      ); // 405 = ./getScreenForRouteName

var _getScreenForRouteName2 = babelHelpers.interopRequireDefault(_getScreenForRouteName);

var _addNavigationHelpers = require(375                      ); // 375 = ../addNavigationHelpers

var _addNavigationHelpers2 = babelHelpers.interopRequireDefault(_addNavigationHelpers);

var _validateScreenOptions = require(406                      ); // 406 = ./validateScreenOptions

var _validateScreenOptions2 = babelHelpers.interopRequireDefault(_validateScreenOptions);

function applyConfig(configurer, navigationOptions, configProps) {
  if (typeof configurer === 'function') {
    return babelHelpers.extends({}, navigationOptions, configurer(babelHelpers.extends({}, configProps, {
      navigationOptions: navigationOptions
    })));
  }
  if (typeof configurer === 'object') {
    return babelHelpers.extends({}, navigationOptions, configurer);
  }
  return navigationOptions;
}

exports.default = function (routeConfigs, navigatorScreenConfig) {
  return function (navigation, screenProps) {
    var state = navigation.state,
        dispatch = navigation.dispatch;

    var route = state;

    (0, _invariant2.default)(route.routeName && typeof route.routeName === 'string', 'Cannot get config because the route does not have a routeName.');

    var Component = (0, _getScreenForRouteName2.default)(routeConfigs, route.routeName);

    var outputConfig = {};

    var router = Component.router;
    if (router) {
      var _ref = route,
          routes = _ref.routes,
          index = _ref.index;

      if (!route || !routes || index == null) {
        throw new Error('Expect nav state to have routes and index, ' + JSON.stringify(route));
      }
      var childRoute = routes[index];
      var childNavigation = (0, _addNavigationHelpers2.default)({
        state: childRoute,
        dispatch: dispatch
      });
      outputConfig = router.getScreenOptions(childNavigation, screenProps);
    }

    var routeConfig = routeConfigs[route.routeName];

    var routeScreenConfig = routeConfig.navigationOptions;
    var componentScreenConfig = Component.navigationOptions;

    var configOptions = { navigation: navigation, screenProps: screenProps || {} };

    outputConfig = applyConfig(navigatorScreenConfig, outputConfig, configOptions);
    outputConfig = applyConfig(componentScreenConfig, outputConfig, configOptions);
    outputConfig = applyConfig(routeScreenConfig, outputConfig, configOptions);

    (0, _validateScreenOptions2.default)(outputConfig, route);

    return outputConfig;
  };
};
}, 404, null, "react-navigation/src/routers/createConfigGetter.js");
__d(/* react-navigation/src/routers/getScreenForRouteName.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getScreenForRouteName;

var _invariant = require(376                 ); // 376 = ../utils/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

function getScreenForRouteName(routeConfigs, routeName) {
  var routeConfig = routeConfigs[routeName];

  if (!routeConfig) {
    throw new Error('There is no route defined for key ' + routeName + '.\n' + ('Must be one of: ' + Object.keys(routeConfigs).map(function (a) {
      return '\'' + a + '\'';
    }).join(',')));
  }

  if (routeConfig.screen) {
    return routeConfig.screen;
  }

  if (typeof routeConfig.getScreen === 'function') {
    var screen = routeConfig.getScreen();
    (0, _invariant2.default)(typeof screen === 'function', 'The getScreen defined for route \'' + routeName + ' didn\'t return a valid ' + 'screen or navigator.\n\n' + 'Please pass it like this:\n' + (routeName + ': {\n  getScreen: () => require(\'./MyScreen\').default\n}'));
    return screen;
  }

  throw new Error('Route ' + routeName + ' must define a screen or a getScreen.');
}
}, 405, null, "react-navigation/src/routers/getScreenForRouteName.js");
__d(/* react-navigation/src/routers/validateScreenOptions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});


var deprecatedKeys = ['tabBar'];

exports.default = function (screenOptions, route) {
  var keys = Object.keys(screenOptions);

  var deprecatedKey = keys.find(function (key) {
    return deprecatedKeys.includes(key);
  });

  if (typeof screenOptions.title === 'function') {
    throw new Error(['`title` cannot be defined as a function in navigation options for `' + route.routeName + '` screen. \n', 'Try replacing the following:', '{', '    title: ({ state }) => state...', '}', '', 'with:', '({ navigation }) => ({', '    title: navigation.state...', '})'].join('\n'));
  }

  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'function') {
    throw new Error(['`' + deprecatedKey + '` cannot be defined as a function in navigation options for `' + route.routeName + '` screen. \n', 'Try replacing the following:', '{', '    ' + deprecatedKey + ': ({ state }) => ({', '         key: state...', '    })', '}', '', 'with:', '({ navigation }) => ({', '    ' + deprecatedKey + 'Key: navigation.state...', '})'].join('\n'));
  }

  if (deprecatedKey && typeof screenOptions[deprecatedKey] === 'object') {
    throw new Error(['Invalid key `' + deprecatedKey + '` defined in navigation options for `' + route.routeName + '` screen.', '\n', 'Try replacing the following navigation options:', '{', '    ' + deprecatedKey + ': {'].concat(babelHelpers.toConsumableArray(Object.keys(screenOptions[deprecatedKey]).map(function (key) {
      return '        ' + key + ': ...,';
    })), ['    },', '}', '\n', 'with:', '{'], babelHelpers.toConsumableArray(Object.keys(screenOptions[deprecatedKey]).map(function (key) {
      return '    ' + (deprecatedKey + key[0].toUpperCase() + key.slice(1)) + ': ...,';
    })), ['}']).join('\n'));
  }
};
}, 406, null, "react-navigation/src/routers/validateScreenOptions.js");
__d(/* react-navigation/src/routers/validateRouteConfigMap.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _invariant = require(376                 ); // 376 = ../utils/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

function validateRouteConfigMap(routeConfigs) {
  var routeNames = Object.keys(routeConfigs);
  (0, _invariant2.default)(routeNames.length > 0, 'Please specify at least one route when configuring a navigator.');

  routeNames.forEach(function (routeName) {
    var routeConfig = routeConfigs[routeName];

    if (!routeConfig.screen && !routeConfig.getScreen) {
      throw new Error('Route \'' + routeName + '\' should declare a screen. ' + 'For example:\n\n' + "import MyScreen from './MyScreen';\n" + '...\n' + (routeName + ': {\n') + '  screen: MyScreen,\n' + '}');
    } else if (routeConfig.screen && routeConfig.getScreen) {
      throw new Error('Route \'' + routeName + '\' should declare a screen or ' + 'a getScreen, not both.');
    }

    if (routeConfig.screen && typeof routeConfig.screen !== 'function' && typeof routeConfig.screen !== 'string') {
      throw new Error('The component for route \'' + routeName + '\' must be a ' + 'React component. For example:\n\n' + "import MyScreen from './MyScreen';\n" + '...\n' + (routeName + ': {\n') + '  screen: MyScreen,\n' + '}\n\n' + 'You can also use a navigator:\n\n' + "import MyNavigator from './MyNavigator';\n" + '...\n' + (routeName + ': {\n') + '  screen: MyNavigator,\n' + '}');
    }
  });
}

exports.default = validateRouteConfigMap;
}, 407, null, "react-navigation/src/routers/validateRouteConfigMap.js");
__d(/* react-navigation/src/routers/getScreenConfigDeprecated.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _invariant = require(376                 ); // 376 = ../utils/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

exports.default = function () {
  return (0, _invariant2.default)(false, '`getScreenConfig` has been replaced with `getScreenOptions`');
};
}, 408, null, "react-navigation/src/routers/getScreenConfigDeprecated.js");
__d(/* react-navigation/src/navigators/NavigatorTypes.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});


var STACK = 'react-navigation/STACK';
var TABS = 'react-navigation/TABS';
var DRAWER = 'react-navigation/DRAWER';

exports.default = {
  STACK: STACK,
  TABS: TABS,
  DRAWER: DRAWER
};
}, 409, null, "react-navigation/src/navigators/NavigatorTypes.js");
__d(/* react-navigation/src/navigators/TabNavigator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/navigators/TabNavigator.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _createNavigator = require(378                ); // 378 = ./createNavigator

var _createNavigator2 = babelHelpers.interopRequireDefault(_createNavigator);

var _createNavigationContainer = require(372                           ); // 372 = ../createNavigationContainer

var _createNavigationContainer2 = babelHelpers.interopRequireDefault(_createNavigationContainer);

var _TabRouter = require(411                   ); // 411 = ../routers/TabRouter

var _TabRouter2 = babelHelpers.interopRequireDefault(_TabRouter);

var _TabView = require(412                       ); // 412 = ../views/TabView/TabView

var _TabView2 = babelHelpers.interopRequireDefault(_TabView);

var _TabBarTop = require(423                         ); // 423 = ../views/TabView/TabBarTop

var _TabBarTop2 = babelHelpers.interopRequireDefault(_TabBarTop);

var _TabBarBottom = require(425                            ); // 425 = ../views/TabView/TabBarBottom

var _TabBarBottom2 = babelHelpers.interopRequireDefault(_TabBarBottom);

var _NavigatorTypes = require(409               ); // 409 = ./NavigatorTypes

var _NavigatorTypes2 = babelHelpers.interopRequireDefault(_NavigatorTypes);

var TabNavigator = function TabNavigator(routeConfigs) {
  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var mergedConfig = babelHelpers.extends({}, TabNavigator.Presets.Default, config);
  var tabBarComponent = mergedConfig.tabBarComponent,
      tabBarPosition = mergedConfig.tabBarPosition,
      tabBarOptions = mergedConfig.tabBarOptions,
      swipeEnabled = mergedConfig.swipeEnabled,
      animationEnabled = mergedConfig.animationEnabled,
      configureTransition = mergedConfig.configureTransition,
      lazy = mergedConfig.lazy,
      initialLayout = mergedConfig.initialLayout,
      tabsConfig = babelHelpers.objectWithoutProperties(mergedConfig, ['tabBarComponent', 'tabBarPosition', 'tabBarOptions', 'swipeEnabled', 'animationEnabled', 'configureTransition', 'lazy', 'initialLayout']);


  var router = (0, _TabRouter2.default)(routeConfigs, tabsConfig);

  var navigator = (0, _createNavigator2.default)(router, routeConfigs, config, _NavigatorTypes2.default.TABS)(function (props) {
    return React.createElement(_TabView2.default, babelHelpers.extends({}, props, {
      tabBarComponent: tabBarComponent,
      tabBarPosition: tabBarPosition,
      tabBarOptions: tabBarOptions,
      swipeEnabled: swipeEnabled,
      animationEnabled: animationEnabled,
      configureTransition: configureTransition,
      lazy: lazy,
      initialLayout: initialLayout,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 65
      }
    }));
  });

  return (0, _createNavigationContainer2.default)(navigator);
};

var Presets = {
  iOSBottomTabs: {
    tabBarComponent: _TabBarBottom2.default,
    tabBarPosition: 'bottom',
    swipeEnabled: false,
    animationEnabled: false,
    lazy: false,
    initialLayout: undefined
  },
  AndroidTopTabs: {
    tabBarComponent: _TabBarTop2.default,
    tabBarPosition: 'top',
    swipeEnabled: true,
    animationEnabled: true,
    lazy: false,
    initialLayout: undefined
  }
};

TabNavigator.Presets = {
  iOSBottomTabs: Presets.iOSBottomTabs,
  AndroidTopTabs: Presets.AndroidTopTabs,
  Default: _reactNative.Platform.OS === 'ios' ? Presets.iOSBottomTabs : Presets.AndroidTopTabs
};

exports.default = TabNavigator;
}, 410, null, "react-navigation/src/navigators/TabNavigator.js");
__d(/* react-navigation/src/routers/TabRouter.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _invariant = require(376                 ); // 376 = ../utils/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var _getScreenForRouteName = require(405                      ); // 405 = ./getScreenForRouteName

var _getScreenForRouteName2 = babelHelpers.interopRequireDefault(_getScreenForRouteName);

var _createConfigGetter = require(404                   ); // 404 = ./createConfigGetter

var _createConfigGetter2 = babelHelpers.interopRequireDefault(_createConfigGetter);

var _NavigationActions = require(374                   ); // 374 = ../NavigationActions

var _NavigationActions2 = babelHelpers.interopRequireDefault(_NavigationActions);

var _validateRouteConfigMap = require(407                       ); // 407 = ./validateRouteConfigMap

var _validateRouteConfigMap2 = babelHelpers.interopRequireDefault(_validateRouteConfigMap);

var _getScreenConfigDeprecated = require(408                          ); // 408 = ./getScreenConfigDeprecated

var _getScreenConfigDeprecated2 = babelHelpers.interopRequireDefault(_getScreenConfigDeprecated);

exports.default = function (routeConfigs) {
  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  (0, _validateRouteConfigMap2.default)(routeConfigs);

  var order = config.order || Object.keys(routeConfigs);
  var paths = config.paths || {};
  var initialRouteName = config.initialRouteName || order[0];
  var initialRouteIndex = order.indexOf(initialRouteName);
  var backBehavior = config.backBehavior || 'initialRoute';
  var shouldBackNavigateToInitialRoute = backBehavior === 'initialRoute';
  var tabRouters = {};
  order.forEach(function (routeName) {
    var routeConfig = routeConfigs[routeName];
    paths[routeName] = typeof routeConfig.path === 'string' ? routeConfig.path : routeName;
    tabRouters[routeName] = null;
    if (routeConfig.screen && routeConfig.screen.router) {
      tabRouters[routeName] = routeConfig.screen.router;
    }
  });
  if (initialRouteIndex === -1) {
    throw new Error('Invalid initialRouteName \'' + initialRouteName + '\' for TabRouter. ' + ('Should be one of ' + order.map(function (n) {
      return '"' + n + '"';
    }).join(', ')));
  }
  return {
    getStateForAction: function getStateForAction(action, inputState) {
      var state = inputState;
      if (!state) {
        var _routes = order.map(function (routeName) {
          var tabRouter = tabRouters[routeName];
          if (tabRouter) {
            var childAction = action.action || _NavigationActions2.default.init(babelHelpers.extends({}, action.params ? { params: action.params } : {}));
            return babelHelpers.extends({}, tabRouter.getStateForAction(childAction), {
              key: routeName,
              routeName: routeName
            });
          }
          return {
            key: routeName,
            routeName: routeName
          };
        });
        state = {
          routes: _routes,
          index: initialRouteIndex
        };
      }

      if (action.type === _NavigationActions2.default.INIT) {
        var params = action.params;

        if (params) {
          state.routes = state.routes.map(function (route) {
            return babelHelpers.extends({}, route, {
              params: babelHelpers.extends({}, route.params, params)
            });
          });
        }
      }

      var activeTabLastState = state.routes[state.index];
      var activeTabRouter = tabRouters[order[state.index]];
      if (activeTabRouter) {
        var activeTabState = activeTabRouter.getStateForAction(action.action || action, activeTabLastState);
        if (!activeTabState && inputState) {
          return null;
        }
        if (activeTabState && activeTabState !== activeTabLastState) {
          var _routes2 = [].concat(babelHelpers.toConsumableArray(state.routes));
          _routes2[state.index] = activeTabState;
          return babelHelpers.extends({}, state, {
            routes: _routes2
          });
        }
      }

      var activeTabIndex = state.index;
      var isBackEligible = action.key == null || action.key === activeTabLastState.key;
      if (action.type === _NavigationActions2.default.BACK && isBackEligible && shouldBackNavigateToInitialRoute) {
        activeTabIndex = initialRouteIndex;
      }
      var didNavigate = false;
      if (action.type === _NavigationActions2.default.NAVIGATE) {
        var navigateAction = action;
        didNavigate = !!order.find(function (tabId, i) {
          if (tabId === navigateAction.routeName) {
            activeTabIndex = i;
            return true;
          }
          return false;
        });
        if (didNavigate) {
          var childState = state.routes[activeTabIndex];
          var newChildState = void 0;

          var tabRouter = tabRouters[action.routeName];

          if (action.action) {
            newChildState = tabRouter ? tabRouter.getStateForAction(action.action, childState) : null;
          } else if (!tabRouter && action.params) {
            newChildState = babelHelpers.extends({}, childState, {
              params: babelHelpers.extends({}, childState.params || {}, action.params)
            });
          }

          if (newChildState && newChildState !== childState) {
            var _routes3 = [].concat(babelHelpers.toConsumableArray(state.routes));
            _routes3[activeTabIndex] = newChildState;
            return babelHelpers.extends({}, state, {
              routes: _routes3,
              index: activeTabIndex
            });
          }
        }
      }
      if (action.type === _NavigationActions2.default.SET_PARAMS) {
        var key = action.key;
        var lastRoute = state.routes.find(function (route) {
          return route.key === key;
        });
        if (lastRoute) {
          var _params = babelHelpers.extends({}, lastRoute.params, action.params);
          var _routes4 = [].concat(babelHelpers.toConsumableArray(state.routes));
          _routes4[state.routes.indexOf(lastRoute)] = babelHelpers.extends({}, lastRoute, {
            params: _params
          });
          return babelHelpers.extends({}, state, {
            routes: _routes4
          });
        }
      }
      if (activeTabIndex !== state.index) {
        return babelHelpers.extends({}, state, {
          index: activeTabIndex
        });
      } else if (didNavigate && !inputState) {
        return state;
      } else if (didNavigate) {
        return null;
      }

      var index = state.index;

      var routes = state.routes;
      order.find(function (tabId, i) {
        var tabRouter = tabRouters[tabId];
        if (i === index) {
          return false;
        }
        var tabState = routes[i];
        if (tabRouter) {
          tabState = tabRouter.getStateForAction(action, tabState);
        }
        if (!tabState) {
          index = i;
          return true;
        }
        if (tabState !== routes[i]) {
          routes = [].concat(babelHelpers.toConsumableArray(routes));
          routes[i] = tabState;
          index = i;
          return true;
        }
        return false;
      });

      index = action.type === _NavigationActions2.default.SET_PARAMS ? state.index : index;

      if (index !== state.index || routes !== state.routes) {
        return babelHelpers.extends({}, state, {
          index: index,
          routes: routes
        });
      }
      return state;
    },
    getComponentForState: function getComponentForState(state) {
      var routeName = order[state.index];
      (0, _invariant2.default)(routeName, 'There is no route defined for index ' + state.index + '. Check that\n        that you passed in a navigation state with a valid tab/screen index.');
      var childRouter = tabRouters[routeName];
      if (childRouter) {
        return childRouter.getComponentForState(state.routes[state.index]);
      }
      return (0, _getScreenForRouteName2.default)(routeConfigs, routeName);
    },
    getComponentForRouteName: function getComponentForRouteName(routeName) {
      return (0, _getScreenForRouteName2.default)(routeConfigs, routeName);
    },
    getPathAndParamsForState: function getPathAndParamsForState(state) {
      var route = state.routes[state.index];
      var routeName = order[state.index];
      var subPath = paths[routeName];
      var screen = (0, _getScreenForRouteName2.default)(routeConfigs, routeName);
      var path = subPath;
      var params = route.params;
      if (screen && screen.router) {
        var stateRoute = route;

        var child = screen.router.getPathAndParamsForState(stateRoute);
        path = subPath ? subPath + '/' + child.path : child.path;
        params = child.params ? babelHelpers.extends({}, params, child.params) : params;
      }
      return {
        path: path,
        params: params
      };
    },
    getActionForPathAndParams: function getActionForPathAndParams(path, params) {
      return order.map(function (tabId) {
        var parts = path.split('/');
        var pathToTest = paths[tabId];
        if (parts[0] === pathToTest) {
          var tabRouter = tabRouters[tabId];
          var action = _NavigationActions2.default.navigate({
            routeName: tabId
          });
          if (tabRouter && tabRouter.getActionForPathAndParams) {
            action.action = tabRouter.getActionForPathAndParams(parts.slice(1).join('/'), params);
          } else if (params) {
            action.params = params;
          }
          return action;
        }
        return null;
      }).find(function (action) {
        return !!action;
      }) || order.map(function (tabId) {
        var tabRouter = tabRouters[tabId];
        return tabRouter && tabRouter.getActionForPathAndParams(path, params);
      }).find(function (action) {
        return !!action;
      }) || null;
    },


    getScreenOptions: (0, _createConfigGetter2.default)(routeConfigs, config.navigationOptions),

    getScreenConfig: _getScreenConfigDeprecated2.default
  };
};
}, 411, null, "react-navigation/src/routers/TabRouter.js");
__d(/* react-navigation/src/views/TabView/TabView.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/views/TabView/TabView.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _reactNativeTabView = require(413                    ); // 413 = react-native-tab-view

var _SceneView = require(395           ); // 395 = ../SceneView

var _SceneView2 = babelHelpers.interopRequireDefault(_SceneView);

var _withCachedChildNavigation = require(422                              ); // 422 = ../../withCachedChildNavigation

var _withCachedChildNavigation2 = babelHelpers.interopRequireDefault(_withCachedChildNavigation);

var _SafeAreaView = require(393              ); // 393 = ../SafeAreaView

var _SafeAreaView2 = babelHelpers.interopRequireDefault(_SafeAreaView);

var TabView = function (_React$PureComponent) {
  babelHelpers.inherits(TabView, _React$PureComponent);

  function TabView() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, TabView);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = TabView.__proto__ || Object.getPrototypeOf(TabView)).call.apply(_ref, [this].concat(args))), _this), _this._handlePageChanged = function (index) {
      var navigation = _this.props.navigation;

      navigation.navigate(navigation.state.routes[index].routeName);
    }, _this._renderScene = function (_ref2) {
      var route = _ref2.route;
      var screenProps = _this.props.screenProps;

      var childNavigation = _this.props.childNavigationProps[route.key];
      var TabComponent = _this.props.router.getComponentForRouteName(route.routeName);
      return React.createElement(
        _reactNative.View,
        { style: styles.page, __source: {
            fileName: _jsxFileName,
            lineNumber: 81
          }
        },
        React.createElement(_SceneView2.default, {
          screenProps: screenProps,
          component: TabComponent,
          navigation: childNavigation,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 82
          }
        })
      );
    }, _this._getLabel = function (_ref3) {
      var route = _ref3.route,
          tintColor = _ref3.tintColor,
          focused = _ref3.focused;

      var options = _this.props.router.getScreenOptions(_this.props.childNavigationProps[route.key], _this.props.screenProps || {});

      if (options.tabBarLabel) {
        return typeof options.tabBarLabel === 'function' ? options.tabBarLabel({ tintColor: tintColor, focused: focused }) : options.tabBarLabel;
      }

      if (typeof options.title === 'string') {
        return options.title;
      }

      return route.routeName;
    }, _this._getOnPress = function (previousScene, _ref4) {
      var route = _ref4.route;

      var options = _this.props.router.getScreenOptions(_this.props.childNavigationProps[route.key], _this.props.screenProps || {});

      return options.tabBarOnPress;
    }, _this._getTestIDProps = function (_ref5) {
      var route = _ref5.route;

      var options = _this.props.router.getScreenOptions(_this.props.childNavigationProps[route.key], _this.props.screenProps || {});

      return options.tabBarTestIDProps;
    }, _this._renderIcon = function (_ref6) {
      var focused = _ref6.focused,
          route = _ref6.route,
          tintColor = _ref6.tintColor;

      var options = _this.props.router.getScreenOptions(_this.props.childNavigationProps[route.key], _this.props.screenProps || {});
      if (options.tabBarIcon) {
        return typeof options.tabBarIcon === 'function' ? options.tabBarIcon({ tintColor: tintColor, focused: focused }) : options.tabBarIcon;
      }
      return null;
    }, _this._renderTabBar = function (props) {
      var _this$props = _this.props,
          tabBarOptions = _this$props.tabBarOptions,
          TabBarComponent = _this$props.tabBarComponent,
          animationEnabled = _this$props.animationEnabled;

      if (typeof TabBarComponent === 'undefined') {
        return null;
      }
      return React.createElement(TabBarComponent, babelHelpers.extends({}, props, tabBarOptions, {
        screenProps: _this.props.screenProps,
        navigation: _this.props.navigation,
        getLabel: _this._getLabel,
        getTestIDProps: _this._getTestIDProps,
        getOnPress: _this._getOnPress,
        renderIcon: _this._renderIcon,
        animationEnabled: animationEnabled,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 151
        }
      }));
    }, _this._renderPager = function (props) {
      return React.createElement(_reactNativeTabView.TabViewPagerPan, babelHelpers.extends({}, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 165
        }
      }));
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(TabView, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          router = _props.router,
          tabBarComponent = _props.tabBarComponent,
          tabBarPosition = _props.tabBarPosition,
          animationEnabled = _props.animationEnabled,
          configureTransition = _props.configureTransition,
          swipeEnabled = _props.swipeEnabled,
          lazy = _props.lazy,
          initialLayout = _props.initialLayout,
          screenProps = _props.screenProps;


      var renderHeader = void 0;
      var renderFooter = void 0;
      var renderPager = void 0;

      var state = this.props.navigation.state;

      var options = router.getScreenOptions(this.props.childNavigationProps[state.routes[state.index].key], screenProps || {});

      var tabBarVisible = options.tabBarVisible == null ? true : options.tabBarVisible;

      if (tabBarComponent !== undefined && tabBarVisible) {
        if (tabBarPosition === 'bottom') {
          renderFooter = this._renderTabBar;
        } else {
          renderHeader = this._renderTabBar;
        }
      }

      if (animationEnabled === false && swipeEnabled === false || typeof configureTransition === 'function') {
        renderPager = this._renderPager;
      }

      var props = {
        lazy: lazy,
        initialLayout: initialLayout,
        animationEnabled: animationEnabled,
        configureTransition: configureTransition,
        swipeEnabled: swipeEnabled,
        renderPager: renderPager,
        renderHeader: renderHeader,
        renderFooter: renderFooter,
        renderScene: this._renderScene,
        onIndexChange: this._handlePageChanged,
        navigationState: this.props.navigation.state,
        screenProps: this.props.screenProps,
        style: styles.container
      };

      return React.createElement(_reactNativeTabView.TabViewAnimated, babelHelpers.extends({}, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 225
        }
      }));
    }
  }]);
  return TabView;
}(React.PureComponent);

TabView.defaultProps = {
  initialLayout: _reactNative.Platform.select({
    android: { width: 1, height: 0 }
  })
};
exports.default = (0, _withCachedChildNavigation2.default)(TabView);


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1
  },

  page: {
    flex: 1,
    overflow: 'hidden'
  }
});
}, 412, null, "react-navigation/src/views/TabView/TabView.js");
__d(/* react-native-tab-view/src/index.js */function(global, require, module, exports) {

module.exports = {
  get TabViewAnimated() {
    return require(414                ).default; // 414 = ./TabViewAnimated
  },
  get TabViewPagerPan() {
    return require(418                ).default; // 418 = ./TabViewPagerPan
  },
  get TabViewPagerScroll() {
    return require(417                   ).default; // 417 = ./TabViewPagerScroll
  },
  get TabViewPagerAndroid() {
    return require(416                    ).default; // 416 = ./TabViewPagerAndroid
  },
  get TabBar() {
    return require(419       ).default; // 419 = ./TabBar
  },
  get SceneMap() {
    return require(421         ).default; // 421 = ./SceneMap
  }
};
}, 413, null, "react-native-tab-view/src/index.js");
__d(/* react-native-tab-view/src/TabViewAnimated.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native-tab-view/src/TabViewAnimated.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _TabViewPropTypes = require(415                 ); // 415 = ./TabViewPropTypes

var TabViewPager = void 0;

switch (_reactNative.Platform.OS) {
  case 'android':
    TabViewPager = require(416                    ).default; // 416 = ./TabViewPagerAndroid
    break;
  case 'ios':
    TabViewPager = require(417                   ).default; // 417 = ./TabViewPagerScroll
    break;
  default:
    TabViewPager = require(418                ).default; // 418 = ./TabViewPagerPan
    break;
}

var TabViewAnimated = function (_React$Component) {
  babelHelpers.inherits(TabViewAnimated, _React$Component);

  function TabViewAnimated(props) {
    babelHelpers.classCallCheck(this, TabViewAnimated);

    var _this = babelHelpers.possibleConstructorReturn(this, (TabViewAnimated.__proto__ || Object.getPrototypeOf(TabViewAnimated)).call(this, props));

    _initialiseProps.call(_this);

    _this.state = {
      loaded: [_this.props.navigationState.index],
      layout: babelHelpers.extends({}, _this.props.initialLayout, {
        measured: false
      }),
      position: new _reactNative.Animated.Value(_this.props.navigationState.index)
    };
    return _this;
  }

  babelHelpers.createClass(TabViewAnimated, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._mounted = true;
      this._positionListener = this.state.position.addListener(this._trackPosition);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._mounted = false;
      this.state.position.removeListener(this._positionListener);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          navigationState = _props.navigationState,
          onIndexChange = _props.onIndexChange,
          onPositionChange = _props.onPositionChange,
          canJumpToTab = _props.canJumpToTab,
          lazy = _props.lazy,
          initialLayout = _props.initialLayout,
          renderScene = _props.renderScene,
          renderPager = _props.renderPager,
          renderHeader = _props.renderHeader,
          renderFooter = _props.renderFooter,
          rest = babelHelpers.objectWithoutProperties(_props, ['navigationState', 'onIndexChange', 'onPositionChange', 'canJumpToTab', 'lazy', 'initialLayout', 'renderScene', 'renderPager', 'renderHeader', 'renderFooter']);

      var props = this._buildSceneRendererProps();

      return React.createElement(
        _reactNative.View,
        {
          onLayout: this._handleLayout,
          loaded: this.state.loaded,
          style: [styles.container, this.props.style],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 252
          }
        },
        renderHeader && renderHeader(props),
        renderPager(babelHelpers.extends({}, props, rest, {
          children: navigationState.routes.map(function (route, index) {
            return _this2._renderScene(babelHelpers.extends({}, props, {
              route: route,
              index: index,
              focused: index === navigationState.index
            }));
          })
        })),
        renderFooter && renderFooter(props)
      );
    }
  }]);
  return TabViewAnimated;
}(React.Component);

TabViewAnimated.propTypes = {
  navigationState: _TabViewPropTypes.NavigationStatePropType.isRequired,
  onIndexChange: _propTypes2.default.func.isRequired,
  onPositionChange: _propTypes2.default.func,
  initialLayout: _propTypes2.default.shape({
    height: _propTypes2.default.number.isRequired,
    width: _propTypes2.default.number.isRequired
  }),
  canJumpToTab: _propTypes2.default.func,
  renderPager: _propTypes2.default.func.isRequired,
  renderScene: _propTypes2.default.func.isRequired,
  renderHeader: _propTypes2.default.func,
  renderFooter: _propTypes2.default.func,
  lazy: _propTypes2.default.bool
};
TabViewAnimated.defaultProps = {
  renderPager: function renderPager(props) {
    return React.createElement(TabViewPager, babelHelpers.extends({}, props, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 77
      }
    }));
  },
  initialLayout: {
    height: 0,
    width: 0
  }
};

var _initialiseProps = function _initialiseProps() {
  var _this3 = this;

  this._mounted = false;
  this._subscriptions = {};

  this._renderScene = function (props) {
    var _props2 = _this3.props,
        renderScene = _props2.renderScene,
        lazy = _props2.lazy;
    var navigationState = props.navigationState;
    var loaded = _this3.state.loaded;

    if (lazy) {
      if (loaded.includes(navigationState.routes.indexOf(props.route))) {
        return renderScene(props);
      }
      return null;
    }
    return renderScene(props);
  };

  this._handlePositionChange = function (value) {
    var _props3 = _this3.props,
        onPositionChange = _props3.onPositionChange,
        navigationState = _props3.navigationState,
        lazy = _props3.lazy;

    if (onPositionChange) {
      onPositionChange({ value: value });
    }
    var loaded = _this3.state.loaded;

    if (lazy) {
      var next = Math.ceil(value);
      if (next === navigationState.index) {
        next = Math.floor(value);
      }
      if (loaded.includes(next)) {
        return;
      }
      _this3.setState({
        loaded: [].concat(babelHelpers.toConsumableArray(loaded), [next])
      });
    }
  };

  this._trackPosition = function (e) {
    _this3._handlePositionChange(e.value);
    _this3._triggerEvent('position', e.value);
    _this3._lastPosition = e.value;
  };

  this._getLastPosition = function () {
    if (typeof _this3._lastPosition === 'number') {
      return _this3._lastPosition;
    } else {
      return _this3.props.navigationState.index;
    }
  };

  this._handleLayout = function (e) {
    var _e$nativeEvent$layout = e.nativeEvent.layout,
        height = _e$nativeEvent$layout.height,
        width = _e$nativeEvent$layout.width;


    if (_this3.state.layout.width === width && _this3.state.layout.height === height) {
      return;
    }

    _this3.setState({
      layout: {
        measured: true,
        height: height,
        width: width
      }
    });
  };

  this._buildSceneRendererProps = function () {
    return {
      layout: _this3.state.layout,
      navigationState: _this3.props.navigationState,
      position: _this3.state.position,
      jumpToIndex: _this3._jumpToIndex,
      getLastPosition: _this3._getLastPosition,
      subscribe: _this3._addSubscription
    };
  };

  this._jumpToIndex = function (index) {
    if (!_this3._mounted) {
      return;
    }

    var _props4 = _this3.props,
        canJumpToTab = _props4.canJumpToTab,
        navigationState = _props4.navigationState;


    if (canJumpToTab && !canJumpToTab(navigationState.routes[index])) {
      _this3._triggerEvent('reset', navigationState.index);
      return;
    }

    if (index !== navigationState.index) {
      _this3.props.onIndexChange(index);
    }
  };

  this._addSubscription = function (event, callback) {
    if (!_this3._subscriptions[event]) {
      _this3._subscriptions[event] = [];
    }
    _this3._subscriptions[event].push(callback);
    return {
      remove: function remove() {
        var index = _this3._subscriptions[event].indexOf(callback);
        if (index > -1) {
          _this3._subscriptions[event].splice(index, 1);
        }
      }
    };
  };

  this._triggerEvent = function (event, value) {
    if (_this3._subscriptions[event]) {
      _this3._subscriptions[event].forEach(function (fn) {
        return fn(value);
      });
    }
  };
};

exports.default = TabViewAnimated;


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    overflow: 'hidden'
  }
});
}, 414, null, "react-native-tab-view/src/TabViewAnimated.js");
__d(/* react-native-tab-view/src/TabViewPropTypes.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SceneRendererPropType = exports.NavigationStatePropType = exports.NavigationRoutePropType = undefined;

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var NavigationRoutePropType = exports.NavigationRoutePropType = _propTypes2.default.shape({
  title: _propTypes2.default.string,
  key: _propTypes2.default.string.isRequired
});

var NavigationStatePropType = exports.NavigationStatePropType = _propTypes2.default.shape({
  routes: _propTypes2.default.arrayOf(NavigationRoutePropType).isRequired,
  index: _propTypes2.default.number.isRequired
});

var SceneRendererPropType = exports.SceneRendererPropType = {
  layout: _propTypes2.default.shape({
    measured: _propTypes2.default.bool.isRequired,
    height: _propTypes2.default.number.isRequired,
    width: _propTypes2.default.number.isRequired
  }).isRequired,
  navigationState: NavigationStatePropType.isRequired,
  position: _propTypes2.default.instanceOf(_reactNative.Animated.Value).isRequired,
  jumpToIndex: _propTypes2.default.func.isRequired,
  getLastPosition: _propTypes2.default.func.isRequired,
  subscribe: _propTypes2.default.func.isRequired
};
}, 415, null, "react-native-tab-view/src/TabViewPropTypes.js");
__d(/* react-native-tab-view/src/TabViewPagerAndroid.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native-tab-view/src/TabViewPagerAndroid.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _TabViewPropTypes = require(415                 ); // 415 = ./TabViewPropTypes

var TabViewPagerAndroid = function (_React$Component) {
  babelHelpers.inherits(TabViewPagerAndroid, _React$Component);

  function TabViewPagerAndroid(props) {
    babelHelpers.classCallCheck(this, TabViewPagerAndroid);

    var _this = babelHelpers.possibleConstructorReturn(this, (TabViewPagerAndroid.__proto__ || Object.getPrototypeOf(TabViewPagerAndroid)).call(this, props));

    _this._isRequestingAnimationFrame = false;
    _this._isIdle = true;
    _this._currentIndex = 0;

    _this._getPageIndex = function (index) {
      return _reactNative.I18nManager.isRTL ? _this.props.navigationState.routes.length - (index + 1) : index;
    };

    _this._setPage = function (index) {
      var _viewPager = _this._viewPager;

      if (_viewPager) {
        _this._animationFrameCallback = null;

        var page = _this._getPageIndex(index);
        if (_this.props.animationEnabled !== false) {
          _viewPager.setPage(page);
        } else {
          _viewPager.setPageWithoutAnimation(page);
        }
      }
    };

    _this._handlePageChange = function (index) {
      if (_this._isIdle && _this._currentIndex !== index) {
        _this._setPage(index);
        _this._currentIndex = index;
      }
    };

    _this._handlePageScroll = function (e) {
      _this.props.position.setValue(_this._getPageIndex(e.nativeEvent.position) + e.nativeEvent.offset * (_reactNative.I18nManager.isRTL ? -1 : 1));
    };

    _this._handlePageScrollStateChanged = function (e) {
      _this._isIdle = e === 'idle';
      _this.props.jumpToIndex(_this._currentIndex);
    };

    _this._handlePageSelected = function (e) {
      var index = _this._getPageIndex(e.nativeEvent.position);
      _this._currentIndex = index;
    };

    _this._setRef = function (el) {
      return _this._viewPager = el;
    };

    _this._currentIndex = _this.props.navigationState.index;
    return _this;
  }

  babelHelpers.createClass(TabViewPagerAndroid, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._resetListener = this.props.subscribe('reset', this._handlePageChange);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      if (this.props.layout !== nextProps.layout || React.Children.count(this.props.children) !== React.Children.count(nextProps.children)) {
        this._animationFrameCallback = function () {
          if (_this2._viewPager) {
            var navigationState = nextProps.navigationState;

            var page = _reactNative.I18nManager.isRTL ? navigationState.routes.length - (navigationState.index + 1) : navigationState.index;

            _this2._viewPager.setPageWithoutAnimation(page);
          }
        };

        if (!this._isRequestingAnimationFrame) {
          this._isRequestingAnimationFrame = true;

          global.requestAnimationFrame(function () {
            _this2._isRequestingAnimationFrame = false;

            if (_this2._animationFrameCallback) {
              _this2._animationFrameCallback();
            }
          });
        }
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this._handlePageChange(this.props.navigationState.index);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._resetListener.remove();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          navigationState = _props.navigationState,
          swipeEnabled = _props.swipeEnabled;

      var content = React.Children.map(children, function (child, i) {
        return React.createElement(
          _reactNative.View,
          {
            key: navigationState.routes[i].key,
            testID: navigationState.routes[i].testID,
            style: styles.page,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 137
            }
          },
          child
        );
      });

      if (_reactNative.I18nManager.isRTL) {
        content.reverse();
      }

      var initialPage = this._getPageIndex(navigationState.index);

      return React.createElement(
        _reactNative.ViewPagerAndroid,
        {
          key: navigationState.routes.length,
          keyboardDismissMode: 'on-drag',
          initialPage: initialPage,
          scrollEnabled: swipeEnabled !== false,
          onPageScroll: this._handlePageScroll,
          onPageScrollStateChanged: this._handlePageScrollStateChanged,
          onPageSelected: this._handlePageSelected,
          style: styles.container,
          ref: this._setRef,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 153
          }
        },
        content
      );
    }
  }]);
  return TabViewPagerAndroid;
}(React.Component);

TabViewPagerAndroid.propTypes = babelHelpers.extends({}, _TabViewPropTypes.SceneRendererPropType, {
  animationEnabled: _propTypes2.default.bool,
  swipeEnabled: _propTypes2.default.bool,
  children: _propTypes2.default.node
});
exports.default = TabViewPagerAndroid;


var styles = _reactNative.StyleSheet.create({
  container: {
    flexGrow: 1
  },

  page: {
    overflow: 'hidden'
  }
});
}, 416, null, "react-native-tab-view/src/TabViewPagerAndroid.js");
__d(/* react-native-tab-view/src/TabViewPagerScroll.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native-tab-view/src/TabViewPagerScroll.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _TabViewPropTypes = require(415                 ); // 415 = ./TabViewPropTypes

var TabViewPagerScroll = function (_React$Component) {
  babelHelpers.inherits(TabViewPagerScroll, _React$Component);

  function TabViewPagerScroll(props) {
    babelHelpers.classCallCheck(this, TabViewPagerScroll);

    var _this = babelHelpers.possibleConstructorReturn(this, (TabViewPagerScroll.__proto__ || Object.getPrototypeOf(TabViewPagerScroll)).call(this, props));

    _this._nextOffset = 0;
    _this._isIdle = true;

    _this._scrollTo = function (x) {
      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props.animationEnabled !== false;

      _this._nextOffset = x;

      if (_this._isIdle && _this._scrollView) {
        _this._scrollView.scrollTo({
          x: x,
          animated: animated
        });
      }
    };

    _this._handleMomentumScrollEnd = function (e) {
      var nextIndex = Math.round(e.nativeEvent.contentOffset.x / _this.props.layout.width);
      _this._isIdle = true;
      _this.props.jumpToIndex(nextIndex);
    };

    _this._handleScroll = function (e) {
      _this._isIdle = Math.abs(e.nativeEvent.contentOffset.x - _this._nextOffset) < 0.1;
      _this.props.position.setValue(e.nativeEvent.contentOffset.x / _this.props.layout.width);
    };

    _this._setRef = function (el) {
      return _this._scrollView = el;
    };

    _this.state = {
      initialOffset: {
        x: _this.props.navigationState.index * _this.props.layout.width,
        y: 0
      }
    };
    return _this;
  }

  babelHelpers.createClass(TabViewPagerScroll, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._scrollTo(this.props.navigationState.index * this.props.layout.width, false);
      this._resetListener = this.props.subscribe('reset', this._scrollTo);
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      var _this2 = this;

      var amount = this.props.navigationState.index * this.props.layout.width;
      if (prevProps.navigationState !== this.props.navigationState || prevProps.layout !== this.props.layout) {
        if (_reactNative.Platform.OS === 'android' || prevProps.navigationState !== this.props.navigationState) {
          global.requestAnimationFrame(function () {
            return _this2._scrollTo(amount);
          });
        } else {
          this._scrollTo(amount, false);
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._resetListener.remove();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          layout = _props.layout,
          navigationState = _props.navigationState;

      return React.createElement(
        _reactNative.ScrollView,
        {
          horizontal: true,
          pagingEnabled: true,
          directionalLockEnabled: true,
          keyboardDismissMode: 'on-drag',
          keyboardShouldPersistTaps: 'always',
          scrollEnabled: this.props.swipeEnabled,
          automaticallyAdjustContentInsets: false,
          bounces: false,
          alwaysBounceHorizontal: false,
          scrollsToTop: false,
          showsHorizontalScrollIndicator: false,
          scrollEventThrottle: 16,
          onScroll: this._handleScroll,
          onMomentumScrollEnd: this._handleMomentumScrollEnd,
          contentOffset: this.state.initialOffset,
          style: styles.container,
          contentContainerStyle: layout.width ? null : styles.container,
          ref: this._setRef,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 117
          }
        },
        React.Children.map(children, function (child, i) {
          return React.createElement(
            _reactNative.View,
            {
              key: navigationState.routes[i].key,
              testID: navigationState.routes[i].testID,
              style: layout.width ? { width: layout.width, overflow: 'hidden' } : i === navigationState.index ? styles.page : null,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 138
              }
            },
            i === navigationState.index || layout.width ? child : null
          );
        })
      );
    }
  }]);
  return TabViewPagerScroll;
}(React.Component);

TabViewPagerScroll.propTypes = babelHelpers.extends({}, _TabViewPropTypes.SceneRendererPropType, {
  animationEnabled: _propTypes2.default.bool,
  swipeEnabled: _propTypes2.default.bool,
  children: _propTypes2.default.node
});
exports.default = TabViewPagerScroll;


var styles = _reactNative.StyleSheet.create({
  container: {
    flexGrow: 1
  },

  page: {
    flex: 1,
    overflow: 'hidden'
  }
});
}, 417, null, "react-native-tab-view/src/TabViewPagerScroll.js");
__d(/* react-native-tab-view/src/TabViewPagerPan.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native-tab-view/src/TabViewPagerPan.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _TabViewPropTypes = require(415                 ); // 415 = ./TabViewPropTypes

var DEAD_ZONE = 12;

var DefaultTransitionSpec = {
  timing: _reactNative.Animated.spring,
  tension: 300,
  friction: 35
};

var TabViewPagerPan = function (_React$Component) {
  babelHelpers.inherits(TabViewPagerPan, _React$Component);

  function TabViewPagerPan() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, TabViewPagerPan);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = TabViewPagerPan.__proto__ || Object.getPrototypeOf(TabViewPagerPan)).call.apply(_ref, [this].concat(args))), _this), _this._pendingIndex = null, _this._lastValue = null, _this._isMoving = null, _this._startDirection = 0, _this._isIndexInRange = function (index) {
      var routes = _this.props.navigationState.routes;

      return index >= 0 && index <= routes.length - 1;
    }, _this._isMovingHorizontally = function (evt, gestureState) {
      return Math.abs(gestureState.dx) > Math.abs(gestureState.dy * 3) && Math.abs(gestureState.vx) > Math.abs(gestureState.vy * 3);
    }, _this._isReverseDirection = function (gestureState) {
      if (_this._startDirection > 0) {
        return gestureState.vx < 0;
      } else {
        return gestureState.vx > 0;
      }
    }, _this._getNextIndex = function (evt, gestureState) {
      var currentIndex = typeof _this._pendingIndex === 'number' ? _this._pendingIndex : _this.props.navigationState.index;

      var swipeVelocityThreshold = _this.props.swipeVelocityThreshold;

      if (_reactNative.Platform.OS === 'android') {
        swipeVelocityThreshold /= 1000000;
      }

      if (Math.abs(gestureState.dx) > _this.props.swipeDistanceThreshold || Math.abs(gestureState.vx) > swipeVelocityThreshold) {
        var nextIndex = currentIndex - gestureState.dx / Math.abs(gestureState.dx) * (_reactNative.I18nManager.isRTL ? -1 : 1);
        if (_this._isIndexInRange(nextIndex)) {
          return nextIndex;
        }
      }
      return currentIndex;
    }, _this._canMoveScreen = function (evt, gestureState) {
      if (_this.props.swipeEnabled === false) {
        return false;
      }
      var _this$props$navigatio = _this.props.navigationState,
          routes = _this$props$navigatio.routes,
          index = _this$props$navigatio.index;

      var canMove = _this._isMovingHorizontally(evt, gestureState) && (gestureState.dx >= DEAD_ZONE && index >= 0 || gestureState.dx <= -DEAD_ZONE && index <= routes.length - 1);
      if (canMove) {
        _this._startDirection = gestureState.dx;
      }
      return canMove;
    }, _this._startGesture = function (evt, gestureState) {
      if (typeof _this.props.onSwipeStart === 'function') {
        _this.props.onSwipeStart(evt, gestureState);
      }
      _this._lastValue = _this.props.getLastPosition();
      _this.props.position.stopAnimation();
    }, _this._respondToGesture = function (evt, gestureState) {
      var width = _this.props.layout.width;

      var currentPosition = typeof _this._lastValue === 'number' ? _this._lastValue : _this.props.navigationState.index;
      var nextPosition = currentPosition - gestureState.dx / width * (_reactNative.I18nManager.isRTL ? -1 : 1);
      if (_this._isMoving === null) {
        _this._isMoving = _this._isMovingHorizontally(evt, gestureState);
      }
      if (_this._isMoving && _this._isIndexInRange(nextPosition)) {
        _this.props.position.setValue(nextPosition);
      }
    }, _this._finishGesture = function (evt, gestureState) {
      if (typeof _this.props.onSwipeEnd === 'function') {
        _this.props.onSwipeEnd(evt, gestureState);
      }
      var currentIndex = _this.props.navigationState.index;
      var currentValue = _this.props.getLastPosition();
      if (currentValue !== currentIndex) {
        if (_this._isMoving && !_this._isReverseDirection(gestureState)) {
          var nextIndex = _this._getNextIndex(evt, gestureState);
          _this._transitionTo(nextIndex);
        } else {
          _this._transitionTo(currentIndex);
        }
      }
      _this._lastValue = null;
      _this._isMoving = null;
    }, _this._transitionTo = function (toValue) {
      var lastPosition = _this.props.getLastPosition();
      var currentTransitionProps = {
        progress: lastPosition
      };
      var nextTransitionProps = {
        progress: toValue
      };

      _this._pendingIndex = toValue;

      if (_this.props.animationEnabled !== false) {
        var transitionSpec = _this.props.configureTransition(currentTransitionProps, nextTransitionProps);
        var timing = transitionSpec.timing,
            transitionConfig = babelHelpers.objectWithoutProperties(transitionSpec, ['timing']);


        timing(_this.props.position, babelHelpers.extends({}, transitionConfig, {
          toValue: toValue
        })).start(function (_ref2) {
          var finished = _ref2.finished;

          if (finished) {
            _this.props.jumpToIndex(toValue);
            _this._pendingIndex = null;
          }
        });
      } else {
        _this.props.position.setValue(toValue);
        _this.props.jumpToIndex(toValue);
        _this._pendingIndex = null;
      }
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(TabViewPagerPan, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._panResponder = _reactNative.PanResponder.create({
        onMoveShouldSetPanResponder: this._canMoveScreen,
        onMoveShouldSetPanResponderCapture: this._canMoveScreen,
        onPanResponderGrant: this._startGesture,
        onPanResponderMove: this._respondToGesture,
        onPanResponderTerminate: this._finishGesture,
        onPanResponderRelease: this._finishGesture,
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return true;
        }
      });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._resetListener = this.props.subscribe('reset', this._transitionTo);
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      if (prevProps.navigationState.index !== this.props.navigationState.index) {
        this._transitionTo(this.props.navigationState.index);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._resetListener && this._resetListener.remove();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          layout = _props.layout,
          position = _props.position,
          navigationState = _props.navigationState,
          children = _props.children;
      var width = layout.width;
      var routes = navigationState.routes;

      var inputRange = [-1].concat(babelHelpers.toConsumableArray(routes.map(function (x, i) {
        return i;
      })));
      var outputRange = inputRange.map(function (i) {
        return width * i * (_reactNative.I18nManager.isRTL ? 1 : -1);
      });

      var translateX = position.interpolate({
        inputRange: inputRange,
        outputRange: outputRange
      });

      return React.createElement(
        _reactNative.Animated.View,
        babelHelpers.extends({
          style: [styles.sheet, width ? { width: routes.length * width, transform: [{ translateX: translateX }] } : null]
        }, this._panResponder.panHandlers, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 284
          }
        }),
        React.Children.map(children, function (child, i) {
          return React.createElement(
            _reactNative.View,
            {
              key: navigationState.routes[i].key,
              testID: navigationState.routes[i].testID,
              style: width ? { width: width } : i === navigationState.index ? _reactNative.StyleSheet.absoluteFill : null,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 294
              }
            },
            i === navigationState.index || width ? child : null
          );
        })
      );
    }
  }]);
  return TabViewPagerPan;
}(React.Component);

TabViewPagerPan.propTypes = babelHelpers.extends({}, _TabViewPropTypes.SceneRendererPropType, {
  configureTransition: _propTypes2.default.func.isRequired,
  animationEnabled: _propTypes2.default.bool,
  swipeEnabled: _propTypes2.default.bool,
  swipeDistanceThreshold: _propTypes2.default.number.isRequired,
  swipeVelocityThreshold: _propTypes2.default.number.isRequired,
  onSwipeStart: _propTypes2.default.func,
  onSwipeEnd: _propTypes2.default.func,
  children: _propTypes2.default.node
});
TabViewPagerPan.defaultProps = {
  configureTransition: function configureTransition() {
    return DefaultTransitionSpec;
  },
  initialLayout: {
    height: 0,
    width: 0
  },
  swipeDistanceThreshold: 120,
  swipeVelocityThreshold: 0.25
};
exports.default = TabViewPagerPan;


var styles = _reactNative.StyleSheet.create({
  sheet: {
    flex: 1,
    flexDirection: 'row',
    alignItems: 'stretch'
  }
});
}, 418, null, "react-native-tab-view/src/TabViewPagerPan.js");
__d(/* react-native-tab-view/src/TabBar.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native-tab-view/src/TabBar.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _TouchableItem = require(420              ); // 420 = ./TouchableItem

var _TouchableItem2 = babelHelpers.interopRequireDefault(_TouchableItem);

var _TabViewPropTypes = require(415                 ); // 415 = ./TabViewPropTypes

var TabBar = function (_React$PureComponent) {
  babelHelpers.inherits(TabBar, _React$PureComponent);

  function TabBar(props) {
    babelHelpers.classCallCheck(this, TabBar);

    var _this = babelHelpers.possibleConstructorReturn(this, (TabBar.__proto__ || Object.getPrototypeOf(TabBar)).call(this, props));

    _initialiseProps.call(_this);

    var initialVisibility = 0;

    if (_this.props.scrollEnabled === true) {
      var tabWidth = _this._getTabWidthFromStyle(_this.props.tabStyle);
      if (_this.props.layout.width || tabWidth) {
        initialVisibility = 1;
      }
    } else {
      initialVisibility = 1;
    }

    _this.state = {
      offset: new _reactNative.Animated.Value(0),
      visibility: new _reactNative.Animated.Value(initialVisibility),
      initialOffset: {
        x: _this._getScrollAmount(_this.props, _this.props.navigationState.index),
        y: 0
      }
    };
    return _this;
  }

  babelHelpers.createClass(TabBar, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._adjustScroll(this.props.navigationState.index);
      this._positionListener = this.props.subscribe('position', this._adjustScroll);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.props.navigationState !== nextProps.navigationState) {
        this._resetScrollOffset(nextProps);
      }

      var nextTabWidth = this._getTabWidthFromStyle(nextProps.tabStyle);

      if (this.props.tabStyle !== nextProps.tabStyle && nextTabWidth || this.props.layout.width !== nextProps.layout.width && nextProps.layout.width) {
        this.state.visibility.setValue(1);
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      var _this2 = this;

      if (this.props.scrollEnabled && (prevProps.layout !== this.props.layout || prevProps.tabStyle !== this.props.tabStyle)) {
        global.requestAnimationFrame(function () {
          return _this2._adjustScroll(_this2.props.navigationState.index);
        });
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._positionListener.remove();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var _props = this.props,
          position = _props.position,
          navigationState = _props.navigationState,
          scrollEnabled = _props.scrollEnabled;
      var routes = navigationState.routes,
          index = navigationState.index;

      var maxDistance = this._getMaxScrollableDistance(this.props);
      var finalTabWidth = this._getFinalTabWidth(this.props);
      var tabBarWidth = finalTabWidth * routes.length;

      var inputRange = [-1].concat(babelHelpers.toConsumableArray(routes.map(function (x, i) {
        return i;
      })));
      var translateOutputRange = inputRange.map(function (i) {
        return _this3._getScrollAmount(_this3.props, i) * -1;
      });

      var translateX = _reactNative.Animated.add(position.interpolate({
        inputRange: inputRange,
        outputRange: translateOutputRange
      }), this.state.offset).interpolate({
        inputRange: [-maxDistance, 0],
        outputRange: [-maxDistance, 0],
        extrapolate: 'clamp'
      });

      return React.createElement(
        _reactNative.Animated.View,
        { style: [styles.tabBar, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 354
          }
        },
        React.createElement(
          _reactNative.Animated.View,
          {
            pointerEvents: 'none',
            style: [styles.indicatorContainer, scrollEnabled ? { width: tabBarWidth, transform: [{ translateX: translateX }] } : null],
            __source: {
              fileName: _jsxFileName,
              lineNumber: 355
            }
          },
          this._renderIndicator(babelHelpers.extends({}, this.props, {
            width: new _reactNative.Animated.Value(finalTabWidth)
          }))
        ),
        React.createElement(
          _reactNative.View,
          { style: styles.scroll, __source: {
              fileName: _jsxFileName,
              lineNumber: 369
            }
          },
          React.createElement(
            _reactNative.ScrollView,
            {
              horizontal: true,
              keyboardShouldPersistTaps: 'always',
              scrollEnabled: scrollEnabled,
              bounces: false,
              alwaysBounceHorizontal: false,
              scrollsToTop: false,
              showsHorizontalScrollIndicator: false,
              automaticallyAdjustContentInsets: false,
              overScrollMode: 'never',
              contentContainerStyle: [styles.tabContent, scrollEnabled ? null : styles.container],
              scrollEventThrottle: 16,
              onScroll: this._handleScroll,
              onScrollBeginDrag: this._handleBeginDrag,
              onScrollEndDrag: this._handleEndDrag,
              onMomentumScrollBegin: this._handleMomentumScrollBegin,
              onMomentumScrollEnd: this._handleMomentumScrollEnd,
              contentOffset: this.state.initialOffset,
              ref: this._setRef,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 370
              }
            },
            routes.map(function (route, i) {
              var focused = index === i;
              var outputRange = inputRange.map(function (inputIndex) {
                return inputIndex === i ? 1 : 0.7;
              });
              var opacity = _reactNative.Animated.multiply(_this3.state.visibility, position.interpolate({
                inputRange: inputRange,
                outputRange: outputRange
              }));
              var scene = {
                route: route,
                focused: focused,
                index: i
              };
              var label = _this3._renderLabel(scene);
              var icon = _this3.props.renderIcon ? _this3.props.renderIcon(scene) : null;
              var badge = _this3.props.renderBadge ? _this3.props.renderBadge(scene) : null;

              var tabStyle = {};

              tabStyle.opacity = opacity;

              if (icon) {
                if (label) {
                  tabStyle.paddingTop = 8;
                } else {
                  tabStyle.padding = 12;
                }
              }

              var passedTabStyle = _reactNative.StyleSheet.flatten(_this3.props.tabStyle);
              var isWidthSet = passedTabStyle && typeof passedTabStyle.width !== 'undefined' || scrollEnabled === true;
              var tabContainerStyle = {};

              if (isWidthSet) {
                tabStyle.width = finalTabWidth;
              }

              if (passedTabStyle && typeof passedTabStyle.flex === 'number') {
                tabContainerStyle.flex = passedTabStyle.flex;
              } else if (!isWidthSet) {
                tabContainerStyle.flex = 1;
              }

              var accessibilityLabel = route.accessibilityLabel || route.title;

              return React.createElement(
                _TouchableItem2.default,
                {
                  borderless: true,
                  key: route.key,
                  testID: route.testID,
                  accessible: route.accessible,
                  accessibilityLabel: accessibilityLabel,
                  accessibilityTraits: 'button',
                  pressColor: _this3.props.pressColor,
                  pressOpacity: _this3.props.pressOpacity,
                  delayPressIn: 0,
                  onPress: function onPress() {
                    var _props2 = _this3.props,
                        onTabPress = _props2.onTabPress,
                        jumpToIndex = _props2.jumpToIndex;

                    jumpToIndex(i);
                    if (onTabPress) {
                      onTabPress(scene);
                    }
                  },
                  style: tabContainerStyle,
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 451
                  }
                },
                React.createElement(
                  _reactNative.View,
                  { pointerEvents: 'none', style: styles.container, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 471
                    }
                  },
                  React.createElement(
                    _reactNative.Animated.View,
                    {
                      style: [styles.tabItem, tabStyle, passedTabStyle, styles.container],
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 472
                      }
                    },
                    icon,
                    label
                  ),
                  badge ? React.createElement(
                    _reactNative.Animated.View,
                    {
                      style: [styles.badge, { opacity: _this3.state.visibility }],
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 484
                      }
                    },
                    badge
                  ) : null
                )
              );
            })
          )
        )
      );
    }
  }]);
  return TabBar;
}(React.PureComponent);

TabBar.propTypes = babelHelpers.extends({}, _TabViewPropTypes.SceneRendererPropType, {
  scrollEnabled: _propTypes2.default.bool,
  pressColor: _TouchableItem2.default.propTypes.pressColor,
  pressOpacity: _TouchableItem2.default.propTypes.pressOpacity,
  getLabelText: _propTypes2.default.func,
  renderIcon: _propTypes2.default.func,
  renderLabel: _propTypes2.default.func,
  renderIndicator: _propTypes2.default.func,
  onTabPress: _propTypes2.default.func,
  labelStyle: _reactNative.Text.propTypes.style,
  style: _propTypes2.default.any
});
TabBar.defaultProps = {
  getLabelText: function getLabelText(_ref) {
    var route = _ref.route;
    return route.title ? route.title.toUpperCase() : null;
  }
};

var _initialiseProps = function _initialiseProps() {
  var _this4 = this;

  this._isManualScroll = false;
  this._isMomentumScroll = false;

  this._renderLabel = function (scene) {
    if (typeof _this4.props.renderLabel !== 'undefined') {
      return _this4.props.renderLabel(scene);
    }
    var label = _this4.props.getLabelText(scene);
    if (typeof label !== 'string') {
      return null;
    }
    return React.createElement(
      _reactNative.Text,
      { style: [styles.tabLabel, _this4.props.labelStyle], __source: {
          fileName: _jsxFileName,
          lineNumber: 160
        }
      },
      label
    );
  };

  this._renderIndicator = function (props) {
    if (typeof _this4.props.renderIndicator !== 'undefined') {
      return _this4.props.renderIndicator(props);
    }
    var width = props.width,
        position = props.position;

    var translateX = _reactNative.Animated.multiply(_reactNative.Animated.multiply(position, width), _reactNative.I18nManager.isRTL ? -1 : 1);
    return React.createElement(_reactNative.Animated.View, {
      style: [styles.indicator, { width: width, transform: [{ translateX: translateX }] }, _this4.props.indicatorStyle],
      __source: {
        fileName: _jsxFileName,
        lineNumber: 174
      }
    });
  };

  this._getTabWidthFromStyle = function (style) {
    if (_this4._tabWidthCache && _this4._tabWidthCache.style === style) {
      return _this4._tabWidthCache.width;
    }
    var passedTabStyle = _reactNative.StyleSheet.flatten(_this4.props.tabStyle);
    var cache = {
      style: style,
      width: passedTabStyle ? passedTabStyle.width : null
    };
    _this4._tabWidthCache = cache;
    return cache;
  };

  this._getFinalTabWidth = function (props) {
    var layout = props.layout,
        navigationState = props.navigationState;

    var tabWidth = _this4._getTabWidthFromStyle(props.tabStyle);
    if (typeof tabWidth === 'number') {
      return tabWidth;
    }
    if (typeof tabWidth === 'string' && tabWidth.endsWith('%')) {
      return layout.width * (parseFloat(tabWidth) / 100);
    }
    if (props.scrollEnabled) {
      return layout.width / 5 * 2;
    }
    return layout.width / navigationState.routes.length;
  };

  this._getMaxScrollableDistance = function (props) {
    var layout = props.layout,
        navigationState = props.navigationState;

    if (layout.width === 0) {
      return 0;
    }
    var finalTabWidth = _this4._getFinalTabWidth(props);
    var tabBarWidth = finalTabWidth * navigationState.routes.length;
    var maxDistance = tabBarWidth - layout.width;
    return Math.max(maxDistance, 0);
  };

  this._normalizeScrollValue = function (props, value) {
    var maxDistance = _this4._getMaxScrollableDistance(props);
    return Math.max(Math.min(value, maxDistance), 0);
  };

  this._getScrollAmount = function (props, i) {
    var layout = props.layout;

    var finalTabWidth = _this4._getFinalTabWidth(props);
    var centerDistance = finalTabWidth * i + finalTabWidth / 2;
    var scrollAmount = centerDistance - layout.width / 2;
    return _this4._normalizeScrollValue(props, scrollAmount);
  };

  this._resetScrollOffset = function (props) {
    if (!props.scrollEnabled || !_this4._scrollView) {
      return;
    }

    var scrollAmount = _this4._getScrollAmount(props, props.navigationState.index);
    _this4._scrollView && _this4._scrollView.scrollTo({
      x: scrollAmount,
      animated: true
    });
    _reactNative.Animated.timing(_this4.state.offset, {
      toValue: 0,
      duration: 150
    }).start();
  };

  this._adjustScroll = function (index) {
    if (!_this4.props.scrollEnabled || !_this4._scrollView) {
      return;
    }

    var scrollAmount = _this4._getScrollAmount(_this4.props, index);
    _this4._scrollView && _this4._scrollView.scrollTo({
      x: scrollAmount,
      animated: false
    });
  };

  this._adjustOffset = function (value) {
    if (!_this4._isManualScroll || !_this4.props.scrollEnabled) {
      return;
    }

    var scrollAmount = _this4._getScrollAmount(_this4.props, _this4.props.navigationState.index);
    var scrollOffset = value - scrollAmount;

    if (_this4._isMomentumScroll) {
      _reactNative.Animated.spring(_this4.state.offset, {
        toValue: -scrollOffset,
        tension: 300,
        friction: 35
      }).start();
    } else {
      _this4.state.offset.setValue(-scrollOffset);
    }
  };

  this._handleScroll = function (e) {
    _this4._adjustOffset(e.nativeEvent.contentOffset.x);
  };

  this._handleBeginDrag = function () {
    _this4._isManualScroll = true;
    _this4._isMomentumScroll = false;
  };

  this._handleEndDrag = function () {
    global.requestAnimationFrame(function () {
      if (_this4._isMomentumScroll) {
        return;
      }
      _this4._isManualScroll = false;
    });
  };

  this._handleMomentumScrollBegin = function () {
    _this4._isMomentumScroll = true;
  };

  this._handleMomentumScrollEnd = function () {
    _this4._isMomentumScroll = false;
    _this4._isManualScroll = false;
  };

  this._setRef = function (el) {
    return _this4._scrollView = el;
  };
};

exports.default = TabBar;


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1
  },
  scroll: {
    overflow: _reactNative.Platform.OS === 'web' ? 'auto' : 'scroll'
  },
  tabBar: {
    backgroundColor: '#2196f3',
    elevation: 4,
    shadowColor: 'black',
    shadowOpacity: 0.1,
    shadowRadius: _reactNative.StyleSheet.hairlineWidth,
    shadowOffset: {
      height: _reactNative.StyleSheet.hairlineWidth
    },

    zIndex: _reactNative.Platform.OS === 'android' ? 0 : 1
  },
  tabContent: {
    flexDirection: 'row',
    flexWrap: 'nowrap'
  },
  tabLabel: {
    backgroundColor: 'transparent',
    color: 'white',
    margin: 8
  },
  tabItem: {
    flexGrow: 1,
    padding: 8,
    alignItems: 'center',
    justifyContent: 'center'
  },
  badge: {
    position: 'absolute',
    top: 0,
    right: 0
  },
  indicatorContainer: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0
  },
  indicator: {
    backgroundColor: '#ffeb3b',
    position: 'absolute',
    left: 0,
    bottom: 0,
    right: 0,
    height: 2
  }
});
}, 419, null, "react-native-tab-view/src/TabBar.js");
__d(/* react-native-tab-view/src/TouchableItem.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native-tab-view/src/TouchableItem.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var LOLLIPOP = 21;

var TouchableItem = function (_React$Component) {
  babelHelpers.inherits(TouchableItem, _React$Component);

  function TouchableItem() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, TouchableItem);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = TouchableItem.__proto__ || Object.getPrototypeOf(TouchableItem)).call.apply(_ref, [this].concat(args))), _this), _this._handlePress = function () {
      global.requestAnimationFrame(_this.props.onPress);
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(TouchableItem, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          style = _props.style,
          pressOpacity = _props.pressOpacity,
          pressColor = _props.pressColor,
          borderless = _props.borderless,
          rest = babelHelpers.objectWithoutProperties(_props, ['style', 'pressOpacity', 'pressColor', 'borderless']);


      if (_reactNative.Platform.OS === 'android' && _reactNative.Platform.Version >= LOLLIPOP) {
        return React.createElement(
          _reactNative.TouchableNativeFeedback,
          babelHelpers.extends({}, rest, {
            onPress: this._handlePress,
            background: _reactNative.TouchableNativeFeedback.Ripple(pressColor, borderless),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 49
            }
          }),
          React.createElement(
            _reactNative.View,
            { style: style, __source: {
                fileName: _jsxFileName,
                lineNumber: 54
              }
            },
            React.Children.only(this.props.children)
          )
        );
      } else {
        return React.createElement(
          _reactNative.TouchableOpacity,
          babelHelpers.extends({}, rest, {
            onPress: this._handlePress,
            style: style,
            activeOpacity: pressOpacity,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 59
            }
          }),
          this.props.children
        );
      }
    }
  }]);
  return TouchableItem;
}(React.Component);

TouchableItem.propTypes = {
  onPress: _propTypes2.default.func.isRequired,
  delayPressIn: _propTypes2.default.number,
  borderless: _propTypes2.default.bool,
  pressColor: _propTypes2.default.string,
  pressOpacity: _propTypes2.default.number,
  children: _propTypes2.default.node.isRequired
};
TouchableItem.defaultProps = {
  pressColor: 'rgba(255, 255, 255, .4)'
};
exports.default = TouchableItem;
}, 420, null, "react-native-tab-view/src/TouchableItem.js");
__d(/* react-native-tab-view/src/SceneMap.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native-tab-view/src/SceneMap.js';
exports.default = SceneMap;

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

function SceneMap(scenes) {
  var SceneComponent = function (_PureComponent) {
    babelHelpers.inherits(SceneComponent, _PureComponent);

    function SceneComponent() {
      babelHelpers.classCallCheck(this, SceneComponent);
      return babelHelpers.possibleConstructorReturn(this, (SceneComponent.__proto__ || Object.getPrototypeOf(SceneComponent)).apply(this, arguments));
    }

    babelHelpers.createClass(SceneComponent, [{
      key: 'render',
      value: function render() {
        return _react2.default.createElement(scenes[this.props.route.key], this.props);
      }
    }]);
    return SceneComponent;
  }(_react.PureComponent);

  return function (_ref) {
    var route = _ref.route;
    return _react2.default.createElement(SceneComponent, { key: route.key, route: route, __source: {
        fileName: _jsxFileName,
        lineNumber: 13
      }
    });
  };
}
}, 421, null, "react-native-tab-view/src/SceneMap.js");
__d(/* react-navigation/src/withCachedChildNavigation.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/withCachedChildNavigation.js';
exports.default = withCachedChildNavigation;

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _addNavigationHelpers = require(375                     ); // 375 = ./addNavigationHelpers

var _addNavigationHelpers2 = babelHelpers.interopRequireDefault(_addNavigationHelpers);

function withCachedChildNavigation(Comp) {
  var _class, _temp2;

  var displayName = Comp.displayName || Comp.name;
  return _temp2 = _class = function (_React$PureComponent) {
    babelHelpers.inherits(_class, _React$PureComponent);

    function _class() {
      var _ref;

      var _temp, _this, _ret;

      babelHelpers.classCallCheck(this, _class);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = _class.__proto__ || Object.getPrototypeOf(_class)).call.apply(_ref, [this].concat(args))), _this), _this._updateNavigationProps = function (navigation) {
        if (!_this._childNavigationProps) {
          _this._childNavigationProps = {};
        }
        navigation.state.routes.forEach(function (route) {
          var childNavigation = _this._childNavigationProps[route.key];
          if (childNavigation && childNavigation.state === route) {
            return;
          }
          _this._childNavigationProps[route.key] = (0, _addNavigationHelpers2.default)({
            dispatch: navigation.dispatch,
            state: route
          });
        });
      }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
    }

    babelHelpers.createClass(_class, [{
      key: 'componentWillMount',
      value: function componentWillMount() {
        this._updateNavigationProps(this.props.navigation);
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        this._updateNavigationProps(nextProps.navigation);
      }
    }, {
      key: 'render',
      value: function render() {
        return React.createElement(Comp, babelHelpers.extends({}, this.props, {
          childNavigationProps: this._childNavigationProps,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 66
          }
        }));
      }
    }]);
    return _class;
  }(React.PureComponent), _class.displayName = 'withCachedChildNavigation(' + displayName + ')', _temp2;
}
}, 422, null, "react-navigation/src/withCachedChildNavigation.js");
__d(/* react-navigation/src/views/TabView/TabBarTop.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/views/TabView/TabBarTop.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _reactNativeTabView = require(413                    ); // 413 = react-native-tab-view

var _TabBarIcon = require(424           ); // 424 = ./TabBarIcon

var _TabBarIcon2 = babelHelpers.interopRequireDefault(_TabBarIcon);

var TabBarTop = function (_React$PureComponent) {
  babelHelpers.inherits(TabBarTop, _React$PureComponent);

  function TabBarTop() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, TabBarTop);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = TabBarTop.__proto__ || Object.getPrototypeOf(TabBarTop)).call.apply(_ref, [this].concat(args))), _this), _this._renderLabel = function (scene) {
      var _this$props = _this.props,
          position = _this$props.position,
          navigation = _this$props.navigation,
          activeTintColor = _this$props.activeTintColor,
          inactiveTintColor = _this$props.inactiveTintColor,
          showLabel = _this$props.showLabel,
          upperCaseLabel = _this$props.upperCaseLabel,
          labelStyle = _this$props.labelStyle,
          allowFontScaling = _this$props.allowFontScaling;

      if (showLabel === false) {
        return null;
      }
      var index = scene.index;
      var routes = navigation.state.routes;

      var inputRange = [-1].concat(babelHelpers.toConsumableArray(routes.map(function (x, i) {
        return i;
      })));
      var outputRange = inputRange.map(function (inputIndex) {
        return inputIndex === index ? activeTintColor : inactiveTintColor;
      });
      var color = position.interpolate({
        inputRange: inputRange,
        outputRange: outputRange
      });

      var tintColor = scene.focused ? activeTintColor : inactiveTintColor;
      var label = _this.props.getLabel(babelHelpers.extends({}, scene, { tintColor: tintColor }));
      if (typeof label === 'string') {
        return React.createElement(
          _reactNative.Animated.Text,
          {
            style: [styles.label, { color: color }, labelStyle],
            allowFontScaling: allowFontScaling,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 84
            }
          },
          upperCaseLabel ? label.toUpperCase() : label
        );
      }
      if (typeof label === 'function') {
        return label(babelHelpers.extends({}, scene, { tintColor: tintColor }));
      }

      return label;
    }, _this._renderIcon = function (scene) {
      var _this$props2 = _this.props,
          position = _this$props2.position,
          navigation = _this$props2.navigation,
          activeTintColor = _this$props2.activeTintColor,
          inactiveTintColor = _this$props2.inactiveTintColor,
          renderIcon = _this$props2.renderIcon,
          showIcon = _this$props2.showIcon,
          iconStyle = _this$props2.iconStyle;

      if (showIcon === false) {
        return null;
      }
      return React.createElement(_TabBarIcon2.default, {
        position: position,
        navigation: navigation,
        activeTintColor: activeTintColor,
        inactiveTintColor: inactiveTintColor,
        renderIcon: renderIcon,
        scene: scene,
        style: [styles.icon, iconStyle],
        __source: {
          fileName: _jsxFileName,
          lineNumber: 113
        }
      });
    }, _this._handleOnPress = function (scene) {
      var _this$props3 = _this.props,
          getOnPress = _this$props3.getOnPress,
          jumpToIndex = _this$props3.jumpToIndex,
          navigation = _this$props3.navigation;

      var previousScene = navigation.state.routes[navigation.state.index];
      var onPress = getOnPress(previousScene, scene);

      if (onPress) {
        onPress({ previousScene: previousScene, scene: scene, jumpToIndex: jumpToIndex });
      } else {
        jumpToIndex(scene.index);
      }
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(TabBarTop, [{
    key: 'render',
    value: function render() {
      var props = this.props;

      return React.createElement(_reactNativeTabView.TabBar, babelHelpers.extends({}, props, {
        onTabPress: this._handleOnPress,
        jumpToIndex: function jumpToIndex() {},
        renderIcon: this._renderIcon,
        renderLabel: this._renderLabel,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 142
        }
      }));
    }
  }]);
  return TabBarTop;
}(React.PureComponent);

TabBarTop.defaultProps = {
  activeTintColor: '#fff',
  inactiveTintColor: '#fff',
  showIcon: false,
  showLabel: true,
  upperCaseLabel: true,
  allowFontScaling: true
};
exports.default = TabBarTop;


var styles = _reactNative.StyleSheet.create({
  icon: {
    height: 24,
    width: 24
  },
  label: {
    textAlign: 'center',
    fontSize: 13,
    margin: 8,
    backgroundColor: 'transparent'
  }
});
}, 423, null, "react-navigation/src/views/TabView/TabBarTop.js");
__d(/* react-navigation/src/views/TabView/TabBarIcon.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/views/TabView/TabBarIcon.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var TabBarIcon = function (_React$PureComponent) {
  babelHelpers.inherits(TabBarIcon, _React$PureComponent);

  function TabBarIcon() {
    babelHelpers.classCallCheck(this, TabBarIcon);
    return babelHelpers.possibleConstructorReturn(this, (TabBarIcon.__proto__ || Object.getPrototypeOf(TabBarIcon)).apply(this, arguments));
  }

  babelHelpers.createClass(TabBarIcon, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          position = _props.position,
          scene = _props.scene,
          navigation = _props.navigation,
          activeTintColor = _props.activeTintColor,
          inactiveTintColor = _props.inactiveTintColor,
          style = _props.style;
      var route = scene.route,
          index = scene.index;
      var routes = navigation.state.routes;

      var inputRange = [-1].concat(babelHelpers.toConsumableArray(routes.map(function (x, i) {
        return i;
      })));
      var activeOpacity = position.interpolate({
        inputRange: inputRange,
        outputRange: inputRange.map(function (i) {
          return i === index ? 1 : 0;
        })
      });
      var inactiveOpacity = position.interpolate({
        inputRange: inputRange,
        outputRange: inputRange.map(function (i) {
          return i === index ? 0 : 1;
        })
      });

      return React.createElement(
        _reactNative.View,
        { style: style, __source: {
            fileName: _jsxFileName,
            lineNumber: 49
          }
        },
        React.createElement(
          _reactNative.Animated.View,
          { style: [styles.icon, { opacity: activeOpacity }], __source: {
              fileName: _jsxFileName,
              lineNumber: 50
            }
          },
          this.props.renderIcon({
            route: route,
            index: index,
            focused: true,
            tintColor: activeTintColor
          })
        ),
        React.createElement(
          _reactNative.Animated.View,
          { style: [styles.icon, { opacity: inactiveOpacity }], __source: {
              fileName: _jsxFileName,
              lineNumber: 58
            }
          },
          this.props.renderIcon({
            route: route,
            index: index,
            focused: false,
            tintColor: inactiveTintColor
          })
        )
      );
    }
  }]);
  return TabBarIcon;
}(React.PureComponent);

exports.default = TabBarIcon;


var styles = _reactNative.StyleSheet.create({
  icon: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    alignItems: 'center',
    justifyContent: 'center'
  }
});
}, 424, null, "react-navigation/src/views/TabView/TabBarIcon.js");
__d(/* react-navigation/src/views/TabView/TabBarBottom.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/views/TabView/TabBarBottom.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _TabBarIcon = require(424           ); // 424 = ./TabBarIcon

var _TabBarIcon2 = babelHelpers.interopRequireDefault(_TabBarIcon);

var _SafeAreaView = require(393              ); // 393 = ../SafeAreaView

var _SafeAreaView2 = babelHelpers.interopRequireDefault(_SafeAreaView);

var _withOrientation = require(394                 ); // 394 = ../withOrientation

var _withOrientation2 = babelHelpers.interopRequireDefault(_withOrientation);

var majorVersion = parseInt(_reactNative.Platform.Version, 10);
var isIos = _reactNative.Platform.OS === 'ios';
var useHorizontalTabs = majorVersion >= 11 && isIos;

var TabBarBottom = function (_React$PureComponent) {
  babelHelpers.inherits(TabBarBottom, _React$PureComponent);

  function TabBarBottom() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, TabBarBottom);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = TabBarBottom.__proto__ || Object.getPrototypeOf(TabBarBottom)).call.apply(_ref, [this].concat(args))), _this), _this._renderLabel = function (scene) {
      var _this$props = _this.props,
          position = _this$props.position,
          navigation = _this$props.navigation,
          activeTintColor = _this$props.activeTintColor,
          inactiveTintColor = _this$props.inactiveTintColor,
          labelStyle = _this$props.labelStyle,
          showLabel = _this$props.showLabel,
          showIcon = _this$props.showIcon,
          isLandscape = _this$props.isLandscape,
          allowFontScaling = _this$props.allowFontScaling;

      if (showLabel === false) {
        return null;
      }
      var index = scene.index;
      var routes = navigation.state.routes;

      var inputRange = [-1].concat(babelHelpers.toConsumableArray(routes.map(function (x, i) {
        return i;
      })));
      var outputRange = inputRange.map(function (inputIndex) {
        return inputIndex === index ? activeTintColor : inactiveTintColor;
      });
      var color = position.interpolate({
        inputRange: inputRange,
        outputRange: outputRange
      });

      var tintColor = scene.focused ? activeTintColor : inactiveTintColor;
      var label = _this.props.getLabel(babelHelpers.extends({}, scene, { tintColor: tintColor }));
      var marginLeft = 0;
      if (isLandscape && showIcon && useHorizontalTabs) {
        marginLeft = LABEL_LEFT_MARGIN;
      }
      var marginTop = 0;
      if (!isLandscape && showIcon && useHorizontalTabs) {
        marginTop = LABEL_TOP_MARGIN;
      }

      if (typeof label === 'string') {
        return React.createElement(
          _reactNative.Animated.Text,
          {
            style: [styles.label, { color: color, marginLeft: marginLeft, marginTop: marginTop }, labelStyle],
            allowFontScaling: allowFontScaling,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 113
            }
          },
          label
        );
      }

      if (typeof label === 'function') {
        return label(babelHelpers.extends({}, scene, { tintColor: tintColor }));
      }

      return label;
    }, _this._renderIcon = function (scene) {
      var _this$props2 = _this.props,
          position = _this$props2.position,
          navigation = _this$props2.navigation,
          activeTintColor = _this$props2.activeTintColor,
          inactiveTintColor = _this$props2.inactiveTintColor,
          renderIcon = _this$props2.renderIcon,
          showIcon = _this$props2.showIcon,
          showLabel = _this$props2.showLabel;

      if (showIcon === false) {
        return null;
      }
      return React.createElement(_TabBarIcon2.default, {
        position: position,
        navigation: navigation,
        activeTintColor: activeTintColor,
        inactiveTintColor: inactiveTintColor,
        renderIcon: renderIcon,
        scene: scene,
        style: showLabel && useHorizontalTabs ? {} : styles.icon,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 143
        }
      });
    }, _this._renderTestIDProps = function (scene) {
      var testIDProps = _this.props.getTestIDProps && _this.props.getTestIDProps(scene);
      return testIDProps;
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(TabBarBottom, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          position = _props.position,
          navigation = _props.navigation,
          jumpToIndex = _props.jumpToIndex,
          getOnPress = _props.getOnPress,
          getTestIDProps = _props.getTestIDProps,
          activeBackgroundColor = _props.activeBackgroundColor,
          inactiveBackgroundColor = _props.inactiveBackgroundColor,
          style = _props.style,
          animateStyle = _props.animateStyle,
          tabStyle = _props.tabStyle,
          isLandscape = _props.isLandscape;
      var routes = navigation.state.routes;

      var previousScene = routes[navigation.state.index];

      var inputRange = [-1].concat(babelHelpers.toConsumableArray(routes.map(function (x, i) {
        return i;
      })));

      var tabBarStyle = [styles.tabBar, isLandscape && useHorizontalTabs ? styles.tabBarLandscape : styles.tabBarPortrait, style];

      return React.createElement(
        _reactNative.Animated.View,
        { style: animateStyle, __source: {
            fileName: _jsxFileName,
            lineNumber: 189
          }
        },
        React.createElement(
          _SafeAreaView2.default,
          {
            style: tabBarStyle,
            forceInset: { bottom: 'always', top: 'never' },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 190
            }
          },
          routes.map(function (route, index) {
            var focused = index === navigation.state.index;
            var scene = { route: route, index: index, focused: focused };
            var _onPress = getOnPress(previousScene, scene);
            var outputRange = inputRange.map(function (inputIndex) {
              return inputIndex === index ? activeBackgroundColor : inactiveBackgroundColor;
            });
            var backgroundColor = position.interpolate({
              inputRange: inputRange,
              outputRange: outputRange
            });

            var justifyContent = _this2.props.showIcon ? 'flex-end' : 'center';
            var extraProps = _this2._renderTestIDProps(scene) || {};
            var testID = extraProps.testID,
                accessibilityLabel = extraProps.accessibilityLabel;


            return React.createElement(
              _reactNative.TouchableWithoutFeedback,
              {
                key: route.key,
                testID: testID,
                accessibilityLabel: accessibilityLabel,
                onPress: function onPress() {
                  return _onPress ? _onPress({ previousScene: previousScene, scene: scene, jumpToIndex: jumpToIndex }) : jumpToIndex(index);
                },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 214
                }
              },
              React.createElement(
                _reactNative.Animated.View,
                {
                  style: [styles.tab, isLandscape && useHorizontalTabs && styles.tabLandscape, !isLandscape && useHorizontalTabs && styles.tabPortrait, { backgroundColor: backgroundColor }, tabStyle],
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 223
                  }
                },
                _this2._renderIcon(scene),
                _this2._renderLabel(scene)
              )
            );
          })
        )
      );
    }
  }]);
  return TabBarBottom;
}(React.PureComponent);

TabBarBottom.defaultProps = {
  activeTintColor: '#3478f6',
  activeBackgroundColor: 'transparent',
  inactiveTintColor: '#929292',
  inactiveBackgroundColor: 'transparent',
  showLabel: true,
  showIcon: true,
  allowFontScaling: true
};


var LABEL_LEFT_MARGIN = 20;
var LABEL_TOP_MARGIN = 15;
var styles = _reactNative.StyleSheet.create({
  tabBar: {
    backgroundColor: '#F7F7F7',
    borderTopWidth: _reactNative.StyleSheet.hairlineWidth,
    borderTopColor: 'rgba(0, 0, 0, .3)',
    flexDirection: 'row'
  },
  tabBarLandscape: {
    height: 29
  },
  tabBarPortrait: {
    height: 49
  },
  tab: {
    flex: 1,
    alignItems: isIos ? 'center' : 'stretch',
    justifyContent: 'flex-end'
  },
  tabPortrait: {
    justifyContent: 'flex-end',
    flexDirection: 'column'
  },
  tabLandscape: {
    justifyContent: 'center',
    flexDirection: 'row'
  },
  icon: {
    flexGrow: 1
  },
  label: {
    textAlign: 'center',
    fontSize: 10,
    marginBottom: 1.5,
    backgroundColor: 'transparent'
  }
});

exports.default = (0, _withOrientation2.default)(TabBarBottom);
}, 425, null, "react-navigation/src/views/TabView/TabBarBottom.js");
__d(/* react-navigation/src/navigators/DrawerNavigator.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/navigators/DrawerNavigator.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _createNavigator = require(378                ); // 378 = ./createNavigator

var _createNavigator2 = babelHelpers.interopRequireDefault(_createNavigator);

var _createNavigationContainer = require(372                           ); // 372 = ../createNavigationContainer

var _createNavigationContainer2 = babelHelpers.interopRequireDefault(_createNavigationContainer);

var _TabRouter = require(411                   ); // 411 = ../routers/TabRouter

var _TabRouter2 = babelHelpers.interopRequireDefault(_TabRouter);

var _DrawerScreen = require(427                           ); // 427 = ../views/Drawer/DrawerScreen

var _DrawerScreen2 = babelHelpers.interopRequireDefault(_DrawerScreen);

var _DrawerView = require(428                         ); // 428 = ../views/Drawer/DrawerView

var _DrawerView2 = babelHelpers.interopRequireDefault(_DrawerView);

var _DrawerNavigatorItems = require(431                                   ); // 431 = ../views/Drawer/DrawerNavigatorItems

var _DrawerNavigatorItems2 = babelHelpers.interopRequireDefault(_DrawerNavigatorItems);

var _SafeAreaView = require(393                    ); // 393 = ../views/SafeAreaView

var _SafeAreaView2 = babelHelpers.interopRequireDefault(_SafeAreaView);

var _NavigatorTypes = require(409               ); // 409 = ./NavigatorTypes

var _NavigatorTypes2 = babelHelpers.interopRequireDefault(_NavigatorTypes);

var defaultContentComponent = function defaultContentComponent(props) {
  return React.createElement(
    _reactNative.ScrollView,
    { alwaysBounceVertical: false, __source: {
        fileName: _jsxFileName,
        lineNumber: 42
      }
    },
    React.createElement(
      _SafeAreaView2.default,
      { forceInset: { top: 'always', horizontal: 'never' }, __source: {
          fileName: _jsxFileName,
          lineNumber: 43
        }
      },
      React.createElement(_DrawerNavigatorItems2.default, babelHelpers.extends({}, props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 44
        }
      }))
    )
  );
};

var DefaultDrawerConfig = {
  drawerWidth: function drawerWidth() {
    var _Dimensions$get = _reactNative.Dimensions.get('window'),
        height = _Dimensions$get.height,
        width = _Dimensions$get.width;

    var smallerAxisSize = Math.min(height, width);
    var isLandscape = width > height;
    var isTablet = smallerAxisSize >= 600;
    var appBarHeight = _reactNative.Platform.OS === 'ios' ? isLandscape ? 32 : 44 : 56;
    var maxWidth = isTablet ? 320 : 280;

    return Math.min(smallerAxisSize - appBarHeight, maxWidth);
  },
  contentComponent: defaultContentComponent,
  drawerPosition: 'left',
  drawerBackgroundColor: 'white',
  useNativeAnimations: true
};

var DrawerNavigator = function DrawerNavigator(routeConfigs) {
  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var mergedConfig = babelHelpers.extends({}, DefaultDrawerConfig, config);
  var containerConfig = mergedConfig.containerConfig,
      drawerWidth = mergedConfig.drawerWidth,
      drawerLockMode = mergedConfig.drawerLockMode,
      contentComponent = mergedConfig.contentComponent,
      contentOptions = mergedConfig.contentOptions,
      drawerPosition = mergedConfig.drawerPosition,
      useNativeAnimations = mergedConfig.useNativeAnimations,
      drawerBackgroundColor = mergedConfig.drawerBackgroundColor,
      tabsConfig = babelHelpers.objectWithoutProperties(mergedConfig, ['containerConfig', 'drawerWidth', 'drawerLockMode', 'contentComponent', 'contentOptions', 'drawerPosition', 'useNativeAnimations', 'drawerBackgroundColor']);


  var contentRouter = (0, _TabRouter2.default)(routeConfigs, tabsConfig);

  var drawerRouter = (0, _TabRouter2.default)({
    DrawerClose: {
      screen: (0, _createNavigator2.default)(contentRouter, routeConfigs, config, _NavigatorTypes2.default.DRAWER)(function (props) {
        return React.createElement(_DrawerScreen2.default, babelHelpers.extends({}, props, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 99
          }
        }));
      })
    },
    DrawerOpen: {
      screen: function screen() {
        return null;
      }
    },
    DrawerToggle: {
      screen: function screen() {
        return null;
      }
    }
  }, {
    initialRouteName: 'DrawerClose'
  });

  var navigator = (0, _createNavigator2.default)(drawerRouter, routeConfigs, config, _NavigatorTypes2.default.DRAWER)(function (props) {
    return React.createElement(_DrawerView2.default, babelHelpers.extends({}, props, {
      drawerBackgroundColor: drawerBackgroundColor,
      drawerLockMode: drawerLockMode,
      useNativeAnimations: useNativeAnimations,
      drawerWidth: drawerWidth,
      contentComponent: contentComponent,
      contentOptions: contentOptions,
      drawerPosition: drawerPosition,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 120
      }
    }));
  });

  return (0, _createNavigationContainer2.default)(navigator);
};

exports.default = DrawerNavigator;
}, 426, null, "react-navigation/src/navigators/DrawerNavigator.js");
__d(/* react-navigation/src/views/Drawer/DrawerScreen.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/views/Drawer/DrawerScreen.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _SceneView = require(395           ); // 395 = ../SceneView

var _SceneView2 = babelHelpers.interopRequireDefault(_SceneView);

var _withCachedChildNavigation = require(422                              ); // 422 = ../../withCachedChildNavigation

var _withCachedChildNavigation2 = babelHelpers.interopRequireDefault(_withCachedChildNavigation);

var DrawerScreen = function (_React$PureComponent) {
  babelHelpers.inherits(DrawerScreen, _React$PureComponent);

  function DrawerScreen() {
    babelHelpers.classCallCheck(this, DrawerScreen);
    return babelHelpers.possibleConstructorReturn(this, (DrawerScreen.__proto__ || Object.getPrototypeOf(DrawerScreen)).apply(this, arguments));
  }

  babelHelpers.createClass(DrawerScreen, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          router = _props.router,
          navigation = _props.navigation,
          childNavigationProps = _props.childNavigationProps,
          screenProps = _props.screenProps;
      var _navigation$state = navigation.state,
          routes = _navigation$state.routes,
          index = _navigation$state.index;

      var childNavigation = childNavigationProps[routes[index].key];
      var Content = router.getComponentForRouteName(routes[index].routeName);
      return React.createElement(_SceneView2.default, {
        screenProps: screenProps,
        component: Content,
        navigation: childNavigation,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 40
        }
      });
    }
  }]);
  return DrawerScreen;
}(React.PureComponent);

exports.default = (0, _withCachedChildNavigation2.default)(DrawerScreen);
}, 427, null, "react-navigation/src/views/Drawer/DrawerScreen.js");
__d(/* react-navigation/src/views/Drawer/DrawerView.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/views/Drawer/DrawerView.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _reactNativeDrawerLayoutPolyfill = require(429                                  ); // 429 = react-native-drawer-layout-polyfill

var _reactNativeDrawerLayoutPolyfill2 = babelHelpers.interopRequireDefault(_reactNativeDrawerLayoutPolyfill);

var _addNavigationHelpers = require(375                         ); // 375 = ../../addNavigationHelpers

var _addNavigationHelpers2 = babelHelpers.interopRequireDefault(_addNavigationHelpers);

var _DrawerSidebar = require(430              ); // 430 = ./DrawerSidebar

var _DrawerSidebar2 = babelHelpers.interopRequireDefault(_DrawerSidebar);

var DrawerView = function (_React$PureComponent) {
  babelHelpers.inherits(DrawerView, _React$PureComponent);

  function DrawerView() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, DrawerView);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = DrawerView.__proto__ || Object.getPrototypeOf(DrawerView)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      drawerWidth: typeof _this.props.drawerWidth === 'function' ? _this.props.drawerWidth() : _this.props.drawerWidth
    }, _this._handleDrawerOpen = function () {
      var navigation = _this.props.navigation;
      var _navigation$state = navigation.state,
          routes = _navigation$state.routes,
          index = _navigation$state.index;

      if (routes[index].routeName !== 'DrawerOpen') {
        _this.props.navigation.navigate('DrawerOpen');
      }
    }, _this._handleDrawerClose = function () {
      var navigation = _this.props.navigation;
      var _navigation$state2 = navigation.state,
          routes = _navigation$state2.routes,
          index = _navigation$state2.index;

      if (routes[index].routeName !== 'DrawerClose') {
        _this.props.navigation.navigate('DrawerClose');
      }
    }, _this._updateScreenNavigation = function (navigation) {
      var navigationState = navigation.state.routes.find(function (route) {
        return route.routeName === 'DrawerClose';
      });
      if (_this._screenNavigationProp && _this._screenNavigationProp.state === navigationState) {
        return;
      }
      _this._screenNavigationProp = (0, _addNavigationHelpers2.default)({
        dispatch: navigation.dispatch,
        state: navigationState
      });
    }, _this._updateWidth = function () {
      var drawerWidth = typeof _this.props.drawerWidth === 'function' ? _this.props.drawerWidth() : _this.props.drawerWidth;

      if (_this.state.drawerWidth !== drawerWidth) {
        _this.setState({ drawerWidth: drawerWidth });
      }
    }, _this._getNavigationState = function (navigation) {
      var navigationState = navigation.state.routes.find(function (route) {
        return route.routeName === 'DrawerClose';
      });
      return navigationState;
    }, _this._renderNavigationView = function () {
      return React.createElement(_DrawerSidebar2.default, {
        screenProps: _this.props.screenProps,
        navigation: _this._screenNavigationProp,
        router: _this.props.router,
        contentComponent: _this.props.contentComponent,
        contentOptions: _this.props.contentOptions,
        drawerPosition: _this.props.drawerPosition,
        style: _this.props.style,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 156
        }
      });
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(DrawerView, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._updateScreenNavigation(this.props.navigation);

      _reactNative.Dimensions.addEventListener('change', this._updateWidth);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      _reactNative.Dimensions.removeEventListener('change', this._updateWidth);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.props.navigation.state.index !== nextProps.navigation.state.index) {
        var _nextProps$navigation = nextProps.navigation.state,
            routes = _nextProps$navigation.routes,
            _index = _nextProps$navigation.index;

        if (routes[_index].routeName === 'DrawerOpen') {
          this._drawer.openDrawer();
        } else if (routes[_index].routeName === 'DrawerToggle') {
          if (this._drawer.state.drawerShown) {
            this.props.navigation.navigate('DrawerClose');
          } else {
            this.props.navigation.navigate('DrawerOpen');
          }
        } else {
          this._drawer.closeDrawer();
        }
      }
      this._updateScreenNavigation(nextProps.navigation);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var DrawerScreen = this.props.router.getComponentForRouteName('DrawerClose');

      var screenNavigation = (0, _addNavigationHelpers2.default)({
        state: this._screenNavigationProp.state,
        dispatch: this._screenNavigationProp.dispatch
      });

      var config = this.props.router.getScreenOptions(screenNavigation, this.props.screenProps);

      return React.createElement(
        _reactNativeDrawerLayoutPolyfill2.default,
        {
          ref: function ref(c) {
            _this2._drawer = c;
          },
          drawerLockMode: this.props.screenProps && this.props.screenProps.drawerLockMode || config && config.drawerLockMode,
          drawerBackgroundColor: this.props.drawerBackgroundColor,
          drawerWidth: this.state.drawerWidth,
          onDrawerOpen: this._handleDrawerOpen,
          onDrawerClose: this._handleDrawerClose,
          useNativeAnimations: this.props.useNativeAnimations,
          renderNavigationView: this._renderNavigationView,
          drawerPosition: this.props.drawerPosition === 'right' ? _reactNativeDrawerLayoutPolyfill2.default.positions.Right : _reactNativeDrawerLayoutPolyfill2.default.positions.Left,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 185
          }
        },
        React.createElement(DrawerScreen, {
          screenProps: this.props.screenProps,
          navigation: this._screenNavigationProp,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 205
          }
        })
      );
    }
  }]);
  return DrawerView;
}(React.PureComponent);

exports.default = DrawerView;
}, 428, null, "react-navigation/src/views/Drawer/DrawerView.js");
__d(/* react-native-drawer-layout-polyfill/dist/index.android.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", { value: true });var _reactNative = require(12            );exports.default = _reactNative.DrawerLayoutAndroid; // 12 = react-native
}, 429, null, "react-native-drawer-layout-polyfill/dist/index.android.js");
__d(/* react-navigation/src/views/Drawer/DrawerSidebar.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/views/Drawer/DrawerSidebar.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _withCachedChildNavigation = require(422                              ); // 422 = ../../withCachedChildNavigation

var _withCachedChildNavigation2 = babelHelpers.interopRequireDefault(_withCachedChildNavigation);

var _NavigationActions = require(374                      ); // 374 = ../../NavigationActions

var _NavigationActions2 = babelHelpers.interopRequireDefault(_NavigationActions);

var _invariant = require(376                    ); // 376 = ../../utils/invariant

var _invariant2 = babelHelpers.interopRequireDefault(_invariant);

var _SafeAreaView = require(393              ); // 393 = ../SafeAreaView

var _SafeAreaView2 = babelHelpers.interopRequireDefault(_SafeAreaView);

var DrawerSidebar = function (_React$PureComponent) {
  babelHelpers.inherits(DrawerSidebar, _React$PureComponent);

  function DrawerSidebar() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, DrawerSidebar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = DrawerSidebar.__proto__ || Object.getPrototypeOf(DrawerSidebar)).call.apply(_ref, [this].concat(args))), _this), _this._getScreenOptions = function (routeKey) {
      var DrawerScreen = _this.props.router.getComponentForRouteName('DrawerClose');
      (0, _invariant2.default)(DrawerScreen.router, 'NavigationComponent with routeName DrawerClose should be a Navigator');
      var childNavigation = _this.props.childNavigationProps[routeKey];

      return DrawerScreen.router.getScreenOptions(childNavigation.state.index !== undefined ? babelHelpers.extends({}, childNavigation, {
        state: babelHelpers.extends({}, childNavigation.state, { index: 0 })
      }) : childNavigation, _this.props.screenProps);
    }, _this._getLabel = function (_ref2) {
      var focused = _ref2.focused,
          tintColor = _ref2.tintColor,
          route = _ref2.route;

      var _this$_getScreenOptio = _this._getScreenOptions(route.key),
          drawerLabel = _this$_getScreenOptio.drawerLabel,
          title = _this$_getScreenOptio.title;

      if (drawerLabel) {
        return typeof drawerLabel === 'function' ? drawerLabel({ tintColor: tintColor, focused: focused }) : drawerLabel;
      }

      if (typeof title === 'string') {
        return title;
      }

      return route.routeName;
    }, _this._renderIcon = function (_ref3) {
      var focused = _ref3.focused,
          tintColor = _ref3.tintColor,
          route = _ref3.route;

      var _this$_getScreenOptio2 = _this._getScreenOptions(route.key),
          drawerIcon = _this$_getScreenOptio2.drawerIcon;

      if (drawerIcon) {
        return typeof drawerIcon === 'function' ? drawerIcon({ tintColor: tintColor, focused: focused }) : drawerIcon;
      }
      return null;
    }, _this._onItemPress = function (_ref4) {
      var route = _ref4.route,
          focused = _ref4.focused;

      _this.props.navigation.navigate('DrawerClose');
      if (!focused) {
        var subAction = void 0;

        if (route.index !== undefined && route.index !== 0) {
          route = route;
          subAction = _NavigationActions2.default.navigate({
            routeName: route.routes[0].routeName
          });
        }
        _this.props.navigation.navigate(route.routeName, undefined, subAction);
      }
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(DrawerSidebar, [{
    key: 'render',
    value: function render() {
      var ContentComponent = this.props.contentComponent;
      if (!ContentComponent) {
        return null;
      }
      var state = this.props.navigation.state;

      (0, _invariant2.default)(typeof state.index === 'number', 'should be set');
      return React.createElement(
        _reactNative.View,
        { style: [styles.container, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 111
          }
        },
        React.createElement(ContentComponent, babelHelpers.extends({}, this.props.contentOptions, {
          navigation: this.props.navigation,
          items: state.routes,
          activeItemKey: state.routes[state.index] ? state.routes[state.index].key : null,
          screenProps: this.props.screenProps,
          getLabel: this._getLabel,
          renderIcon: this._renderIcon,
          onItemPress: this._onItemPress,
          router: this.props.router,
          drawerPosition: this.props.drawerPosition,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 112
          }
        }))
      );
    }
  }]);
  return DrawerSidebar;
}(React.PureComponent);

exports.default = (0, _withCachedChildNavigation2.default)(DrawerSidebar);


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1
  }
});
}, 430, null, "react-navigation/src/views/Drawer/DrawerSidebar.js");
__d(/* react-navigation/src/views/Drawer/DrawerNavigatorItems.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/views/Drawer/DrawerNavigatorItems.js';

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _reactNative = require(12            ); // 12 = react-native

var _SafeAreaView = require(393              ); // 393 = ../SafeAreaView

var _SafeAreaView2 = babelHelpers.interopRequireDefault(_SafeAreaView);

var _TouchableItem = require(389               ); // 389 = ../TouchableItem

var _TouchableItem2 = babelHelpers.interopRequireDefault(_TouchableItem);

var DrawerNavigatorItems = function DrawerNavigatorItems(_ref) {
  var _ref$navigation = _ref.navigation,
      state = _ref$navigation.state,
      navigate = _ref$navigation.navigate,
      items = _ref.items,
      activeItemKey = _ref.activeItemKey,
      activeTintColor = _ref.activeTintColor,
      activeBackgroundColor = _ref.activeBackgroundColor,
      inactiveTintColor = _ref.inactiveTintColor,
      inactiveBackgroundColor = _ref.inactiveBackgroundColor,
      getLabel = _ref.getLabel,
      renderIcon = _ref.renderIcon,
      onItemPress = _ref.onItemPress,
      itemsContainerStyle = _ref.itemsContainerStyle,
      itemStyle = _ref.itemStyle,
      labelStyle = _ref.labelStyle,
      iconContainerStyle = _ref.iconContainerStyle,
      drawerPosition = _ref.drawerPosition;
  return React.createElement(
    _reactNative.View,
    { style: [styles.container, itemsContainerStyle], __source: {
        fileName: _jsxFileName,
        lineNumber: 57
      }
    },
    items.map(function (route, index) {
      var _ref2;

      var focused = activeItemKey === route.key;
      var color = focused ? activeTintColor : inactiveTintColor;
      var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;
      var scene = { route: route, index: index, focused: focused, tintColor: color };
      var icon = renderIcon(scene);
      var label = getLabel(scene);
      return React.createElement(
        _TouchableItem2.default,
        {
          key: route.key,
          onPress: function onPress() {
            onItemPress({ route: route, focused: focused });
          },
          delayPressIn: 0,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 68
          }
        },
        React.createElement(
          _SafeAreaView2.default,
          {
            style: { backgroundColor: backgroundColor },
            forceInset: (_ref2 = {}, babelHelpers.defineProperty(_ref2, drawerPosition, 'always'), babelHelpers.defineProperty(_ref2, drawerPosition === 'left' ? 'right' : 'left', 'never'), babelHelpers.defineProperty(_ref2, 'vertical', 'never'), _ref2),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 75
            }
          },
          React.createElement(
            _reactNative.View,
            { style: [styles.item, itemStyle], __source: {
                fileName: _jsxFileName,
                lineNumber: 83
              }
            },
            icon ? React.createElement(
              _reactNative.View,
              {
                style: [styles.icon, focused ? null : styles.inactiveIcon, iconContainerStyle],
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 85
                }
              },
              icon
            ) : null,
            typeof label === 'string' ? React.createElement(
              _reactNative.Text,
              { style: [styles.label, { color: color }, labelStyle], __source: {
                  fileName: _jsxFileName,
                  lineNumber: 96
                }
              },
              label
            ) : label
          )
        )
      );
    })
  );
};

DrawerNavigatorItems.defaultProps = {
  activeTintColor: '#2196f3',
  activeBackgroundColor: 'rgba(0, 0, 0, .04)',
  inactiveTintColor: 'rgba(0, 0, 0, .87)',
  inactiveBackgroundColor: 'transparent'
};

var styles = _reactNative.StyleSheet.create({
  container: {
    paddingVertical: 4
  },
  item: {
    flexDirection: 'row',
    alignItems: 'center'
  },
  icon: {
    marginHorizontal: 16,
    width: 24,
    alignItems: 'center'
  },
  inactiveIcon: {
    opacity: 0.62
  },
  label: {
    margin: 16,
    fontWeight: 'bold'
  }
});

exports.default = DrawerNavigatorItems;
}, 431, null, "react-navigation/src/views/Drawer/DrawerNavigatorItems.js");
__d(/* react-navigation/src/views/withNavigation.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-navigation/src/views/withNavigation.js';
exports.default = withNavigation;

var _react = require(35     ); // 35 = react

var React = babelHelpers.interopRequireWildcard(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _hoistNonReactStatics = require(338                      ); // 338 = hoist-non-react-statics

var _hoistNonReactStatics2 = babelHelpers.interopRequireDefault(_hoistNonReactStatics);

function withNavigation(Component) {
  var componentWithNavigation = function componentWithNavigation(props, _ref) {
    var navigation = _ref.navigation;
    return React.createElement(Component, babelHelpers.extends({}, props, { navigation: navigation, __source: {
        fileName: _jsxFileName,
        lineNumber: 21
      }
    }));
  };

  var displayName = Component.displayName || Component.name;
  componentWithNavigation.displayName = 'withNavigation(' + displayName + ')';

  componentWithNavigation.contextTypes = {
    navigation: _propTypes2.default.object.isRequired
  };

  return (0, _hoistNonReactStatics2.default)(componentWithNavigation, Component);
}
}, 432, null, "react-navigation/src/views/withNavigation.js");
__d(/* YuanXC/src/styles/global.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(12            ); // 12 = react-native

var _constants = require(434                  ); // 434 = ../config/constants

var menuWidth = _constants.WINDOW_WIDTH / 5;
var statusHeight = _constants.OS == 'ios' ? 20 : 0;

exports.default = _reactNative.StyleSheet.create({
  fullScreen: {
    width: _constants.WINDOW_WIDTH,
    height: _constants.WINDOW_HEIGHT
  },
  icon: {
    height: 22,
    width: 22,
    resizeMode: 'contain'
  },
  bigIcon: {
    height: 28,
    width: 28,
    borderRadius: 14,
    resizeMode: 'contain'
  },
  center: {
    justifyContent: 'center',
    alignItems: 'center'
  },
  scrollView: {},
  header: {
    height: 64,
    paddingTop: statusHeight,
    backgroundColor: '#fff',
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center'
  },
  headerButton: {
    paddingHorizontal: 15,
    paddingVertical: 15,
    width: 60
  },
  headerButtonText: {
    fontSize: 14,
    color: '#188eee'
  },
  headerTitleText: {
    fontSize: 18,
    color: '#000'
  },
  directionRow: {
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center'
  },
  between: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center'
  },
  menuButton: {
    borderColor: '#eeeeee',
    backgroundColor: '#fff',
    borderRightWidth: _constants.BORDER_WIDTH,
    height: 35,
    justifyContent: 'center',
    alignItems: 'center',
    width: menuWidth
  },
  menuText: {
    fontSize: 12,
    color: '#9b9b9b'
  },
  menuButtonSelected: {
    borderBottomColor: '#1b98f0',
    borderBottomWidth: _constants.BORDER_WIDTH
  },
  menuButtonSelectedText: {
    color: '#1b98f0'
  },
  containerBg: {
    backgroundColor: '#EEEEEE'
  },
  modalBox: {
    height: _constants.WINDOW_HEIGHT,
    width: _constants.WINDOW_WIDTH,
    backgroundColor: 'transparent'
  },
  blockView: {
    backgroundColor: '#fff',
    paddingHorizontal: 10,
    marginTop: 10
  },
  blockView2: {
    backgroundColor: '#FAFCFB',
    paddingHorizontal: 10,
    marginTop: 10
  },
  titleView: {
    paddingVertical: 10,
    borderBottomWidth: _constants.BORDER_WIDTH,
    borderColor: '#9EBFFB'
  },
  titleView2: {
    paddingVertical: 10,
    borderBottomWidth: _constants.BORDER_WIDTH,
    borderColor: '#E1E1E1'
  },
  titleText: {
    color: '#9EBFFB',
    fontSize: 14
  },
  bottomButtonBlue: {
    width: _constants.WINDOW_WIDTH - 20,
    marginLeft: 10,
    marginTop: 16,
    borderRadius: 4,
    backgroundColor: '#4babf9',
    paddingVertical: 12
  },
  bottomButtonRed: {
    width: _constants.WINDOW_WIDTH - 20,
    marginLeft: 10,
    marginTop: 16,
    borderRadius: 4,
    backgroundColor: '#E5393D',
    paddingVertical: 12
  },
  bottomButtonText: {
    fontSize: 16,
    color: '#fff'
  },
  smallText: {
    fontSize: 13,
    color: "#888888"
  },
  loginButton: {
    width: _constants.WINDOW_WIDTH - 60,
    marginLeft: 30,
    marginTop: 26,
    borderRadius: 4,
    backgroundColor: '#3A91FC',
    paddingVertical: 12
  },
  forgetView: {
    marginTop: 10,
    marginHorizontal: 30
  }
});
}, 433, null, "YuanXC/src/styles/global.js");
__d(/* YuanXC/src/config/constants.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TDkey = exports.ItunesId = exports.WeChatKey = exports.InnerVersion = exports.Channel = exports.PackageName = exports.OS = exports.BORDER_WIDTH = exports.STATUS_HEIGHT = exports.WINDOW_HEIGHT = exports.WINDOW_WIDTH = undefined;

var _reactNative = require(12            ); // 12 = react-native

var _reactNativeDeviceInfo = require(435                       ); // 435 = react-native-device-info

var _reactNativeDeviceInfo2 = babelHelpers.interopRequireDefault(_reactNativeDeviceInfo);

global.version = _reactNativeDeviceInfo2.default.getBuildNumber();
global.os = _reactNative.Platform.OS;
var AndroidCn = _reactNative.NativeModules.RNChannel && _reactNative.NativeModules.RNChannel.channel || 'test';
var iOSCn = __DEV__ ? "test" : "iphone";
var WINDOW_WIDTH = exports.WINDOW_WIDTH = _reactNative.Dimensions.get('window').width;
var WINDOW_HEIGHT = exports.WINDOW_HEIGHT = _reactNative.Dimensions.get('window').height;
var STATUS_HEIGHT = exports.STATUS_HEIGHT = _reactNative.Platform.OS === 'ios' ? 20 : 20;
var BORDER_WIDTH = exports.BORDER_WIDTH = 1 / _reactNative.PixelRatio.get();
var OS = exports.OS = _reactNative.Platform.OS;
var PackageName = exports.PackageName = _reactNativeDeviceInfo2.default.getBundleId();
var Channel = exports.Channel = OS === "ios" ? iOSCn : AndroidCn;
var InnerVersion = exports.InnerVersion = "1";
var WeChatKey = exports.WeChatKey = "";
var ItunesId = exports.ItunesId = "com.wcz.app";
var TDkey = exports.TDkey = OS === "ios" ? "F8EEB5B98AEE4597984274DA18B0E2E9" : "AF1FA0E532384161BEDE63D225B84A11";
}, 434, null, "YuanXC/src/config/constants.js");
__d(/* react-native-device-info/deviceinfo.js */function(global, require, module, exports) {

var RNDeviceInfo = require(12            ).NativeModules.RNDeviceInfo; // 12 = react-native

module.exports = {
  getUniqueID: function getUniqueID() {
    return RNDeviceInfo.uniqueId;
  },
  getInstanceID: function getInstanceID() {
    return RNDeviceInfo.instanceId;
  },
  getSerialNumber: function getSerialNumber() {
    return RNDeviceInfo.serialNumber;
  },
  getIPAddress: function getIPAddress() {
    return RNDeviceInfo.getIpAddress();
  },
  getMACAddress: function getMACAddress() {
    return RNDeviceInfo.getMacAddress();
  },
  getDeviceId: function getDeviceId() {
    return RNDeviceInfo.deviceId;
  },
  getManufacturer: function getManufacturer() {
    return RNDeviceInfo.systemManufacturer;
  },
  getModel: function getModel() {
    return RNDeviceInfo.model;
  },
  getBrand: function getBrand() {
    return RNDeviceInfo.brand;
  },
  getSystemName: function getSystemName() {
    return RNDeviceInfo.systemName;
  },
  getSystemVersion: function getSystemVersion() {
    return RNDeviceInfo.systemVersion;
  },
  getAPILevel: function getAPILevel() {
    return RNDeviceInfo.apiLevel;
  },
  getBundleId: function getBundleId() {
    return RNDeviceInfo.bundleId;
  },
  getBuildNumber: function getBuildNumber() {
    return RNDeviceInfo.buildNumber;
  },
  getVersion: function getVersion() {
    return RNDeviceInfo.appVersion;
  },
  getReadableVersion: function getReadableVersion() {
    return RNDeviceInfo.appVersion + '.' + RNDeviceInfo.buildNumber;
  },
  getDeviceName: function getDeviceName() {
    return RNDeviceInfo.deviceName;
  },
  getUserAgent: function getUserAgent() {
    return RNDeviceInfo.userAgent;
  },
  getDeviceLocale: function getDeviceLocale() {
    return RNDeviceInfo.deviceLocale;
  },
  getDeviceCountry: function getDeviceCountry() {
    return RNDeviceInfo.deviceCountry;
  },
  getTimezone: function getTimezone() {
    return RNDeviceInfo.timezone;
  },
  isEmulator: function isEmulator() {
    return RNDeviceInfo.isEmulator;
  },
  isTablet: function isTablet() {
    return RNDeviceInfo.isTablet;
  },
  is24Hour: function is24Hour() {
    return RNDeviceInfo.is24Hour;
  },
  isPinOrFingerprintSet: function isPinOrFingerprintSet() {
    return RNDeviceInfo.isPinOrFingerprintSet;
  },
  getFirstInstallTime: function getFirstInstallTime() {
    return RNDeviceInfo.firstInstallTime;
  },
  getLastUpdateTime: function getLastUpdateTime() {
    return RNDeviceInfo.lastUpdateTime;
  },
  getPhoneNumber: function getPhoneNumber() {
    return RNDeviceInfo.phoneNumber;
  },
  getCarrier: function getCarrier() {
    return RNDeviceInfo.carrier;
  }
};
}, 435, null, "react-native-device-info/deviceinfo.js");
__d(/* YuanXC/src/resources/imgs.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/resources/imgs.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

exports.default = {
  inputClear: function inputClear(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(437                     ), __source: { // 437 = ./imgs/clear-input.png
        fileName: _jsxFileName,
        lineNumber: 6
      }
    });
  },
  successTip: function successTip(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(438                     ), __source: { // 438 = ./imgs/success-tip.png
        fileName: _jsxFileName,
        lineNumber: 9
      }
    });
  },
  rightArrowGary: function rightArrowGary(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(439             ), __source: { // 439 = ./imgs/you.png
        fileName: _jsxFileName,
        lineNumber: 12
      }
    });
  },
  rightArrow: function rightArrow(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(440                     ), __source: { // 440 = ./imgs/right-arrow.png
        fileName: _jsxFileName,
        lineNumber: 15
      }
    });
  },
  zuo: function zuo(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(441              ), __source: { // 441 = ./imgs/zuo1.png
        fileName: _jsxFileName,
        lineNumber: 18
      }
    });
  },
  you: function you(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(442              ), __source: { // 442 = ./imgs/you1.png
        fileName: _jsxFileName,
        lineNumber: 21
      }
    });
  },
  leftArrow: function leftArrow(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(443             ), __source: { // 443 = ./imgs/zuo.png
        fileName: _jsxFileName,
        lineNumber: 24
      }
    });
  },
  leftArrowBlue: function leftArrowBlue(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(444                              ), __source: { // 444 = ./imgs/gerenzhongxinjiantou.png
        fileName: _jsxFileName,
        lineNumber: 27
      }
    });
  },
  leftArrowWhite: function leftArrowWhite(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(445                    ), __source: { // 445 = ./imgs/left-arrow.png
        fileName: _jsxFileName,
        lineNumber: 30
      }
    });
  },
  home: function home(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(446                      ), __source: { // 446 = ./imgs/zhuyeweixuan.png
        fileName: _jsxFileName,
        lineNumber: 33
      }
    });
  },
  homeSelected: function homeSelected(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(447               ), __source: { // 447 = ./imgs/zhuye.png
        fileName: _jsxFileName,
        lineNumber: 36
      }
    });
  },
  user: function user(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(448                     ), __source: { // 448 = ./imgs/wodeweixuan.png
        fileName: _jsxFileName,
        lineNumber: 39
      }
    });
  },
  userSelected: function userSelected(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(449              ), __source: { // 449 = ./imgs/wode.png
        fileName: _jsxFileName,
        lineNumber: 42
      }
    });
  },
  finance: function finance(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(450                        ), __source: { // 450 = ./imgs/yinhangweixuan.png
        fileName: _jsxFileName,
        lineNumber: 45
      }
    });
  },
  financeSelected: function financeSelected(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(451                   ), __source: { // 451 = ./imgs/yinhangka.png
        fileName: _jsxFileName,
        lineNumber: 48
      }
    });
  },
  message: function message(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(452                ), __source: { // 452 = ./imgs/xiaoxi.png
        fileName: _jsxFileName,
        lineNumber: 51
      }
    });
  },
  touzi: function touzi(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(453               ), __source: { // 453 = ./imgs/zijin.png
        fileName: _jsxFileName,
        lineNumber: 54
      }
    });
  },
  liushui: function liushui(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(454                 ), __source: { // 454 = ./imgs/liushui.png
        fileName: _jsxFileName,
        lineNumber: 57
      }
    });
  },
  hongbao: function hongbao(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(455                 ), __source: { // 455 = ./imgs/hongbao.png
        fileName: _jsxFileName,
        lineNumber: 60
      }
    });
  },
  haoyou: function haoyou(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(456                ), __source: { // 456 = ./imgs/haoyou.png
        fileName: _jsxFileName,
        lineNumber: 63
      }
    });
  },
  loginPwd: function loginPwd(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(457              ), __source: { // 457 = ./imgs/mima.png
        fileName: _jsxFileName,
        lineNumber: 66
      }
    });
  },
  operSuccess: function operSuccess(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(458                ), __source: { // 458 = ./imgs/duihao.png
        fileName: _jsxFileName,
        lineNumber: 69
      }
    });
  },
  operError: function operError(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(459               ), __source: { // 459 = ./imgs/cuowu.png
        fileName: _jsxFileName,
        lineNumber: 72
      }
    });
  },
  operSuccess2: function operSuccess2(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(460                  ), __source: { // 460 = ./imgs/success2.png
        fileName: _jsxFileName,
        lineNumber: 75
      }
    });
  },
  questionBlue: function questionBlue(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(461               ), __source: { // 461 = ./imgs/wenti.png
        fileName: _jsxFileName,
        lineNumber: 78
      }
    });
  },
  shijian: function shijian(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(462                 ), __source: { // 462 = ./imgs/shijian.png
        fileName: _jsxFileName,
        lineNumber: 81
      }
    });
  },
  safe: function safe(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(463                ), __source: { // 463 = ./imgs/anquan.png
        fileName: _jsxFileName,
        lineNumber: 84
      }
    });
  },
  keyboard: function keyboard(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(464                    ), __source: { // 464 = ./imgs/yanzhengma.png
        fileName: _jsxFileName,
        lineNumber: 87
      }
    });
  },
  complete: function complete(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(465                  ), __source: { // 465 = ./imgs/complete.png
        fileName: _jsxFileName,
        lineNumber: 90
      }
    });
  },
  close: function close(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(466             ), __source: { // 466 = ./imgs/cha.png
        fileName: _jsxFileName,
        lineNumber: 93
      }
    });
  },
  close2: function close2(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(467                ), __source: { // 467 = ./imgs/cuohao.png
        fileName: _jsxFileName,
        lineNumber: 96
      }
    });
  },
  guan: function guan(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(468              ), __source: { // 468 = ./imgs/guan.png
        fileName: _jsxFileName,
        lineNumber: 99
      }
    });
  },
  share: function share(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(469                  ), __source: { // 469 = ./imgs/fenxiang.png
        fileName: _jsxFileName,
        lineNumber: 102
      }
    });
  },
  logo: function logo(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(470              ), __source: { // 470 = ./imgs/logo.png
        fileName: _jsxFileName,
        lineNumber: 105
      }
    });
  },
  setting: function setting(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(471                 ), __source: { // 471 = ./imgs/setting.png
        fileName: _jsxFileName,
        lineNumber: 108
      }
    });
  },
  xs: function xs(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(472            ), __source: { // 472 = ./imgs/xs.png
        fileName: _jsxFileName,
        lineNumber: 111
      }
    });
  },
  yy: function yy(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(473            ), __source: { // 473 = ./imgs/yy.png
        fileName: _jsxFileName,
        lineNumber: 114
      }
    });
  },
  new: function _new(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(474             ), __source: { // 474 = ./imgs/new.png
        fileName: _jsxFileName,
        lineNumber: 117
      }
    });
  },
  end: function end(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(475             ), __source: { // 475 = ./imgs/end.png
        fileName: _jsxFileName,
        lineNumber: 120
      }
    });
  },
  cash: function cash(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(476              ), __source: { // 476 = ./imgs/cash.png
        fileName: _jsxFileName,
        lineNumber: 123
      }
    });
  },
  recharge: function recharge(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(477                  ), __source: { // 477 = ./imgs/recharge.png
        fileName: _jsxFileName,
        lineNumber: 126
      }
    });
  },
  cha: function cha(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(478              ), __source: { // 478 = ./imgs/exit.png
        fileName: _jsxFileName,
        lineNumber: 129
      }
    });
  },
  cacu: function cacu(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(479              ), __source: { // 479 = ./imgs/cacu.png
        fileName: _jsxFileName,
        lineNumber: 132
      }
    });
  },
  right: function right(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(480               ), __source: { // 480 = ./imgs/right.png
        fileName: _jsxFileName,
        lineNumber: 135
      }
    });
  },
  kefu: function kefu(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(481              ), __source: { // 481 = ./imgs/kefu.png
        fileName: _jsxFileName,
        lineNumber: 138
      }
    });
  },
  information: function information(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(482                      ), __source: { // 482 = ./imgs/home-aboutus.png
        fileName: _jsxFileName,
        lineNumber: 141
      }
    });
  },
  we: function we(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(483                         ), __source: { // 483 = ./imgs/home-disclosure.png
        fileName: _jsxFileName,
        lineNumber: 144
      }
    });
  },
  icp: function icp(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(484                  ), __source: { // 484 = ./imgs/home-ICP.png
        fileName: _jsxFileName,
        lineNumber: 147
      }
    });
  },
  bankCard: function bankCard(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(485                      ), __source: { // 485 = ./imgs/set-bankcard.png
        fileName: _jsxFileName,
        lineNumber: 150
      }
    });
  },
  checked: function checked(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(486                 ), __source: { // 486 = ./imgs/checked.png
        fileName: _jsxFileName,
        lineNumber: 153
      }
    });
  },
  unchecked: function unchecked(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(487                     ), __source: { // 487 = ./imgs/checked-nof.png
        fileName: _jsxFileName,
        lineNumber: 156
      }
    });
  },
  shezhi: function shezhi(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(488                ), __source: { // 488 = ./imgs/shezhi.png
        fileName: _jsxFileName,
        lineNumber: 159
      }
    });
  },
  eyeOpen: function eyeOpen(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(489                    ), __source: { // 489 = ./imgs/yanjingkai.png
        fileName: _jsxFileName,
        lineNumber: 162
      }
    });
  },
  eyeClose: function eyeClose(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(490                   ), __source: { // 490 = ./imgs/yanjingbi.png
        fileName: _jsxFileName,
        lineNumber: 165
      }
    });
  },
  touxiang: function touxiang(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(491                  ), __source: { // 491 = ./imgs/touxiang.png
        fileName: _jsxFileName,
        lineNumber: 168
      }
    });
  },
  mobile: function mobile(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(492                    ), __source: { // 492 = ./imgs/icon_phone.png
        fileName: _jsxFileName,
        lineNumber: 171
      }
    });
  },
  password: function password(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(493                       ), __source: { // 493 = ./imgs/icon_password.png
        fileName: _jsxFileName,
        lineNumber: 174
      }
    });
  },
  code: function code(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(494                  ), __source: { // 494 = ./imgs/icon_SMS.png
        fileName: _jsxFileName,
        lineNumber: 177
      }
    });
  },
  phoneshouji: function phoneshouji(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(495                     ), __source: { // 495 = ./imgs/phoneshouji.png
        fileName: _jsxFileName,
        lineNumber: 180
      }
    });
  },
  phoneanquan: function phoneanquan(style) {
    return _react2.default.createElement(_reactNative.Image, { style: style, source: require(496                     ), __source: { // 496 = ./imgs/phoneanquan.png
        fileName: _jsxFileName,
        lineNumber: 183
      }
    });
  }
};
}, 436, null, "YuanXC/src/resources/imgs.js");
__d(/* YuanXC/src/resources/imgs/clear-input.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":12,"height":12,"scales":[2],"hash":"41702730c1a7c107d695fcac67093107","name":"clear-input","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 437, null, "YuanXC/src/resources/imgs/clear-input.png");
__d(/* YuanXC/src/resources/imgs/success-tip.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":50,"height":50,"scales":[3],"hash":"05aed240eac9afc298fd6cbfe4489ec6","name":"success-tip","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 438, null, "YuanXC/src/resources/imgs/success-tip.png");
__d(/* YuanXC/src/resources/imgs/you.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":6,"height":10,"scales":[2,3],"hash":"bc0045a98bfaa11c1910917b205ddc04","name":"you","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 439, null, "YuanXC/src/resources/imgs/you.png");
__d(/* YuanXC/src/resources/imgs/right-arrow.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":5,"height":8,"scales":[2,3],"hash":"c51cb3d6d68a85ce4818e93df0016ded","name":"right-arrow","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 440, null, "YuanXC/src/resources/imgs/right-arrow.png");
__d(/* YuanXC/src/resources/imgs/zuo1.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":8,"height":14,"scales":[2,3],"hash":"3ef7473e442251751d2bc82e9fa53cab","name":"zuo1","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 441, null, "YuanXC/src/resources/imgs/zuo1.png");
__d(/* YuanXC/src/resources/imgs/you1.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":8,"height":14,"scales":[2,3],"hash":"99d66c45803f6c610f4c5ef278871f88","name":"you1","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 442, null, "YuanXC/src/resources/imgs/you1.png");
__d(/* YuanXC/src/resources/imgs/zuo.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":8,"height":14,"scales":[2,3],"hash":"1267c14e23a937af1c08a2e945b70d5f","name":"zuo","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 443, null, "YuanXC/src/resources/imgs/zuo.png");
__d(/* YuanXC/src/resources/imgs/gerenzhongxinjiantou.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":8,"height":14,"scales":[2,3],"hash":"a19317a8cf14f82f5a187c07323a070f","name":"gerenzhongxinjiantou","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 444, null, "YuanXC/src/resources/imgs/gerenzhongxinjiantou.png");
__d(/* YuanXC/src/resources/imgs/left-arrow.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":10,"height":18,"scales":[2,3],"hash":"74197039eb3fbb20b79f59fa5a5f679d","name":"left-arrow","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 445, null, "YuanXC/src/resources/imgs/left-arrow.png");
__d(/* YuanXC/src/resources/imgs/zhuyeweixuan.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":30,"height":30,"scales":[2,3],"hash":"962d825c51e5d6d19df7f077e24bf2cc","name":"zhuyeweixuan","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 446, null, "YuanXC/src/resources/imgs/zhuyeweixuan.png");
__d(/* YuanXC/src/resources/imgs/zhuye.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":30,"height":30,"scales":[2,3],"hash":"2d674340e502df306722071bb6b99d87","name":"zhuye","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 447, null, "YuanXC/src/resources/imgs/zhuye.png");
__d(/* YuanXC/src/resources/imgs/wodeweixuan.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":30,"height":30,"scales":[2,3],"hash":"b6f39ecd2d87f0221a9884f1e56d6cdc","name":"wodeweixuan","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 448, null, "YuanXC/src/resources/imgs/wodeweixuan.png");
__d(/* YuanXC/src/resources/imgs/wode.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":30,"height":30,"scales":[2,3],"hash":"c3bff779f363dafe6d48f0eedc91bbbc","name":"wode","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 449, null, "YuanXC/src/resources/imgs/wode.png");
__d(/* YuanXC/src/resources/imgs/yinhangweixuan.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":30,"height":30,"scales":[2,3],"hash":"817c2c26c1ed332404028d78ed3932d2","name":"yinhangweixuan","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 450, null, "YuanXC/src/resources/imgs/yinhangweixuan.png");
__d(/* YuanXC/src/resources/imgs/yinhangka.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":30,"height":30,"scales":[2,3],"hash":"f361af4a9ba3a142175cc1b49c115546","name":"yinhangka","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 451, null, "YuanXC/src/resources/imgs/yinhangka.png");
__d(/* YuanXC/src/resources/imgs/xiaoxi.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":25,"height":25,"scales":[2,3],"hash":"287da80878a39a4db3e971bbb381cd4b","name":"xiaoxi","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 452, null, "YuanXC/src/resources/imgs/xiaoxi.png");
__d(/* YuanXC/src/resources/imgs/zijin.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":23,"height":24,"scales":[2,3],"hash":"4431183aa87b5ad08c9d42f3675577b9","name":"zijin","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 453, null, "YuanXC/src/resources/imgs/zijin.png");
__d(/* YuanXC/src/resources/imgs/liushui.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":23,"height":24,"scales":[2,3],"hash":"18d228b44738c86fe96d81fb82a6014f","name":"liushui","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 454, null, "YuanXC/src/resources/imgs/liushui.png");
__d(/* YuanXC/src/resources/imgs/hongbao.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":23,"height":24,"scales":[2,3],"hash":"a8c82c4024838a078481ff5d4c65980a","name":"hongbao","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 455, null, "YuanXC/src/resources/imgs/hongbao.png");
__d(/* YuanXC/src/resources/imgs/haoyou.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":23,"height":24,"scales":[2,3],"hash":"c2488f3622eae1bfb1dbccebaf3ef716","name":"haoyou","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 456, null, "YuanXC/src/resources/imgs/haoyou.png");
__d(/* YuanXC/src/resources/imgs/mima.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":17,"height":23,"scales":[2,3],"hash":"38c3f1e3017c090a1367382b140a247d","name":"mima","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 457, null, "YuanXC/src/resources/imgs/mima.png");
__d(/* YuanXC/src/resources/imgs/duihao.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":100,"height":100,"scales":[2,3],"hash":"09fb060927b50930a4b5043877a53375","name":"duihao","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 458, null, "YuanXC/src/resources/imgs/duihao.png");
__d(/* YuanXC/src/resources/imgs/cuowu.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":100,"height":100,"scales":[2,3],"hash":"408a167b4d0ad8b189ae86744ac9e18b","name":"cuowu","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 459, null, "YuanXC/src/resources/imgs/cuowu.png");
__d(/* YuanXC/src/resources/imgs/success2.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":60,"height":60,"scales":[2,3],"hash":"745df6fc080795d735ff1f45452eae17","name":"success2","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 460, null, "YuanXC/src/resources/imgs/success2.png");
__d(/* YuanXC/src/resources/imgs/wenti.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":18,"height":18,"scales":[2],"hash":"b56fa64ac4757e8a7fd62ad8330d6684","name":"wenti","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 461, null, "YuanXC/src/resources/imgs/wenti.png");
__d(/* YuanXC/src/resources/imgs/shijian.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":20,"height":20,"scales":[2,3],"hash":"3e95945b491fc25b3216a1645e005578","name":"shijian","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 462, null, "YuanXC/src/resources/imgs/shijian.png");
__d(/* YuanXC/src/resources/imgs/anquan.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":20,"height":20,"scales":[2,3],"hash":"dbaf5a6864c5fee4a417a0ed1cd22911","name":"anquan","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 463, null, "YuanXC/src/resources/imgs/anquan.png");
__d(/* YuanXC/src/resources/imgs/yanzhengma.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":19,"height":17,"scales":[2,3],"hash":"6929f97ae23e4eebba5b743bc8f4117d","name":"yanzhengma","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 464, null, "YuanXC/src/resources/imgs/yanzhengma.png");
__d(/* YuanXC/src/resources/imgs/complete.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":13,"height":13,"scales":[2,3],"hash":"6e44df95625edc2e8a705de8e6fc63b5","name":"complete","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 465, null, "YuanXC/src/resources/imgs/complete.png");
__d(/* YuanXC/src/resources/imgs/cha.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":10,"height":10,"scales":[3],"hash":"27df8a7ecb2bc8b1d3e47a22e2a49e52","name":"cha","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 466, null, "YuanXC/src/resources/imgs/cha.png");
__d(/* YuanXC/src/resources/imgs/cuohao.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":14,"height":14,"scales":[2,3],"hash":"4bbee8d4e91caa931c547dcf68310ab3","name":"cuohao","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 467, null, "YuanXC/src/resources/imgs/cuohao.png");
__d(/* YuanXC/src/resources/imgs/guan.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":14,"height":14,"scales":[2,3],"hash":"7d163cde7df183b67060c097f3e4e2d9","name":"guan","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 468, null, "YuanXC/src/resources/imgs/guan.png");
__d(/* YuanXC/src/resources/imgs/fenxiang.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":20,"height":20,"scales":[3],"hash":"28935695966496874993294da00714a2","name":"fenxiang","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 469, null, "YuanXC/src/resources/imgs/fenxiang.png");
__d(/* YuanXC/src/resources/imgs/logo.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":103.5,"height":86.5,"scales":[2],"hash":"a2b619326b10ff02a590c957e8635a47","name":"logo","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 470, null, "YuanXC/src/resources/imgs/logo.png");
__d(/* YuanXC/src/resources/imgs/setting.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":20,"height":20,"scales":[2,3],"hash":"f0e0c46852ec6c5e961b3006d9275865","name":"setting","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 471, null, "YuanXC/src/resources/imgs/setting.png");
__d(/* YuanXC/src/resources/imgs/xs.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":45,"height":45,"scales":[2,3],"hash":"09dc97df64465479eee8e3a7bf1a8be4","name":"xs","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 472, null, "YuanXC/src/resources/imgs/xs.png");
__d(/* YuanXC/src/resources/imgs/yy.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":45,"height":45,"scales":[2,3],"hash":"14967e9b87df0e7962aa8f2ac6566386","name":"yy","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 473, null, "YuanXC/src/resources/imgs/yy.png");
__d(/* YuanXC/src/resources/imgs/new.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":133,"height":54,"scales":[2,3],"hash":"1ecaa348fc7efd5483f790427af871a5","name":"new","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 474, null, "YuanXC/src/resources/imgs/new.png");
__d(/* YuanXC/src/resources/imgs/end.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":71,"height":80,"scales":[2,3],"hash":"97c76186dac4ea8891c1944583f17b6c","name":"end","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 475, null, "YuanXC/src/resources/imgs/end.png");
__d(/* YuanXC/src/resources/imgs/cash.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":40,"height":40,"scales":[2,3],"hash":"76a1e483ea96f291e0293cdea55aa1aa","name":"cash","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 476, null, "YuanXC/src/resources/imgs/cash.png");
__d(/* YuanXC/src/resources/imgs/recharge.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":40,"height":40,"scales":[2,3],"hash":"6e2ec6d9c5d19085d8aabe75e6c7b747","name":"recharge","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 477, null, "YuanXC/src/resources/imgs/recharge.png");
__d(/* YuanXC/src/resources/imgs/exit.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":15,"height":15,"scales":[2,3],"hash":"7cee92d9062d1f60467c33075aab619f","name":"exit","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 478, null, "YuanXC/src/resources/imgs/exit.png");
__d(/* YuanXC/src/resources/imgs/cacu.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":22,"height":22,"scales":[2,3],"hash":"52d4e54416bfa45749893d339c406111","name":"cacu","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 479, null, "YuanXC/src/resources/imgs/cacu.png");
__d(/* YuanXC/src/resources/imgs/right.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":15,"height":12,"scales":[2,3],"hash":"fac347c125d2710e3c596bf6ced27c3f","name":"right","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 480, null, "YuanXC/src/resources/imgs/right.png");
__d(/* YuanXC/src/resources/imgs/kefu.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":20,"height":20,"scales":[2,3],"hash":"ea420f35cb9357eab61c8b6ad6b0805f","name":"kefu","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 481, null, "YuanXC/src/resources/imgs/kefu.png");
__d(/* YuanXC/src/resources/imgs/home-aboutus.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":25,"height":25,"scales":[2,3],"hash":"4dc1352aa19ccbce8ae9983f8fb28fb2","name":"home-aboutus","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 482, null, "YuanXC/src/resources/imgs/home-aboutus.png");
__d(/* YuanXC/src/resources/imgs/home-disclosure.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":25,"height":25,"scales":[2,3],"hash":"772c5a8f777b7c0b30136af296e43723","name":"home-disclosure","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 483, null, "YuanXC/src/resources/imgs/home-disclosure.png");
__d(/* YuanXC/src/resources/imgs/home-ICP.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":20,"height":20,"scales":[2,3],"hash":"cfe6b838f4f1518028223449f6697a9b","name":"home-ICP","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 484, null, "YuanXC/src/resources/imgs/home-ICP.png");
__d(/* YuanXC/src/resources/imgs/set-bankcard.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":40,"height":30,"scales":[2,3],"hash":"cdc7947caf0e6a1cb8d42e8864efceba","name":"set-bankcard","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 485, null, "YuanXC/src/resources/imgs/set-bankcard.png");
__d(/* YuanXC/src/resources/imgs/checked.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":50,"height":50,"scales":[1],"hash":"5eb18f1d0f2b904e024e8e291c7eae46","name":"checked","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 486, null, "YuanXC/src/resources/imgs/checked.png");
__d(/* YuanXC/src/resources/imgs/checked-nof.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":50,"height":50,"scales":[1],"hash":"171e89f7bd0be83d31e90305289f3db8","name":"checked-nof","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 487, null, "YuanXC/src/resources/imgs/checked-nof.png");
__d(/* YuanXC/src/resources/imgs/shezhi.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":25,"height":25,"scales":[2,3],"hash":"ab0bdaf8419515d7df4ceba9e1a7370b","name":"shezhi","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 488, null, "YuanXC/src/resources/imgs/shezhi.png");
__d(/* YuanXC/src/resources/imgs/yanjingkai.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":20,"height":12,"scales":[2,3],"hash":"77d6d37a044bcb487fc05a10f5dff411","name":"yanjingkai","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 489, null, "YuanXC/src/resources/imgs/yanjingkai.png");
__d(/* YuanXC/src/resources/imgs/yanjingbi.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":20,"height":7,"scales":[2,3],"hash":"9527a2ff2ddbea6d65df08f221cf3532","name":"yanjingbi","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 490, null, "YuanXC/src/resources/imgs/yanjingbi.png");
__d(/* YuanXC/src/resources/imgs/touxiang.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":120,"height":120,"scales":[1],"hash":"b6f52e90d57d55aa19cb026cfd95117c","name":"touxiang","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 491, null, "YuanXC/src/resources/imgs/touxiang.png");
__d(/* YuanXC/src/resources/imgs/icon_phone.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":25,"height":25,"scales":[2,3],"hash":"3224770a846396220dbb876ae01e058f","name":"icon_phone","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 492, null, "YuanXC/src/resources/imgs/icon_phone.png");
__d(/* YuanXC/src/resources/imgs/icon_password.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":25,"height":25,"scales":[2,3],"hash":"05fad4ded835ac18adc32ffd4a73cf35","name":"icon_password","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 493, null, "YuanXC/src/resources/imgs/icon_password.png");
__d(/* YuanXC/src/resources/imgs/icon_SMS.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":25,"height":25,"scales":[2,3],"hash":"1ae69e0f81378123a2130d98f611b4c7","name":"icon_SMS","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 494, null, "YuanXC/src/resources/imgs/icon_SMS.png");
__d(/* YuanXC/src/resources/imgs/phoneshouji.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":17,"height":25,"scales":[2,3],"hash":"6edc719d655228d05eefc894d13d9023","name":"phoneshouji","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 495, null, "YuanXC/src/resources/imgs/phoneshouji.png");
__d(/* YuanXC/src/resources/imgs/phoneanquan.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":17,"height":25,"scales":[2,3],"hash":"5b4ba7e1f987d35c8c822460e7c3fae2","name":"phoneanquan","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 496, null, "YuanXC/src/resources/imgs/phoneanquan.png");
__d(/* YuanXC/src/components/Touchable.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/components/Touchable.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var dismissKeyboard = require(228              ); // 228 = dismissKeyboard

var Touchable = function (_Component) {
  babelHelpers.inherits(Touchable, _Component);

  function Touchable() {
    babelHelpers.classCallCheck(this, Touchable);
    return babelHelpers.possibleConstructorReturn(this, (Touchable.__proto__ || Object.getPrototypeOf(Touchable)).apply(this, arguments));
  }

  babelHelpers.createClass(Touchable, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        _reactNative.TouchableOpacity,
        {
          style: this.props.style,
          activeOpacity: this.props.feedback ? 0.5 : 0,
          disabled: this.props.disabled,
          onPress: function onPress() {
            dismissKeyboard();_this2.props.onPress();
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 12
          }
        },
        this.props.children
      );
    }
  }]);
  return Touchable;
}(_react.Component);

Touchable.defaultProps = {
  underlayColor: '#eee',
  feedback: true,
  disabled: false,
  onPress: function onPress() {}
};

Touchable.propTypes = {
  feedback: _propTypes2.default.bool,
  disabled: _propTypes2.default.any,
  style: _propTypes2.default.any,
  onPress: _propTypes2.default.func.isRequired
};

exports.default = Touchable;
}, 497, null, "YuanXC/src/components/Touchable.js");
__d(/* YuanXC/src/pages/TabBar.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/TabBar.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _reactNativeTabNavigator = require(499                         ); // 499 = react-native-tab-navigator

var _reactNativeTabNavigator2 = babelHelpers.interopRequireDefault(_reactNativeTabNavigator);

var _Home = require(508            ); // 508 = ../pages/Home

var _Home2 = babelHelpers.interopRequireDefault(_Home);

var _UserInfo = require(629                ); // 629 = ../pages/UserInfo

var _UserInfo2 = babelHelpers.interopRequireDefault(_UserInfo);

var _FinanceList = require(634                   ); // 634 = ../pages/FinanceList

var _FinanceList2 = babelHelpers.interopRequireDefault(_FinanceList);

var _imgs = require(436                ); // 436 = ../resources/imgs

var _imgs2 = babelHelpers.interopRequireDefault(_imgs);

var icon = { height: 26, resizeMode: "contain" };

var Tabs = function (_Component) {
  babelHelpers.inherits(Tabs, _Component);

  function Tabs(props) {
    babelHelpers.classCallCheck(this, Tabs);

    var _this = babelHelpers.possibleConstructorReturn(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).call(this, props));

    _this.initRouter = "Home";

    _this.state = { selectedTab: global.initRouter || _this.initRouter };
    global.currentTab = global.initRouter || _this.initRouter;
    global.initRouter = "";
    _this._changeTab = _this._changeTab.bind(_this);
    return _this;
  }

  babelHelpers.createClass(Tabs, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.listener = _reactNative.DeviceEventEmitter.addListener('navigateTab', this._changeTab);
    }
  }, {
    key: '_intoUserInfo',
    value: function _intoUserInfo() {
      if (global.token) {
        this._changeTab('UserInfo');
      } else {
        global.initRouter = "UserInfo";
        this.props.navigation.navigate("Login");
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.listener && this.listener.remove();
    }
  }, {
    key: '_changeTab',
    value: function _changeTab(name) {
      global.currentTab = name;
      this.setState({ selectedTab: name });
      _reactNative.DeviceEventEmitter.emit('changeTab');
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        _reactNative.View,
        { style: { flex: 1 }, __source: {
            fileName: _jsxFileName,
            lineNumber: 55
          }
        },
        _react2.default.createElement(
          _reactNativeTabNavigator2.default,
          { hidesTabTouch: true, tabBarStyle: styles.tab, __source: {
              fileName: _jsxFileName,
              lineNumber: 56
            }
          },
          _react2.default.createElement(
            _reactNativeTabNavigator2.default.Item,
            {
              selected: this.state.selectedTab === 'Home',
              title: '\u9996\u9875',
              titleStyle: styles.titleText,
              selectedTitleStyle: { color: '#F1BE64' },
              renderIcon: function renderIcon() {
                return _imgs2.default.home(icon);
              },
              renderSelectedIcon: function renderSelectedIcon() {
                return _imgs2.default.homeSelected(icon);
              },
              onPress: function onPress() {
                return _this2._changeTab('Home');
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 57
              }
            },
            _react2.default.createElement(_Home2.default, babelHelpers.extends({}, this.props, {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 65
              }
            }))
          ),
          _react2.default.createElement(
            _reactNativeTabNavigator2.default.Item,
            {
              selected: this.state.selectedTab === 'FinanceList',
              title: '\u7406\u8D22',
              titleStyle: styles.titleText,
              selectedTitleStyle: { color: '#F1BE64' },
              renderIcon: function renderIcon() {
                return _imgs2.default.finance(icon);
              },
              renderSelectedIcon: function renderSelectedIcon() {
                return _imgs2.default.financeSelected(icon);
              },
              onPress: function onPress() {
                return _this2._changeTab('FinanceList');
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 67
              }
            },
            _react2.default.createElement(_FinanceList2.default, babelHelpers.extends({}, this.props, {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 75
              }
            }))
          ),
          _react2.default.createElement(
            _reactNativeTabNavigator2.default.Item,
            {
              selected: this.state.selectedTab === 'UserInfo',
              title: '\u6211\u7684',
              titleStyle: styles.titleText,
              selectedTitleStyle: { color: '#F1BE64' },
              renderIcon: function renderIcon() {
                return _imgs2.default.user(icon);
              },
              renderSelectedIcon: function renderSelectedIcon() {
                return _imgs2.default.userSelected(icon);
              },
              onPress: function onPress() {
                return _this2._intoUserInfo();
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 77
              }
            },
            _react2.default.createElement(_UserInfo2.default, babelHelpers.extends({}, this.props, {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 85
              }
            }))
          )
        )
      );
    }
  }]);
  return Tabs;
}(_react.Component);

exports.default = Tabs;


var styles = _reactNative.StyleSheet.create({
  tab: {
    height: 49,
    backgroundColor: '#fff',
    alignItems: 'center'
  },
  tabIcon: {
    color: "#666",
    backgroundColor: "#fff"
  },
  titleText: {
    fontSize: 12,
    color: "#AFAFAF",
    marginTop: 2
  }
});
}, 498, null, "YuanXC/src/pages/TabBar.js");
__d(/* react-native-tab-navigator/TabNavigator.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native-tab-navigator/TabNavigator.js';

var _immutable = require(500        ); // 500 = immutable

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _Badge = require(501      ); // 501 = ./Badge

var _Badge2 = babelHelpers.interopRequireDefault(_Badge);

var _Layout = require(502       ); // 502 = ./Layout

var _Layout2 = babelHelpers.interopRequireDefault(_Layout);

var _StaticContainer = require(503                ); // 503 = ./StaticContainer

var _StaticContainer2 = babelHelpers.interopRequireDefault(_StaticContainer);

var _Tab = require(504    ); // 504 = ./Tab

var _Tab2 = babelHelpers.interopRequireDefault(_Tab);

var _TabBar = require(506       ); // 506 = ./TabBar

var _TabBar2 = babelHelpers.interopRequireDefault(_TabBar);

var _TabNavigatorItem = require(507                 ); // 507 = ./TabNavigatorItem

var _TabNavigatorItem2 = babelHelpers.interopRequireDefault(_TabNavigatorItem);

var _ViewPropTypes = require(505                     ); // 505 = ./config/ViewPropTypes

var _ViewPropTypes2 = babelHelpers.interopRequireDefault(_ViewPropTypes);

var TabNavigator = function (_React$Component) {
  babelHelpers.inherits(TabNavigator, _React$Component);

  function TabNavigator(props, context) {
    babelHelpers.classCallCheck(this, TabNavigator);

    var _this = babelHelpers.possibleConstructorReturn(this, (TabNavigator.__proto__ || Object.getPrototypeOf(TabNavigator)).call(this, props, context));

    _this.state = {
      renderedSceneKeys: _this._updateRenderedSceneKeys(props.children)
    };

    _this._renderTab = _this._renderTab.bind(_this);
    return _this;
  }

  babelHelpers.createClass(TabNavigator, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var renderedSceneKeys = this.state.renderedSceneKeys;

      this.setState({
        renderedSceneKeys: this._updateRenderedSceneKeys(nextProps.children, renderedSceneKeys)
      });
    }
  }, {
    key: '_getSceneKey',
    value: function _getSceneKey(item, index) {
      return 'scene-' + (item.key !== null ? item.key : index);
    }
  }, {
    key: '_updateRenderedSceneKeys',
    value: function _updateRenderedSceneKeys(children) {
      var _this2 = this;

      var oldSceneKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _immutable.Set)();

      var newSceneKeys = (0, _immutable.Set)().asMutable();
      _react2.default.Children.forEach(children, function (item, index) {
        if (item === null) {
          return;
        }
        var key = _this2._getSceneKey(item, index);
        if (oldSceneKeys.has(key) || item.props.selected) {
          newSceneKeys.add(key);
        }
      });
      return newSceneKeys.asImmutable();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var _props = this.props,
          style = _props.style,
          children = _props.children,
          tabBarStyle = _props.tabBarStyle,
          tabBarShadowStyle = _props.tabBarShadowStyle,
          sceneStyle = _props.sceneStyle,
          props = babelHelpers.objectWithoutProperties(_props, ['style', 'children', 'tabBarStyle', 'tabBarShadowStyle', 'sceneStyle']);

      var scenes = [];

      _react2.default.Children.forEach(children, function (item, index) {
        if (item === null) {
          return;
        }
        var sceneKey = _this3._getSceneKey(item, index);
        if (!_this3.state.renderedSceneKeys.has(sceneKey)) {
          return;
        }

        var selected = item.props.selected;

        var scene = _react2.default.createElement(
          SceneContainer,
          { key: sceneKey, selected: selected, style: sceneStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 80
            }
          },
          item
        );

        scenes.push(scene);
      });

      return _react2.default.createElement(
        _reactNative.View,
        babelHelpers.extends({}, props, { style: [styles.container, style], __source: {
            fileName: _jsxFileName,
            lineNumber: 88
          }
        }),
        scenes,
        _react2.default.createElement(
          _TabBar2.default,
          { style: tabBarStyle, shadowStyle: tabBarShadowStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 90
            }
          },
          _react2.default.Children.map(children, this._renderTab)
        )
      );
    }
  }, {
    key: '_renderTab',
    value: function _renderTab(item) {
      var icon = void 0;
      if (item === null) {
        return;
      }
      if (item.props.selected) {
        if (item.props.renderSelectedIcon) {
          icon = item.props.renderSelectedIcon();
        } else if (item.props.renderIcon) {
          var defaultIcon = item.props.renderIcon();
          icon = _react2.default.cloneElement(defaultIcon, {
            style: [defaultIcon.props.style, styles.defaultSelectedIcon]
          });
        }
      } else if (item.props.renderIcon) {
        icon = item.props.renderIcon();
      }

      var badge = void 0;
      if (item.props.renderBadge) {
        badge = item.props.renderBadge();
      } else if (item.props.badgeText) {
        badge = _react2.default.createElement(
          _Badge2.default,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 119
            }
          },
          item.props.badgeText
        );
      }

      return _react2.default.createElement(
        _Tab2.default,
        {
          testID: item.props.testID,
          title: item.props.title,
          allowFontScaling: item.props.allowFontScaling,
          titleStyle: [item.props.titleStyle, item.props.selected ? [styles.defaultSelectedTitle, item.props.selectedTitleStyle] : null],
          badge: badge,
          onPress: item.props.onPress,
          hidesTabTouch: this.props.hidesTabTouch,
          style: item.props.tabStyle, __source: {
            fileName: _jsxFileName,
            lineNumber: 123
          }
        },
        icon
      );
    }
  }]);
  return TabNavigator;
}(_react2.default.Component);

TabNavigator.propTypes = babelHelpers.extends({}, _ViewPropTypes2.default, {
  sceneStyle: _ViewPropTypes2.default.style,
  tabBarStyle: _TabBar2.default.propTypes.style,
  tabBarShadowStyle: _TabBar2.default.propTypes.shadowStyle,
  hidesTabTouch: _propTypes2.default.bool
});
exports.default = TabNavigator;

var SceneContainer = function (_React$Component2) {
  babelHelpers.inherits(SceneContainer, _React$Component2);

  function SceneContainer() {
    babelHelpers.classCallCheck(this, SceneContainer);
    return babelHelpers.possibleConstructorReturn(this, (SceneContainer.__proto__ || Object.getPrototypeOf(SceneContainer)).apply(this, arguments));
  }

  babelHelpers.createClass(SceneContainer, [{
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          selected = _props2.selected,
          props = babelHelpers.objectWithoutProperties(_props2, ['selected']);

      return _react2.default.createElement(
        _reactNative.View,
        babelHelpers.extends({}, props, {
          pointerEvents: selected ? 'auto' : 'none',
          removeClippedSubviews: !selected,
          style: [styles.sceneContainer, selected ? null : styles.hiddenSceneContainer, props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 153
          }
        }),
        _react2.default.createElement(
          _StaticContainer2.default,
          { shouldUpdate: selected, __source: {
              fileName: _jsxFileName,
              lineNumber: 162
            }
          },
          this.props.children
        )
      );
    }
  }]);
  return SceneContainer;
}(_react2.default.Component);

SceneContainer.propTypes = babelHelpers.extends({}, _ViewPropTypes2.default, {
  selected: _propTypes2.default.bool
});


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1
  },
  sceneContainer: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    paddingBottom: _Layout2.default.tabBarHeight
  },
  hiddenSceneContainer: {
    overflow: 'hidden',
    opacity: 0
  },
  defaultSelectedTitle: {
    color: 'rgb(0, 122, 255)'
  },
  defaultSelectedIcon: {
    tintColor: 'rgb(0, 122, 255)'
  }
});

TabNavigator.Item = _TabNavigatorItem2.default;
}, 499, null, "react-native-tab-navigator/TabNavigator.js");
__d(/* immutable/dist/immutable.js */function(global, require, module, exports) {

(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.Immutable = factory();
})(this, function () {
  'use strict';
  var SLICE$0 = Array.prototype.slice;

  function createClass(ctor, superClass) {
    if (superClass) {
      ctor.prototype = Object.create(superClass.prototype);
    }
    ctor.prototype.constructor = ctor;
  }

  function Iterable(value) {
    return isIterable(value) ? value : Seq(value);
  }

  createClass(KeyedIterable, Iterable);
  function KeyedIterable(value) {
    return isKeyed(value) ? value : KeyedSeq(value);
  }

  createClass(IndexedIterable, Iterable);
  function IndexedIterable(value) {
    return isIndexed(value) ? value : IndexedSeq(value);
  }

  createClass(SetIterable, Iterable);
  function SetIterable(value) {
    return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);
  }

  function isIterable(maybeIterable) {
    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);
  }

  function isKeyed(maybeKeyed) {
    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);
  }

  function isIndexed(maybeIndexed) {
    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);
  }

  function isAssociative(maybeAssociative) {
    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);
  }

  function isOrdered(maybeOrdered) {
    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);
  }

  Iterable.isIterable = isIterable;
  Iterable.isKeyed = isKeyed;
  Iterable.isIndexed = isIndexed;
  Iterable.isAssociative = isAssociative;
  Iterable.isOrdered = isOrdered;

  Iterable.Keyed = KeyedIterable;
  Iterable.Indexed = IndexedIterable;
  Iterable.Set = SetIterable;

  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';

  var DELETE = 'delete';

  var SHIFT = 5;
  var SIZE = 1 << SHIFT;
  var MASK = SIZE - 1;

  var NOT_SET = {};

  var CHANGE_LENGTH = { value: false };
  var DID_ALTER = { value: false };

  function MakeRef(ref) {
    ref.value = false;
    return ref;
  }

  function SetRef(ref) {
    ref && (ref.value = true);
  }

  function OwnerID() {}

  function arrCopy(arr, offset) {
    offset = offset || 0;
    var len = Math.max(0, arr.length - offset);
    var newArr = new Array(len);
    for (var ii = 0; ii < len; ii++) {
      newArr[ii] = arr[ii + offset];
    }
    return newArr;
  }

  function ensureSize(iter) {
    if (iter.size === undefined) {
      iter.size = iter.__iterate(returnTrue);
    }
    return iter.size;
  }

  function wrapIndex(iter, index) {
    if (typeof index !== 'number') {
      var uint32Index = index >>> 0;
      if ('' + uint32Index !== index || uint32Index === 4294967295) {
        return NaN;
      }
      index = uint32Index;
    }
    return index < 0 ? ensureSize(iter) + index : index;
  }

  function returnTrue() {
    return true;
  }

  function wholeSlice(begin, end, size) {
    return (begin === 0 || size !== undefined && begin <= -size) && (end === undefined || size !== undefined && end >= size);
  }

  function resolveBegin(begin, size) {
    return resolveIndex(begin, size, 0);
  }

  function resolveEnd(end, size) {
    return resolveIndex(end, size, size);
  }

  function resolveIndex(index, size, defaultIndex) {
    return index === undefined ? defaultIndex : index < 0 ? Math.max(0, size + index) : size === undefined ? index : Math.min(size, index);
  }

  var ITERATE_KEYS = 0;
  var ITERATE_VALUES = 1;
  var ITERATE_ENTRIES = 2;

  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator');
  var FAUX_ITERATOR_SYMBOL = '@@iterator';

  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;

  function Iterator(next) {
    this.next = next;
  }

  Iterator.prototype.toString = function () {
    return '[Iterator]';
  };

  Iterator.KEYS = ITERATE_KEYS;
  Iterator.VALUES = ITERATE_VALUES;
  Iterator.ENTRIES = ITERATE_ENTRIES;

  Iterator.prototype.inspect = Iterator.prototype.toSource = function () {
    return this.toString();
  };
  Iterator.prototype[ITERATOR_SYMBOL] = function () {
    return this;
  };

  function iteratorValue(type, k, v, iteratorResult) {
    var value = type === 0 ? k : type === 1 ? v : [k, v];
    iteratorResult ? iteratorResult.value = value : iteratorResult = {
      value: value, done: false
    };
    return iteratorResult;
  }

  function iteratorDone() {
    return { value: undefined, done: true };
  }

  function hasIterator(maybeIterable) {
    return !!getIteratorFn(maybeIterable);
  }

  function isIterator(maybeIterator) {
    return maybeIterator && typeof maybeIterator.next === 'function';
  }

  function getIterator(iterable) {
    var iteratorFn = getIteratorFn(iterable);
    return iteratorFn && iteratorFn.call(iterable);
  }

  function getIteratorFn(iterable) {
    var iteratorFn = iterable && (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL] || iterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  function isArrayLike(value) {
    return value && typeof value.length === 'number';
  }

  createClass(Seq, Iterable);
  function Seq(value) {
    return value === null || value === undefined ? emptySequence() : isIterable(value) ? value.toSeq() : seqFromValue(value);
  }

  Seq.of = function () {
    return Seq(arguments);
  };

  Seq.prototype.toSeq = function () {
    return this;
  };

  Seq.prototype.toString = function () {
    return this.__toString('Seq {', '}');
  };

  Seq.prototype.cacheResult = function () {
    if (!this._cache && this.__iterateUncached) {
      this._cache = this.entrySeq().toArray();
      this.size = this._cache.length;
    }
    return this;
  };

  Seq.prototype.__iterate = function (fn, reverse) {
    return seqIterate(this, fn, reverse, true);
  };

  Seq.prototype.__iterator = function (type, reverse) {
    return seqIterator(this, type, reverse, true);
  };

  createClass(KeyedSeq, Seq);
  function KeyedSeq(value) {
    return value === null || value === undefined ? emptySequence().toKeyedSeq() : isIterable(value) ? isKeyed(value) ? value.toSeq() : value.fromEntrySeq() : keyedSeqFromValue(value);
  }

  KeyedSeq.prototype.toKeyedSeq = function () {
    return this;
  };

  createClass(IndexedSeq, Seq);
  function IndexedSeq(value) {
    return value === null || value === undefined ? emptySequence() : !isIterable(value) ? indexedSeqFromValue(value) : isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();
  }

  IndexedSeq.of = function () {
    return IndexedSeq(arguments);
  };

  IndexedSeq.prototype.toIndexedSeq = function () {
    return this;
  };

  IndexedSeq.prototype.toString = function () {
    return this.__toString('Seq [', ']');
  };

  IndexedSeq.prototype.__iterate = function (fn, reverse) {
    return seqIterate(this, fn, reverse, false);
  };

  IndexedSeq.prototype.__iterator = function (type, reverse) {
    return seqIterator(this, type, reverse, false);
  };

  createClass(SetSeq, Seq);
  function SetSeq(value) {
    return (value === null || value === undefined ? emptySequence() : !isIterable(value) ? indexedSeqFromValue(value) : isKeyed(value) ? value.entrySeq() : value).toSetSeq();
  }

  SetSeq.of = function () {
    return SetSeq(arguments);
  };

  SetSeq.prototype.toSetSeq = function () {
    return this;
  };

  Seq.isSeq = isSeq;
  Seq.Keyed = KeyedSeq;
  Seq.Set = SetSeq;
  Seq.Indexed = IndexedSeq;

  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';

  Seq.prototype[IS_SEQ_SENTINEL] = true;

  createClass(ArraySeq, IndexedSeq);
  function ArraySeq(array) {
    this._array = array;
    this.size = array.length;
  }

  ArraySeq.prototype.get = function (index, notSetValue) {
    return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;
  };

  ArraySeq.prototype.__iterate = function (fn, reverse) {
    var array = this._array;
    var maxIndex = array.length - 1;
    for (var ii = 0; ii <= maxIndex; ii++) {
      if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {
        return ii + 1;
      }
    }
    return ii;
  };

  ArraySeq.prototype.__iterator = function (type, reverse) {
    var array = this._array;
    var maxIndex = array.length - 1;
    var ii = 0;
    return new Iterator(function () {
      return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++]);
    });
  };

  createClass(ObjectSeq, KeyedSeq);
  function ObjectSeq(object) {
    var keys = Object.keys(object);
    this._object = object;
    this._keys = keys;
    this.size = keys.length;
  }

  ObjectSeq.prototype.get = function (key, notSetValue) {
    if (notSetValue !== undefined && !this.has(key)) {
      return notSetValue;
    }
    return this._object[key];
  };

  ObjectSeq.prototype.has = function (key) {
    return this._object.hasOwnProperty(key);
  };

  ObjectSeq.prototype.__iterate = function (fn, reverse) {
    var object = this._object;
    var keys = this._keys;
    var maxIndex = keys.length - 1;
    for (var ii = 0; ii <= maxIndex; ii++) {
      var key = keys[reverse ? maxIndex - ii : ii];
      if (fn(object[key], key, this) === false) {
        return ii + 1;
      }
    }
    return ii;
  };

  ObjectSeq.prototype.__iterator = function (type, reverse) {
    var object = this._object;
    var keys = this._keys;
    var maxIndex = keys.length - 1;
    var ii = 0;
    return new Iterator(function () {
      var key = keys[reverse ? maxIndex - ii : ii];
      return ii++ > maxIndex ? iteratorDone() : iteratorValue(type, key, object[key]);
    });
  };

  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;

  createClass(IterableSeq, IndexedSeq);
  function IterableSeq(iterable) {
    this._iterable = iterable;
    this.size = iterable.length || iterable.size;
  }

  IterableSeq.prototype.__iterateUncached = function (fn, reverse) {
    if (reverse) {
      return this.cacheResult().__iterate(fn, reverse);
    }
    var iterable = this._iterable;
    var iterator = getIterator(iterable);
    var iterations = 0;
    if (isIterator(iterator)) {
      var step;
      while (!(step = iterator.next()).done) {
        if (fn(step.value, iterations++, this) === false) {
          break;
        }
      }
    }
    return iterations;
  };

  IterableSeq.prototype.__iteratorUncached = function (type, reverse) {
    if (reverse) {
      return this.cacheResult().__iterator(type, reverse);
    }
    var iterable = this._iterable;
    var iterator = getIterator(iterable);
    if (!isIterator(iterator)) {
      return new Iterator(iteratorDone);
    }
    var iterations = 0;
    return new Iterator(function () {
      var step = iterator.next();
      return step.done ? step : iteratorValue(type, iterations++, step.value);
    });
  };

  createClass(IteratorSeq, IndexedSeq);
  function IteratorSeq(iterator) {
    this._iterator = iterator;
    this._iteratorCache = [];
  }

  IteratorSeq.prototype.__iterateUncached = function (fn, reverse) {
    if (reverse) {
      return this.cacheResult().__iterate(fn, reverse);
    }
    var iterator = this._iterator;
    var cache = this._iteratorCache;
    var iterations = 0;
    while (iterations < cache.length) {
      if (fn(cache[iterations], iterations++, this) === false) {
        return iterations;
      }
    }
    var step;
    while (!(step = iterator.next()).done) {
      var val = step.value;
      cache[iterations] = val;
      if (fn(val, iterations++, this) === false) {
        break;
      }
    }
    return iterations;
  };

  IteratorSeq.prototype.__iteratorUncached = function (type, reverse) {
    if (reverse) {
      return this.cacheResult().__iterator(type, reverse);
    }
    var iterator = this._iterator;
    var cache = this._iteratorCache;
    var iterations = 0;
    return new Iterator(function () {
      if (iterations >= cache.length) {
        var step = iterator.next();
        if (step.done) {
          return step;
        }
        cache[iterations] = step.value;
      }
      return iteratorValue(type, iterations, cache[iterations++]);
    });
  };

  function isSeq(maybeSeq) {
    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);
  }

  var EMPTY_SEQ;

  function emptySequence() {
    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));
  }

  function keyedSeqFromValue(value) {
    var seq = Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() : isIterator(value) ? new IteratorSeq(value).fromEntrySeq() : hasIterator(value) ? new IterableSeq(value).fromEntrySeq() : typeof value === 'object' ? new ObjectSeq(value) : undefined;
    if (!seq) {
      throw new TypeError('Expected Array or iterable object of [k, v] entries, ' + 'or keyed object: ' + value);
    }
    return seq;
  }

  function indexedSeqFromValue(value) {
    var seq = maybeIndexedSeqFromValue(value);
    if (!seq) {
      throw new TypeError('Expected Array or iterable object of values: ' + value);
    }
    return seq;
  }

  function seqFromValue(value) {
    var seq = maybeIndexedSeqFromValue(value) || typeof value === 'object' && new ObjectSeq(value);
    if (!seq) {
      throw new TypeError('Expected Array or iterable object of values, or keyed object: ' + value);
    }
    return seq;
  }

  function maybeIndexedSeqFromValue(value) {
    return isArrayLike(value) ? new ArraySeq(value) : isIterator(value) ? new IteratorSeq(value) : hasIterator(value) ? new IterableSeq(value) : undefined;
  }

  function seqIterate(seq, fn, reverse, useKeys) {
    var cache = seq._cache;
    if (cache) {
      var maxIndex = cache.length - 1;
      for (var ii = 0; ii <= maxIndex; ii++) {
        var entry = cache[reverse ? maxIndex - ii : ii];
        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {
          return ii + 1;
        }
      }
      return ii;
    }
    return seq.__iterateUncached(fn, reverse);
  }

  function seqIterator(seq, type, reverse, useKeys) {
    var cache = seq._cache;
    if (cache) {
      var maxIndex = cache.length - 1;
      var ii = 0;
      return new Iterator(function () {
        var entry = cache[reverse ? maxIndex - ii : ii];
        return ii++ > maxIndex ? iteratorDone() : iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);
      });
    }
    return seq.__iteratorUncached(type, reverse);
  }

  function fromJS(json, converter) {
    return converter ? fromJSWith(converter, json, '', { '': json }) : fromJSDefault(json);
  }

  function fromJSWith(converter, json, key, parentJSON) {
    if (Array.isArray(json)) {
      return converter.call(parentJSON, key, IndexedSeq(json).map(function (v, k) {
        return fromJSWith(converter, v, k, json);
      }));
    }
    if (isPlainObj(json)) {
      return converter.call(parentJSON, key, KeyedSeq(json).map(function (v, k) {
        return fromJSWith(converter, v, k, json);
      }));
    }
    return json;
  }

  function fromJSDefault(json) {
    if (Array.isArray(json)) {
      return IndexedSeq(json).map(fromJSDefault).toList();
    }
    if (isPlainObj(json)) {
      return KeyedSeq(json).map(fromJSDefault).toMap();
    }
    return json;
  }

  function isPlainObj(value) {
    return value && (value.constructor === Object || value.constructor === undefined);
  }

  function is(valueA, valueB) {
    if (valueA === valueB || valueA !== valueA && valueB !== valueB) {
      return true;
    }
    if (!valueA || !valueB) {
      return false;
    }
    if (typeof valueA.valueOf === 'function' && typeof valueB.valueOf === 'function') {
      valueA = valueA.valueOf();
      valueB = valueB.valueOf();
      if (valueA === valueB || valueA !== valueA && valueB !== valueB) {
        return true;
      }
      if (!valueA || !valueB) {
        return false;
      }
    }
    if (typeof valueA.equals === 'function' && typeof valueB.equals === 'function' && valueA.equals(valueB)) {
      return true;
    }
    return false;
  }

  function deepEqual(a, b) {
    if (a === b) {
      return true;
    }

    if (!isIterable(b) || a.size !== undefined && b.size !== undefined && a.size !== b.size || a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash || isKeyed(a) !== isKeyed(b) || isIndexed(a) !== isIndexed(b) || isOrdered(a) !== isOrdered(b)) {
      return false;
    }

    if (a.size === 0 && b.size === 0) {
      return true;
    }

    var notAssociative = !isAssociative(a);

    if (isOrdered(a)) {
      var entries = a.entries();
      return b.every(function (v, k) {
        var entry = entries.next().value;
        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));
      }) && entries.next().done;
    }

    var flipped = false;

    if (a.size === undefined) {
      if (b.size === undefined) {
        if (typeof a.cacheResult === 'function') {
          a.cacheResult();
        }
      } else {
        flipped = true;
        var _ = a;
        a = b;
        b = _;
      }
    }

    var allEqual = true;
    var bSize = b.__iterate(function (v, k) {
      if (notAssociative ? !a.has(v) : flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {
        allEqual = false;
        return false;
      }
    });

    return allEqual && a.size === bSize;
  }

  createClass(Repeat, IndexedSeq);

  function Repeat(value, times) {
    if (!(this instanceof Repeat)) {
      return new Repeat(value, times);
    }
    this._value = value;
    this.size = times === undefined ? Infinity : Math.max(0, times);
    if (this.size === 0) {
      if (EMPTY_REPEAT) {
        return EMPTY_REPEAT;
      }
      EMPTY_REPEAT = this;
    }
  }

  Repeat.prototype.toString = function () {
    if (this.size === 0) {
      return 'Repeat []';
    }
    return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';
  };

  Repeat.prototype.get = function (index, notSetValue) {
    return this.has(index) ? this._value : notSetValue;
  };

  Repeat.prototype.includes = function (searchValue) {
    return is(this._value, searchValue);
  };

  Repeat.prototype.slice = function (begin, end) {
    var size = this.size;
    return wholeSlice(begin, end, size) ? this : new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));
  };

  Repeat.prototype.reverse = function () {
    return this;
  };

  Repeat.prototype.indexOf = function (searchValue) {
    if (is(this._value, searchValue)) {
      return 0;
    }
    return -1;
  };

  Repeat.prototype.lastIndexOf = function (searchValue) {
    if (is(this._value, searchValue)) {
      return this.size;
    }
    return -1;
  };

  Repeat.prototype.__iterate = function (fn, reverse) {
    for (var ii = 0; ii < this.size; ii++) {
      if (fn(this._value, ii, this) === false) {
        return ii + 1;
      }
    }
    return ii;
  };

  Repeat.prototype.__iterator = function (type, reverse) {
    var this$0 = this;
    var ii = 0;
    return new Iterator(function () {
      return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone();
    });
  };

  Repeat.prototype.equals = function (other) {
    return other instanceof Repeat ? is(this._value, other._value) : deepEqual(other);
  };

  var EMPTY_REPEAT;

  function invariant(condition, error) {
    if (!condition) throw new Error(error);
  }

  createClass(Range, IndexedSeq);

  function Range(start, end, step) {
    if (!(this instanceof Range)) {
      return new Range(start, end, step);
    }
    invariant(step !== 0, 'Cannot step a Range by 0');
    start = start || 0;
    if (end === undefined) {
      end = Infinity;
    }
    step = step === undefined ? 1 : Math.abs(step);
    if (end < start) {
      step = -step;
    }
    this._start = start;
    this._end = end;
    this._step = step;
    this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);
    if (this.size === 0) {
      if (EMPTY_RANGE) {
        return EMPTY_RANGE;
      }
      EMPTY_RANGE = this;
    }
  }

  Range.prototype.toString = function () {
    if (this.size === 0) {
      return 'Range []';
    }
    return 'Range [ ' + this._start + '...' + this._end + (this._step !== 1 ? ' by ' + this._step : '') + ' ]';
  };

  Range.prototype.get = function (index, notSetValue) {
    return this.has(index) ? this._start + wrapIndex(this, index) * this._step : notSetValue;
  };

  Range.prototype.includes = function (searchValue) {
    var possibleIndex = (searchValue - this._start) / this._step;
    return possibleIndex >= 0 && possibleIndex < this.size && possibleIndex === Math.floor(possibleIndex);
  };

  Range.prototype.slice = function (begin, end) {
    if (wholeSlice(begin, end, this.size)) {
      return this;
    }
    begin = resolveBegin(begin, this.size);
    end = resolveEnd(end, this.size);
    if (end <= begin) {
      return new Range(0, 0);
    }
    return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);
  };

  Range.prototype.indexOf = function (searchValue) {
    var offsetValue = searchValue - this._start;
    if (offsetValue % this._step === 0) {
      var index = offsetValue / this._step;
      if (index >= 0 && index < this.size) {
        return index;
      }
    }
    return -1;
  };

  Range.prototype.lastIndexOf = function (searchValue) {
    return this.indexOf(searchValue);
  };

  Range.prototype.__iterate = function (fn, reverse) {
    var maxIndex = this.size - 1;
    var step = this._step;
    var value = reverse ? this._start + maxIndex * step : this._start;
    for (var ii = 0; ii <= maxIndex; ii++) {
      if (fn(value, ii, this) === false) {
        return ii + 1;
      }
      value += reverse ? -step : step;
    }
    return ii;
  };

  Range.prototype.__iterator = function (type, reverse) {
    var maxIndex = this.size - 1;
    var step = this._step;
    var value = reverse ? this._start + maxIndex * step : this._start;
    var ii = 0;
    return new Iterator(function () {
      var v = value;
      value += reverse ? -step : step;
      return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);
    });
  };

  Range.prototype.equals = function (other) {
    return other instanceof Range ? this._start === other._start && this._end === other._end && this._step === other._step : deepEqual(this, other);
  };

  var EMPTY_RANGE;

  createClass(Collection, Iterable);
  function Collection() {
    throw TypeError('Abstract');
  }

  createClass(KeyedCollection, Collection);function KeyedCollection() {}

  createClass(IndexedCollection, Collection);function IndexedCollection() {}

  createClass(SetCollection, Collection);function SetCollection() {}

  Collection.Keyed = KeyedCollection;
  Collection.Indexed = IndexedCollection;
  Collection.Set = SetCollection;

  var imul = typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ? Math.imul : function imul(a, b) {
    a = a | 0;
    b = b | 0;
    var c = a & 0xffff;
    var d = b & 0xffff;

    return c * d + ((a >>> 16) * d + c * (b >>> 16) << 16 >>> 0) | 0;
  };

  function smi(i32) {
    return i32 >>> 1 & 0x40000000 | i32 & 0xBFFFFFFF;
  }

  function hash(o) {
    if (o === false || o === null || o === undefined) {
      return 0;
    }
    if (typeof o.valueOf === 'function') {
      o = o.valueOf();
      if (o === false || o === null || o === undefined) {
        return 0;
      }
    }
    if (o === true) {
      return 1;
    }
    var type = typeof o;
    if (type === 'number') {
      if (o !== o || o === Infinity) {
        return 0;
      }
      var h = o | 0;
      if (h !== o) {
        h ^= o * 0xFFFFFFFF;
      }
      while (o > 0xFFFFFFFF) {
        o /= 0xFFFFFFFF;
        h ^= o;
      }
      return smi(h);
    }
    if (type === 'string') {
      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);
    }
    if (typeof o.hashCode === 'function') {
      return o.hashCode();
    }
    if (type === 'object') {
      return hashJSObj(o);
    }
    if (typeof o.toString === 'function') {
      return hashString(o.toString());
    }
    throw new Error('Value type ' + type + ' cannot be hashed.');
  }

  function cachedHashString(string) {
    var hash = stringHashCache[string];
    if (hash === undefined) {
      hash = hashString(string);
      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {
        STRING_HASH_CACHE_SIZE = 0;
        stringHashCache = {};
      }
      STRING_HASH_CACHE_SIZE++;
      stringHashCache[string] = hash;
    }
    return hash;
  }

  function hashString(string) {
    var hash = 0;
    for (var ii = 0; ii < string.length; ii++) {
      hash = 31 * hash + string.charCodeAt(ii) | 0;
    }
    return smi(hash);
  }

  function hashJSObj(obj) {
    var hash;
    if (usingWeakMap) {
      hash = weakMap.get(obj);
      if (hash !== undefined) {
        return hash;
      }
    }

    hash = obj[UID_HASH_KEY];
    if (hash !== undefined) {
      return hash;
    }

    if (!canDefineProperty) {
      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];
      if (hash !== undefined) {
        return hash;
      }

      hash = getIENodeHash(obj);
      if (hash !== undefined) {
        return hash;
      }
    }

    hash = ++objHashUID;
    if (objHashUID & 0x40000000) {
      objHashUID = 0;
    }

    if (usingWeakMap) {
      weakMap.set(obj, hash);
    } else if (isExtensible !== undefined && isExtensible(obj) === false) {
      throw new Error('Non-extensible objects are not allowed as keys.');
    } else if (canDefineProperty) {
      Object.defineProperty(obj, UID_HASH_KEY, {
        'enumerable': false,
        'configurable': false,
        'writable': false,
        'value': hash
      });
    } else if (obj.propertyIsEnumerable !== undefined && obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {
      obj.propertyIsEnumerable = function () {
        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);
      };
      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;
    } else if (obj.nodeType !== undefined) {
      obj[UID_HASH_KEY] = hash;
    } else {
      throw new Error('Unable to set a non-enumerable property on object.');
    }

    return hash;
  }

  var isExtensible = Object.isExtensible;

  var canDefineProperty = function () {
    try {
      Object.defineProperty({}, '@', {});
      return true;
    } catch (e) {
      return false;
    }
  }();

  function getIENodeHash(node) {
    if (node && node.nodeType > 0) {
      switch (node.nodeType) {
        case 1:
          return node.uniqueID;
        case 9:
          return node.documentElement && node.documentElement.uniqueID;
      }
    }
  }

  var usingWeakMap = typeof WeakMap === 'function';
  var weakMap;
  if (usingWeakMap) {
    weakMap = new WeakMap();
  }

  var objHashUID = 0;

  var UID_HASH_KEY = '__immutablehash__';
  if (typeof Symbol === 'function') {
    UID_HASH_KEY = Symbol(UID_HASH_KEY);
  }

  var STRING_HASH_CACHE_MIN_STRLEN = 16;
  var STRING_HASH_CACHE_MAX_SIZE = 255;
  var STRING_HASH_CACHE_SIZE = 0;
  var stringHashCache = {};

  function assertNotInfinite(size) {
    invariant(size !== Infinity, 'Cannot perform this action with an infinite size.');
  }

  createClass(Map, KeyedCollection);

  function Map(value) {
    return value === null || value === undefined ? emptyMap() : isMap(value) && !isOrdered(value) ? value : emptyMap().withMutations(function (map) {
      var iter = KeyedIterable(value);
      assertNotInfinite(iter.size);
      iter.forEach(function (v, k) {
        return map.set(k, v);
      });
    });
  }

  Map.of = function () {
    var keyValues = SLICE$0.call(arguments, 0);
    return emptyMap().withMutations(function (map) {
      for (var i = 0; i < keyValues.length; i += 2) {
        if (i + 1 >= keyValues.length) {
          throw new Error('Missing value for key: ' + keyValues[i]);
        }
        map.set(keyValues[i], keyValues[i + 1]);
      }
    });
  };

  Map.prototype.toString = function () {
    return this.__toString('Map {', '}');
  };

  Map.prototype.get = function (k, notSetValue) {
    return this._root ? this._root.get(0, undefined, k, notSetValue) : notSetValue;
  };

  Map.prototype.set = function (k, v) {
    return updateMap(this, k, v);
  };

  Map.prototype.setIn = function (keyPath, v) {
    return this.updateIn(keyPath, NOT_SET, function () {
      return v;
    });
  };

  Map.prototype.remove = function (k) {
    return updateMap(this, k, NOT_SET);
  };

  Map.prototype.deleteIn = function (keyPath) {
    return this.updateIn(keyPath, function () {
      return NOT_SET;
    });
  };

  Map.prototype.update = function (k, notSetValue, updater) {
    return arguments.length === 1 ? k(this) : this.updateIn([k], notSetValue, updater);
  };

  Map.prototype.updateIn = function (keyPath, notSetValue, updater) {
    if (!updater) {
      updater = notSetValue;
      notSetValue = undefined;
    }
    var updatedValue = updateInDeepMap(this, forceIterator(keyPath), notSetValue, updater);
    return updatedValue === NOT_SET ? undefined : updatedValue;
  };

  Map.prototype.clear = function () {
    if (this.size === 0) {
      return this;
    }
    if (this.__ownerID) {
      this.size = 0;
      this._root = null;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return emptyMap();
  };

  Map.prototype.merge = function () {
    return mergeIntoMapWith(this, undefined, arguments);
  };

  Map.prototype.mergeWith = function (merger) {
    var iters = SLICE$0.call(arguments, 1);
    return mergeIntoMapWith(this, merger, iters);
  };

  Map.prototype.mergeIn = function (keyPath) {
    var iters = SLICE$0.call(arguments, 1);
    return this.updateIn(keyPath, emptyMap(), function (m) {
      return typeof m.merge === 'function' ? m.merge.apply(m, iters) : iters[iters.length - 1];
    });
  };

  Map.prototype.mergeDeep = function () {
    return mergeIntoMapWith(this, deepMerger, arguments);
  };

  Map.prototype.mergeDeepWith = function (merger) {
    var iters = SLICE$0.call(arguments, 1);
    return mergeIntoMapWith(this, deepMergerWith(merger), iters);
  };

  Map.prototype.mergeDeepIn = function (keyPath) {
    var iters = SLICE$0.call(arguments, 1);
    return this.updateIn(keyPath, emptyMap(), function (m) {
      return typeof m.mergeDeep === 'function' ? m.mergeDeep.apply(m, iters) : iters[iters.length - 1];
    });
  };

  Map.prototype.sort = function (comparator) {
    return OrderedMap(sortFactory(this, comparator));
  };

  Map.prototype.sortBy = function (mapper, comparator) {
    return OrderedMap(sortFactory(this, comparator, mapper));
  };

  Map.prototype.withMutations = function (fn) {
    var mutable = this.asMutable();
    fn(mutable);
    return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;
  };

  Map.prototype.asMutable = function () {
    return this.__ownerID ? this : this.__ensureOwner(new OwnerID());
  };

  Map.prototype.asImmutable = function () {
    return this.__ensureOwner();
  };

  Map.prototype.wasAltered = function () {
    return this.__altered;
  };

  Map.prototype.__iterator = function (type, reverse) {
    return new MapIterator(this, type, reverse);
  };

  Map.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    var iterations = 0;
    this._root && this._root.iterate(function (entry) {
      iterations++;
      return fn(entry[1], entry[0], this$0);
    }, reverse);
    return iterations;
  };

  Map.prototype.__ensureOwner = function (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    if (!ownerID) {
      this.__ownerID = ownerID;
      this.__altered = false;
      return this;
    }
    return makeMap(this.size, this._root, ownerID, this.__hash);
  };

  function isMap(maybeMap) {
    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);
  }

  Map.isMap = isMap;

  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';

  var MapPrototype = Map.prototype;
  MapPrototype[IS_MAP_SENTINEL] = true;
  MapPrototype[DELETE] = MapPrototype.remove;
  MapPrototype.removeIn = MapPrototype.deleteIn;

  function ArrayMapNode(ownerID, entries) {
    this.ownerID = ownerID;
    this.entries = entries;
  }

  ArrayMapNode.prototype.get = function (shift, keyHash, key, notSetValue) {
    var entries = this.entries;
    for (var ii = 0, len = entries.length; ii < len; ii++) {
      if (is(key, entries[ii][0])) {
        return entries[ii][1];
      }
    }
    return notSetValue;
  };

  ArrayMapNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    var removed = value === NOT_SET;

    var entries = this.entries;
    var idx = 0;
    for (var len = entries.length; idx < len; idx++) {
      if (is(key, entries[idx][0])) {
        break;
      }
    }
    var exists = idx < len;

    if (exists ? entries[idx][1] === value : removed) {
      return this;
    }

    SetRef(didAlter);
    (removed || !exists) && SetRef(didChangeSize);

    if (removed && entries.length === 1) {
      return;
    }

    if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {
      return createNodes(ownerID, entries, key, value);
    }

    var isEditable = ownerID && ownerID === this.ownerID;
    var newEntries = isEditable ? entries : arrCopy(entries);

    if (exists) {
      if (removed) {
        idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();
      } else {
        newEntries[idx] = [key, value];
      }
    } else {
      newEntries.push([key, value]);
    }

    if (isEditable) {
      this.entries = newEntries;
      return this;
    }

    return new ArrayMapNode(ownerID, newEntries);
  };

  function BitmapIndexedNode(ownerID, bitmap, nodes) {
    this.ownerID = ownerID;
    this.bitmap = bitmap;
    this.nodes = nodes;
  }

  BitmapIndexedNode.prototype.get = function (shift, keyHash, key, notSetValue) {
    if (keyHash === undefined) {
      keyHash = hash(key);
    }
    var bit = 1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK);
    var bitmap = this.bitmap;
    return (bitmap & bit) === 0 ? notSetValue : this.nodes[popCount(bitmap & bit - 1)].get(shift + SHIFT, keyHash, key, notSetValue);
  };

  BitmapIndexedNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    if (keyHash === undefined) {
      keyHash = hash(key);
    }
    var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
    var bit = 1 << keyHashFrag;
    var bitmap = this.bitmap;
    var exists = (bitmap & bit) !== 0;

    if (!exists && value === NOT_SET) {
      return this;
    }

    var idx = popCount(bitmap & bit - 1);
    var nodes = this.nodes;
    var node = exists ? nodes[idx] : undefined;
    var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);

    if (newNode === node) {
      return this;
    }

    if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {
      return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);
    }

    if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {
      return nodes[idx ^ 1];
    }

    if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {
      return newNode;
    }

    var isEditable = ownerID && ownerID === this.ownerID;
    var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;
    var newNodes = exists ? newNode ? setIn(nodes, idx, newNode, isEditable) : spliceOut(nodes, idx, isEditable) : spliceIn(nodes, idx, newNode, isEditable);

    if (isEditable) {
      this.bitmap = newBitmap;
      this.nodes = newNodes;
      return this;
    }

    return new BitmapIndexedNode(ownerID, newBitmap, newNodes);
  };

  function HashArrayMapNode(ownerID, count, nodes) {
    this.ownerID = ownerID;
    this.count = count;
    this.nodes = nodes;
  }

  HashArrayMapNode.prototype.get = function (shift, keyHash, key, notSetValue) {
    if (keyHash === undefined) {
      keyHash = hash(key);
    }
    var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
    var node = this.nodes[idx];
    return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;
  };

  HashArrayMapNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    if (keyHash === undefined) {
      keyHash = hash(key);
    }
    var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
    var removed = value === NOT_SET;
    var nodes = this.nodes;
    var node = nodes[idx];

    if (removed && !node) {
      return this;
    }

    var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);
    if (newNode === node) {
      return this;
    }

    var newCount = this.count;
    if (!node) {
      newCount++;
    } else if (!newNode) {
      newCount--;
      if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {
        return packNodes(ownerID, nodes, newCount, idx);
      }
    }

    var isEditable = ownerID && ownerID === this.ownerID;
    var newNodes = setIn(nodes, idx, newNode, isEditable);

    if (isEditable) {
      this.count = newCount;
      this.nodes = newNodes;
      return this;
    }

    return new HashArrayMapNode(ownerID, newCount, newNodes);
  };

  function HashCollisionNode(ownerID, keyHash, entries) {
    this.ownerID = ownerID;
    this.keyHash = keyHash;
    this.entries = entries;
  }

  HashCollisionNode.prototype.get = function (shift, keyHash, key, notSetValue) {
    var entries = this.entries;
    for (var ii = 0, len = entries.length; ii < len; ii++) {
      if (is(key, entries[ii][0])) {
        return entries[ii][1];
      }
    }
    return notSetValue;
  };

  HashCollisionNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    if (keyHash === undefined) {
      keyHash = hash(key);
    }

    var removed = value === NOT_SET;

    if (keyHash !== this.keyHash) {
      if (removed) {
        return this;
      }
      SetRef(didAlter);
      SetRef(didChangeSize);
      return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);
    }

    var entries = this.entries;
    var idx = 0;
    for (var len = entries.length; idx < len; idx++) {
      if (is(key, entries[idx][0])) {
        break;
      }
    }
    var exists = idx < len;

    if (exists ? entries[idx][1] === value : removed) {
      return this;
    }

    SetRef(didAlter);
    (removed || !exists) && SetRef(didChangeSize);

    if (removed && len === 2) {
      return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);
    }

    var isEditable = ownerID && ownerID === this.ownerID;
    var newEntries = isEditable ? entries : arrCopy(entries);

    if (exists) {
      if (removed) {
        idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();
      } else {
        newEntries[idx] = [key, value];
      }
    } else {
      newEntries.push([key, value]);
    }

    if (isEditable) {
      this.entries = newEntries;
      return this;
    }

    return new HashCollisionNode(ownerID, this.keyHash, newEntries);
  };

  function ValueNode(ownerID, keyHash, entry) {
    this.ownerID = ownerID;
    this.keyHash = keyHash;
    this.entry = entry;
  }

  ValueNode.prototype.get = function (shift, keyHash, key, notSetValue) {
    return is(key, this.entry[0]) ? this.entry[1] : notSetValue;
  };

  ValueNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    var removed = value === NOT_SET;
    var keyMatch = is(key, this.entry[0]);
    if (keyMatch ? value === this.entry[1] : removed) {
      return this;
    }

    SetRef(didAlter);

    if (removed) {
      SetRef(didChangeSize);
      return;
    }

    if (keyMatch) {
      if (ownerID && ownerID === this.ownerID) {
        this.entry[1] = value;
        return this;
      }
      return new ValueNode(ownerID, this.keyHash, [key, value]);
    }

    SetRef(didChangeSize);
    return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);
  };

  ArrayMapNode.prototype.iterate = HashCollisionNode.prototype.iterate = function (fn, reverse) {
    var entries = this.entries;
    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {
      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {
        return false;
      }
    }
  };

  BitmapIndexedNode.prototype.iterate = HashArrayMapNode.prototype.iterate = function (fn, reverse) {
    var nodes = this.nodes;
    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {
      var node = nodes[reverse ? maxIndex - ii : ii];
      if (node && node.iterate(fn, reverse) === false) {
        return false;
      }
    }
  };

  ValueNode.prototype.iterate = function (fn, reverse) {
    return fn(this.entry);
  };

  createClass(MapIterator, Iterator);

  function MapIterator(map, type, reverse) {
    this._type = type;
    this._reverse = reverse;
    this._stack = map._root && mapIteratorFrame(map._root);
  }

  MapIterator.prototype.next = function () {
    var type = this._type;
    var stack = this._stack;
    while (stack) {
      var node = stack.node;
      var index = stack.index++;
      var maxIndex;
      if (node.entry) {
        if (index === 0) {
          return mapIteratorValue(type, node.entry);
        }
      } else if (node.entries) {
        maxIndex = node.entries.length - 1;
        if (index <= maxIndex) {
          return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);
        }
      } else {
        maxIndex = node.nodes.length - 1;
        if (index <= maxIndex) {
          var subNode = node.nodes[this._reverse ? maxIndex - index : index];
          if (subNode) {
            if (subNode.entry) {
              return mapIteratorValue(type, subNode.entry);
            }
            stack = this._stack = mapIteratorFrame(subNode, stack);
          }
          continue;
        }
      }
      stack = this._stack = this._stack.__prev;
    }
    return iteratorDone();
  };

  function mapIteratorValue(type, entry) {
    return iteratorValue(type, entry[0], entry[1]);
  }

  function mapIteratorFrame(node, prev) {
    return {
      node: node,
      index: 0,
      __prev: prev
    };
  }

  function makeMap(size, root, ownerID, hash) {
    var map = Object.create(MapPrototype);
    map.size = size;
    map._root = root;
    map.__ownerID = ownerID;
    map.__hash = hash;
    map.__altered = false;
    return map;
  }

  var EMPTY_MAP;
  function emptyMap() {
    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));
  }

  function updateMap(map, k, v) {
    var newRoot;
    var newSize;
    if (!map._root) {
      if (v === NOT_SET) {
        return map;
      }
      newSize = 1;
      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);
    } else {
      var didChangeSize = MakeRef(CHANGE_LENGTH);
      var didAlter = MakeRef(DID_ALTER);
      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);
      if (!didAlter.value) {
        return map;
      }
      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);
    }
    if (map.__ownerID) {
      map.size = newSize;
      map._root = newRoot;
      map.__hash = undefined;
      map.__altered = true;
      return map;
    }
    return newRoot ? makeMap(newSize, newRoot) : emptyMap();
  }

  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    if (!node) {
      if (value === NOT_SET) {
        return node;
      }
      SetRef(didAlter);
      SetRef(didChangeSize);
      return new ValueNode(ownerID, keyHash, [key, value]);
    }
    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);
  }

  function isLeafNode(node) {
    return node.constructor === ValueNode || node.constructor === HashCollisionNode;
  }

  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {
    if (node.keyHash === keyHash) {
      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);
    }

    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;
    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;

    var newNode;
    var nodes = idx1 === idx2 ? [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] : (newNode = new ValueNode(ownerID, keyHash, entry), idx1 < idx2 ? [node, newNode] : [newNode, node]);

    return new BitmapIndexedNode(ownerID, 1 << idx1 | 1 << idx2, nodes);
  }

  function createNodes(ownerID, entries, key, value) {
    if (!ownerID) {
      ownerID = new OwnerID();
    }
    var node = new ValueNode(ownerID, hash(key), [key, value]);
    for (var ii = 0; ii < entries.length; ii++) {
      var entry = entries[ii];
      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);
    }
    return node;
  }

  function packNodes(ownerID, nodes, count, excluding) {
    var bitmap = 0;
    var packedII = 0;
    var packedNodes = new Array(count);
    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {
      var node = nodes[ii];
      if (node !== undefined && ii !== excluding) {
        bitmap |= bit;
        packedNodes[packedII++] = node;
      }
    }
    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);
  }

  function expandNodes(ownerID, nodes, bitmap, including, node) {
    var count = 0;
    var expandedNodes = new Array(SIZE);
    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {
      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;
    }
    expandedNodes[including] = node;
    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);
  }

  function mergeIntoMapWith(map, merger, iterables) {
    var iters = [];
    for (var ii = 0; ii < iterables.length; ii++) {
      var value = iterables[ii];
      var iter = KeyedIterable(value);
      if (!isIterable(value)) {
        iter = iter.map(function (v) {
          return fromJS(v);
        });
      }
      iters.push(iter);
    }
    return mergeIntoCollectionWith(map, merger, iters);
  }

  function deepMerger(existing, value, key) {
    return existing && existing.mergeDeep && isIterable(value) ? existing.mergeDeep(value) : is(existing, value) ? existing : value;
  }

  function deepMergerWith(merger) {
    return function (existing, value, key) {
      if (existing && existing.mergeDeepWith && isIterable(value)) {
        return existing.mergeDeepWith(merger, value);
      }
      var nextValue = merger(existing, value, key);
      return is(existing, nextValue) ? existing : nextValue;
    };
  }

  function mergeIntoCollectionWith(collection, merger, iters) {
    iters = iters.filter(function (x) {
      return x.size !== 0;
    });
    if (iters.length === 0) {
      return collection;
    }
    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {
      return collection.constructor(iters[0]);
    }
    return collection.withMutations(function (collection) {
      var mergeIntoMap = merger ? function (value, key) {
        collection.update(key, NOT_SET, function (existing) {
          return existing === NOT_SET ? value : merger(existing, value, key);
        });
      } : function (value, key) {
        collection.set(key, value);
      };
      for (var ii = 0; ii < iters.length; ii++) {
        iters[ii].forEach(mergeIntoMap);
      }
    });
  }

  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {
    var isNotSet = existing === NOT_SET;
    var step = keyPathIter.next();
    if (step.done) {
      var existingValue = isNotSet ? notSetValue : existing;
      var newValue = updater(existingValue);
      return newValue === existingValue ? existing : newValue;
    }
    invariant(isNotSet || existing && existing.set, 'invalid keyPath');
    var key = step.value;
    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);
    var nextUpdated = updateInDeepMap(nextExisting, keyPathIter, notSetValue, updater);
    return nextUpdated === nextExisting ? existing : nextUpdated === NOT_SET ? existing.remove(key) : (isNotSet ? emptyMap() : existing).set(key, nextUpdated);
  }

  function popCount(x) {
    x = x - (x >> 1 & 0x55555555);
    x = (x & 0x33333333) + (x >> 2 & 0x33333333);
    x = x + (x >> 4) & 0x0f0f0f0f;
    x = x + (x >> 8);
    x = x + (x >> 16);
    return x & 0x7f;
  }

  function setIn(array, idx, val, canEdit) {
    var newArray = canEdit ? array : arrCopy(array);
    newArray[idx] = val;
    return newArray;
  }

  function spliceIn(array, idx, val, canEdit) {
    var newLen = array.length + 1;
    if (canEdit && idx + 1 === newLen) {
      array[idx] = val;
      return array;
    }
    var newArray = new Array(newLen);
    var after = 0;
    for (var ii = 0; ii < newLen; ii++) {
      if (ii === idx) {
        newArray[ii] = val;
        after = -1;
      } else {
        newArray[ii] = array[ii + after];
      }
    }
    return newArray;
  }

  function spliceOut(array, idx, canEdit) {
    var newLen = array.length - 1;
    if (canEdit && idx === newLen) {
      array.pop();
      return array;
    }
    var newArray = new Array(newLen);
    var after = 0;
    for (var ii = 0; ii < newLen; ii++) {
      if (ii === idx) {
        after = 1;
      }
      newArray[ii] = array[ii + after];
    }
    return newArray;
  }

  var MAX_ARRAY_MAP_SIZE = SIZE / 4;
  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;
  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;

  createClass(List, IndexedCollection);

  function List(value) {
    var empty = emptyList();
    if (value === null || value === undefined) {
      return empty;
    }
    if (isList(value)) {
      return value;
    }
    var iter = IndexedIterable(value);
    var size = iter.size;
    if (size === 0) {
      return empty;
    }
    assertNotInfinite(size);
    if (size > 0 && size < SIZE) {
      return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));
    }
    return empty.withMutations(function (list) {
      list.setSize(size);
      iter.forEach(function (v, i) {
        return list.set(i, v);
      });
    });
  }

  List.of = function () {
    return this(arguments);
  };

  List.prototype.toString = function () {
    return this.__toString('List [', ']');
  };

  List.prototype.get = function (index, notSetValue) {
    index = wrapIndex(this, index);
    if (index >= 0 && index < this.size) {
      index += this._origin;
      var node = listNodeFor(this, index);
      return node && node.array[index & MASK];
    }
    return notSetValue;
  };

  List.prototype.set = function (index, value) {
    return updateList(this, index, value);
  };

  List.prototype.remove = function (index) {
    return !this.has(index) ? this : index === 0 ? this.shift() : index === this.size - 1 ? this.pop() : this.splice(index, 1);
  };

  List.prototype.insert = function (index, value) {
    return this.splice(index, 0, value);
  };

  List.prototype.clear = function () {
    if (this.size === 0) {
      return this;
    }
    if (this.__ownerID) {
      this.size = this._origin = this._capacity = 0;
      this._level = SHIFT;
      this._root = this._tail = null;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return emptyList();
  };

  List.prototype.push = function () {
    var values = arguments;
    var oldSize = this.size;
    return this.withMutations(function (list) {
      setListBounds(list, 0, oldSize + values.length);
      for (var ii = 0; ii < values.length; ii++) {
        list.set(oldSize + ii, values[ii]);
      }
    });
  };

  List.prototype.pop = function () {
    return setListBounds(this, 0, -1);
  };

  List.prototype.unshift = function () {
    var values = arguments;
    return this.withMutations(function (list) {
      setListBounds(list, -values.length);
      for (var ii = 0; ii < values.length; ii++) {
        list.set(ii, values[ii]);
      }
    });
  };

  List.prototype.shift = function () {
    return setListBounds(this, 1);
  };

  List.prototype.merge = function () {
    return mergeIntoListWith(this, undefined, arguments);
  };

  List.prototype.mergeWith = function (merger) {
    var iters = SLICE$0.call(arguments, 1);
    return mergeIntoListWith(this, merger, iters);
  };

  List.prototype.mergeDeep = function () {
    return mergeIntoListWith(this, deepMerger, arguments);
  };

  List.prototype.mergeDeepWith = function (merger) {
    var iters = SLICE$0.call(arguments, 1);
    return mergeIntoListWith(this, deepMergerWith(merger), iters);
  };

  List.prototype.setSize = function (size) {
    return setListBounds(this, 0, size);
  };

  List.prototype.slice = function (begin, end) {
    var size = this.size;
    if (wholeSlice(begin, end, size)) {
      return this;
    }
    return setListBounds(this, resolveBegin(begin, size), resolveEnd(end, size));
  };

  List.prototype.__iterator = function (type, reverse) {
    var index = 0;
    var values = iterateList(this, reverse);
    return new Iterator(function () {
      var value = values();
      return value === DONE ? iteratorDone() : iteratorValue(type, index++, value);
    });
  };

  List.prototype.__iterate = function (fn, reverse) {
    var index = 0;
    var values = iterateList(this, reverse);
    var value;
    while ((value = values()) !== DONE) {
      if (fn(value, index++, this) === false) {
        break;
      }
    }
    return index;
  };

  List.prototype.__ensureOwner = function (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    if (!ownerID) {
      this.__ownerID = ownerID;
      return this;
    }
    return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);
  };

  function isList(maybeList) {
    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);
  }

  List.isList = isList;

  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';

  var ListPrototype = List.prototype;
  ListPrototype[IS_LIST_SENTINEL] = true;
  ListPrototype[DELETE] = ListPrototype.remove;
  ListPrototype.setIn = MapPrototype.setIn;
  ListPrototype.deleteIn = ListPrototype.removeIn = MapPrototype.removeIn;
  ListPrototype.update = MapPrototype.update;
  ListPrototype.updateIn = MapPrototype.updateIn;
  ListPrototype.mergeIn = MapPrototype.mergeIn;
  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
  ListPrototype.withMutations = MapPrototype.withMutations;
  ListPrototype.asMutable = MapPrototype.asMutable;
  ListPrototype.asImmutable = MapPrototype.asImmutable;
  ListPrototype.wasAltered = MapPrototype.wasAltered;

  function VNode(array, ownerID) {
    this.array = array;
    this.ownerID = ownerID;
  }

  VNode.prototype.removeBefore = function (ownerID, level, index) {
    if (index === level ? 1 << level : 0 || this.array.length === 0) {
      return this;
    }
    var originIndex = index >>> level & MASK;
    if (originIndex >= this.array.length) {
      return new VNode([], ownerID);
    }
    var removingFirst = originIndex === 0;
    var newChild;
    if (level > 0) {
      var oldChild = this.array[originIndex];
      newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);
      if (newChild === oldChild && removingFirst) {
        return this;
      }
    }
    if (removingFirst && !newChild) {
      return this;
    }
    var editable = editableVNode(this, ownerID);
    if (!removingFirst) {
      for (var ii = 0; ii < originIndex; ii++) {
        editable.array[ii] = undefined;
      }
    }
    if (newChild) {
      editable.array[originIndex] = newChild;
    }
    return editable;
  };

  VNode.prototype.removeAfter = function (ownerID, level, index) {
    if (index === (level ? 1 << level : 0) || this.array.length === 0) {
      return this;
    }
    var sizeIndex = index - 1 >>> level & MASK;
    if (sizeIndex >= this.array.length) {
      return this;
    }

    var newChild;
    if (level > 0) {
      var oldChild = this.array[sizeIndex];
      newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);
      if (newChild === oldChild && sizeIndex === this.array.length - 1) {
        return this;
      }
    }

    var editable = editableVNode(this, ownerID);
    editable.array.splice(sizeIndex + 1);
    if (newChild) {
      editable.array[sizeIndex] = newChild;
    }
    return editable;
  };

  var DONE = {};

  function iterateList(list, reverse) {
    var left = list._origin;
    var right = list._capacity;
    var tailPos = getTailOffset(right);
    var tail = list._tail;

    return iterateNodeOrLeaf(list._root, list._level, 0);

    function iterateNodeOrLeaf(node, level, offset) {
      return level === 0 ? iterateLeaf(node, offset) : iterateNode(node, level, offset);
    }

    function iterateLeaf(node, offset) {
      var array = offset === tailPos ? tail && tail.array : node && node.array;
      var from = offset > left ? 0 : left - offset;
      var to = right - offset;
      if (to > SIZE) {
        to = SIZE;
      }
      return function () {
        if (from === to) {
          return DONE;
        }
        var idx = reverse ? --to : from++;
        return array && array[idx];
      };
    }

    function iterateNode(node, level, offset) {
      var values;
      var array = node && node.array;
      var from = offset > left ? 0 : left - offset >> level;
      var to = (right - offset >> level) + 1;
      if (to > SIZE) {
        to = SIZE;
      }
      return function () {
        do {
          if (values) {
            var value = values();
            if (value !== DONE) {
              return value;
            }
            values = null;
          }
          if (from === to) {
            return DONE;
          }
          var idx = reverse ? --to : from++;
          values = iterateNodeOrLeaf(array && array[idx], level - SHIFT, offset + (idx << level));
        } while (true);
      };
    }
  }

  function makeList(origin, capacity, level, root, tail, ownerID, hash) {
    var list = Object.create(ListPrototype);
    list.size = capacity - origin;
    list._origin = origin;
    list._capacity = capacity;
    list._level = level;
    list._root = root;
    list._tail = tail;
    list.__ownerID = ownerID;
    list.__hash = hash;
    list.__altered = false;
    return list;
  }

  var EMPTY_LIST;
  function emptyList() {
    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));
  }

  function updateList(list, index, value) {
    index = wrapIndex(list, index);

    if (index !== index) {
      return list;
    }

    if (index >= list.size || index < 0) {
      return list.withMutations(function (list) {
        index < 0 ? setListBounds(list, index).set(0, value) : setListBounds(list, 0, index + 1).set(index, value);
      });
    }

    index += list._origin;

    var newTail = list._tail;
    var newRoot = list._root;
    var didAlter = MakeRef(DID_ALTER);
    if (index >= getTailOffset(list._capacity)) {
      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);
    } else {
      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);
    }

    if (!didAlter.value) {
      return list;
    }

    if (list.__ownerID) {
      list._root = newRoot;
      list._tail = newTail;
      list.__hash = undefined;
      list.__altered = true;
      return list;
    }
    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);
  }

  function updateVNode(node, ownerID, level, index, value, didAlter) {
    var idx = index >>> level & MASK;
    var nodeHas = node && idx < node.array.length;
    if (!nodeHas && value === undefined) {
      return node;
    }

    var newNode;

    if (level > 0) {
      var lowerNode = node && node.array[idx];
      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);
      if (newLowerNode === lowerNode) {
        return node;
      }
      newNode = editableVNode(node, ownerID);
      newNode.array[idx] = newLowerNode;
      return newNode;
    }

    if (nodeHas && node.array[idx] === value) {
      return node;
    }

    SetRef(didAlter);

    newNode = editableVNode(node, ownerID);
    if (value === undefined && idx === newNode.array.length - 1) {
      newNode.array.pop();
    } else {
      newNode.array[idx] = value;
    }
    return newNode;
  }

  function editableVNode(node, ownerID) {
    if (ownerID && node && ownerID === node.ownerID) {
      return node;
    }
    return new VNode(node ? node.array.slice() : [], ownerID);
  }

  function listNodeFor(list, rawIndex) {
    if (rawIndex >= getTailOffset(list._capacity)) {
      return list._tail;
    }
    if (rawIndex < 1 << list._level + SHIFT) {
      var node = list._root;
      var level = list._level;
      while (node && level > 0) {
        node = node.array[rawIndex >>> level & MASK];
        level -= SHIFT;
      }
      return node;
    }
  }

  function setListBounds(list, begin, end) {
    if (begin !== undefined) {
      begin = begin | 0;
    }
    if (end !== undefined) {
      end = end | 0;
    }
    var owner = list.__ownerID || new OwnerID();
    var oldOrigin = list._origin;
    var oldCapacity = list._capacity;
    var newOrigin = oldOrigin + begin;
    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;
    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {
      return list;
    }

    if (newOrigin >= newCapacity) {
      return list.clear();
    }

    var newLevel = list._level;
    var newRoot = list._root;

    var offsetShift = 0;
    while (newOrigin + offsetShift < 0) {
      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);
      newLevel += SHIFT;
      offsetShift += 1 << newLevel;
    }
    if (offsetShift) {
      newOrigin += offsetShift;
      oldOrigin += offsetShift;
      newCapacity += offsetShift;
      oldCapacity += offsetShift;
    }

    var oldTailOffset = getTailOffset(oldCapacity);
    var newTailOffset = getTailOffset(newCapacity);

    while (newTailOffset >= 1 << newLevel + SHIFT) {
      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);
      newLevel += SHIFT;
    }

    var oldTail = list._tail;
    var newTail = newTailOffset < oldTailOffset ? listNodeFor(list, newCapacity - 1) : newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;

    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {
      newRoot = editableVNode(newRoot, owner);
      var node = newRoot;
      for (var level = newLevel; level > SHIFT; level -= SHIFT) {
        var idx = oldTailOffset >>> level & MASK;
        node = node.array[idx] = editableVNode(node.array[idx], owner);
      }
      node.array[oldTailOffset >>> SHIFT & MASK] = oldTail;
    }

    if (newCapacity < oldCapacity) {
      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);
    }

    if (newOrigin >= newTailOffset) {
      newOrigin -= newTailOffset;
      newCapacity -= newTailOffset;
      newLevel = SHIFT;
      newRoot = null;
      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);
    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {
      offsetShift = 0;

      while (newRoot) {
        var beginIndex = newOrigin >>> newLevel & MASK;
        if (beginIndex !== newTailOffset >>> newLevel & MASK) {
          break;
        }
        if (beginIndex) {
          offsetShift += (1 << newLevel) * beginIndex;
        }
        newLevel -= SHIFT;
        newRoot = newRoot.array[beginIndex];
      }

      if (newRoot && newOrigin > oldOrigin) {
        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);
      }
      if (newRoot && newTailOffset < oldTailOffset) {
        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);
      }
      if (offsetShift) {
        newOrigin -= offsetShift;
        newCapacity -= offsetShift;
      }
    }

    if (list.__ownerID) {
      list.size = newCapacity - newOrigin;
      list._origin = newOrigin;
      list._capacity = newCapacity;
      list._level = newLevel;
      list._root = newRoot;
      list._tail = newTail;
      list.__hash = undefined;
      list.__altered = true;
      return list;
    }
    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);
  }

  function mergeIntoListWith(list, merger, iterables) {
    var iters = [];
    var maxSize = 0;
    for (var ii = 0; ii < iterables.length; ii++) {
      var value = iterables[ii];
      var iter = IndexedIterable(value);
      if (iter.size > maxSize) {
        maxSize = iter.size;
      }
      if (!isIterable(value)) {
        iter = iter.map(function (v) {
          return fromJS(v);
        });
      }
      iters.push(iter);
    }
    if (maxSize > list.size) {
      list = list.setSize(maxSize);
    }
    return mergeIntoCollectionWith(list, merger, iters);
  }

  function getTailOffset(size) {
    return size < SIZE ? 0 : size - 1 >>> SHIFT << SHIFT;
  }

  createClass(OrderedMap, Map);

  function OrderedMap(value) {
    return value === null || value === undefined ? emptyOrderedMap() : isOrderedMap(value) ? value : emptyOrderedMap().withMutations(function (map) {
      var iter = KeyedIterable(value);
      assertNotInfinite(iter.size);
      iter.forEach(function (v, k) {
        return map.set(k, v);
      });
    });
  }

  OrderedMap.of = function () {
    return this(arguments);
  };

  OrderedMap.prototype.toString = function () {
    return this.__toString('OrderedMap {', '}');
  };

  OrderedMap.prototype.get = function (k, notSetValue) {
    var index = this._map.get(k);
    return index !== undefined ? this._list.get(index)[1] : notSetValue;
  };

  OrderedMap.prototype.clear = function () {
    if (this.size === 0) {
      return this;
    }
    if (this.__ownerID) {
      this.size = 0;
      this._map.clear();
      this._list.clear();
      return this;
    }
    return emptyOrderedMap();
  };

  OrderedMap.prototype.set = function (k, v) {
    return updateOrderedMap(this, k, v);
  };

  OrderedMap.prototype.remove = function (k) {
    return updateOrderedMap(this, k, NOT_SET);
  };

  OrderedMap.prototype.wasAltered = function () {
    return this._map.wasAltered() || this._list.wasAltered();
  };

  OrderedMap.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    return this._list.__iterate(function (entry) {
      return entry && fn(entry[1], entry[0], this$0);
    }, reverse);
  };

  OrderedMap.prototype.__iterator = function (type, reverse) {
    return this._list.fromEntrySeq().__iterator(type, reverse);
  };

  OrderedMap.prototype.__ensureOwner = function (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    var newMap = this._map.__ensureOwner(ownerID);
    var newList = this._list.__ensureOwner(ownerID);
    if (!ownerID) {
      this.__ownerID = ownerID;
      this._map = newMap;
      this._list = newList;
      return this;
    }
    return makeOrderedMap(newMap, newList, ownerID, this.__hash);
  };

  function isOrderedMap(maybeOrderedMap) {
    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);
  }

  OrderedMap.isOrderedMap = isOrderedMap;

  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;
  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;

  function makeOrderedMap(map, list, ownerID, hash) {
    var omap = Object.create(OrderedMap.prototype);
    omap.size = map ? map.size : 0;
    omap._map = map;
    omap._list = list;
    omap.__ownerID = ownerID;
    omap.__hash = hash;
    return omap;
  }

  var EMPTY_ORDERED_MAP;
  function emptyOrderedMap() {
    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));
  }

  function updateOrderedMap(omap, k, v) {
    var map = omap._map;
    var list = omap._list;
    var i = map.get(k);
    var has = i !== undefined;
    var newMap;
    var newList;
    if (v === NOT_SET) {
      if (!has) {
        return omap;
      }
      if (list.size >= SIZE && list.size >= map.size * 2) {
        newList = list.filter(function (entry, idx) {
          return entry !== undefined && i !== idx;
        });
        newMap = newList.toKeyedSeq().map(function (entry) {
          return entry[0];
        }).flip().toMap();
        if (omap.__ownerID) {
          newMap.__ownerID = newList.__ownerID = omap.__ownerID;
        }
      } else {
        newMap = map.remove(k);
        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);
      }
    } else {
      if (has) {
        if (v === list.get(i)[1]) {
          return omap;
        }
        newMap = map;
        newList = list.set(i, [k, v]);
      } else {
        newMap = map.set(k, list.size);
        newList = list.set(list.size, [k, v]);
      }
    }
    if (omap.__ownerID) {
      omap.size = newMap.size;
      omap._map = newMap;
      omap._list = newList;
      omap.__hash = undefined;
      return omap;
    }
    return makeOrderedMap(newMap, newList);
  }

  createClass(ToKeyedSequence, KeyedSeq);
  function ToKeyedSequence(indexed, useKeys) {
    this._iter = indexed;
    this._useKeys = useKeys;
    this.size = indexed.size;
  }

  ToKeyedSequence.prototype.get = function (key, notSetValue) {
    return this._iter.get(key, notSetValue);
  };

  ToKeyedSequence.prototype.has = function (key) {
    return this._iter.has(key);
  };

  ToKeyedSequence.prototype.valueSeq = function () {
    return this._iter.valueSeq();
  };

  ToKeyedSequence.prototype.reverse = function () {
    var this$0 = this;
    var reversedSequence = reverseFactory(this, true);
    if (!this._useKeys) {
      reversedSequence.valueSeq = function () {
        return this$0._iter.toSeq().reverse();
      };
    }
    return reversedSequence;
  };

  ToKeyedSequence.prototype.map = function (mapper, context) {
    var this$0 = this;
    var mappedSequence = mapFactory(this, mapper, context);
    if (!this._useKeys) {
      mappedSequence.valueSeq = function () {
        return this$0._iter.toSeq().map(mapper, context);
      };
    }
    return mappedSequence;
  };

  ToKeyedSequence.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    var ii;
    return this._iter.__iterate(this._useKeys ? function (v, k) {
      return fn(v, k, this$0);
    } : (ii = reverse ? resolveSize(this) : 0, function (v) {
      return fn(v, reverse ? --ii : ii++, this$0);
    }), reverse);
  };

  ToKeyedSequence.prototype.__iterator = function (type, reverse) {
    if (this._useKeys) {
      return this._iter.__iterator(type, reverse);
    }
    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
    var ii = reverse ? resolveSize(this) : 0;
    return new Iterator(function () {
      var step = iterator.next();
      return step.done ? step : iteratorValue(type, reverse ? --ii : ii++, step.value, step);
    });
  };

  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;

  createClass(ToIndexedSequence, IndexedSeq);
  function ToIndexedSequence(iter) {
    this._iter = iter;
    this.size = iter.size;
  }

  ToIndexedSequence.prototype.includes = function (value) {
    return this._iter.includes(value);
  };

  ToIndexedSequence.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    var iterations = 0;
    return this._iter.__iterate(function (v) {
      return fn(v, iterations++, this$0);
    }, reverse);
  };

  ToIndexedSequence.prototype.__iterator = function (type, reverse) {
    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
    var iterations = 0;
    return new Iterator(function () {
      var step = iterator.next();
      return step.done ? step : iteratorValue(type, iterations++, step.value, step);
    });
  };

  createClass(ToSetSequence, SetSeq);
  function ToSetSequence(iter) {
    this._iter = iter;
    this.size = iter.size;
  }

  ToSetSequence.prototype.has = function (key) {
    return this._iter.includes(key);
  };

  ToSetSequence.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    return this._iter.__iterate(function (v) {
      return fn(v, v, this$0);
    }, reverse);
  };

  ToSetSequence.prototype.__iterator = function (type, reverse) {
    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
    return new Iterator(function () {
      var step = iterator.next();
      return step.done ? step : iteratorValue(type, step.value, step.value, step);
    });
  };

  createClass(FromEntriesSequence, KeyedSeq);
  function FromEntriesSequence(entries) {
    this._iter = entries;
    this.size = entries.size;
  }

  FromEntriesSequence.prototype.entrySeq = function () {
    return this._iter.toSeq();
  };

  FromEntriesSequence.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    return this._iter.__iterate(function (entry) {
      if (entry) {
        validateEntry(entry);
        var indexedIterable = isIterable(entry);
        return fn(indexedIterable ? entry.get(1) : entry[1], indexedIterable ? entry.get(0) : entry[0], this$0);
      }
    }, reverse);
  };

  FromEntriesSequence.prototype.__iterator = function (type, reverse) {
    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
    return new Iterator(function () {
      while (true) {
        var step = iterator.next();
        if (step.done) {
          return step;
        }
        var entry = step.value;

        if (entry) {
          validateEntry(entry);
          var indexedIterable = isIterable(entry);
          return iteratorValue(type, indexedIterable ? entry.get(0) : entry[0], indexedIterable ? entry.get(1) : entry[1], step);
        }
      }
    });
  };

  ToIndexedSequence.prototype.cacheResult = ToKeyedSequence.prototype.cacheResult = ToSetSequence.prototype.cacheResult = FromEntriesSequence.prototype.cacheResult = cacheResultThrough;

  function flipFactory(iterable) {
    var flipSequence = makeSequence(iterable);
    flipSequence._iter = iterable;
    flipSequence.size = iterable.size;
    flipSequence.flip = function () {
      return iterable;
    };
    flipSequence.reverse = function () {
      var reversedSequence = iterable.reverse.apply(this);
      reversedSequence.flip = function () {
        return iterable.reverse();
      };
      return reversedSequence;
    };
    flipSequence.has = function (key) {
      return iterable.includes(key);
    };
    flipSequence.includes = function (key) {
      return iterable.has(key);
    };
    flipSequence.cacheResult = cacheResultThrough;
    flipSequence.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      return iterable.__iterate(function (v, k) {
        return fn(k, v, this$0) !== false;
      }, reverse);
    };
    flipSequence.__iteratorUncached = function (type, reverse) {
      if (type === ITERATE_ENTRIES) {
        var iterator = iterable.__iterator(type, reverse);
        return new Iterator(function () {
          var step = iterator.next();
          if (!step.done) {
            var k = step.value[0];
            step.value[0] = step.value[1];
            step.value[1] = k;
          }
          return step;
        });
      }
      return iterable.__iterator(type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES, reverse);
    };
    return flipSequence;
  }

  function mapFactory(iterable, mapper, context) {
    var mappedSequence = makeSequence(iterable);
    mappedSequence.size = iterable.size;
    mappedSequence.has = function (key) {
      return iterable.has(key);
    };
    mappedSequence.get = function (key, notSetValue) {
      var v = iterable.get(key, NOT_SET);
      return v === NOT_SET ? notSetValue : mapper.call(context, v, key, iterable);
    };
    mappedSequence.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      return iterable.__iterate(function (v, k, c) {
        return fn(mapper.call(context, v, k, c), k, this$0) !== false;
      }, reverse);
    };
    mappedSequence.__iteratorUncached = function (type, reverse) {
      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
      return new Iterator(function () {
        var step = iterator.next();
        if (step.done) {
          return step;
        }
        var entry = step.value;
        var key = entry[0];
        return iteratorValue(type, key, mapper.call(context, entry[1], key, iterable), step);
      });
    };
    return mappedSequence;
  }

  function reverseFactory(iterable, useKeys) {
    var reversedSequence = makeSequence(iterable);
    reversedSequence._iter = iterable;
    reversedSequence.size = iterable.size;
    reversedSequence.reverse = function () {
      return iterable;
    };
    if (iterable.flip) {
      reversedSequence.flip = function () {
        var flipSequence = flipFactory(iterable);
        flipSequence.reverse = function () {
          return iterable.flip();
        };
        return flipSequence;
      };
    }
    reversedSequence.get = function (key, notSetValue) {
      return iterable.get(useKeys ? key : -1 - key, notSetValue);
    };
    reversedSequence.has = function (key) {
      return iterable.has(useKeys ? key : -1 - key);
    };
    reversedSequence.includes = function (value) {
      return iterable.includes(value);
    };
    reversedSequence.cacheResult = cacheResultThrough;
    reversedSequence.__iterate = function (fn, reverse) {
      var this$0 = this;
      return iterable.__iterate(function (v, k) {
        return fn(v, k, this$0);
      }, !reverse);
    };
    reversedSequence.__iterator = function (type, reverse) {
      return iterable.__iterator(type, !reverse);
    };
    return reversedSequence;
  }

  function filterFactory(iterable, predicate, context, useKeys) {
    var filterSequence = makeSequence(iterable);
    if (useKeys) {
      filterSequence.has = function (key) {
        var v = iterable.get(key, NOT_SET);
        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);
      };
      filterSequence.get = function (key, notSetValue) {
        var v = iterable.get(key, NOT_SET);
        return v !== NOT_SET && predicate.call(context, v, key, iterable) ? v : notSetValue;
      };
    }
    filterSequence.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      var iterations = 0;
      iterable.__iterate(function (v, k, c) {
        if (predicate.call(context, v, k, c)) {
          iterations++;
          return fn(v, useKeys ? k : iterations - 1, this$0);
        }
      }, reverse);
      return iterations;
    };
    filterSequence.__iteratorUncached = function (type, reverse) {
      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
      var iterations = 0;
      return new Iterator(function () {
        while (true) {
          var step = iterator.next();
          if (step.done) {
            return step;
          }
          var entry = step.value;
          var key = entry[0];
          var value = entry[1];
          if (predicate.call(context, value, key, iterable)) {
            return iteratorValue(type, useKeys ? key : iterations++, value, step);
          }
        }
      });
    };
    return filterSequence;
  }

  function countByFactory(iterable, grouper, context) {
    var groups = Map().asMutable();
    iterable.__iterate(function (v, k) {
      groups.update(grouper.call(context, v, k, iterable), 0, function (a) {
        return a + 1;
      });
    });
    return groups.asImmutable();
  }

  function groupByFactory(iterable, grouper, context) {
    var isKeyedIter = isKeyed(iterable);
    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();
    iterable.__iterate(function (v, k) {
      groups.update(grouper.call(context, v, k, iterable), function (a) {
        return a = a || [], a.push(isKeyedIter ? [k, v] : v), a;
      });
    });
    var coerce = iterableClass(iterable);
    return groups.map(function (arr) {
      return reify(iterable, coerce(arr));
    });
  }

  function sliceFactory(iterable, begin, end, useKeys) {
    var originalSize = iterable.size;

    if (begin !== undefined) {
      begin = begin | 0;
    }
    if (end !== undefined) {
      if (end === Infinity) {
        end = originalSize;
      } else {
        end = end | 0;
      }
    }

    if (wholeSlice(begin, end, originalSize)) {
      return iterable;
    }

    var resolvedBegin = resolveBegin(begin, originalSize);
    var resolvedEnd = resolveEnd(end, originalSize);

    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {
      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);
    }

    var resolvedSize = resolvedEnd - resolvedBegin;
    var sliceSize;
    if (resolvedSize === resolvedSize) {
      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;
    }

    var sliceSeq = makeSequence(iterable);

    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;

    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {
      sliceSeq.get = function (index, notSetValue) {
        index = wrapIndex(this, index);
        return index >= 0 && index < sliceSize ? iterable.get(index + resolvedBegin, notSetValue) : notSetValue;
      };
    }

    sliceSeq.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      if (sliceSize === 0) {
        return 0;
      }
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var skipped = 0;
      var isSkipping = true;
      var iterations = 0;
      iterable.__iterate(function (v, k) {
        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {
          iterations++;
          return fn(v, useKeys ? k : iterations - 1, this$0) !== false && iterations !== sliceSize;
        }
      });
      return iterations;
    };

    sliceSeq.__iteratorUncached = function (type, reverse) {
      if (sliceSize !== 0 && reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }

      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);
      var skipped = 0;
      var iterations = 0;
      return new Iterator(function () {
        while (skipped++ < resolvedBegin) {
          iterator.next();
        }
        if (++iterations > sliceSize) {
          return iteratorDone();
        }
        var step = iterator.next();
        if (useKeys || type === ITERATE_VALUES) {
          return step;
        } else if (type === ITERATE_KEYS) {
          return iteratorValue(type, iterations - 1, undefined, step);
        } else {
          return iteratorValue(type, iterations - 1, step.value[1], step);
        }
      });
    };

    return sliceSeq;
  }

  function takeWhileFactory(iterable, predicate, context) {
    var takeSequence = makeSequence(iterable);
    takeSequence.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var iterations = 0;
      iterable.__iterate(function (v, k, c) {
        return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0);
      });
      return iterations;
    };
    takeSequence.__iteratorUncached = function (type, reverse) {
      var this$0 = this;
      if (reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }
      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
      var iterating = true;
      return new Iterator(function () {
        if (!iterating) {
          return iteratorDone();
        }
        var step = iterator.next();
        if (step.done) {
          return step;
        }
        var entry = step.value;
        var k = entry[0];
        var v = entry[1];
        if (!predicate.call(context, v, k, this$0)) {
          iterating = false;
          return iteratorDone();
        }
        return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);
      });
    };
    return takeSequence;
  }

  function skipWhileFactory(iterable, predicate, context, useKeys) {
    var skipSequence = makeSequence(iterable);
    skipSequence.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var isSkipping = true;
      var iterations = 0;
      iterable.__iterate(function (v, k, c) {
        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {
          iterations++;
          return fn(v, useKeys ? k : iterations - 1, this$0);
        }
      });
      return iterations;
    };
    skipSequence.__iteratorUncached = function (type, reverse) {
      var this$0 = this;
      if (reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }
      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
      var skipping = true;
      var iterations = 0;
      return new Iterator(function () {
        var step, k, v;
        do {
          step = iterator.next();
          if (step.done) {
            if (useKeys || type === ITERATE_VALUES) {
              return step;
            } else if (type === ITERATE_KEYS) {
              return iteratorValue(type, iterations++, undefined, step);
            } else {
              return iteratorValue(type, iterations++, step.value[1], step);
            }
          }
          var entry = step.value;
          k = entry[0];
          v = entry[1];
          skipping && (skipping = predicate.call(context, v, k, this$0));
        } while (skipping);
        return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);
      });
    };
    return skipSequence;
  }

  function concatFactory(iterable, values) {
    var isKeyedIterable = isKeyed(iterable);
    var iters = [iterable].concat(values).map(function (v) {
      if (!isIterable(v)) {
        v = isKeyedIterable ? keyedSeqFromValue(v) : indexedSeqFromValue(Array.isArray(v) ? v : [v]);
      } else if (isKeyedIterable) {
        v = KeyedIterable(v);
      }
      return v;
    }).filter(function (v) {
      return v.size !== 0;
    });

    if (iters.length === 0) {
      return iterable;
    }

    if (iters.length === 1) {
      var singleton = iters[0];
      if (singleton === iterable || isKeyedIterable && isKeyed(singleton) || isIndexed(iterable) && isIndexed(singleton)) {
        return singleton;
      }
    }

    var concatSeq = new ArraySeq(iters);
    if (isKeyedIterable) {
      concatSeq = concatSeq.toKeyedSeq();
    } else if (!isIndexed(iterable)) {
      concatSeq = concatSeq.toSetSeq();
    }
    concatSeq = concatSeq.flatten(true);
    concatSeq.size = iters.reduce(function (sum, seq) {
      if (sum !== undefined) {
        var size = seq.size;
        if (size !== undefined) {
          return sum + size;
        }
      }
    }, 0);
    return concatSeq;
  }

  function flattenFactory(iterable, depth, useKeys) {
    var flatSequence = makeSequence(iterable);
    flatSequence.__iterateUncached = function (fn, reverse) {
      var iterations = 0;
      var stopped = false;
      function flatDeep(iter, currentDepth) {
        var this$0 = this;
        iter.__iterate(function (v, k) {
          if ((!depth || currentDepth < depth) && isIterable(v)) {
            flatDeep(v, currentDepth + 1);
          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {
            stopped = true;
          }
          return !stopped;
        }, reverse);
      }
      flatDeep(iterable, 0);
      return iterations;
    };
    flatSequence.__iteratorUncached = function (type, reverse) {
      var iterator = iterable.__iterator(type, reverse);
      var stack = [];
      var iterations = 0;
      return new Iterator(function () {
        while (iterator) {
          var step = iterator.next();
          if (step.done !== false) {
            iterator = stack.pop();
            continue;
          }
          var v = step.value;
          if (type === ITERATE_ENTRIES) {
            v = v[1];
          }
          if ((!depth || stack.length < depth) && isIterable(v)) {
            stack.push(iterator);
            iterator = v.__iterator(type, reverse);
          } else {
            return useKeys ? step : iteratorValue(type, iterations++, v, step);
          }
        }
        return iteratorDone();
      });
    };
    return flatSequence;
  }

  function flatMapFactory(iterable, mapper, context) {
    var coerce = iterableClass(iterable);
    return iterable.toSeq().map(function (v, k) {
      return coerce(mapper.call(context, v, k, iterable));
    }).flatten(true);
  }

  function interposeFactory(iterable, separator) {
    var interposedSequence = makeSequence(iterable);
    interposedSequence.size = iterable.size && iterable.size * 2 - 1;
    interposedSequence.__iterateUncached = function (fn, reverse) {
      var this$0 = this;
      var iterations = 0;
      iterable.__iterate(function (v, k) {
        return (!iterations || fn(separator, iterations++, this$0) !== false) && fn(v, iterations++, this$0) !== false;
      }, reverse);
      return iterations;
    };
    interposedSequence.__iteratorUncached = function (type, reverse) {
      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);
      var iterations = 0;
      var step;
      return new Iterator(function () {
        if (!step || iterations % 2) {
          step = iterator.next();
          if (step.done) {
            return step;
          }
        }
        return iterations % 2 ? iteratorValue(type, iterations++, separator) : iteratorValue(type, iterations++, step.value, step);
      });
    };
    return interposedSequence;
  }

  function sortFactory(iterable, comparator, mapper) {
    if (!comparator) {
      comparator = defaultComparator;
    }
    var isKeyedIterable = isKeyed(iterable);
    var index = 0;
    var entries = iterable.toSeq().map(function (v, k) {
      return [k, v, index++, mapper ? mapper(v, k, iterable) : v];
    }).toArray();
    entries.sort(function (a, b) {
      return comparator(a[3], b[3]) || a[2] - b[2];
    }).forEach(isKeyedIterable ? function (v, i) {
      entries[i].length = 2;
    } : function (v, i) {
      entries[i] = v[1];
    });
    return isKeyedIterable ? KeyedSeq(entries) : isIndexed(iterable) ? IndexedSeq(entries) : SetSeq(entries);
  }

  function maxFactory(iterable, comparator, mapper) {
    if (!comparator) {
      comparator = defaultComparator;
    }
    if (mapper) {
      var entry = iterable.toSeq().map(function (v, k) {
        return [v, mapper(v, k, iterable)];
      }).reduce(function (a, b) {
        return maxCompare(comparator, a[1], b[1]) ? b : a;
      });
      return entry && entry[0];
    } else {
      return iterable.reduce(function (a, b) {
        return maxCompare(comparator, a, b) ? b : a;
      });
    }
  }

  function maxCompare(comparator, a, b) {
    var comp = comparator(b, a);

    return comp === 0 && b !== a && (b === undefined || b === null || b !== b) || comp > 0;
  }

  function zipWithFactory(keyIter, zipper, iters) {
    var zipSequence = makeSequence(keyIter);
    zipSequence.size = new ArraySeq(iters).map(function (i) {
      return i.size;
    }).min();

    zipSequence.__iterate = function (fn, reverse) {
      var iterator = this.__iterator(ITERATE_VALUES, reverse);
      var step;
      var iterations = 0;
      while (!(step = iterator.next()).done) {
        if (fn(step.value, iterations++, this) === false) {
          break;
        }
      }
      return iterations;
    };
    zipSequence.__iteratorUncached = function (type, reverse) {
      var iterators = iters.map(function (i) {
        return i = Iterable(i), getIterator(reverse ? i.reverse() : i);
      });
      var iterations = 0;
      var isDone = false;
      return new Iterator(function () {
        var steps;
        if (!isDone) {
          steps = iterators.map(function (i) {
            return i.next();
          });
          isDone = steps.some(function (s) {
            return s.done;
          });
        }
        if (isDone) {
          return iteratorDone();
        }
        return iteratorValue(type, iterations++, zipper.apply(null, steps.map(function (s) {
          return s.value;
        })));
      });
    };
    return zipSequence;
  }

  function reify(iter, seq) {
    return isSeq(iter) ? seq : iter.constructor(seq);
  }

  function validateEntry(entry) {
    if (entry !== Object(entry)) {
      throw new TypeError('Expected [K, V] tuple: ' + entry);
    }
  }

  function resolveSize(iter) {
    assertNotInfinite(iter.size);
    return ensureSize(iter);
  }

  function iterableClass(iterable) {
    return isKeyed(iterable) ? KeyedIterable : isIndexed(iterable) ? IndexedIterable : SetIterable;
  }

  function makeSequence(iterable) {
    return Object.create((isKeyed(iterable) ? KeyedSeq : isIndexed(iterable) ? IndexedSeq : SetSeq).prototype);
  }

  function cacheResultThrough() {
    if (this._iter.cacheResult) {
      this._iter.cacheResult();
      this.size = this._iter.size;
      return this;
    } else {
      return Seq.prototype.cacheResult.call(this);
    }
  }

  function defaultComparator(a, b) {
    return a > b ? 1 : a < b ? -1 : 0;
  }

  function forceIterator(keyPath) {
    var iter = getIterator(keyPath);
    if (!iter) {
      if (!isArrayLike(keyPath)) {
        throw new TypeError('Expected iterable or array-like: ' + keyPath);
      }
      iter = getIterator(Iterable(keyPath));
    }
    return iter;
  }

  createClass(Record, KeyedCollection);

  function Record(defaultValues, name) {
    var hasInitialized;

    var RecordType = function Record(values) {
      if (values instanceof RecordType) {
        return values;
      }
      if (!(this instanceof RecordType)) {
        return new RecordType(values);
      }
      if (!hasInitialized) {
        hasInitialized = true;
        var keys = Object.keys(defaultValues);
        setProps(RecordTypePrototype, keys);
        RecordTypePrototype.size = keys.length;
        RecordTypePrototype._name = name;
        RecordTypePrototype._keys = keys;
        RecordTypePrototype._defaultValues = defaultValues;
      }
      this._map = Map(values);
    };

    var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);
    RecordTypePrototype.constructor = RecordType;

    return RecordType;
  }

  Record.prototype.toString = function () {
    return this.__toString(recordName(this) + ' {', '}');
  };

  Record.prototype.has = function (k) {
    return this._defaultValues.hasOwnProperty(k);
  };

  Record.prototype.get = function (k, notSetValue) {
    if (!this.has(k)) {
      return notSetValue;
    }
    var defaultVal = this._defaultValues[k];
    return this._map ? this._map.get(k, defaultVal) : defaultVal;
  };

  Record.prototype.clear = function () {
    if (this.__ownerID) {
      this._map && this._map.clear();
      return this;
    }
    var RecordType = this.constructor;
    return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));
  };

  Record.prototype.set = function (k, v) {
    if (!this.has(k)) {
      throw new Error('Cannot set unknown key "' + k + '" on ' + recordName(this));
    }
    if (this._map && !this._map.has(k)) {
      var defaultVal = this._defaultValues[k];
      if (v === defaultVal) {
        return this;
      }
    }
    var newMap = this._map && this._map.set(k, v);
    if (this.__ownerID || newMap === this._map) {
      return this;
    }
    return makeRecord(this, newMap);
  };

  Record.prototype.remove = function (k) {
    if (!this.has(k)) {
      return this;
    }
    var newMap = this._map && this._map.remove(k);
    if (this.__ownerID || newMap === this._map) {
      return this;
    }
    return makeRecord(this, newMap);
  };

  Record.prototype.wasAltered = function () {
    return this._map.wasAltered();
  };

  Record.prototype.__iterator = function (type, reverse) {
    var this$0 = this;
    return KeyedIterable(this._defaultValues).map(function (_, k) {
      return this$0.get(k);
    }).__iterator(type, reverse);
  };

  Record.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    return KeyedIterable(this._defaultValues).map(function (_, k) {
      return this$0.get(k);
    }).__iterate(fn, reverse);
  };

  Record.prototype.__ensureOwner = function (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    var newMap = this._map && this._map.__ensureOwner(ownerID);
    if (!ownerID) {
      this.__ownerID = ownerID;
      this._map = newMap;
      return this;
    }
    return makeRecord(this, newMap, ownerID);
  };

  var RecordPrototype = Record.prototype;
  RecordPrototype[DELETE] = RecordPrototype.remove;
  RecordPrototype.deleteIn = RecordPrototype.removeIn = MapPrototype.removeIn;
  RecordPrototype.merge = MapPrototype.merge;
  RecordPrototype.mergeWith = MapPrototype.mergeWith;
  RecordPrototype.mergeIn = MapPrototype.mergeIn;
  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;
  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;
  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
  RecordPrototype.setIn = MapPrototype.setIn;
  RecordPrototype.update = MapPrototype.update;
  RecordPrototype.updateIn = MapPrototype.updateIn;
  RecordPrototype.withMutations = MapPrototype.withMutations;
  RecordPrototype.asMutable = MapPrototype.asMutable;
  RecordPrototype.asImmutable = MapPrototype.asImmutable;

  function makeRecord(likeRecord, map, ownerID) {
    var record = Object.create(Object.getPrototypeOf(likeRecord));
    record._map = map;
    record.__ownerID = ownerID;
    return record;
  }

  function recordName(record) {
    return record._name || record.constructor.name || 'Record';
  }

  function setProps(prototype, names) {
    try {
      names.forEach(setProp.bind(undefined, prototype));
    } catch (error) {}
  }

  function setProp(prototype, name) {
    Object.defineProperty(prototype, name, {
      get: function get() {
        return this.get(name);
      },
      set: function set(value) {
        invariant(this.__ownerID, 'Cannot set on an immutable record.');
        this.set(name, value);
      }
    });
  }

  createClass(Set, SetCollection);

  function Set(value) {
    return value === null || value === undefined ? emptySet() : isSet(value) && !isOrdered(value) ? value : emptySet().withMutations(function (set) {
      var iter = SetIterable(value);
      assertNotInfinite(iter.size);
      iter.forEach(function (v) {
        return set.add(v);
      });
    });
  }

  Set.of = function () {
    return this(arguments);
  };

  Set.fromKeys = function (value) {
    return this(KeyedIterable(value).keySeq());
  };

  Set.prototype.toString = function () {
    return this.__toString('Set {', '}');
  };

  Set.prototype.has = function (value) {
    return this._map.has(value);
  };

  Set.prototype.add = function (value) {
    return updateSet(this, this._map.set(value, true));
  };

  Set.prototype.remove = function (value) {
    return updateSet(this, this._map.remove(value));
  };

  Set.prototype.clear = function () {
    return updateSet(this, this._map.clear());
  };

  Set.prototype.union = function () {
    var iters = SLICE$0.call(arguments, 0);
    iters = iters.filter(function (x) {
      return x.size !== 0;
    });
    if (iters.length === 0) {
      return this;
    }
    if (this.size === 0 && !this.__ownerID && iters.length === 1) {
      return this.constructor(iters[0]);
    }
    return this.withMutations(function (set) {
      for (var ii = 0; ii < iters.length; ii++) {
        SetIterable(iters[ii]).forEach(function (value) {
          return set.add(value);
        });
      }
    });
  };

  Set.prototype.intersect = function () {
    var iters = SLICE$0.call(arguments, 0);
    if (iters.length === 0) {
      return this;
    }
    iters = iters.map(function (iter) {
      return SetIterable(iter);
    });
    var originalSet = this;
    return this.withMutations(function (set) {
      originalSet.forEach(function (value) {
        if (!iters.every(function (iter) {
          return iter.includes(value);
        })) {
          set.remove(value);
        }
      });
    });
  };

  Set.prototype.subtract = function () {
    var iters = SLICE$0.call(arguments, 0);
    if (iters.length === 0) {
      return this;
    }
    iters = iters.map(function (iter) {
      return SetIterable(iter);
    });
    var originalSet = this;
    return this.withMutations(function (set) {
      originalSet.forEach(function (value) {
        if (iters.some(function (iter) {
          return iter.includes(value);
        })) {
          set.remove(value);
        }
      });
    });
  };

  Set.prototype.merge = function () {
    return this.union.apply(this, arguments);
  };

  Set.prototype.mergeWith = function (merger) {
    var iters = SLICE$0.call(arguments, 1);
    return this.union.apply(this, iters);
  };

  Set.prototype.sort = function (comparator) {
    return OrderedSet(sortFactory(this, comparator));
  };

  Set.prototype.sortBy = function (mapper, comparator) {
    return OrderedSet(sortFactory(this, comparator, mapper));
  };

  Set.prototype.wasAltered = function () {
    return this._map.wasAltered();
  };

  Set.prototype.__iterate = function (fn, reverse) {
    var this$0 = this;
    return this._map.__iterate(function (_, k) {
      return fn(k, k, this$0);
    }, reverse);
  };

  Set.prototype.__iterator = function (type, reverse) {
    return this._map.map(function (_, k) {
      return k;
    }).__iterator(type, reverse);
  };

  Set.prototype.__ensureOwner = function (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    var newMap = this._map.__ensureOwner(ownerID);
    if (!ownerID) {
      this.__ownerID = ownerID;
      this._map = newMap;
      return this;
    }
    return this.__make(newMap, ownerID);
  };

  function isSet(maybeSet) {
    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);
  }

  Set.isSet = isSet;

  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';

  var SetPrototype = Set.prototype;
  SetPrototype[IS_SET_SENTINEL] = true;
  SetPrototype[DELETE] = SetPrototype.remove;
  SetPrototype.mergeDeep = SetPrototype.merge;
  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;
  SetPrototype.withMutations = MapPrototype.withMutations;
  SetPrototype.asMutable = MapPrototype.asMutable;
  SetPrototype.asImmutable = MapPrototype.asImmutable;

  SetPrototype.__empty = emptySet;
  SetPrototype.__make = makeSet;

  function updateSet(set, newMap) {
    if (set.__ownerID) {
      set.size = newMap.size;
      set._map = newMap;
      return set;
    }
    return newMap === set._map ? set : newMap.size === 0 ? set.__empty() : set.__make(newMap);
  }

  function makeSet(map, ownerID) {
    var set = Object.create(SetPrototype);
    set.size = map ? map.size : 0;
    set._map = map;
    set.__ownerID = ownerID;
    return set;
  }

  var EMPTY_SET;
  function emptySet() {
    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));
  }

  createClass(OrderedSet, Set);

  function OrderedSet(value) {
    return value === null || value === undefined ? emptyOrderedSet() : isOrderedSet(value) ? value : emptyOrderedSet().withMutations(function (set) {
      var iter = SetIterable(value);
      assertNotInfinite(iter.size);
      iter.forEach(function (v) {
        return set.add(v);
      });
    });
  }

  OrderedSet.of = function () {
    return this(arguments);
  };

  OrderedSet.fromKeys = function (value) {
    return this(KeyedIterable(value).keySeq());
  };

  OrderedSet.prototype.toString = function () {
    return this.__toString('OrderedSet {', '}');
  };

  function isOrderedSet(maybeOrderedSet) {
    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);
  }

  OrderedSet.isOrderedSet = isOrderedSet;

  var OrderedSetPrototype = OrderedSet.prototype;
  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;

  OrderedSetPrototype.__empty = emptyOrderedSet;
  OrderedSetPrototype.__make = makeOrderedSet;

  function makeOrderedSet(map, ownerID) {
    var set = Object.create(OrderedSetPrototype);
    set.size = map ? map.size : 0;
    set._map = map;
    set.__ownerID = ownerID;
    return set;
  }

  var EMPTY_ORDERED_SET;
  function emptyOrderedSet() {
    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));
  }

  createClass(Stack, IndexedCollection);

  function Stack(value) {
    return value === null || value === undefined ? emptyStack() : isStack(value) ? value : emptyStack().unshiftAll(value);
  }

  Stack.of = function () {
    return this(arguments);
  };

  Stack.prototype.toString = function () {
    return this.__toString('Stack [', ']');
  };

  Stack.prototype.get = function (index, notSetValue) {
    var head = this._head;
    index = wrapIndex(this, index);
    while (head && index--) {
      head = head.next;
    }
    return head ? head.value : notSetValue;
  };

  Stack.prototype.peek = function () {
    return this._head && this._head.value;
  };

  Stack.prototype.push = function () {
    if (arguments.length === 0) {
      return this;
    }
    var newSize = this.size + arguments.length;
    var head = this._head;
    for (var ii = arguments.length - 1; ii >= 0; ii--) {
      head = {
        value: arguments[ii],
        next: head
      };
    }
    if (this.__ownerID) {
      this.size = newSize;
      this._head = head;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return makeStack(newSize, head);
  };

  Stack.prototype.pushAll = function (iter) {
    iter = IndexedIterable(iter);
    if (iter.size === 0) {
      return this;
    }
    assertNotInfinite(iter.size);
    var newSize = this.size;
    var head = this._head;
    iter.reverse().forEach(function (value) {
      newSize++;
      head = {
        value: value,
        next: head
      };
    });
    if (this.__ownerID) {
      this.size = newSize;
      this._head = head;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return makeStack(newSize, head);
  };

  Stack.prototype.pop = function () {
    return this.slice(1);
  };

  Stack.prototype.unshift = function () {
    return this.push.apply(this, arguments);
  };

  Stack.prototype.unshiftAll = function (iter) {
    return this.pushAll(iter);
  };

  Stack.prototype.shift = function () {
    return this.pop.apply(this, arguments);
  };

  Stack.prototype.clear = function () {
    if (this.size === 0) {
      return this;
    }
    if (this.__ownerID) {
      this.size = 0;
      this._head = undefined;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return emptyStack();
  };

  Stack.prototype.slice = function (begin, end) {
    if (wholeSlice(begin, end, this.size)) {
      return this;
    }
    var resolvedBegin = resolveBegin(begin, this.size);
    var resolvedEnd = resolveEnd(end, this.size);
    if (resolvedEnd !== this.size) {
      return IndexedCollection.prototype.slice.call(this, begin, end);
    }
    var newSize = this.size - resolvedBegin;
    var head = this._head;
    while (resolvedBegin--) {
      head = head.next;
    }
    if (this.__ownerID) {
      this.size = newSize;
      this._head = head;
      this.__hash = undefined;
      this.__altered = true;
      return this;
    }
    return makeStack(newSize, head);
  };

  Stack.prototype.__ensureOwner = function (ownerID) {
    if (ownerID === this.__ownerID) {
      return this;
    }
    if (!ownerID) {
      this.__ownerID = ownerID;
      this.__altered = false;
      return this;
    }
    return makeStack(this.size, this._head, ownerID, this.__hash);
  };

  Stack.prototype.__iterate = function (fn, reverse) {
    if (reverse) {
      return this.reverse().__iterate(fn);
    }
    var iterations = 0;
    var node = this._head;
    while (node) {
      if (fn(node.value, iterations++, this) === false) {
        break;
      }
      node = node.next;
    }
    return iterations;
  };

  Stack.prototype.__iterator = function (type, reverse) {
    if (reverse) {
      return this.reverse().__iterator(type);
    }
    var iterations = 0;
    var node = this._head;
    return new Iterator(function () {
      if (node) {
        var value = node.value;
        node = node.next;
        return iteratorValue(type, iterations++, value);
      }
      return iteratorDone();
    });
  };

  function isStack(maybeStack) {
    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);
  }

  Stack.isStack = isStack;

  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';

  var StackPrototype = Stack.prototype;
  StackPrototype[IS_STACK_SENTINEL] = true;
  StackPrototype.withMutations = MapPrototype.withMutations;
  StackPrototype.asMutable = MapPrototype.asMutable;
  StackPrototype.asImmutable = MapPrototype.asImmutable;
  StackPrototype.wasAltered = MapPrototype.wasAltered;

  function makeStack(size, head, ownerID, hash) {
    var map = Object.create(StackPrototype);
    map.size = size;
    map._head = head;
    map.__ownerID = ownerID;
    map.__hash = hash;
    map.__altered = false;
    return map;
  }

  var EMPTY_STACK;
  function emptyStack() {
    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));
  }

  function mixin(ctor, methods) {
    var keyCopier = function keyCopier(key) {
      ctor.prototype[key] = methods[key];
    };
    Object.keys(methods).forEach(keyCopier);
    Object.getOwnPropertySymbols && Object.getOwnPropertySymbols(methods).forEach(keyCopier);
    return ctor;
  }

  Iterable.Iterator = Iterator;

  mixin(Iterable, {

    toArray: function toArray() {
      assertNotInfinite(this.size);
      var array = new Array(this.size || 0);
      this.valueSeq().__iterate(function (v, i) {
        array[i] = v;
      });
      return array;
    },

    toIndexedSeq: function toIndexedSeq() {
      return new ToIndexedSequence(this);
    },

    toJS: function toJS() {
      return this.toSeq().map(function (value) {
        return value && typeof value.toJS === 'function' ? value.toJS() : value;
      }).__toJS();
    },

    toJSON: function toJSON() {
      return this.toSeq().map(function (value) {
        return value && typeof value.toJSON === 'function' ? value.toJSON() : value;
      }).__toJS();
    },

    toKeyedSeq: function toKeyedSeq() {
      return new ToKeyedSequence(this, true);
    },

    toMap: function toMap() {
      return Map(this.toKeyedSeq());
    },

    toObject: function toObject() {
      assertNotInfinite(this.size);
      var object = {};
      this.__iterate(function (v, k) {
        object[k] = v;
      });
      return object;
    },

    toOrderedMap: function toOrderedMap() {
      return OrderedMap(this.toKeyedSeq());
    },

    toOrderedSet: function toOrderedSet() {
      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);
    },

    toSet: function toSet() {
      return Set(isKeyed(this) ? this.valueSeq() : this);
    },

    toSetSeq: function toSetSeq() {
      return new ToSetSequence(this);
    },

    toSeq: function toSeq() {
      return isIndexed(this) ? this.toIndexedSeq() : isKeyed(this) ? this.toKeyedSeq() : this.toSetSeq();
    },

    toStack: function toStack() {
      return Stack(isKeyed(this) ? this.valueSeq() : this);
    },

    toList: function toList() {
      return List(isKeyed(this) ? this.valueSeq() : this);
    },

    toString: function toString() {
      return '[Iterable]';
    },

    __toString: function __toString(head, tail) {
      if (this.size === 0) {
        return head + tail;
      }
      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;
    },

    concat: function concat() {
      var values = SLICE$0.call(arguments, 0);
      return reify(this, concatFactory(this, values));
    },

    includes: function includes(searchValue) {
      return this.some(function (value) {
        return is(value, searchValue);
      });
    },

    entries: function entries() {
      return this.__iterator(ITERATE_ENTRIES);
    },

    every: function every(predicate, context) {
      assertNotInfinite(this.size);
      var returnValue = true;
      this.__iterate(function (v, k, c) {
        if (!predicate.call(context, v, k, c)) {
          returnValue = false;
          return false;
        }
      });
      return returnValue;
    },

    filter: function filter(predicate, context) {
      return reify(this, filterFactory(this, predicate, context, true));
    },

    find: function find(predicate, context, notSetValue) {
      var entry = this.findEntry(predicate, context);
      return entry ? entry[1] : notSetValue;
    },

    forEach: function forEach(sideEffect, context) {
      assertNotInfinite(this.size);
      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);
    },

    join: function join(separator) {
      assertNotInfinite(this.size);
      separator = separator !== undefined ? '' + separator : ',';
      var joined = '';
      var isFirst = true;
      this.__iterate(function (v) {
        isFirst ? isFirst = false : joined += separator;
        joined += v !== null && v !== undefined ? v.toString() : '';
      });
      return joined;
    },

    keys: function keys() {
      return this.__iterator(ITERATE_KEYS);
    },

    map: function map(mapper, context) {
      return reify(this, mapFactory(this, mapper, context));
    },

    reduce: function reduce(reducer, initialReduction, context) {
      assertNotInfinite(this.size);
      var reduction;
      var useFirst;
      if (arguments.length < 2) {
        useFirst = true;
      } else {
        reduction = initialReduction;
      }
      this.__iterate(function (v, k, c) {
        if (useFirst) {
          useFirst = false;
          reduction = v;
        } else {
          reduction = reducer.call(context, reduction, v, k, c);
        }
      });
      return reduction;
    },

    reduceRight: function reduceRight(reducer, initialReduction, context) {
      var reversed = this.toKeyedSeq().reverse();
      return reversed.reduce.apply(reversed, arguments);
    },

    reverse: function reverse() {
      return reify(this, reverseFactory(this, true));
    },

    slice: function slice(begin, end) {
      return reify(this, sliceFactory(this, begin, end, true));
    },

    some: function some(predicate, context) {
      return !this.every(not(predicate), context);
    },

    sort: function sort(comparator) {
      return reify(this, sortFactory(this, comparator));
    },

    values: function values() {
      return this.__iterator(ITERATE_VALUES);
    },

    butLast: function butLast() {
      return this.slice(0, -1);
    },

    isEmpty: function isEmpty() {
      return this.size !== undefined ? this.size === 0 : !this.some(function () {
        return true;
      });
    },

    count: function count(predicate, context) {
      return ensureSize(predicate ? this.toSeq().filter(predicate, context) : this);
    },

    countBy: function countBy(grouper, context) {
      return countByFactory(this, grouper, context);
    },

    equals: function equals(other) {
      return deepEqual(this, other);
    },

    entrySeq: function entrySeq() {
      var iterable = this;
      if (iterable._cache) {
        return new ArraySeq(iterable._cache);
      }
      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();
      entriesSequence.fromEntrySeq = function () {
        return iterable.toSeq();
      };
      return entriesSequence;
    },

    filterNot: function filterNot(predicate, context) {
      return this.filter(not(predicate), context);
    },

    findEntry: function findEntry(predicate, context, notSetValue) {
      var found = notSetValue;
      this.__iterate(function (v, k, c) {
        if (predicate.call(context, v, k, c)) {
          found = [k, v];
          return false;
        }
      });
      return found;
    },

    findKey: function findKey(predicate, context) {
      var entry = this.findEntry(predicate, context);
      return entry && entry[0];
    },

    findLast: function findLast(predicate, context, notSetValue) {
      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);
    },

    findLastEntry: function findLastEntry(predicate, context, notSetValue) {
      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);
    },

    findLastKey: function findLastKey(predicate, context) {
      return this.toKeyedSeq().reverse().findKey(predicate, context);
    },

    first: function first() {
      return this.find(returnTrue);
    },

    flatMap: function flatMap(mapper, context) {
      return reify(this, flatMapFactory(this, mapper, context));
    },

    flatten: function flatten(depth) {
      return reify(this, flattenFactory(this, depth, true));
    },

    fromEntrySeq: function fromEntrySeq() {
      return new FromEntriesSequence(this);
    },

    get: function get(searchKey, notSetValue) {
      return this.find(function (_, key) {
        return is(key, searchKey);
      }, undefined, notSetValue);
    },

    getIn: function getIn(searchKeyPath, notSetValue) {
      var nested = this;

      var iter = forceIterator(searchKeyPath);
      var step;
      while (!(step = iter.next()).done) {
        var key = step.value;
        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;
        if (nested === NOT_SET) {
          return notSetValue;
        }
      }
      return nested;
    },

    groupBy: function groupBy(grouper, context) {
      return groupByFactory(this, grouper, context);
    },

    has: function has(searchKey) {
      return this.get(searchKey, NOT_SET) !== NOT_SET;
    },

    hasIn: function hasIn(searchKeyPath) {
      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;
    },

    isSubset: function isSubset(iter) {
      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);
      return this.every(function (value) {
        return iter.includes(value);
      });
    },

    isSuperset: function isSuperset(iter) {
      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);
      return iter.isSubset(this);
    },

    keyOf: function keyOf(searchValue) {
      return this.findKey(function (value) {
        return is(value, searchValue);
      });
    },

    keySeq: function keySeq() {
      return this.toSeq().map(keyMapper).toIndexedSeq();
    },

    last: function last() {
      return this.toSeq().reverse().first();
    },

    lastKeyOf: function lastKeyOf(searchValue) {
      return this.toKeyedSeq().reverse().keyOf(searchValue);
    },

    max: function max(comparator) {
      return maxFactory(this, comparator);
    },

    maxBy: function maxBy(mapper, comparator) {
      return maxFactory(this, comparator, mapper);
    },

    min: function min(comparator) {
      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);
    },

    minBy: function minBy(mapper, comparator) {
      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);
    },

    rest: function rest() {
      return this.slice(1);
    },

    skip: function skip(amount) {
      return this.slice(Math.max(0, amount));
    },

    skipLast: function skipLast(amount) {
      return reify(this, this.toSeq().reverse().skip(amount).reverse());
    },

    skipWhile: function skipWhile(predicate, context) {
      return reify(this, skipWhileFactory(this, predicate, context, true));
    },

    skipUntil: function skipUntil(predicate, context) {
      return this.skipWhile(not(predicate), context);
    },

    sortBy: function sortBy(mapper, comparator) {
      return reify(this, sortFactory(this, comparator, mapper));
    },

    take: function take(amount) {
      return this.slice(0, Math.max(0, amount));
    },

    takeLast: function takeLast(amount) {
      return reify(this, this.toSeq().reverse().take(amount).reverse());
    },

    takeWhile: function takeWhile(predicate, context) {
      return reify(this, takeWhileFactory(this, predicate, context));
    },

    takeUntil: function takeUntil(predicate, context) {
      return this.takeWhile(not(predicate), context);
    },

    valueSeq: function valueSeq() {
      return this.toIndexedSeq();
    },

    hashCode: function hashCode() {
      return this.__hash || (this.__hash = hashIterable(this));
    }

  });

  var IterablePrototype = Iterable.prototype;
  IterablePrototype[IS_ITERABLE_SENTINEL] = true;
  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;
  IterablePrototype.__toJS = IterablePrototype.toArray;
  IterablePrototype.__toStringMapper = quoteString;
  IterablePrototype.inspect = IterablePrototype.toSource = function () {
    return this.toString();
  };
  IterablePrototype.chain = IterablePrototype.flatMap;
  IterablePrototype.contains = IterablePrototype.includes;

  mixin(KeyedIterable, {

    flip: function flip() {
      return reify(this, flipFactory(this));
    },

    mapEntries: function mapEntries(mapper, context) {
      var this$0 = this;
      var iterations = 0;
      return reify(this, this.toSeq().map(function (v, k) {
        return mapper.call(context, [k, v], iterations++, this$0);
      }).fromEntrySeq());
    },

    mapKeys: function mapKeys(mapper, context) {
      var this$0 = this;
      return reify(this, this.toSeq().flip().map(function (k, v) {
        return mapper.call(context, k, v, this$0);
      }).flip());
    }

  });

  var KeyedIterablePrototype = KeyedIterable.prototype;
  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;
  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;
  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;
  KeyedIterablePrototype.__toStringMapper = function (v, k) {
    return JSON.stringify(k) + ': ' + quoteString(v);
  };

  mixin(IndexedIterable, {

    toKeyedSeq: function toKeyedSeq() {
      return new ToKeyedSequence(this, false);
    },

    filter: function filter(predicate, context) {
      return reify(this, filterFactory(this, predicate, context, false));
    },

    findIndex: function findIndex(predicate, context) {
      var entry = this.findEntry(predicate, context);
      return entry ? entry[0] : -1;
    },

    indexOf: function indexOf(searchValue) {
      var key = this.keyOf(searchValue);
      return key === undefined ? -1 : key;
    },

    lastIndexOf: function lastIndexOf(searchValue) {
      var key = this.lastKeyOf(searchValue);
      return key === undefined ? -1 : key;
    },

    reverse: function reverse() {
      return reify(this, reverseFactory(this, false));
    },

    slice: function slice(begin, end) {
      return reify(this, sliceFactory(this, begin, end, false));
    },

    splice: function splice(index, removeNum) {
      var numArgs = arguments.length;
      removeNum = Math.max(removeNum | 0, 0);
      if (numArgs === 0 || numArgs === 2 && !removeNum) {
        return this;
      }

      index = resolveBegin(index, index < 0 ? this.count() : this.size);
      var spliced = this.slice(0, index);
      return reify(this, numArgs === 1 ? spliced : spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum)));
    },

    findLastIndex: function findLastIndex(predicate, context) {
      var entry = this.findLastEntry(predicate, context);
      return entry ? entry[0] : -1;
    },

    first: function first() {
      return this.get(0);
    },

    flatten: function flatten(depth) {
      return reify(this, flattenFactory(this, depth, false));
    },

    get: function get(index, notSetValue) {
      index = wrapIndex(this, index);
      return index < 0 || this.size === Infinity || this.size !== undefined && index > this.size ? notSetValue : this.find(function (_, key) {
        return key === index;
      }, undefined, notSetValue);
    },

    has: function has(index) {
      index = wrapIndex(this, index);
      return index >= 0 && (this.size !== undefined ? this.size === Infinity || index < this.size : this.indexOf(index) !== -1);
    },

    interpose: function interpose(separator) {
      return reify(this, interposeFactory(this, separator));
    },

    interleave: function interleave() {
      var iterables = [this].concat(arrCopy(arguments));
      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);
      var interleaved = zipped.flatten(true);
      if (zipped.size) {
        interleaved.size = zipped.size * iterables.length;
      }
      return reify(this, interleaved);
    },

    keySeq: function keySeq() {
      return Range(0, this.size);
    },

    last: function last() {
      return this.get(-1);
    },

    skipWhile: function skipWhile(predicate, context) {
      return reify(this, skipWhileFactory(this, predicate, context, false));
    },

    zip: function zip() {
      var iterables = [this].concat(arrCopy(arguments));
      return reify(this, zipWithFactory(this, defaultZipper, iterables));
    },

    zipWith: function zipWith(zipper) {
      var iterables = arrCopy(arguments);
      iterables[0] = this;
      return reify(this, zipWithFactory(this, zipper, iterables));
    }

  });

  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;
  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;

  mixin(SetIterable, {

    get: function get(value, notSetValue) {
      return this.has(value) ? value : notSetValue;
    },

    includes: function includes(value) {
      return this.has(value);
    },

    keySeq: function keySeq() {
      return this.valueSeq();
    }

  });

  SetIterable.prototype.has = IterablePrototype.includes;
  SetIterable.prototype.contains = SetIterable.prototype.includes;

  mixin(KeyedSeq, KeyedIterable.prototype);
  mixin(IndexedSeq, IndexedIterable.prototype);
  mixin(SetSeq, SetIterable.prototype);

  mixin(KeyedCollection, KeyedIterable.prototype);
  mixin(IndexedCollection, IndexedIterable.prototype);
  mixin(SetCollection, SetIterable.prototype);

  function keyMapper(v, k) {
    return k;
  }

  function entryMapper(v, k) {
    return [k, v];
  }

  function not(predicate) {
    return function () {
      return !predicate.apply(this, arguments);
    };
  }

  function neg(predicate) {
    return function () {
      return -predicate.apply(this, arguments);
    };
  }

  function quoteString(value) {
    return typeof value === 'string' ? JSON.stringify(value) : String(value);
  }

  function defaultZipper() {
    return arrCopy(arguments);
  }

  function defaultNegComparator(a, b) {
    return a < b ? 1 : a > b ? -1 : 0;
  }

  function hashIterable(iterable) {
    if (iterable.size === Infinity) {
      return 0;
    }
    var ordered = isOrdered(iterable);
    var keyed = isKeyed(iterable);
    var h = ordered ? 1 : 0;
    var size = iterable.__iterate(keyed ? ordered ? function (v, k) {
      h = 31 * h + hashMerge(hash(v), hash(k)) | 0;
    } : function (v, k) {
      h = h + hashMerge(hash(v), hash(k)) | 0;
    } : ordered ? function (v) {
      h = 31 * h + hash(v) | 0;
    } : function (v) {
      h = h + hash(v) | 0;
    });
    return murmurHashOfSize(size, h);
  }

  function murmurHashOfSize(size, h) {
    h = imul(h, 0xCC9E2D51);
    h = imul(h << 15 | h >>> -15, 0x1B873593);
    h = imul(h << 13 | h >>> -13, 5);
    h = (h + 0xE6546B64 | 0) ^ size;
    h = imul(h ^ h >>> 16, 0x85EBCA6B);
    h = imul(h ^ h >>> 13, 0xC2B2AE35);
    h = smi(h ^ h >>> 16);
    return h;
  }

  function hashMerge(a, b) {
    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0;
  }

  var Immutable = {

    Iterable: Iterable,

    Seq: Seq,
    Collection: Collection,
    Map: Map,
    OrderedMap: OrderedMap,
    List: List,
    Stack: Stack,
    Set: Set,
    OrderedSet: OrderedSet,

    Record: Record,
    Range: Range,
    Repeat: Repeat,

    is: is,
    fromJS: fromJS

  };

  return Immutable;
});
}, 500, null, "immutable/dist/immutable.js");
__d(/* react-native-tab-navigator/Badge.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native-tab-navigator/Badge.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _Layout = require(502       ); // 502 = ./Layout

var _Layout2 = babelHelpers.interopRequireDefault(_Layout);

var Badge = function (_React$Component) {
  babelHelpers.inherits(Badge, _React$Component);

  function Badge(props, context) {
    babelHelpers.classCallCheck(this, Badge);

    var _this = babelHelpers.possibleConstructorReturn(this, (Badge.__proto__ || Object.getPrototypeOf(Badge)).call(this, props, context));

    _this.state = {
      computedSize: null
    };


    _this._handleLayout = _this._handleLayout.bind(_this);
    return _this;
  }

  babelHelpers.createClass(Badge, [{
    key: 'render',
    value: function render() {
      var computedSize = this.state.computedSize;

      var style = {};
      if (!computedSize) {
        style.opacity = 0;
      } else {
        style.width = Math.max(computedSize.height, computedSize.width);
      }

      return _react2.default.createElement(
        _reactNative.Text,
        babelHelpers.extends({}, this.props, {
          numberOfLines: 1,
          onLayout: this._handleLayout,
          style: [styles.container, this.props.style, style], __source: {
            fileName: _jsxFileName,
            lineNumber: 34
          }
        }),
        this.props.children
      );
    }
  }, {
    key: '_handleLayout',
    value: function _handleLayout(event) {
      var _event$nativeEvent$la = event.nativeEvent.layout,
          width = _event$nativeEvent$la.width,
          height = _event$nativeEvent$la.height;
      var computedSize = this.state.computedSize;

      if (computedSize && computedSize.height === height && computedSize.width === width) {
        return;
      }

      this.setState({
        computedSize: { width: width, height: height }
      });

      if (this.props.onLayout) {
        this.props.onLayout(event);
      }
    }
  }]);
  return Badge;
}(_react2.default.Component);

Badge.propTypes = _reactNative.Text.propTypes;
exports.default = Badge;


var styles = _reactNative.StyleSheet.create({
  container: {
    fontSize: 12,
    color: '#fff',
    backgroundColor: 'rgb(0, 122, 255)',
    lineHeight: 15,
    textAlign: 'center',
    borderWidth: 1 + _Layout2.default.pixel,
    borderColor: '#fefefe',
    borderRadius: 17 / 2,
    overflow: 'hidden'
  }
});
}, 501, null, "react-native-tab-navigator/Badge.js");
__d(/* react-native-tab-navigator/Layout.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(12            ); // 12 = react-native

exports.default = {
  pixel: 1 / _reactNative.PixelRatio.get(),
  tabBarHeight: 49
};
}, 502, null, "react-native-tab-navigator/Layout.js");
__d(/* react-native-tab-navigator/StaticContainer.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var StaticContainer = function (_React$Component) {
  babelHelpers.inherits(StaticContainer, _React$Component);

  function StaticContainer() {
    babelHelpers.classCallCheck(this, StaticContainer);
    return babelHelpers.possibleConstructorReturn(this, (StaticContainer.__proto__ || Object.getPrototypeOf(StaticContainer)).apply(this, arguments));
  }

  babelHelpers.createClass(StaticContainer, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      return !!nextProps.shouldUpdate;
    }
  }, {
    key: 'render',
    value: function render() {
      var children = this.props.children;

      return children ? _react2.default.Children.only(children) : null;
    }
  }]);
  return StaticContainer;
}(_react2.default.Component);

StaticContainer.propTypes = {
  shouldUpdate: _propTypes2.default.bool
};
exports.default = StaticContainer;
}, 503, null, "react-native-tab-navigator/StaticContainer.js");
__d(/* react-native-tab-navigator/Tab.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native-tab-navigator/Tab.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _ViewPropTypes = require(505                     ); // 505 = ./config/ViewPropTypes

var _ViewPropTypes2 = babelHelpers.interopRequireDefault(_ViewPropTypes);

var _Layout = require(502       ); // 502 = ./Layout

var _Layout2 = babelHelpers.interopRequireDefault(_Layout);

var Tab = function (_React$Component) {
  babelHelpers.inherits(Tab, _React$Component);

  function Tab(props, context) {
    babelHelpers.classCallCheck(this, Tab);

    var _this = babelHelpers.possibleConstructorReturn(this, (Tab.__proto__ || Object.getPrototypeOf(Tab)).call(this, props, context));

    _this._handlePress = _this._handlePress.bind(_this);
    return _this;
  }

  babelHelpers.createClass(Tab, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          title = _props.title,
          badge = _props.badge;

      var icon = null;
      if (_react2.default.Children.count(this.props.children) > 0) {
        icon = _react2.default.Children.only(this.props.children);
      }

      if (title) {
        title = _react2.default.createElement(
          _reactNative.Text,
          {
            numberOfLines: 1,
            allowFontScaling: !!this.props.allowFontScaling,
            style: [styles.title, this.props.titleStyle], __source: {
              fileName: _jsxFileName,
              lineNumber: 44
            }
          },
          title
        );
      }

      if (badge) {
        badge = _react2.default.cloneElement(badge, {
          style: [styles.badge, badge.props.style]
        });
      }

      var tabStyle = [styles.container, title ? null : styles.untitledContainer, this.props.style];
      if (!this.props.hidesTabTouch && _reactNative.Platform.OS === 'android' && _reactNative.Platform.Version >= 21) {
        return _react2.default.createElement(
          _reactNative.TouchableNativeFeedback,
          {
            testID: this.props.testID,
            background: _reactNative.TouchableNativeFeedback.Ripple(undefined, true),
            onPress: this._handlePress, __source: {
              fileName: _jsxFileName,
              lineNumber: 69
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            { style: tabStyle, __source: {
                fileName: _jsxFileName,
                lineNumber: 73
              }
            },
            _react2.default.createElement(
              _reactNative.View,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 74
                }
              },
              icon,
              badge
            ),
            title
          )
        );
      }
      return _react2.default.createElement(
        _reactNative.TouchableOpacity,
        {
          testID: this.props.testID,
          activeOpacity: this.props.hidesTabTouch ? 1.0 : 0.8,
          onPress: this._handlePress,
          style: tabStyle, __source: {
            fileName: _jsxFileName,
            lineNumber: 84
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 89
            }
          },
          icon,
          badge
        ),
        title
      );
    }
  }, {
    key: '_handlePress',
    value: function _handlePress(event) {
      if (this.props.onPress) {
        this.props.onPress(event);
      }
    }
  }]);
  return Tab;
}(_react2.default.Component);

Tab.propTypes = {
  testID: _propTypes2.default.string,
  title: _propTypes2.default.string,
  titleStyle: _reactNative.Text.propTypes.style,
  badge: _propTypes2.default.element,
  onPress: _propTypes2.default.func,
  hidesTabTouch: _propTypes2.default.bool,
  allowFontScaling: _propTypes2.default.bool,
  style: _ViewPropTypes2.default.style
};
exports.default = Tab;


var styles = _reactNative.StyleSheet.create({
  badge: {
    position: 'absolute',
    top: -6,
    right: -10
  },
  container: {
    flex: 1,
    flexDirection: 'column',
    justifyContent: 'flex-end',
    alignItems: 'center'
  },
  untitledContainer: {
    paddingBottom: 13
  },
  title: {
    color: '#929292',
    fontSize: 10,
    textAlign: 'center',
    alignSelf: 'stretch',
    marginTop: 4,
    marginBottom: 1 + _Layout2.default.pixel
  }
});
}, 504, null, "react-native-tab-navigator/Tab.js");
__d(/* react-native-tab-navigator/config/ViewPropTypes.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _reactNative = require(12            ); // 12 = react-native

var ViewPropTypes = _reactNative.ViewPropTypes || _reactNative.View.propTypes;

exports.default = ViewPropTypes;
}, 505, null, "react-native-tab-navigator/config/ViewPropTypes.js");
__d(/* react-native-tab-navigator/TabBar.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native-tab-navigator/TabBar.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _ViewPropTypes = require(505                     ); // 505 = ./config/ViewPropTypes

var _ViewPropTypes2 = babelHelpers.interopRequireDefault(_ViewPropTypes);

var _Layout = require(502       ); // 502 = ./Layout

var _Layout2 = babelHelpers.interopRequireDefault(_Layout);

var TabBar = function (_React$Component) {
  babelHelpers.inherits(TabBar, _React$Component);

  function TabBar() {
    babelHelpers.classCallCheck(this, TabBar);
    return babelHelpers.possibleConstructorReturn(this, (TabBar.__proto__ || Object.getPrototypeOf(TabBar)).apply(this, arguments));
  }

  babelHelpers.createClass(TabBar, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactNative.Animated.View,
        babelHelpers.extends({}, this.props, { style: [styles.container, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 22
          }
        }),
        this.props.children,
        _react2.default.createElement(_reactNative.View, { style: [styles.shadow, this.props.shadowStyle], __source: {
            fileName: _jsxFileName,
            lineNumber: 24
          }
        })
      );
    }
  }]);
  return TabBar;
}(_react2.default.Component);

TabBar.propTypes = babelHelpers.extends({}, _reactNative.Animated.View.propTypes, {
  shadowStyle: _ViewPropTypes2.default.style
});
exports.default = TabBar;


var styles = _reactNative.StyleSheet.create({
  container: {
    backgroundColor: '#f8f8f8',
    flexDirection: 'row',
    justifyContent: 'space-around',
    height: _Layout2.default.tabBarHeight,
    position: 'absolute',
    bottom: 0,
    left: 0,
    right: 0
  },
  shadow: {
    backgroundColor: 'rgba(0, 0, 0, 0.25)',
    height: _Layout2.default.pixel,
    position: 'absolute',
    left: 0,
    right: 0,
    top: _reactNative.Platform.OS === 'android' ? 0 : -_Layout2.default.pixel
  }
});
}, 506, null, "react-native-tab-navigator/TabBar.js");
__d(/* react-native-tab-navigator/TabNavigatorItem.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _ViewPropTypes = require(505                     ); // 505 = ./config/ViewPropTypes

var _ViewPropTypes2 = babelHelpers.interopRequireDefault(_ViewPropTypes);

var TabNavigatorItem = function (_React$Component) {
  babelHelpers.inherits(TabNavigatorItem, _React$Component);

  function TabNavigatorItem() {
    babelHelpers.classCallCheck(this, TabNavigatorItem);
    return babelHelpers.possibleConstructorReturn(this, (TabNavigatorItem.__proto__ || Object.getPrototypeOf(TabNavigatorItem)).apply(this, arguments));
  }

  babelHelpers.createClass(TabNavigatorItem, [{
    key: 'render',
    value: function render() {
      var child = _react2.default.Children.only(this.props.children);
      return _react2.default.cloneElement(child, {
        style: [child.props.style, this.props.style]
      });
    }
  }]);
  return TabNavigatorItem;
}(_react2.default.Component);

TabNavigatorItem.propTypes = {
  renderIcon: _propTypes2.default.func,
  renderSelectedIcon: _propTypes2.default.func,
  badgeText: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  renderBadge: _propTypes2.default.func,
  title: _propTypes2.default.string,
  titleStyle: _reactNative.Text.propTypes.style,
  selectedTitleStyle: _reactNative.Text.propTypes.style,
  tabStyle: _ViewPropTypes2.default.style,
  selected: _propTypes2.default.bool,
  onPress: _propTypes2.default.func,
  allowFontScaling: _propTypes2.default.bool
};
TabNavigatorItem.defaultProps = {};
exports.default = TabNavigatorItem;
}, 507, null, "react-native-tab-navigator/TabNavigatorItem.js");
__d(/* YuanXC/src/pages/Home.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/Home.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  height:185;\n'], ['\n  height:185;\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  height:185;\n  width:', ';\n'], ['\n  height:185;\n  width:', ';\n']),
    _templateObject3 = babelHelpers.taggedTemplateLiteral(['\n  padding-vertical:35;\n  background-color:#ffffff;\n'], ['\n  padding-vertical:35;\n  background-color:#ffffff;\n']),
    _templateObject4 = babelHelpers.taggedTemplateLiteral(['\n   width:', ';\n   padding-horizontal:5;\n   align-items:center;\n'], ['\n   width:', ';\n   padding-horizontal:5;\n   align-items:center;\n']),
    _templateObject5 = babelHelpers.taggedTemplateLiteral(['\n  height:5;\n  width:5;\n  border-radius:2.5;\n  background-color:rgba(255,255,255,0.2);\n  margin-right:3;\n'], ['\n  height:5;\n  width:5;\n  border-radius:2.5;\n  background-color:rgba(255,255,255,0.2);\n  margin-right:3;\n']),
    _templateObject6 = babelHelpers.taggedTemplateLiteral(['\n  background-color:rgba(255,255,255,0.6);\n  border-radius:2.5;\n  height:5;\n  width:15;\n'], ['\n  background-color:rgba(255,255,255,0.6);\n  border-radius:2.5;\n  height:5;\n  width:15;\n']),
    _templateObject7 = babelHelpers.taggedTemplateLiteral(['\n  flex-direction:row;\n  justify-content:space-around;\n  padding-vertical:12;\n'], ['\n  flex-direction:row;\n  justify-content:space-around;\n  padding-vertical:12;\n']),
    _templateObject8 = babelHelpers.taggedTemplateLiteral(['\n  background-color:#ffffff;\n  padding-bottom:20;\n  margin-top:10;\n'], ['\n  background-color:#ffffff;\n  padding-bottom:20;\n  margin-top:10;\n']),
    _templateObject9 = babelHelpers.taggedTemplateLiteral(['\n  border-right-width:1;\n  border-color:#eeeeee;\n  width:', ';\n  padding-left:2;\n  margin-top:6;\n  justify-content:center;\n'], ['\n  border-right-width:1;\n  border-color:#eeeeee;\n  width:', ';\n  padding-left:2;\n  margin-top:6;\n  justify-content:center;\n']),
    _templateObject10 = babelHelpers.taggedTemplateLiteral(['\n  flex-direction:row;\n  align-items:center;\n  padding-bottom:4;\n  margin-left:10;\n  height:50;\n'], ['\n  flex-direction:row;\n  align-items:center;\n  padding-bottom:4;\n  margin-left:10;\n  height:50;\n']),
    _templateObject11 = babelHelpers.taggedTemplateLiteral(['\n  height:100;\n  align-items:center;\n  justify-content:center;\n'], ['\n  height:100;\n  align-items:center;\n  justify-content:center;\n']),
    _templateObject12 = babelHelpers.taggedTemplateLiteral(['\n'], ['\n']),
    _templateObject13 = babelHelpers.taggedTemplateLiteral(['\n  padding-left:10;\n'], ['\n  padding-left:10;\n']),
    _templateObject14 = babelHelpers.taggedTemplateLiteral(['\n  padding-vertical:4;\n  width:56;\n  background-color:#FC9657;\n  position:absolute;\n  right:0;\n  top:0;\n'], ['\n  padding-vertical:4;\n  width:56;\n  background-color:#FC9657;\n  position:absolute;\n  right:0;\n  top:0;\n']),
    _templateObject15 = babelHelpers.taggedTemplateLiteral(['\n  height:', ';\n  width:', ';\n'], ['\n  height:', ';\n  width:', ';\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _reactNavigation = require(371               ); // 371 = react-navigation

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _reactNativeCodePush = require(575                     ); // 575 = react-native-code-push

var _reactNativeCodePush2 = babelHelpers.interopRequireDefault(_reactNativeCodePush);

var _reactNative = require(12            ); // 12 = react-native

var _imgs = require(436                ); // 436 = ../resources/imgs

var _imgs2 = babelHelpers.interopRequireDefault(_imgs);

var _reactNativeSwiper = require(583                  ); // 583 = react-native-swiper

var _reactNativeSwiper2 = babelHelpers.interopRequireDefault(_reactNativeSwiper);

var _Notification = require(585                         ); // 585 = ../components/Notification

var _Notification2 = babelHelpers.interopRequireDefault(_Notification);

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _axios = require(588                ); // 588 = ../requests/axios

var _http = require(622                  ); // 622 = ../requests/http.js

var _workingTableActions = require(623                             ); // 623 = ../actions/workingTableActions

var workingTableCreator = babelHelpers.interopRequireWildcard(_workingTableActions);

var _constants = require(434                  ); // 434 = ../config/constants

var _Touchable = require(497                      ); // 497 = ../components/Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var _MessageBox = require(625                       ); // 625 = ../components/MessageBox

var _MessageBox2 = babelHelpers.interopRequireDefault(_MessageBox);

var _moment = require(626     ); // 626 = moment

var _moment2 = babelHelpers.interopRequireDefault(_moment);

var _Update = require(627              ); // 627 = ../utils/Update

var Update = babelHelpers.interopRequireWildcard(_Update);

var _Float = require(628             ); // 628 = ../utils/Float

var _Float2 = babelHelpers.interopRequireDefault(_Float);

var height = _constants.WINDOW_WIDTH / 1.7;
var cell = 3;
var margin = 10;
var width = (_constants.WINDOW_WIDTH - 10) / cell - margin * 2;
var icon = { marginTop: 2, marginRight: 5 };
var progressWidth = _constants.WINDOW_WIDTH - 60;

var SwipreView = _native2.default.View(_templateObject);
var AdImage = _native2.default.Image(_templateObject2, _constants.WINDOW_WIDTH);
var AboutContainer = _UtilLib.CenterRow.extend(_templateObject3);
var AboutView = (0, _native2.default)(_Touchable2.default)(_templateObject4, _constants.WINDOW_WIDTH / 2);
var Dot = _native2.default.View(_templateObject5);
var ActiveDot = Dot.extend(_templateObject6);
var SafeView = _UtilLib.CenterView.extend(_templateObject7);
var ItemView = (0, _native2.default)(_Touchable2.default)(_templateObject8);
var ColumnView = _UtilLib.CenterView.extend(_templateObject9, _constants.WINDOW_WIDTH / 3);
var TitleView = _native2.default.View(_templateObject10);
var ErrorView = (0, _native2.default)(_Touchable2.default)(_templateObject11);
var UpdateView = _native2.default.View(_templateObject12);
var UpdateDesc = _native2.default.View(_templateObject13);
var Type = _UtilLib.CenterView.extend(_templateObject14);
var AdsView = (0, _native2.default)(_Touchable2.default)(_templateObject12);
var AdsImage = _native2.default.Image(_templateObject15, _constants.WINDOW_WIDTH * 0.26, _constants.WINDOW_WIDTH);

var types = ["新手专享", "超短项目", "爆款项目", "精选项目", "体验项目"];

var Home = function (_Component) {
  babelHelpers.inherits(Home, _Component);

  function Home(props) {
    babelHelpers.classCallCheck(this, Home);

    var _this = babelHelpers.possibleConstructorReturn(this, (Home.__proto__ || Object.getPrototypeOf(Home)).call(this, props));

    _this._handleAppStateChange = function (nextAppState) {
      if (nextAppState === 'active') {
        if (!global.checkTime) {
          _this._checkUpdate();
        } else {
          var diff = (0, _moment2.default)().diff(global.checkTime, "hours");
          console.log(diff);
          if (diff > 0 && diff >= global.warnTime) {
            _this._checkUpdate();
          }
        }
      }
    };

    _this.state = {
      visible: false,
      user: {},
      logged: false,
      messageBox: {
        visible: false,
        content: '',
        button: null
      }
    };
    return _this;
  }

  babelHelpers.createClass(Home, [{
    key: '_showOptionModal',
    value: function _showOptionModal(msg, onCancel, onConfirm) {
      this.setState({
        messageBox: {
          visible: true,
          content: null,
          button: [{
            text: '以后再说',
            onPress: onCancel
          }, {
            text: '立即更新',
            onPress: onConfirm
          }]
        }
      });
    }
  }, {
    key: '_toItunes',
    value: function _toItunes() {
      var url = 'itms-apps://itunes.apple.com/cn/app/id' + _constants.ItunesId;
      _reactNative.Linking.canOpenURL(url).then(function (supported) {
        if (!supported) {
          console.log('Can\'t handle url: ' + url);
        } else {
          return _reactNative.Linking.openURL(url);
        }
      }).catch(function (err) {
        return console.error('An error occurred', err);
      });
    }
  }, {
    key: '_showOptionModal2',
    value: function _showOptionModal2(msg) {
      var _this2 = this;

      this.setState({
        messageBox: {
          visible: true,
          content: null,
          button: {
            text: '立即更新',
            onPress: function onPress() {
              _this2._toItunes();
            }
          }
        }
      });
    }
  }, {
    key: '_showUpdate',
    value: function _showUpdate(isForce, updateInfo) {
      var _this3 = this;

      this.setState({ updateInfo: updateInfo });
      if (isForce) {
        this._showOptionModal2(updateInfo);
      } else {
        this._showOptionModal(updateInfo, function () {
          _this3.setState({ messageBox: { visible: false } });
        }, function () {
          _this3.setState({ messageBox: { visible: false } }, function () {
            _this3._toItunes();
          });
        });
      }
    }
  }, {
    key: '_checkCodePush',
    value: function _checkCodePush() {
      _reactNativeCodePush2.default.sync({
        updateDialog: true,
        installMode: _reactNativeCodePush2.default.InstallMode.IMMEDIATE,
        updateDialog: {
          appendReleaseDescription: false,
          descriptionPrefix: "更新内容：",
          mandatoryContinueButtonLabel: "立即更新",
          mandatoryUpdateMessage: "有新版本了，是否更新？",
          optionalIgnoreButtonLabel: '稍后',
          optionalInstallButtonLabel: '立即更新',
          optionalUpdateMessage: '有新版本了，是否更新？',
          title: '更新提示' }
      });
    }
  }, {
    key: '_getUpdateMeta',
    value: function _getUpdateMeta() {
      _reactNativeCodePush2.default.getUpdateMetadata().then(function (update) {
        if (update) {
          global.codePushVersion = update.label;
        }
      });
    }
  }, {
    key: '_checkUpdate',
    value: function _checkUpdate() {
      var _this4 = this;

      global.hasChecked = true;
      (0, _http.checkUpdate)({ os: _constants.OS }).then(function (data) {
        if (data.data.code === 0) {
          global.warnTime = data.data.data.warnTime;
          global.checkTime = (0, _moment2.default)();
          if (_constants.OS === "ios") {
            if (data.data.data.versionIos && global.version && data.data.data.versionIos > global.version) {
              _this4._showUpdate(data.data.data.isForce, data.data.data.des);
            } else {
              data.data.data.isCodePush && _this4._checkCodePush();
            }
          } else {
            if (data.data.data.version && global.version && data.data.data.version > global.version) {
              Update.autoUpdate((0, _http.createApiUrl)('/app/version/info?os=' + _constants.OS), (0, _http.createApiUrl)('/download/' + _constants.Channel + '.apk').replace("api", "m"));
            } else {
              data.data.data.isCodePush && _this4._checkCodePush();
            }
          }
        } else {
          _this4.context.callToast(data.data.msg);
        }
      });
    }
  }, {
    key: '_resetRouter',
    value: function _resetRouter() {
      var navigateAction = _reactNavigation.NavigationActions.reset({
        index: 1,
        actions: [_reactNavigation.NavigationActions.navigate({ routeName: 'Main' }), _reactNavigation.NavigationActions.navigate({ routeName: 'Login' })]
      });
      this.props.navigation.dispatch(navigateAction);
    }
  }, {
    key: '_init',
    value: function _init() {
      var _this5 = this;

      (0, _axios.initCookie)();

      (0, _axios.register403Callback)(function () {
        console.log('403---');
        (0, _axios.logoutUser)();
        _this5.context.callToast("登录已失效，请重新登录");
        _this5._resetRouter();
      });

      (0, _axios.registerNetWorkErrorCallback)(function () {
        _this5.context.callToast("网络异常，请检查网络设置");
      });
    }
  }, {
    key: '_toWebView',
    value: function _toWebView(url) {
      this.props.navigation.navigate("WebView", { url: url });
    }
  }, {
    key: '_renderAds',
    value: function _renderAds() {
      var _this6 = this;

      var banner = this.props.workingTable.banner;

      return _react2.default.createElement(
        SwipreView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 299
          }
        },
        banner && _react2.default.createElement(
          _reactNativeSwiper2.default,
          { removeClippedSubviews: false, autoplay: true, showsPagination: true,
            paginationStyle: { bottom: 12 },
            dot: _react2.default.createElement(Dot, {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 304
              }
            }), activeDot: _react2.default.createElement(ActiveDot, {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 304
              }
            }), __source: {
              fileName: _jsxFileName,
              lineNumber: 302
            }
          },
          banner.map(function (item, i) {
            return _react2.default.createElement(
              _Touchable2.default,
              { key: i, feedback: false,
                onPress: function onPress() {
                  return item.link && _this6._toWebView(item.link);
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 308
                }
              },
              _react2.default.createElement(AdImage, { source: { uri: item.url }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 310
                }
              })
            );
          })
        )
      );
    }
  }, {
    key: '_onRefresh',
    value: function _onRefresh() {
      if (!this.props.workingTable.loading) {
        this.props.workingTableAction.getData(true);
        this.props.workingTableAction.getBanner();
        this.props.workingTableAction.getAds();
        this.props.workingTableAction.getNotification();
      }
    }
  }, {
    key: 'componentWillMount',
    value: function componentWillMount() {
      var _this7 = this;

      if (global.initRouter) {
        this.props.navigation.navigate("UserInfo");
        global.initRouter = null;
      } else {
        this.time = setTimeout(function () {
          !global.hasChecked && _this7._checkUpdate();
        }, 5000);
      }
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._init();
      this.props.workingTableAction.getBanner();
      this.props.workingTableAction.getAds();
      this.props.workingTableAction.getNotification();
      this.props.workingTableAction.getData(false);
      _reactNative.AppState.addEventListener('change', this._handleAppStateChange);
      this._getUpdateMeta();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.time && clearTimeout(this.time);
      _reactNative.AppState.removeEventListener('change', this._handleAppStateChange);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this8 = this;

      var navigate = this.props.navigation.navigate;
      var _props$workingTable = this.props.workingTable,
          loading = _props$workingTable.loading,
          error = _props$workingTable.error,
          list = _props$workingTable.list,
          ads = _props$workingTable.ads,
          notification = _props$workingTable.notification;

      return _react2.default.createElement(
        _UtilLib.ScrollLayout,
        { color: 'transparent',
          removeClippedSubviews: false,
          refreshControl: _react2.default.createElement(_reactNative.RefreshControl, {
            refreshing: loading,
            onRefresh: function onRefresh() {
              return _this8._onRefresh();
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 365
            }
          }), __source: {
            fileName: _jsxFileName,
            lineNumber: 362
          }
        },
        this._renderAds(),
        _react2.default.createElement(
          AboutContainer,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 372
            }
          },
          _react2.default.createElement(
            AboutView,
            {
              onPress: function onPress() {
                return _this8._toWebView((0, _http.createApiUrl)('/h5/activity/platform-introduction/index'));
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 373
              }
            },
            _react2.default.createElement(
              _UtilLib.CenterRow,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 375
                }
              },
              _imgs2.default.we(),
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#333333', size: '16', left: '10', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 377
                  }
                },
                '\u4FE1\u606F\u62AB\u9732'
              )
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#B7B7B7', top: '4', size: '10', left: '6', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 379
                }
              },
              '15\u5E74\u884C\u4E1A\u7ECF\u9A8C\u4ECE\u672A\u8FDD\u7EA6'
            )
          ),
          _react2.default.createElement(
            AboutView,
            {
              onPress: function onPress() {
                return _this8._toWebView((0, _http.createApiUrl)('/h5/activity/platform-introduction/about'));
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 381
              }
            },
            _react2.default.createElement(
              _UtilLib.CenterRow,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 383
                }
              },
              _imgs2.default.information(),
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#333333', size: '16', left: '10', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 385
                  }
                },
                '\u5173\u4E8E\u6211\u4EEC'
              )
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#B7B7B7', top: '4', size: '10', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 387
                }
              },
              '\u591A\u91CD\u4FDD\u969C\u6295\u8D44\u96F6\u98CE\u9669'
            )
          )
        ),
        ads && ads[0] && ads[0].position === "pic3" ? _react2.default.createElement(
          AdsView,
          { feedback: ads[0].link ? true : false,
            onPress: function onPress() {
              return ads[0].link && _this8.props.navigation.navigate("WebView", { url: ads[0].link });
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 391
            }
          },
          _react2.default.createElement(AdsImage, { source: { uri: ads[0].url }, __source: {
              fileName: _jsxFileName,
              lineNumber: 393
            }
          })
        ) : null,
        !list && error ? _react2.default.createElement(
          ErrorView,
          { onPress: function onPress() {
              return _this8._onRefresh();
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 396
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#999999', size: '13', __source: {
                fileName: _jsxFileName,
                lineNumber: 397
              }
            },
            '\u70B9\u51FB\u91CD\u65B0\u52A0\u8F7D'
          )
        ) : null,
        list && list.map(function (item, i) {
          var residueMoney = item.financeMoney - item.investedMoney;
          var str = void 0;
          if (residueMoney > 100) {
            residueMoney = residueMoney / 10000;
            str = "万元";
          } else {
            str = "元";
          }
          var textcolor = !item.isEnd ? "#333333" : "#999999";
          return _react2.default.createElement(
            ItemView,
            { key: i,
              onPress: function onPress() {
                return navigate("WebView", { url: (0, _http.createApiUrl)('/finance-base/h5/detail?id=' + item.id + '&1=1') });
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 412
              }
            },
            _react2.default.createElement(
              TitleView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 414
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#333333', size: '14', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 415
                  }
                },
                item.title
              ),
              item.isGuarantee ? _react2.default.createElement(_UtilLib.IconView, { text: '\u62C5\u4FDD', color: '#ffa30f', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 416
                }
              }) : null,
              item.financeGoodsId ? _react2.default.createElement(_UtilLib.IconView, { text: '\u62B5\u62BC', color: '#6295fd', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 417
                }
              }) : null
            ),
            _react2.default.createElement(
              _UtilLib.RowView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 419
                }
              },
              _react2.default.createElement(
                ColumnView,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 420
                  }
                },
                _react2.default.createElement(
                  _UtilLib.NormalView,
                  { style: { alignItems: 'flex-end' }, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 421
                    }
                  },
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { size: '24', color: '#F1BE64', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 422
                      }
                    },
                    (0, _Float2.default)(item.rate * 100),
                    '%'
                  ),
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { size: '12', color: '#999999', top: '10', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 423
                      }
                    },
                    '\u9884\u671F\u5E74\u5316'
                  )
                )
              ),
              _react2.default.createElement(
                ColumnView,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 426
                  }
                },
                _react2.default.createElement(
                  _UtilLib.NormalView,
                  { style: { alignItems: 'flex-end' }, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 427
                    }
                  },
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { size: '24', color: '#F1BE64', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 428
                      }
                    },
                    item.deadLine.replace("天", ""),
                    _react2.default.createElement(
                      _UtilLib.StyledText,
                      { color: '#333333', __source: {
                          fileName: _jsxFileName,
                          lineNumber: 429
                        }
                      },
                      '\u5929'
                    )
                  ),
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { size: '12', color: '#999999', top: '10', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 431
                      }
                    },
                    '\u9879\u76EE\u671F\u9650'
                  )
                )
              ),
              _react2.default.createElement(
                ColumnView,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 434
                  }
                },
                _react2.default.createElement(
                  _UtilLib.NormalView,
                  { style: { alignItems: 'flex-end' }, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 435
                    }
                  },
                  item.isEnd ? _react2.default.createElement(
                    _UtilLib.StyledText,
                    { size: '18', color: textcolor, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 436
                      }
                    },
                    '\u52DF\u96C6\u7ED3\u675F'
                  ) : _react2.default.createElement(
                    _UtilLib.StyledText,
                    { size: '24', color: '#333333', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 437
                      }
                    },
                    (0, _Float2.default)(residueMoney),
                    _react2.default.createElement(
                      _UtilLib.StyledText,
                      { color: '#333333', __source: {
                          fileName: _jsxFileName,
                          lineNumber: 438
                        }
                      },
                      str
                    )
                  ),
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { size: '12', color: '#999999', top: '10', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 441
                      }
                    },
                    '\u5269\u4F59\u53EF\u6295'
                  )
                )
              )
            ),
            _react2.default.createElement(
              Type,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 445
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '12', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 446
                  }
                },
                types[item.isNewuserOnly]
              )
            )
          );
        }),
        _react2.default.createElement(
          SafeView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 453
            }
          },
          _react2.default.createElement(
            _UtilLib.CenterRow,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 454
              }
            },
            _imgs2.default.shijian(icon),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#999999', size: '10', lh: '14', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 456
                }
              },
              '\u7528\u6237\u672C\u606F',
              '\n',
              '3\u5E740\u903E\u671F'
            )
          ),
          _react2.default.createElement(
            _UtilLib.CenterRow,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 459
              }
            },
            _imgs2.default.safe(icon),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#999999', size: '10', lh: '14', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 461
                }
              },
              '\u7B2C\u4E09\u65B9\u6258\u7BA1',
              '\n',
              '\u8D44\u91D1\u4FDD\u969C'
            )
          ),
          _react2.default.createElement(
            _UtilLib.CenterRow,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 464
              }
            },
            _imgs2.default.icp(icon),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#999999', size: '10', lh: '14', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 466
                }
              },
              'ICP\u8BB8\u53EF\u8BC1',
              '\n',
              '\u5B89\u5168\u5408\u89C4'
            )
          )
        ),
        _react2.default.createElement(
          _MessageBox2.default,
          {
            style: { height: 195 },
            boxStyle: { height: 150, alignItems: 'flex-start' },
            visible: this.state.messageBox.visible,
            content: this.state.messageBox.content,
            button: this.state.messageBox.button, __source: {
              fileName: _jsxFileName,
              lineNumber: 470
            }
          },
          _react2.default.createElement(
            UpdateView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 476
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { size: '16', bottom: '10', color: '#333333', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 477
                }
              },
              '\u5E94\u7528\u66F4\u65B0'
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { size: '14', bottom: '6', color: '#333333', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 478
                }
              },
              '\u66F4\u65B0\u5185\u5BB9:'
            ),
            _react2.default.createElement(
              UpdateDesc,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 479
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#333333', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 480
                  }
                },
                this.state.updateInfo
              )
            )
          )
        )
      );
    }
  }]);
  return Home;
}(_react.Component);

Home.navigationOptions = function (_ref) {
  var navigation = _ref.navigation,
      screenProps = _ref.screenProps;
  return {
    header: null
  };
};

Home.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
  var workingTable = state.workingTable;

  return { workingTable: workingTable };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var workingTableAction = (0, _redux.bindActionCreators)(workingTableCreator, dispatch);
  return { workingTableAction: workingTableAction };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Home);
}, 508, null, "YuanXC/src/pages/Home.js");
__d(/* styled-components/native/index.js */function(global, require, module, exports) {
module.exports = require(510            ); // 510 = ../lib/native
}, 509, null, "styled-components/native/index.js");
__d(/* styled-components/lib/native/index.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.withTheme = exports.ThemeProvider = exports.css = undefined;

var _reactNative = require(12            ); // 12 = react-native

var _reactNative2 = _interopRequireDefault(_reactNative);

var _InlineStyle2 = require(511                    ); // 511 = ../models/InlineStyle

var _InlineStyle3 = _interopRequireDefault(_InlineStyle2);

var _StyledNativeComponent2 = require(561                              ); // 561 = ../models/StyledNativeComponent

var _StyledNativeComponent3 = _interopRequireDefault(_StyledNativeComponent2);

var _constructWithOptions2 = require(570                                   ); // 570 = ../constructors/constructWithOptions

var _constructWithOptions3 = _interopRequireDefault(_constructWithOptions2);

var _css = require(571                  ); // 571 = ../constructors/css

var _css2 = _interopRequireDefault(_css);

var _ThemeProvider = require(566                      ); // 566 = ../models/ThemeProvider

var _ThemeProvider2 = _interopRequireDefault(_ThemeProvider);

var _withTheme = require(573               ); // 573 = ../hoc/withTheme

var _withTheme2 = _interopRequireDefault(_withTheme);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

var babelPluginFlowReactPropTypes_proptype_Target = require(536       ).babelPluginFlowReactPropTypes_proptype_Target || require(126         ).any; // 126 = prop-types // 536 = ../types

var constructWithOptions = (0, _constructWithOptions3.default)(_css2.default);
var InlineStyle = (0, _InlineStyle3.default)(_reactNative2.default.StyleSheet);
var StyledNativeComponent = (0, _StyledNativeComponent3.default)(constructWithOptions, InlineStyle);
var styled = function styled(tag) {
  return constructWithOptions(StyledNativeComponent, tag);
};

var aliases = 'ActivityIndicator ActivityIndicatorIOS ART Button DatePickerIOS DrawerLayoutAndroid\n Image ImageBackground ImageEditor ImageStore KeyboardAvoidingView ListView MapView Modal Navigator NavigatorIOS\n Picker PickerIOS ProgressBarAndroid ProgressViewIOS ScrollView SegmentedControlIOS Slider\n SliderIOS SnapshotViewIOS Switch RecyclerViewBackedScrollView RefreshControl StatusBar\n SwipeableListView SwitchAndroid SwitchIOS TabBarIOS Text TextInput ToastAndroid ToolbarAndroid\n Touchable TouchableHighlight TouchableNativeFeedback TouchableOpacity TouchableWithoutFeedback\n View ViewPagerAndroid WebView FlatList SectionList VirtualizedList';

aliases.split(/\s+/m).forEach(function (alias) {
  return Object.defineProperty(styled, alias, {
    enumerable: true,
    configurable: false,
    get: function get() {
      return styled(_reactNative2.default[alias]);
    }
  });
});

exports.css = _css2.default;
exports.ThemeProvider = _ThemeProvider2.default;
exports.withTheme = _withTheme2.default;
exports.default = styled;
}, 510, null, "styled-components/lib/native/index.js");
__d(/* styled-components/lib/models/InlineStyle.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.resetStyleCache = undefined;

var _cssToReactNative = require(512                  ); // 512 = css-to-react-native

var _cssToReactNative2 = _interopRequireDefault(_cssToReactNative);

var _hash = require(530                    ); // 530 = ../vendor/glamor/hash

var _hash2 = _interopRequireDefault(_hash);

var _flatten = require(531               ); // 531 = ../utils/flatten

var _flatten2 = _interopRequireDefault(_flatten);

var _parse = require(537                                  ); // 537 = ../vendor/postcss-safe-parser/parse

var _parse2 = _interopRequireDefault(_parse);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}


var babelPluginFlowReactPropTypes_proptype_StyleSheet = require(536       ).babelPluginFlowReactPropTypes_proptype_StyleSheet || require(126         ).any; // 126 = prop-types // 536 = ../types

var babelPluginFlowReactPropTypes_proptype_RuleSet = require(536       ).babelPluginFlowReactPropTypes_proptype_RuleSet || require(126         ).any; // 126 = prop-types // 536 = ../types

var generated = {};

var resetStyleCache = exports.resetStyleCache = function resetStyleCache() {
  generated = {};
};

exports.default = function (styleSheet) {
  var InlineStyle = function () {
    function InlineStyle(rules) {
      _classCallCheck(this, InlineStyle);

      this.rules = rules;
    }

    InlineStyle.prototype.generateStyleObject = function generateStyleObject(executionContext) {
      var flatCSS = (0, _flatten2.default)(this.rules, executionContext).join('');
      var hash = (0, _hash2.default)(flatCSS);
      if (!generated[hash]) {
        var root = (0, _parse2.default)(flatCSS);
        var declPairs = [];
        root.each(function (node) {
          if (node.type === 'decl') {
            declPairs.push([node.prop, node.value]);
          } else if (node.type !== 'comment') {
            console.warn('Node of type ' + node.type + ' not supported as an inline style');
          }
        });

        var styleObject = (0, _cssToReactNative2.default)(declPairs, ['borderRadius', 'borderWidth', 'borderColor', 'borderStyle']);
        var styles = styleSheet.create({
          generated: styleObject
        });
        generated[hash] = styles.generated;
      }
      return generated[hash];
    };

    return InlineStyle;
  }();

  return InlineStyle;
};
}, 511, null, "styled-components/lib/models/InlineStyle.js");
__d(/* css-to-react-native/dist/index.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }return obj;
}

var parse = require(513                   ); // 513 = postcss-value-parser
var camelizeStyleName = require(518                         ); // 518 = fbjs/lib/camelizeStyleName
var transforms = require(520           ); // 520 = ./transforms
var TokenStream = require(529            ); // 529 = ./TokenStream

var numberOrLengthRe = /^([+-]?(?:\d*\.)?\d+(?:[Ee][+-]?\d+)?)(?:px)?$/i;
var boolRe = /^true|false$/i;

var transformRawValue = exports.transformRawValue = function transformRawValue(input) {
  var value = input.trim();

  var numberMatch = value.match(numberOrLengthRe);
  if (numberMatch !== null) return Number(numberMatch[1]);

  var boolMatch = input.match(boolRe);
  if (boolMatch !== null) return boolMatch[0].toLowerCase() === 'true';

  return value;
};

var baseTransformShorthandValue = function baseTransformShorthandValue(propName, inputValue) {
  var ast = parse(inputValue.trim());
  var tokenStream = new TokenStream(ast.nodes);
  return transforms[propName](tokenStream);
};

var transformShorthandValue = process.env.NODE_ENV === 'production' ? baseTransformShorthandValue : function (propName, inputValue) {
  try {
    return baseTransformShorthandValue(propName, inputValue);
  } catch (e) {
    throw new Error('Failed to parse declaration "' + propName + ': ' + inputValue + '"');
  }
};

var getStylesForProperty = exports.getStylesForProperty = function getStylesForProperty(propName, inputValue, allowShorthand) {
  var isRawValue = allowShorthand === false || !(propName in transforms);
  var propValue = isRawValue ? transformRawValue(inputValue) : transformShorthandValue(propName, inputValue.trim());

  return propValue && propValue.$merge ? propValue.$merge : _defineProperty({}, propName, propValue);
};

var getPropertyName = exports.getPropertyName = camelizeStyleName;

exports.default = function (rules) {
  var shorthandBlacklist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  return rules.reduce(function (accum, rule) {
    var propertyName = getPropertyName(rule[0]);
    var value = rule[1];
    var allowShorthand = shorthandBlacklist.indexOf(propertyName) === -1;
    return babelHelpers.extends(accum, getStylesForProperty(propertyName, value, allowShorthand));
  }, {});
};
}, 512, null, "css-to-react-native/dist/index.js");
__d(/* postcss-value-parser/lib/index.js */function(global, require, module, exports) {var parse = require(514      ); // 514 = ./parse
var walk = require(515     ); // 515 = ./walk
var stringify = require(516          ); // 516 = ./stringify

function ValueParser(value) {
    if (this instanceof ValueParser) {
        this.nodes = parse(value);
        return this;
    }
    return new ValueParser(value);
}

ValueParser.prototype.toString = function () {
    return Array.isArray(this.nodes) ? stringify(this.nodes) : '';
};

ValueParser.prototype.walk = function (cb, bubble) {
    walk(this.nodes, cb, bubble);
    return this;
};

ValueParser.unit = require(517     ); // 517 = ./unit

ValueParser.walk = walk;

ValueParser.stringify = stringify;

module.exports = ValueParser;
}, 513, null, "postcss-value-parser/lib/index.js");
__d(/* postcss-value-parser/lib/parse.js */function(global, require, module, exports) {var openParentheses = '('.charCodeAt(0);
var closeParentheses = ')'.charCodeAt(0);
var singleQuote = '\''.charCodeAt(0);
var doubleQuote = '"'.charCodeAt(0);
var backslash = '\\'.charCodeAt(0);
var slash = '/'.charCodeAt(0);
var comma = ','.charCodeAt(0);
var colon = ':'.charCodeAt(0);
var star = '*'.charCodeAt(0);

module.exports = function (input) {
    var tokens = [];
    var value = input;

    var next, quote, prev, token, escape, escapePos, whitespacePos;
    var pos = 0;
    var code = value.charCodeAt(pos);
    var max = value.length;
    var stack = [{ nodes: tokens }];
    var balanced = 0;
    var parent;

    var name = '';
    var before = '';
    var after = '';

    while (pos < max) {
        if (code <= 32) {
            next = pos;
            do {
                next += 1;
                code = value.charCodeAt(next);
            } while (code <= 32);
            token = value.slice(pos, next);

            prev = tokens[tokens.length - 1];
            if (code === closeParentheses && balanced) {
                after = token;
            } else if (prev && prev.type === 'div') {
                prev.after = token;
            } else if (code === comma || code === colon || code === slash && value.charCodeAt(next + 1) !== star) {
                before = token;
            } else {
                tokens.push({
                    type: 'space',
                    sourceIndex: pos,
                    value: token
                });
            }

            pos = next;
        } else if (code === singleQuote || code === doubleQuote) {
            next = pos;
            quote = code === singleQuote ? '\'' : '"';
            token = {
                type: 'string',
                sourceIndex: pos,
                quote: quote
            };
            do {
                escape = false;
                next = value.indexOf(quote, next + 1);
                if (~next) {
                    escapePos = next;
                    while (value.charCodeAt(escapePos - 1) === backslash) {
                        escapePos -= 1;
                        escape = !escape;
                    }
                } else {
                    value += quote;
                    next = value.length - 1;
                    token.unclosed = true;
                }
            } while (escape);
            token.value = value.slice(pos + 1, next);

            tokens.push(token);
            pos = next + 1;
            code = value.charCodeAt(pos);
        } else if (code === slash && value.charCodeAt(pos + 1) === star) {
            token = {
                type: 'comment',
                sourceIndex: pos
            };

            next = value.indexOf('*/', pos);
            if (next === -1) {
                token.unclosed = true;
                next = value.length;
            }

            token.value = value.slice(pos + 2, next);
            tokens.push(token);

            pos = next + 2;
            code = value.charCodeAt(pos);
        } else if (code === slash || code === comma || code === colon) {
            token = value[pos];

            tokens.push({
                type: 'div',
                sourceIndex: pos - before.length,
                value: token,
                before: before,
                after: ''
            });
            before = '';

            pos += 1;
            code = value.charCodeAt(pos);
        } else if (openParentheses === code) {
            next = pos;
            do {
                next += 1;
                code = value.charCodeAt(next);
            } while (code <= 32);
            token = {
                type: 'function',
                sourceIndex: pos - name.length,
                value: name,
                before: value.slice(pos + 1, next)
            };
            pos = next;

            if (name === 'url' && code !== singleQuote && code !== doubleQuote) {
                next -= 1;
                do {
                    escape = false;
                    next = value.indexOf(')', next + 1);
                    if (~next) {
                        escapePos = next;
                        while (value.charCodeAt(escapePos - 1) === backslash) {
                            escapePos -= 1;
                            escape = !escape;
                        }
                    } else {
                        value += ')';
                        next = value.length - 1;
                        token.unclosed = true;
                    }
                } while (escape);

                whitespacePos = next;
                do {
                    whitespacePos -= 1;
                    code = value.charCodeAt(whitespacePos);
                } while (code <= 32);
                if (pos !== whitespacePos + 1) {
                    token.nodes = [{
                        type: 'word',
                        sourceIndex: pos,
                        value: value.slice(pos, whitespacePos + 1)
                    }];
                } else {
                    token.nodes = [];
                }
                if (token.unclosed && whitespacePos + 1 !== next) {
                    token.after = '';
                    token.nodes.push({
                        type: 'space',
                        sourceIndex: whitespacePos + 1,
                        value: value.slice(whitespacePos + 1, next)
                    });
                } else {
                    token.after = value.slice(whitespacePos + 1, next);
                }
                pos = next + 1;
                code = value.charCodeAt(pos);
                tokens.push(token);
            } else {
                balanced += 1;
                token.after = '';
                tokens.push(token);
                stack.push(token);
                tokens = token.nodes = [];
                parent = token;
            }
            name = '';
        } else if (closeParentheses === code && balanced) {
            pos += 1;
            code = value.charCodeAt(pos);

            parent.after = after;
            after = '';
            balanced -= 1;
            stack.pop();
            parent = stack[balanced];
            tokens = parent.nodes;
        } else {
            next = pos;
            do {
                if (code === backslash) {
                    next += 1;
                }
                next += 1;
                code = value.charCodeAt(next);
            } while (next < max && !(code <= 32 || code === singleQuote || code === doubleQuote || code === comma || code === colon || code === slash || code === openParentheses || code === closeParentheses && balanced));
            token = value.slice(pos, next);

            if (openParentheses === code) {
                name = token;
            } else {
                tokens.push({
                    type: 'word',
                    sourceIndex: pos,
                    value: token
                });
            }

            pos = next;
        }
    }

    for (pos = stack.length - 1; pos; pos -= 1) {
        stack[pos].unclosed = true;
    }

    return stack[0].nodes;
};
}, 514, null, "postcss-value-parser/lib/parse.js");
__d(/* postcss-value-parser/lib/walk.js */function(global, require, module, exports) {module.exports = function walk(nodes, cb, bubble) {
    var i, max, node, result;

    for (i = 0, max = nodes.length; i < max; i += 1) {
        node = nodes[i];
        if (!bubble) {
            result = cb(node, i, nodes);
        }

        if (result !== false && node.type === 'function' && Array.isArray(node.nodes)) {
            walk(node.nodes, cb, bubble);
        }

        if (bubble) {
            cb(node, i, nodes);
        }
    }
};
}, 515, null, "postcss-value-parser/lib/walk.js");
__d(/* postcss-value-parser/lib/stringify.js */function(global, require, module, exports) {function stringifyNode(node, custom) {
    var type = node.type;
    var value = node.value;
    var buf;
    var customResult;

    if (custom && (customResult = custom(node)) !== undefined) {
        return customResult;
    } else if (type === 'word' || type === 'space') {
        return value;
    } else if (type === 'string') {
        buf = node.quote || '';
        return buf + value + (node.unclosed ? '' : buf);
    } else if (type === 'comment') {
        return '/*' + value + (node.unclosed ? '' : '*/');
    } else if (type === 'div') {
        return (node.before || '') + value + (node.after || '');
    } else if (Array.isArray(node.nodes)) {
        buf = stringify(node.nodes);
        if (type !== 'function') {
            return buf;
        }
        return value + '(' + (node.before || '') + buf + (node.after || '') + (node.unclosed ? '' : ')');
    }
    return value;
}

function stringify(nodes, custom) {
    var result, i;

    if (Array.isArray(nodes)) {
        result = '';
        for (i = nodes.length - 1; ~i; i -= 1) {
            result = stringifyNode(nodes[i], custom) + result;
        }
        return result;
    }
    return stringifyNode(nodes, custom);
}

module.exports = stringify;
}, 516, null, "postcss-value-parser/lib/stringify.js");
__d(/* postcss-value-parser/lib/unit.js */function(global, require, module, exports) {var minus = '-'.charCodeAt(0);
var plus = '+'.charCodeAt(0);
var dot = '.'.charCodeAt(0);

module.exports = function (value) {
    var pos = 0;
    var length = value.length;
    var dotted = false;
    var containsNumber = false;
    var code;
    var number = '';

    while (pos < length) {
        code = value.charCodeAt(pos);

        if (code >= 48 && code <= 57) {
            number += value[pos];
            containsNumber = true;
        } else if (code === dot) {
            if (dotted) {
                break;
            }
            dotted = true;
            number += value[pos];
        } else if (code === plus || code === minus) {
            if (pos !== 0) {
                break;
            }
            number += value[pos];
        } else {
            break;
        }

        pos += 1;
    }

    return containsNumber ? {
        number: number,
        unit: value.slice(pos)
    } : false;
};
}, 517, null, "postcss-value-parser/lib/unit.js");
__d(/* fbjs/lib/camelizeStyleName.js */function(global, require, module, exports) {

'use strict';

var camelize = require(519         ); // 519 = ./camelize

var msPattern = /^-ms-/;

function camelizeStyleName(string) {
  return camelize(string.replace(msPattern, 'ms-'));
}

module.exports = camelizeStyleName;
}, 518, null, "fbjs/lib/camelizeStyleName.js");
__d(/* fbjs/lib/camelize.js */function(global, require, module, exports) {"use strict";

var _hyphenPattern = /-(.)/g;

function camelize(string) {
  return string.replace(_hyphenPattern, function (_, character) {
    return character.toUpperCase();
  });
}

module.exports = camelize;
}, 519, null, "fbjs/lib/camelize.js");
__d(/* css-to-react-native/dist/transforms/index.js */function(global, require, module, exports) {'use strict';

var _require = require(521            ), // 521 = ../tokenTypes
    regExpToken = _require.regExpToken,
    tokens = _require.tokens;

var flex = require(524     ); // 524 = ./flex
var font = require(525     ); // 525 = ./font
var fontFamily = require(526           ); // 526 = ./fontFamily
var transform = require(527          ); // 527 = ./transform

var _require2 = require(528     ), // 528 = ./util
    directionFactory = _require2.directionFactory,
    anyOrderFactory = _require2.anyOrderFactory,
    shadowOffsetFactory = _require2.shadowOffsetFactory;

var IDENT = tokens.IDENT,
    WORD = tokens.WORD,
    COLOR = tokens.COLOR;

var background = function background(tokenStream) {
  return { $merge: { backgroundColor: tokenStream.expect(COLOR) } };
};
var border = anyOrderFactory({
  borderWidth: {
    token: tokens.LENGTH,
    default: 1
  },
  borderColor: {
    token: COLOR,
    default: 'black'
  },
  borderStyle: {
    token: regExpToken(/^(solid|dashed|dotted)$/),
    default: 'solid'
  }
});
var borderColor = directionFactory({
  types: [WORD],
  prefix: 'border',
  suffix: 'Color'
});
var borderRadius = directionFactory({
  directions: ['TopRight', 'BottomRight', 'BottomLeft', 'TopLeft'],
  prefix: 'border',
  suffix: 'Radius'
});
var borderWidth = directionFactory({ prefix: 'border', suffix: 'Width' });
var margin = directionFactory({ prefix: 'margin' });
var padding = directionFactory({ prefix: 'padding' });
var flexFlow = anyOrderFactory({
  flexWrap: {
    token: regExpToken(/(nowrap|wrap|wrap-reverse)/),
    default: 'nowrap'
  },
  flexDirection: {
    token: regExpToken(/(row|row-reverse|column|column-reverse)/),
    default: 'row'
  }
});
var fontVariant = function fontVariant(tokenStream) {
  return [tokenStream.expect(IDENT)];
};
var fontWeight = function fontWeight(tokenStream) {
  return tokenStream.expect(WORD);
};
var shadowOffset = shadowOffsetFactory();
var textShadowOffset = shadowOffsetFactory();

module.exports = {
  background: background,
  border: border,
  borderColor: borderColor,
  borderRadius: borderRadius,
  borderWidth: borderWidth,
  flex: flex,
  flexFlow: flexFlow,
  font: font,
  fontFamily: fontFamily,
  fontVariant: fontVariant,
  fontWeight: fontWeight,
  margin: margin,
  padding: padding,
  shadowOffset: shadowOffset,
  textShadowOffset: textShadowOffset,
  transform: transform
};
}, 520, null, "css-to-react-native/dist/transforms/index.js");
__d(/* css-to-react-native/dist/tokenTypes.js */function(global, require, module, exports) {'use strict';

var _require = require(513                   ), // 513 = postcss-value-parser
    stringify = _require.stringify;

var cssColorKeywords = require(522                 ); // 522 = css-color-keywords

var matchString = function matchString(node) {
  if (node.type !== 'string') return null;
  return node.value.replace(/\\([0-9a-f]{1,6})(?:\s|$)/gi, function (match, charCode) {
    return String.fromCharCode(parseInt(charCode, 16));
  }).replace(/\\/g, '');
};

var hexColorRe = /^(#(?:[0-9a-f]{3,4}){1,2})$/i;
var cssFunctionNameRe = /^(rgba?|hsla?|hwb|lab|lch|gray|color)$/;

var matchColor = function matchColor(node) {
  if (node.type === 'word' && (hexColorRe.test(node.value) || node.value in cssColorKeywords)) {
    return node.value;
  } else if (node.type === 'function' && cssFunctionNameRe.test(node.value)) {
    return stringify(node);
  }
  return null;
};

var noneRe = /^(none)$/i;
var autoRe = /^(auto)$/i;
var identRe = /(^-?[_a-z][_a-z0-9-]*$)/i;

var numberRe = /^([+-]?(?:\d*\.)?\d+(?:[Ee][+-]?\d+)?)$/;

var lengthRe = /^(0$|(?:[+-]?(?:\d*\.)?\d+(?:[Ee][+-]?\d+)?)(?=px$))/;
var angleRe = /^([+-]?(?:\d*\.)?\d+(?:[Ee][+-]?\d+)?(?:deg|rad))$/;
var percentRe = /^([+-]?(?:\d*\.)?\d+(?:[Ee][+-]?\d+)?%)$/;

var noopToken = function noopToken(predicate) {
  return function (node) {
    return predicate(node) ? '<token>' : null;
  };
};

var valueForTypeToken = function valueForTypeToken(type) {
  return function (node) {
    return node.type === type ? node.value : null;
  };
};

var regExpToken = function regExpToken(regExp) {
  var transform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : String;
  return function (node) {
    if (node.type !== 'word') return null;

    var match = node.value.match(regExp);
    if (match === null) return null;

    var value = transform(match[1]);

    return value;
  };
};

module.exports.regExpToken = regExpToken;

module.exports.tokens = {
  SPACE: noopToken(function (node) {
    return node.type === 'space';
  }),
  SLASH: noopToken(function (node) {
    return node.type === 'div' && node.value === '/';
  }),
  COMMA: noopToken(function (node) {
    return node.type === 'div' && node.value === ',';
  }),
  WORD: valueForTypeToken('word'),
  NONE: regExpToken(noneRe),
  AUTO: regExpToken(autoRe),
  NUMBER: regExpToken(numberRe, Number),
  LENGTH: regExpToken(lengthRe, Number),
  ANGLE: regExpToken(angleRe),
  PERCENT: regExpToken(percentRe),
  IDENT: regExpToken(identRe),
  STRING: matchString,
  COLOR: matchColor
};
}, 521, null, "css-to-react-native/dist/tokenTypes.js");
__d(/* css-color-keywords/index.js */function(global, require, module, exports) {'use strict';

module.exports = require(523            ); // 523 = ./colors.json
}, 522, null, "css-color-keywords/index.js");
__d(/* css-color-keywords/colors.json */function(global, require, module, exports) {module.exports = module.exports = {
  "black": "#000000",
  "silver": "#c0c0c0",
  "gray": "#808080",
  "white": "#ffffff",
  "maroon": "#800000",
  "red": "#ff0000",
  "purple": "#800080",
  "fuchsia": "#ff00ff",
  "green": "#008000",
  "lime": "#00ff00",
  "olive": "#808000",
  "yellow": "#ffff00",
  "navy": "#000080",
  "blue": "#0000ff",
  "teal": "#008080",
  "aqua": "#00ffff",
  "orange": "#ffa500",
  "aliceblue": "#f0f8ff",
  "antiquewhite": "#faebd7",
  "aquamarine": "#7fffd4",
  "azure": "#f0ffff",
  "beige": "#f5f5dc",
  "bisque": "#ffe4c4",
  "blanchedalmond": "#ffebcd",
  "blueviolet": "#8a2be2",
  "brown": "#a52a2a",
  "burlywood": "#deb887",
  "cadetblue": "#5f9ea0",
  "chartreuse": "#7fff00",
  "chocolate": "#d2691e",
  "coral": "#ff7f50",
  "cornflowerblue": "#6495ed",
  "cornsilk": "#fff8dc",
  "crimson": "#dc143c",
  "darkblue": "#00008b",
  "darkcyan": "#008b8b",
  "darkgoldenrod": "#b8860b",
  "darkgray": "#a9a9a9",
  "darkgreen": "#006400",
  "darkgrey": "#a9a9a9",
  "darkkhaki": "#bdb76b",
  "darkmagenta": "#8b008b",
  "darkolivegreen": "#556b2f",
  "darkorange": "#ff8c00",
  "darkorchid": "#9932cc",
  "darkred": "#8b0000",
  "darksalmon": "#e9967a",
  "darkseagreen": "#8fbc8f",
  "darkslateblue": "#483d8b",
  "darkslategray": "#2f4f4f",
  "darkslategrey": "#2f4f4f",
  "darkturquoise": "#00ced1",
  "darkviolet": "#9400d3",
  "deeppink": "#ff1493",
  "deepskyblue": "#00bfff",
  "dimgray": "#696969",
  "dimgrey": "#696969",
  "dodgerblue": "#1e90ff",
  "firebrick": "#b22222",
  "floralwhite": "#fffaf0",
  "forestgreen": "#228b22",
  "gainsboro": "#dcdcdc",
  "ghostwhite": "#f8f8ff",
  "gold": "#ffd700",
  "goldenrod": "#daa520",
  "greenyellow": "#adff2f",
  "grey": "#808080",
  "honeydew": "#f0fff0",
  "hotpink": "#ff69b4",
  "indianred": "#cd5c5c",
  "indigo": "#4b0082",
  "ivory": "#fffff0",
  "khaki": "#f0e68c",
  "lavender": "#e6e6fa",
  "lavenderblush": "#fff0f5",
  "lawngreen": "#7cfc00",
  "lemonchiffon": "#fffacd",
  "lightblue": "#add8e6",
  "lightcoral": "#f08080",
  "lightcyan": "#e0ffff",
  "lightgoldenrodyellow": "#fafad2",
  "lightgray": "#d3d3d3",
  "lightgreen": "#90ee90",
  "lightgrey": "#d3d3d3",
  "lightpink": "#ffb6c1",
  "lightsalmon": "#ffa07a",
  "lightseagreen": "#20b2aa",
  "lightskyblue": "#87cefa",
  "lightslategray": "#778899",
  "lightslategrey": "#778899",
  "lightsteelblue": "#b0c4de",
  "lightyellow": "#ffffe0",
  "limegreen": "#32cd32",
  "linen": "#faf0e6",
  "mediumaquamarine": "#66cdaa",
  "mediumblue": "#0000cd",
  "mediumorchid": "#ba55d3",
  "mediumpurple": "#9370db",
  "mediumseagreen": "#3cb371",
  "mediumslateblue": "#7b68ee",
  "mediumspringgreen": "#00fa9a",
  "mediumturquoise": "#48d1cc",
  "mediumvioletred": "#c71585",
  "midnightblue": "#191970",
  "mintcream": "#f5fffa",
  "mistyrose": "#ffe4e1",
  "moccasin": "#ffe4b5",
  "navajowhite": "#ffdead",
  "oldlace": "#fdf5e6",
  "olivedrab": "#6b8e23",
  "orangered": "#ff4500",
  "orchid": "#da70d6",
  "palegoldenrod": "#eee8aa",
  "palegreen": "#98fb98",
  "paleturquoise": "#afeeee",
  "palevioletred": "#db7093",
  "papayawhip": "#ffefd5",
  "peachpuff": "#ffdab9",
  "peru": "#cd853f",
  "pink": "#ffc0cb",
  "plum": "#dda0dd",
  "powderblue": "#b0e0e6",
  "rosybrown": "#bc8f8f",
  "royalblue": "#4169e1",
  "saddlebrown": "#8b4513",
  "salmon": "#fa8072",
  "sandybrown": "#f4a460",
  "seagreen": "#2e8b57",
  "seashell": "#fff5ee",
  "sienna": "#a0522d",
  "skyblue": "#87ceeb",
  "slateblue": "#6a5acd",
  "slategray": "#708090",
  "slategrey": "#708090",
  "snow": "#fffafa",
  "springgreen": "#00ff7f",
  "steelblue": "#4682b4",
  "tan": "#d2b48c",
  "thistle": "#d8bfd8",
  "tomato": "#ff6347",
  "turquoise": "#40e0d0",
  "violet": "#ee82ee",
  "wheat": "#f5deb3",
  "whitesmoke": "#f5f5f5",
  "yellowgreen": "#9acd32",
  "rebeccapurple": "#663399"
};
}, 523, null, "css-color-keywords/colors.json");
__d(/* css-to-react-native/dist/transforms/flex.js */function(global, require, module, exports) {'use strict';

var _require = require(521            ), // 521 = ../tokenTypes
    tokens = _require.tokens;

var NONE = tokens.NONE,
    AUTO = tokens.AUTO,
    NUMBER = tokens.NUMBER,
    LENGTH = tokens.LENGTH,
    SPACE = tokens.SPACE;

var defaultFlexGrow = 1;
var defaultFlexShrink = 1;
var defaultFlexBasis = 0;

module.exports = function (tokenStream) {
  var flexGrow = void 0;
  var flexShrink = void 0;
  var flexBasis = void 0;

  if (tokenStream.matches(NONE)) {
    tokenStream.expectEmpty();
    return { $merge: { flexGrow: 0, flexShrink: 0 } };
  } else if (tokenStream.matches(AUTO)) {
    tokenStream.expectEmpty();
    return { $merge: { flexGrow: 1, flexShrink: 1 } };
  }

  var partsParsed = 0;
  while (partsParsed < 2 && tokenStream.hasTokens()) {
    if (partsParsed !== 0) tokenStream.expect(SPACE);

    if (flexGrow === undefined && tokenStream.matches(NUMBER)) {
      flexGrow = tokenStream.lastValue;

      if (tokenStream.lookahead().matches(NUMBER)) {
        tokenStream.expect(SPACE);
        flexShrink = tokenStream.expect(NUMBER);
      }
    } else if (flexBasis === undefined && tokenStream.matches(LENGTH)) {
      flexBasis = tokenStream.lastValue;
    } else {
      tokenStream.throw();
    }

    partsParsed += 1;
  }

  tokenStream.expectEmpty();

  if (flexGrow === undefined) flexGrow = defaultFlexGrow;
  if (flexShrink === undefined) flexShrink = defaultFlexShrink;
  if (flexBasis === undefined) flexBasis = defaultFlexBasis;

  return { $merge: { flexGrow: flexGrow, flexShrink: flexShrink, flexBasis: flexBasis } };
};
}, 524, null, "css-to-react-native/dist/transforms/flex.js");
__d(/* css-to-react-native/dist/transforms/font.js */function(global, require, module, exports) {'use strict';

var parseFontFamily = require(526           ); // 526 = ./fontFamily

var _require = require(521            ), // 521 = ../tokenTypes
    regExpToken = _require.regExpToken,
    tokens = _require.tokens;

var SPACE = tokens.SPACE,
    LENGTH = tokens.LENGTH,
    NUMBER = tokens.NUMBER,
    SLASH = tokens.SLASH;

var NORMAL = regExpToken(/^(normal)$/);
var STYLE = regExpToken(/^(italic)$/);
var WEIGHT = regExpToken(/^([1-9]00|bold)$/);
var VARIANT = regExpToken(/^(small-caps)$/);

var defaultFontStyle = 'normal';
var defaultFontWeight = 'normal';
var defaultFontVariant = [];

module.exports = function (tokenStream) {
  var fontStyle = void 0;
  var fontWeight = void 0;
  var fontVariant = void 0;

  var lineHeight = void 0;


  var numStyleWeightVariantMatched = 0;
  while (numStyleWeightVariantMatched < 3 && tokenStream.hasTokens()) {
    if (tokenStream.matches(NORMAL)) {} else if (fontStyle === undefined && tokenStream.matches(STYLE)) {
      fontStyle = tokenStream.lastValue;
    } else if (fontWeight === undefined && tokenStream.matches(WEIGHT)) {
      fontWeight = tokenStream.lastValue;
    } else if (fontVariant === undefined && tokenStream.matches(VARIANT)) {
      fontVariant = [tokenStream.lastValue];
    } else {
      break;
    }

    tokenStream.expect(SPACE);
    numStyleWeightVariantMatched += 1;
  }

  var fontSize = tokenStream.expect(LENGTH);

  if (tokenStream.matches(SLASH)) {
    if (tokenStream.matches(NUMBER)) {
      lineHeight = fontSize * tokenStream.lastValue;
    } else {
      lineHeight = tokenStream.expect(LENGTH);
    }
  }

  tokenStream.expect(SPACE);

  var fontFamily = parseFontFamily(tokenStream);

  if (fontStyle === undefined) fontStyle = defaultFontStyle;
  if (fontWeight === undefined) fontWeight = defaultFontWeight;
  if (fontVariant === undefined) fontVariant = defaultFontVariant;

  var out = { fontStyle: fontStyle, fontWeight: fontWeight, fontVariant: fontVariant, fontSize: fontSize, fontFamily: fontFamily };
  if (lineHeight !== undefined) out.lineHeight = lineHeight;

  return { $merge: out };
};
}, 525, null, "css-to-react-native/dist/transforms/font.js");
__d(/* css-to-react-native/dist/transforms/fontFamily.js */function(global, require, module, exports) {'use strict';

var _require = require(521            ), // 521 = ../tokenTypes
    tokens = _require.tokens;

var SPACE = tokens.SPACE,
    IDENT = tokens.IDENT,
    STRING = tokens.STRING;

module.exports = function (tokenStream) {
  var fontFamily = void 0;

  if (tokenStream.matches(STRING)) {
    fontFamily = tokenStream.lastValue;
  } else {
    fontFamily = tokenStream.expect(IDENT);
    while (tokenStream.hasTokens()) {
      tokenStream.expect(SPACE);
      var nextIdent = tokenStream.expect(IDENT);
      fontFamily += ' ' + nextIdent;
    }
  }

  tokenStream.expectEmpty();

  return fontFamily;
};
}, 526, null, "css-to-react-native/dist/transforms/fontFamily.js");
__d(/* css-to-react-native/dist/transforms/transform.js */function(global, require, module, exports) {'use strict';

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }return obj;
}

var _require = require(521            ), // 521 = ../tokenTypes
    tokens = _require.tokens;

var SPACE = tokens.SPACE,
    COMMA = tokens.COMMA,
    LENGTH = tokens.LENGTH,
    NUMBER = tokens.NUMBER,
    ANGLE = tokens.ANGLE;

var oneOfType = function oneOfType(tokenType) {
  return function (functionStream) {
    var value = functionStream.expect(tokenType);
    functionStream.expectEmpty();
    return value;
  };
};

var singleNumber = oneOfType(NUMBER);
var singleLength = oneOfType(LENGTH);
var singleAngle = oneOfType(ANGLE);
var xyTransformFactory = function xyTransformFactory(tokenType) {
  return function (key, valueIfOmitted) {
    return function (functionStream) {
      var x = functionStream.expect(tokenType);

      var y = void 0;
      if (functionStream.hasTokens()) {
        functionStream.expect(COMMA);
        y = functionStream.expect(tokenType);
      } else if (valueIfOmitted !== undefined) {
        y = valueIfOmitted;
      } else {
        return x;
      }

      functionStream.expectEmpty();

      return [_defineProperty({}, key + 'Y', y), _defineProperty({}, key + 'X', x)];
    };
  };
};
var xyNumber = xyTransformFactory(NUMBER);
var xyLength = xyTransformFactory(LENGTH);
var xyAngle = xyTransformFactory(ANGLE);

var partTransforms = {
  perspective: singleNumber,
  scale: xyNumber('scale'),
  scaleX: singleNumber,
  scaleY: singleNumber,
  translate: xyLength('translate', 0),
  translateX: singleLength,
  translateY: singleLength,
  rotate: singleAngle,
  rotateX: singleAngle,
  rotateY: singleAngle,
  rotateZ: singleAngle,
  skewX: singleAngle,
  skewY: singleAngle,
  skew: xyAngle('skew', '0deg')
};

module.exports = function (tokenStream) {
  var transforms = [];

  var didParseFirst = false;
  while (tokenStream.hasTokens()) {
    if (didParseFirst) tokenStream.expect(SPACE);

    var functionStream = tokenStream.expectFunction();
    var transformName = functionStream.parent.value;
    var transformedValues = partTransforms[transformName](functionStream);
    if (!Array.isArray(transformedValues)) {
      transformedValues = [_defineProperty({}, transformName, transformedValues)];
    }
    transforms = transformedValues.concat(transforms);

    didParseFirst = true;
  }

  return transforms;
};
}, 527, null, "css-to-react-native/dist/transforms/transform.js");
__d(/* css-to-react-native/dist/transforms/util.js */function(global, require, module, exports) {'use strict';

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }return obj;
}

function _toConsumableArray(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }return arr2;
  } else {
    return Array.from(arr);
  }
}

var _require = require(521            ), // 521 = ../tokenTypes
    tokens = _require.tokens;

var LENGTH = tokens.LENGTH,
    PERCENT = tokens.PERCENT,
    SPACE = tokens.SPACE;

module.exports.directionFactory = function (_ref) {
  var _ref$types = _ref.types,
      types = _ref$types === undefined ? [LENGTH, PERCENT] : _ref$types,
      _ref$directions = _ref.directions,
      directions = _ref$directions === undefined ? ['Top', 'Right', 'Bottom', 'Left'] : _ref$directions,
      _ref$prefix = _ref.prefix,
      prefix = _ref$prefix === undefined ? '' : _ref$prefix,
      _ref$suffix = _ref.suffix,
      suffix = _ref$suffix === undefined ? '' : _ref$suffix;
  return function (tokenStream) {
    var _output;

    var values = [];

    values.push(tokenStream.expect.apply(tokenStream, _toConsumableArray(types)));

    while (values.length < 4 && tokenStream.hasTokens()) {
      tokenStream.expect(SPACE);
      values.push(tokenStream.expect.apply(tokenStream, _toConsumableArray(types)));
    }

    tokenStream.expectEmpty();

    var top = values[0],
        _values$ = values[1],
        right = _values$ === undefined ? top : _values$,
        _values$2 = values[2],
        bottom = _values$2 === undefined ? top : _values$2,
        _values$3 = values[3],
        left = _values$3 === undefined ? right : _values$3;

    var keyFor = function keyFor(n) {
      return '' + prefix + directions[n] + suffix;
    };

    var output = (_output = {}, _defineProperty(_output, keyFor(0), top), _defineProperty(_output, keyFor(1), right), _defineProperty(_output, keyFor(2), bottom), _defineProperty(_output, keyFor(3), left), _output);

    return { $merge: output };
  };
};

module.exports.anyOrderFactory = function (properties) {
  var delim = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SPACE;
  return function (tokenStream) {
    var propertyNames = Object.keys(properties);
    var values = propertyNames.reduce(function (accum, propertyName) {
      accum[propertyName] === undefined;
      return accum;
    }, {});

    var numParsed = 0;
    while (numParsed < propertyNames.length && tokenStream.hasTokens()) {
      if (numParsed) tokenStream.expect(delim);

      var matchedPropertyName = propertyNames.find(function (propertyName) {
        return values[propertyName] === undefined && tokenStream.matches(properties[propertyName].token);
      });

      if (!matchedPropertyName) {
        tokenStream.throw();
      } else {
        values[matchedPropertyName] = tokenStream.lastValue;
      }

      numParsed += 1;
    }

    tokenStream.expectEmpty();

    propertyNames.forEach(function (propertyName) {
      if (values[propertyName] === undefined) values[propertyName] = properties[propertyName].default;
    });

    return { $merge: values };
  };
};

module.exports.shadowOffsetFactory = function () {
  return function (tokenStream) {
    var width = tokenStream.expect(LENGTH);
    var height = tokenStream.matches(SPACE) ? tokenStream.expect(LENGTH) : width;
    tokenStream.expectEmpty();
    return { width: width, height: height };
  };
};
}, 528, null, "css-to-react-native/dist/transforms/util.js");
__d(/* css-to-react-native/dist/TokenStream.js */function(global, require, module, exports) {'use strict';

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
    }
  }return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
  };
}();

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

var SYMBOL_MATCH = 'SYMBOL_MATCH';

module.exports = function () {
  function TokenStream(nodes, parent) {
    _classCallCheck(this, TokenStream);

    this.nodes = nodes;
    this.parent = parent;
    this.lastFunction = null;
    this.lastValue = null;
  }

  _createClass(TokenStream, [{
    key: 'hasTokens',
    value: function hasTokens() {
      return this.nodes.length > 0;
    }
  }, {
    key: 'lookahead',
    value: function lookahead() {
      return new TokenStream(this.nodes.slice(1), this.parent);
    }
  }, {
    key: SYMBOL_MATCH,
    value: function value() {
      var node = this.node;

      if (!node) return null;

      for (var i = 0; i < arguments.length; i += 1) {
        var tokenDescriptor = arguments.length <= i ? undefined : arguments[i];
        var value = tokenDescriptor(node);

        if (value !== null) {
          this.nodes = this.nodes.slice(1);
          this.lastFunction = null;
          this.lastValue = value;
          return value;
        }
      }

      return null;
    }
  }, {
    key: 'matches',
    value: function matches() {
      return this[SYMBOL_MATCH].apply(this, arguments) !== null;
    }
  }, {
    key: 'expect',
    value: function expect() {
      var value = this[SYMBOL_MATCH].apply(this, arguments);
      if (value !== null) return value;
      return this.throw();
    }
  }, {
    key: 'matchFunction',
    value: function matchFunction() {
      var node = this.node;
      if (node.type !== 'function') return null;
      var value = new TokenStream(node.nodes, node);
      this.nodes = this.nodes.slice(1);
      this.lastFunction = value;
      this.lastValue = null;
      return value;
    }
  }, {
    key: 'expectFunction',
    value: function expectFunction() {
      var value = this.matchFunction();
      if (value !== null) return value;
      return this.throw();
    }
  }, {
    key: 'expectEmpty',
    value: function expectEmpty() {
      if (this.hasTokens()) this.throw();
    }
  }, {
    key: 'throw',
    value: function _throw() {
      throw new Error('Unexpected token type: ' + this.node.type);
    }
  }, {
    key: 'node',
    get: function get() {
      return this.nodes[0];
    }
  }]);

  return TokenStream;
}();
}, 529, null, "css-to-react-native/dist/TokenStream.js");
__d(/* styled-components/lib/vendor/glamor/hash.js */function(global, require, module, exports) {"use strict";

exports.__esModule = true;
exports.default = doHash;


function doHash(str, seed) {
  var m = 0x5bd1e995;
  var r = 24;
  var h = seed ^ str.length;
  var length = str.length;
  var currentIndex = 0;

  while (length >= 4) {
    var k = UInt32(str, currentIndex);

    k = Umul32(k, m);
    k ^= k >>> r;
    k = Umul32(k, m);

    h = Umul32(h, m);
    h ^= k;

    currentIndex += 4;
    length -= 4;
  }

  switch (length) {
    case 3:
      h ^= UInt16(str, currentIndex);
      h ^= str.charCodeAt(currentIndex + 2) << 16;
      h = Umul32(h, m);
      break;

    case 2:
      h ^= UInt16(str, currentIndex);
      h = Umul32(h, m);
      break;

    case 1:
      h ^= str.charCodeAt(currentIndex);
      h = Umul32(h, m);
      break;
  }

  h ^= h >>> 13;
  h = Umul32(h, m);
  h ^= h >>> 15;

  return h >>> 0;
}

function UInt32(str, pos) {
  return str.charCodeAt(pos++) + (str.charCodeAt(pos++) << 8) + (str.charCodeAt(pos++) << 16) + (str.charCodeAt(pos) << 24);
}

function UInt16(str, pos) {
  return str.charCodeAt(pos++) + (str.charCodeAt(pos++) << 8);
}

function Umul32(n, m) {
  n = n | 0;
  m = m | 0;
  var nlo = n & 0xffff;
  var nhi = n >>> 16;
  var res = nlo * m + ((nhi * m & 0xffff) << 16) | 0;
  return res;
}
module.exports = exports["default"];
}, 530, null, "styled-components/lib/vendor/glamor/hash.js");
__d(/* styled-components/lib/utils/flatten.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.objToCss = undefined;

var _hyphenateStyleName = require(532                          ); // 532 = fbjs/lib/hyphenateStyleName

var _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);

var _isPlainObject = require(534              ); // 534 = is-plain-object

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

var babelPluginFlowReactPropTypes_proptype_Interpolation = require(536       ).babelPluginFlowReactPropTypes_proptype_Interpolation || require(126         ).any; // 126 = prop-types // 536 = ../types

var objToCss = exports.objToCss = function objToCss(obj, prevKey) {
  var css = Object.keys(obj).filter(function (key) {
    var chunk = obj[key];
    return chunk !== undefined && chunk !== null && chunk !== false && chunk !== '';
  }).map(function (key) {
    if ((0, _isPlainObject2.default)(obj[key])) return objToCss(obj[key], key);
    return (0, _hyphenateStyleName2.default)(key) + ': ' + obj[key] + ';';
  }).join(' ');
  return prevKey ? prevKey + ' {\n  ' + css + '\n}' : css;
};

var flatten = function flatten(chunks, executionContext) {
  return chunks.reduce(function (ruleSet, chunk) {
    if (chunk === undefined || chunk === null || chunk === false || chunk === '') return ruleSet;

    if (Array.isArray(chunk)) return [].concat(ruleSet, flatten(chunk, executionContext));

    if (chunk.hasOwnProperty('styledComponentId')) return [].concat(ruleSet, ['.' + chunk.styledComponentId]);

    if (typeof chunk === 'function') {
      return executionContext ? ruleSet.concat.apply(ruleSet, flatten([chunk(executionContext)], executionContext)) : ruleSet.concat(chunk);
    }

    return ruleSet.concat((0, _isPlainObject2.default)(chunk) ? objToCss(chunk) : chunk.toString());
  }, []);
};

exports.default = flatten;
}, 531, null, "styled-components/lib/utils/flatten.js");
__d(/* fbjs/lib/hyphenateStyleName.js */function(global, require, module, exports) {

'use strict';

var hyphenate = require(533          ); // 533 = ./hyphenate

var msPattern = /^ms-/;

function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;
}, 532, null, "fbjs/lib/hyphenateStyleName.js");
__d(/* fbjs/lib/hyphenate.js */function(global, require, module, exports) {'use strict';

var _uppercasePattern = /([A-Z])/g;

function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;
}, 533, null, "fbjs/lib/hyphenate.js");
__d(/* is-plain-object/index.js */function(global, require, module, exports) {

'use strict';

var isObject = require(535       ); // 535 = isobject

function isObjectObject(o) {
  return isObject(o) === true && Object.prototype.toString.call(o) === '[object Object]';
}

module.exports = function isPlainObject(o) {
  var ctor, prot;

  if (isObjectObject(o) === false) return false;

  ctor = o.constructor;
  if (typeof ctor !== 'function') return false;

  prot = ctor.prototype;
  if (isObjectObject(prot) === false) return false;

  if (prot.hasOwnProperty('isPrototypeOf') === false) {
    return false;
  }

  return true;
};
}, 534, null, "is-plain-object/index.js");
__d(/* isobject/index.js */function(global, require, module, exports) {

'use strict';

module.exports = function isObject(val) {
  return val != null && typeof val === 'object' && Array.isArray(val) === false;
};
}, 535, null, "isobject/index.js");
__d(/* styled-components/lib/types.js */function(global, require, module, exports) {"use strict";

if (typeof exports !== "undefined") Object.defineProperty(exports, "babelPluginFlowReactPropTypes_proptype_StyleSheet", {
  value: require(126         ).shape({ // 126 = prop-types
    create: require(126         ).func.isRequired // 126 = prop-types
  })
});
}, 536, null, "styled-components/lib/types.js");
__d(/* styled-components/lib/vendor/postcss-safe-parser/parse.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = safeParse;

var _input = require(538               ); // 538 = ../postcss/input

var _input2 = _interopRequireDefault(_input);

var _safeParser = require(560            ); // 560 = ./safe-parser

var _safeParser2 = _interopRequireDefault(_safeParser);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function safeParse(css, opts) {
    var input = new _input2.default(css, opts);

    var parser = new _safeParser2.default(input);
    parser.tokenize();
    parser.loop();

    return parser.root;
}
module.exports = exports['default'];
}, 537, null, "styled-components/lib/vendor/postcss-safe-parser/parse.js");
__d(/* styled-components/lib/vendor/postcss/input.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

require(539     ); // 539 = ./root

var _cssSyntaxError = require(548                 ); // 548 = ./css-syntax-error

var _cssSyntaxError2 = _interopRequireDefault(_cssSyntaxError);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var sequence = 0;

var Input = function () {
    function Input(css) {
        var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        _classCallCheck(this, Input);

        this.css = css.toString();

        if (this.css[0] === '\uFEFF' || this.css[0] === '\uFFFE') {
            this.css = this.css.slice(1);
        }

        if (opts.from) {
            if (/^\w+:\/\//.test(opts.from)) {
                this.file = opts.from;
            } else {
                this.file = path.resolve(opts.from);
            }
        }

        if (!this.file) {
            sequence += 1;

            this.id = '<input css ' + sequence + '>';
        }
        if (this.map) this.map.file = this.from;
    }

    Input.prototype.error = function error(message, line, column) {
        var opts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

        var result = void 0;
        var origin = this.origin(line, column);
        if (origin) {
            result = new _cssSyntaxError2.default(message, origin.line, origin.column, origin.source, origin.file, opts.plugin);
        } else {
            result = new _cssSyntaxError2.default(message, line, column, this.css, this.file, opts.plugin);
        }

        result.input = { line: line, column: column, source: this.css };
        if (this.file) result.input.file = this.file;

        return result;
    };

    Input.prototype.origin = function origin(line, column) {
        if (!this.map) return false;
        var consumer = this.map.consumer();

        var from = consumer.originalPositionFor({ line: line, column: column });
        if (!from.source) return false;

        var result = {
            file: this.mapResolve(from.source),
            line: from.line,
            column: from.column
        };

        var source = consumer.sourceContentFor(from.source);
        if (source) result.source = source;

        return result;
    };

    Input.prototype.mapResolve = function mapResolve(file) {
        if (/^\w+:\/\//.test(file)) {
            return file;
        } else {
            return path.resolve(this.map.consumer().sourceRoot || '.', file);
        }
    };

    _createClass(Input, [{
        key: 'from',
        get: function get() {
            return this.file || this.id;
        }
    }]);

    return Input;
}();

exports.default = Input;
module.exports = exports['default'];
}, 538, null, "styled-components/lib/vendor/postcss/input.js");
__d(/* styled-components/lib/vendor/postcss/root.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

require(540     ); // 540 = ./rule

var _container = require(542          ); // 542 = ./container

var _container2 = _interopRequireDefault(_container);

var _lazyResult = require(556            ); // 556 = ./lazy-result

var _lazyResult2 = _interopRequireDefault(_lazyResult);

var _processor = require(559          ); // 559 = ./processor

var _processor2 = _interopRequireDefault(_processor);

var _warnOnce = require(546          ); // 546 = ./warn-once

var _warnOnce2 = _interopRequireDefault(_warnOnce);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

function _possibleConstructorReturn(self, call) {
    if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var Root = function (_Container) {
    _inherits(Root, _Container);

    function Root(defaults) {
        _classCallCheck(this, Root);

        var _this = _possibleConstructorReturn(this, _Container.call(this, defaults));

        _this.type = 'root';
        if (!_this.nodes) _this.nodes = [];
        return _this;
    }

    Root.prototype.removeChild = function removeChild(child) {
        child = this.index(child);

        if (child === 0 && this.nodes.length > 1) {
            this.nodes[1].raws.before = this.nodes[child].raws.before;
        }

        return _Container.prototype.removeChild.call(this, child);
    };

    Root.prototype.normalize = function normalize(child, sample, type) {
        var nodes = _Container.prototype.normalize.call(this, child);

        if (sample) {
            if (type === 'prepend') {
                if (this.nodes.length > 1) {
                    sample.raws.before = this.nodes[1].raws.before;
                } else {
                    delete sample.raws.before;
                }
            } else if (this.first !== sample) {
                nodes.forEach(function (node) {
                    node.raws.before = sample.raws.before;
                });
            }
        }

        return nodes;
    };

    Root.prototype.toResult = function toResult() {
        var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        var lazy = new _lazyResult2.default(new _processor2.default(), this, opts);
        return lazy.stringify();
    };

    Root.prototype.remove = function remove(child) {
        (0, _warnOnce2.default)('Root#remove is deprecated. Use Root#removeChild');
        this.removeChild(child);
    };

    Root.prototype.prevMap = function prevMap() {
        (0, _warnOnce2.default)('Root#prevMap is deprecated. Use Root#source.input.map');
        return this.source.input.map;
    };

    return Root;
}(_container2.default);

exports.default = Root;
module.exports = exports['default'];
}, 539, null, "styled-components/lib/vendor/postcss/root.js");
__d(/* styled-components/lib/vendor/postcss/rule.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

require(541        ); // 541 = ./at-rule

var _container = require(542          ); // 542 = ./container

var _container2 = _interopRequireDefault(_container);

var _warnOnce = require(546          ); // 546 = ./warn-once

var _warnOnce2 = _interopRequireDefault(_warnOnce);

var _list = require(555     ); // 555 = ./list

var _list2 = _interopRequireDefault(_list);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

function _possibleConstructorReturn(self, call) {
    if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var Rule = function (_Container) {
    _inherits(Rule, _Container);

    function Rule(defaults) {
        _classCallCheck(this, Rule);

        var _this = _possibleConstructorReturn(this, _Container.call(this, defaults));

        _this.type = 'rule';
        if (!_this.nodes) _this.nodes = [];
        return _this;
    }

    _createClass(Rule, [{
        key: 'selectors',
        get: function get() {
            return _list2.default.comma(this.selector);
        },
        set: function set(values) {
            var match = this.selector ? this.selector.match(/,\s*/) : null;
            var sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen');
            this.selector = values.join(sep);
        }
    }, {
        key: '_selector',
        get: function get() {
            (0, _warnOnce2.default)('Rule#_selector is deprecated. Use Rule#raws.selector');
            return this.raws.selector;
        },
        set: function set(val) {
            (0, _warnOnce2.default)('Rule#_selector is deprecated. Use Rule#raws.selector');
            this.raws.selector = val;
        }

    }]);

    return Rule;
}(_container2.default);

exports.default = Rule;
module.exports = exports['default'];
}, 540, null, "styled-components/lib/vendor/postcss/rule.js");
__d(/* styled-components/lib/vendor/postcss/at-rule.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

var _container = require(542          ); // 542 = ./container

var _container2 = _interopRequireDefault(_container);

var _warnOnce = require(546          ); // 546 = ./warn-once

var _warnOnce2 = _interopRequireDefault(_warnOnce);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

function _possibleConstructorReturn(self, call) {
    if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var AtRule = function (_Container) {
    _inherits(AtRule, _Container);

    function AtRule(defaults) {
        _classCallCheck(this, AtRule);

        var _this = _possibleConstructorReturn(this, _Container.call(this, defaults));

        _this.type = 'atrule';
        return _this;
    }

    AtRule.prototype.append = function append() {
        var _Container$prototype$;

        if (!this.nodes) this.nodes = [];

        for (var _len = arguments.length, children = Array(_len), _key = 0; _key < _len; _key++) {
            children[_key] = arguments[_key];
        }

        return (_Container$prototype$ = _Container.prototype.append).call.apply(_Container$prototype$, [this].concat(children));
    };

    AtRule.prototype.prepend = function prepend() {
        var _Container$prototype$2;

        if (!this.nodes) this.nodes = [];

        for (var _len2 = arguments.length, children = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            children[_key2] = arguments[_key2];
        }

        return (_Container$prototype$2 = _Container.prototype.prepend).call.apply(_Container$prototype$2, [this].concat(children));
    };

    _createClass(AtRule, [{
        key: 'afterName',
        get: function get() {
            (0, _warnOnce2.default)('AtRule#afterName was deprecated. Use AtRule#raws.afterName');
            return this.raws.afterName;
        },
        set: function set(val) {
            (0, _warnOnce2.default)('AtRule#afterName was deprecated. Use AtRule#raws.afterName');
            this.raws.afterName = val;
        }
    }, {
        key: '_params',
        get: function get() {
            (0, _warnOnce2.default)('AtRule#_params was deprecated. Use AtRule#raws.params');
            return this.raws.params;
        },
        set: function set(val) {
            (0, _warnOnce2.default)('AtRule#_params was deprecated. Use AtRule#raws.params');
            this.raws.params = val;
        }

    }]);

    return AtRule;
}(_container2.default);

exports.default = AtRule;
module.exports = exports['default'];
}, 541, null, "styled-components/lib/vendor/postcss/at-rule.js");
__d(/* styled-components/lib/vendor/postcss/container.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

var _parse = require(543      ); // 543 = ./parse

var _parse2 = _interopRequireDefault(_parse);

var _root = require(539     ); // 539 = ./root

var _root2 = _interopRequireDefault(_root);

var _rule = require(540     ); // 540 = ./rule

var _rule2 = _interopRequireDefault(_rule);

var _atRule = require(541        ); // 541 = ./at-rule

var _atRule2 = _interopRequireDefault(_atRule);

var _declaration = require(545            ); // 545 = ./declaration

var _declaration2 = _interopRequireDefault(_declaration);

var _warnOnce = require(546          ); // 546 = ./warn-once

var _warnOnce2 = _interopRequireDefault(_warnOnce);

var _comment = require(554        ); // 554 = ./comment

var _comment2 = _interopRequireDefault(_comment);

var _node = require(547     ); // 547 = ./node

var _node2 = _interopRequireDefault(_node);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

function _possibleConstructorReturn(self, call) {
    if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

function cleanSource(nodes) {
    return nodes.map(function (i) {
        if (i.nodes) i.nodes = cleanSource(i.nodes);
        delete i.source;
        return i;
    });
}

var Container = function (_Node) {
    _inherits(Container, _Node);

    function Container() {
        _classCallCheck(this, Container);

        return _possibleConstructorReturn(this, _Node.apply(this, arguments));
    }

    Container.prototype.push = function push(child) {
        child.parent = this;
        this.nodes.push(child);
        return this;
    };

    Container.prototype.each = function each(callback) {
        if (!this.lastEach) this.lastEach = 0;
        if (!this.indexes) this.indexes = {};

        this.lastEach += 1;
        var id = this.lastEach;
        this.indexes[id] = 0;

        if (!this.nodes) return undefined;

        var index = void 0,
            result = void 0;
        while (this.indexes[id] < this.nodes.length) {
            index = this.indexes[id];
            result = callback(this.nodes[index], index);
            if (result === false) break;

            this.indexes[id] += 1;
        }

        delete this.indexes[id];

        return result;
    };

    Container.prototype.walk = function walk(callback) {
        return this.each(function (child, i) {
            var result = callback(child, i);
            if (result !== false && child.walk) {
                result = child.walk(callback);
            }
            return result;
        });
    };

    Container.prototype.walkDecls = function walkDecls(prop, callback) {
        if (!callback) {
            callback = prop;
            return this.walk(function (child, i) {
                if (child.type === 'decl') {
                    return callback(child, i);
                }
            });
        } else if (prop instanceof RegExp) {
            return this.walk(function (child, i) {
                if (child.type === 'decl' && prop.test(child.prop)) {
                    return callback(child, i);
                }
            });
        } else {
            return this.walk(function (child, i) {
                if (child.type === 'decl' && child.prop === prop) {
                    return callback(child, i);
                }
            });
        }
    };

    Container.prototype.walkRules = function walkRules(selector, callback) {
        if (!callback) {
            callback = selector;

            return this.walk(function (child, i) {
                if (child.type === 'rule') {
                    return callback(child, i);
                }
            });
        } else if (selector instanceof RegExp) {
            return this.walk(function (child, i) {
                if (child.type === 'rule' && selector.test(child.selector)) {
                    return callback(child, i);
                }
            });
        } else {
            return this.walk(function (child, i) {
                if (child.type === 'rule' && child.selector === selector) {
                    return callback(child, i);
                }
            });
        }
    };

    Container.prototype.walkAtRules = function walkAtRules(name, callback) {
        if (!callback) {
            callback = name;
            return this.walk(function (child, i) {
                if (child.type === 'atrule') {
                    return callback(child, i);
                }
            });
        } else if (name instanceof RegExp) {
            return this.walk(function (child, i) {
                if (child.type === 'atrule' && name.test(child.name)) {
                    return callback(child, i);
                }
            });
        } else {
            return this.walk(function (child, i) {
                if (child.type === 'atrule' && child.name === name) {
                    return callback(child, i);
                }
            });
        }
    };

    Container.prototype.walkComments = function walkComments(callback) {
        return this.walk(function (child, i) {
            if (child.type === 'comment') {
                return callback(child, i);
            }
        });
    };

    Container.prototype.append = function append() {
        var _this2 = this;

        for (var _len = arguments.length, children = Array(_len), _key = 0; _key < _len; _key++) {
            children[_key] = arguments[_key];
        }

        children.forEach(function (child) {
            var nodes = _this2.normalize(child, _this2.last);
            nodes.forEach(function (node) {
                return _this2.nodes.push(node);
            });
        });
        return this;
    };

    Container.prototype.prepend = function prepend() {
        var _this3 = this;

        for (var _len2 = arguments.length, children = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            children[_key2] = arguments[_key2];
        }

        children = children.reverse();
        children.forEach(function (child) {
            var nodes = _this3.normalize(child, _this3.first, 'prepend').reverse();
            nodes.forEach(function (node) {
                return _this3.nodes.unshift(node);
            });
            for (var id in _this3.indexes) {
                _this3.indexes[id] = _this3.indexes[id] + nodes.length;
            }
        });
        return this;
    };

    Container.prototype.cleanRaws = function cleanRaws(keepBetween) {
        _Node.prototype.cleanRaws.call(this, keepBetween);
        if (this.nodes) {
            this.nodes.forEach(function (node) {
                return node.cleanRaws(keepBetween);
            });
        }
    };

    Container.prototype.insertBefore = function insertBefore(exist, add) {
        var _this4 = this;

        exist = this.index(exist);

        var type = exist === 0 ? 'prepend' : false;
        var nodes = this.normalize(add, this.nodes[exist], type).reverse();
        nodes.forEach(function (node) {
            return _this4.nodes.splice(exist, 0, node);
        });

        var index = void 0;
        for (var id in this.indexes) {
            index = this.indexes[id];
            if (exist <= index) {
                this.indexes[id] = index + nodes.length;
            }
        }

        return this;
    };

    Container.prototype.insertAfter = function insertAfter(exist, add) {
        var _this5 = this;

        exist = this.index(exist);

        var nodes = this.normalize(add, this.nodes[exist]).reverse();
        nodes.forEach(function (node) {
            return _this5.nodes.splice(exist + 1, 0, node);
        });

        var index = void 0;
        for (var id in this.indexes) {
            index = this.indexes[id];
            if (exist < index) {
                this.indexes[id] = index + nodes.length;
            }
        }

        return this;
    };

    Container.prototype.remove = function remove(child) {
        if (typeof child !== 'undefined') {
            (0, _warnOnce2.default)('Container#remove is deprecated. ' + 'Use Container#removeChild');
            this.removeChild(child);
        } else {
            _Node.prototype.remove.call(this);
        }
        return this;
    };

    Container.prototype.removeChild = function removeChild(child) {
        child = this.index(child);
        this.nodes[child].parent = undefined;
        this.nodes.splice(child, 1);

        var index = void 0;
        for (var id in this.indexes) {
            index = this.indexes[id];
            if (index >= child) {
                this.indexes[id] = index - 1;
            }
        }

        return this;
    };

    Container.prototype.removeAll = function removeAll() {
        this.nodes.forEach(function (node) {
            return node.parent = undefined;
        });
        this.nodes = [];
        return this;
    };

    Container.prototype.replaceValues = function replaceValues(pattern, opts, callback) {
        if (!callback) {
            callback = opts;
            opts = {};
        }

        this.walkDecls(function (decl) {
            if (opts.props && opts.props.indexOf(decl.prop) === -1) return;
            if (opts.fast && decl.value.indexOf(opts.fast) === -1) return;

            decl.value = decl.value.replace(pattern, callback);
        });

        return this;
    };

    Container.prototype.every = function every(condition) {
        return this.nodes.every(condition);
    };

    Container.prototype.some = function some(condition) {
        return this.nodes.some(condition);
    };

    Container.prototype.index = function index(child) {
        if (typeof child === 'number') {
            return child;
        } else {
            return this.nodes.indexOf(child);
        }
    };

    Container.prototype.normalize = function normalize(nodes, sample) {
        var _this6 = this;

        if (typeof nodes === 'string') {
            nodes = cleanSource((0, _parse2.default)(nodes).nodes);
        } else if (!Array.isArray(nodes)) {
            if (nodes.type === 'root') {
                nodes = nodes.nodes;
            } else if (nodes.type) {
                nodes = [nodes];
            } else if (nodes.prop) {
                if (typeof nodes.value === 'undefined') {
                    throw new Error('Value field is missed in node creation');
                } else if (typeof nodes.value !== 'string') {
                    nodes.value = String(nodes.value);
                }
                nodes = [new _declaration2.default(nodes)];
            } else if (nodes.selector) {
                nodes = [new _rule2.default(nodes)];
            } else if (nodes.name) {
                nodes = [new _atRule2.default(nodes)];
            } else if (nodes.text) {
                nodes = [new _comment2.default(nodes)];
            } else {
                throw new Error('Unknown node type in node creation');
            }
        }

        var processed = nodes.map(function (i) {
            if (typeof i.raws === 'undefined') i = _this6.rebuild(i);

            if (i.parent) i = i.clone();
            if (typeof i.raws.before === 'undefined') {
                if (sample && typeof sample.raws.before !== 'undefined') {
                    i.raws.before = sample.raws.before.replace(/[^\s]/g, '');
                }
            }
            i.parent = _this6;
            return i;
        });

        return processed;
    };

    Container.prototype.rebuild = function rebuild(node, parent) {
        var _this7 = this;

        var fix = void 0;
        if (node.type === 'root') {
            fix = new _root2.default();
        } else if (node.type === 'atrule') {
            fix = new _atRule2.default();
        } else if (node.type === 'rule') {
            fix = new _rule2.default();
        } else if (node.type === 'decl') {
            fix = new _declaration2.default();
        } else if (node.type === 'comment') {
            fix = new _comment2.default();
        }

        for (var i in node) {
            if (i === 'nodes') {
                fix.nodes = node.nodes.map(function (j) {
                    return _this7.rebuild(j, fix);
                });
            } else if (i === 'parent' && parent) {
                fix.parent = parent;
            } else if (node.hasOwnProperty(i)) {
                fix[i] = node[i];
            }
        }

        return fix;
    };

    Container.prototype.eachInside = function eachInside(callback) {
        (0, _warnOnce2.default)('Container#eachInside is deprecated. ' + 'Use Container#walk instead.');
        return this.walk(callback);
    };

    Container.prototype.eachDecl = function eachDecl(prop, callback) {
        (0, _warnOnce2.default)('Container#eachDecl is deprecated. ' + 'Use Container#walkDecls instead.');
        return this.walkDecls(prop, callback);
    };

    Container.prototype.eachRule = function eachRule(selector, callback) {
        (0, _warnOnce2.default)('Container#eachRule is deprecated. ' + 'Use Container#walkRules instead.');
        return this.walkRules(selector, callback);
    };

    Container.prototype.eachAtRule = function eachAtRule(name, callback) {
        (0, _warnOnce2.default)('Container#eachAtRule is deprecated. ' + 'Use Container#walkAtRules instead.');
        return this.walkAtRules(name, callback);
    };

    Container.prototype.eachComment = function eachComment(callback) {
        (0, _warnOnce2.default)('Container#eachComment is deprecated. ' + 'Use Container#walkComments instead.');
        return this.walkComments(callback);
    };

    _createClass(Container, [{
        key: 'first',
        get: function get() {
            if (!this.nodes) return undefined;
            return this.nodes[0];
        }

    }, {
        key: 'last',
        get: function get() {
            if (!this.nodes) return undefined;
            return this.nodes[this.nodes.length - 1];
        }
    }, {
        key: 'semicolon',
        get: function get() {
            (0, _warnOnce2.default)('Node#semicolon is deprecated. Use Node#raws.semicolon');
            return this.raws.semicolon;
        },
        set: function set(val) {
            (0, _warnOnce2.default)('Node#semicolon is deprecated. Use Node#raws.semicolon');
            this.raws.semicolon = val;
        }
    }, {
        key: 'after',
        get: function get() {
            (0, _warnOnce2.default)('Node#after is deprecated. Use Node#raws.after');
            return this.raws.after;
        },
        set: function set(val) {
            (0, _warnOnce2.default)('Node#after is deprecated. Use Node#raws.after');
            this.raws.after = val;
        }

    }]);

    return Container;
}(_node2.default);

exports.default = Container;
module.exports = exports['default'];
}, 542, null, "styled-components/lib/vendor/postcss/container.js");
__d(/* styled-components/lib/vendor/postcss/parse.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = parse;

var _parser = require(544       ); // 544 = ./parser

var _parser2 = _interopRequireDefault(_parser);

var _input = require(538      ); // 538 = ./input

var _input2 = _interopRequireDefault(_input);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function parse(css, opts) {
    if (opts && opts.safe) {
        throw new Error('Option safe was removed. ' + 'Use parser: require("postcss-safe-parser")');
    }

    var input = new _input2.default(css, opts);

    var parser = new _parser2.default(input);
    try {
        parser.tokenize();
        parser.loop();
    } catch (e) {
        if (e.name === 'CssSyntaxError' && opts && opts.from) {
            if (/\.scss$/i.test(opts.from)) {
                e.message += '\nYou tried to parse SCSS with ' + 'the standard CSS parser; ' + 'try again with the postcss-scss parser';
            } else if (/\.less$/i.test(opts.from)) {
                e.message += '\nYou tried to parse Less with ' + 'the standard CSS parser; ' + 'try again with the postcss-less parser';
            }
        }
        throw e;
    }

    return parser.root;
}
module.exports = exports['default'];
}, 543, null, "styled-components/lib/vendor/postcss/parse.js");
__d(/* styled-components/lib/vendor/postcss/parser.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _declaration = require(545            ); // 545 = ./declaration

var _declaration2 = _interopRequireDefault(_declaration);

var _tokenize = require(551         ); // 551 = ./tokenize

var _tokenize2 = _interopRequireDefault(_tokenize);

var _comment = require(554        ); // 554 = ./comment

var _comment2 = _interopRequireDefault(_comment);

var _atRule = require(541        ); // 541 = ./at-rule

var _atRule2 = _interopRequireDefault(_atRule);

var _root = require(539     ); // 539 = ./root

var _root2 = _interopRequireDefault(_root);

var _rule = require(540     ); // 540 = ./rule

var _rule2 = _interopRequireDefault(_rule);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var Parser = function () {
    function Parser(input) {
        _classCallCheck(this, Parser);

        this.input = input;

        this.pos = 0;
        this.root = new _root2.default();
        this.current = this.root;
        this.spaces = '';
        this.semicolon = false;

        this.root.source = { input: input, start: { line: 1, column: 1 } };
    }

    Parser.prototype.tokenize = function tokenize() {
        this.tokens = (0, _tokenize2.default)(this.input);
    };

    Parser.prototype.loop = function loop() {
        var token = void 0;
        while (this.pos < this.tokens.length) {
            token = this.tokens[this.pos];

            switch (token[0]) {

                case 'space':
                case ';':
                    this.spaces += token[1];
                    break;

                case '}':
                    this.end(token);
                    break;

                case 'comment':
                    this.comment(token);
                    break;

                case 'at-word':
                    this.atrule(token);
                    break;

                case '{':
                    this.emptyRule(token);
                    break;

                default:
                    this.other();
                    break;
            }

            this.pos += 1;
        }
        this.endFile();
    };

    Parser.prototype.comment = function comment(token) {
        var node = new _comment2.default();
        this.init(node, token[2], token[3]);
        node.source.end = { line: token[4], column: token[5] };

        var text = token[1].slice(2, -2);
        if (/^\s*$/.test(text)) {
            node.text = '';
            node.raws.left = text;
            node.raws.right = '';
        } else {
            var match = text.match(/^(\s*)([^]*[^\s])(\s*)$/);
            node.text = match[2];
            node.raws.left = match[1];
            node.raws.right = match[3];
        }
    };

    Parser.prototype.emptyRule = function emptyRule(token) {
        var node = new _rule2.default();
        this.init(node, token[2], token[3]);
        node.selector = '';
        node.raws.between = '';
        this.current = node;
    };

    Parser.prototype.other = function other() {
        var token = void 0;
        var end = false;
        var type = null;
        var colon = false;
        var bracket = null;
        var brackets = [];

        var start = this.pos;
        while (this.pos < this.tokens.length) {
            token = this.tokens[this.pos];
            type = token[0];

            if (type === '(' || type === '[') {
                if (!bracket) bracket = token;
                brackets.push(type === '(' ? ')' : ']');
            } else if (brackets.length === 0) {
                if (type === ';') {
                    if (colon) {
                        this.decl(this.tokens.slice(start, this.pos + 1));
                        return;
                    } else {
                        break;
                    }
                } else if (type === '{') {
                    this.rule(this.tokens.slice(start, this.pos + 1));
                    return;
                } else if (type === '}') {
                    this.pos -= 1;
                    end = true;
                    break;
                } else if (type === ':') {
                    colon = true;
                }
            } else if (type === brackets[brackets.length - 1]) {
                brackets.pop();
                if (brackets.length === 0) bracket = null;
            }

            this.pos += 1;
        }
        if (this.pos === this.tokens.length) {
            this.pos -= 1;
            end = true;
        }

        if (brackets.length > 0) this.unclosedBracket(bracket);

        if (end && colon) {
            while (this.pos > start) {
                token = this.tokens[this.pos][0];
                if (token !== 'space' && token !== 'comment') break;
                this.pos -= 1;
            }
            this.decl(this.tokens.slice(start, this.pos + 1));
            return;
        }

        this.unknownWord(start);
    };

    Parser.prototype.rule = function rule(tokens) {
        tokens.pop();

        var node = new _rule2.default();
        this.init(node, tokens[0][2], tokens[0][3]);

        node.raws.between = this.spacesFromEnd(tokens);
        this.raw(node, 'selector', tokens);
        this.current = node;
    };

    Parser.prototype.decl = function decl(tokens) {
        var node = new _declaration2.default();
        this.init(node);

        var last = tokens[tokens.length - 1];
        if (last[0] === ';') {
            this.semicolon = true;
            tokens.pop();
        }
        if (last[4]) {
            node.source.end = { line: last[4], column: last[5] };
        } else {
            node.source.end = { line: last[2], column: last[3] };
        }

        while (tokens[0][0] !== 'word') {
            node.raws.before += tokens.shift()[1];
        }
        node.source.start = { line: tokens[0][2], column: tokens[0][3] };

        node.prop = '';
        while (tokens.length) {
            var type = tokens[0][0];
            if (type === ':' || type === 'space' || type === 'comment') {
                break;
            }
            node.prop += tokens.shift()[1];
        }

        node.raws.between = '';

        var token = void 0;
        while (tokens.length) {
            token = tokens.shift();

            if (token[0] === ':') {
                node.raws.between += token[1];
                break;
            } else {
                node.raws.between += token[1];
            }
        }

        if (node.prop[0] === '_' || node.prop[0] === '*') {
            node.raws.before += node.prop[0];
            node.prop = node.prop.slice(1);
        }
        node.raws.between += this.spacesFromStart(tokens);
        this.precheckMissedSemicolon(tokens);

        for (var i = tokens.length - 1; i > 0; i--) {
            token = tokens[i];
            if (token[1] === '!important') {
                node.important = true;
                var string = this.stringFrom(tokens, i);
                string = this.spacesFromEnd(tokens) + string;
                if (string !== ' !important') node.raws.important = string;
                break;
            } else if (token[1] === 'important') {
                var cache = tokens.slice(0);
                var str = '';
                for (var j = i; j > 0; j--) {
                    var _type = cache[j][0];
                    if (str.trim().indexOf('!') === 0 && _type !== 'space') {
                        break;
                    }
                    str = cache.pop()[1] + str;
                }
                if (str.trim().indexOf('!') === 0) {
                    node.important = true;
                    node.raws.important = str;
                    tokens = cache;
                }
            }

            if (token[0] !== 'space' && token[0] !== 'comment') {
                break;
            }
        }

        this.raw(node, 'value', tokens);

        if (node.value.indexOf(':') !== -1) this.checkMissedSemicolon(tokens);
    };

    Parser.prototype.atrule = function atrule(token) {
        var node = new _atRule2.default();
        node.name = token[1].slice(1);
        if (node.name === '') {
            this.unnamedAtrule(node, token);
        }
        this.init(node, token[2], token[3]);

        var last = false;
        var open = false;
        var params = [];

        this.pos += 1;
        while (this.pos < this.tokens.length) {
            token = this.tokens[this.pos];

            if (token[0] === ';') {
                node.source.end = { line: token[2], column: token[3] };
                this.semicolon = true;
                break;
            } else if (token[0] === '{') {
                open = true;
                break;
            } else if (token[0] === '}') {
                this.end(token);
                break;
            } else {
                params.push(token);
            }

            this.pos += 1;
        }
        if (this.pos === this.tokens.length) {
            last = true;
        }

        node.raws.between = this.spacesFromEnd(params);
        if (params.length) {
            node.raws.afterName = this.spacesFromStart(params);
            this.raw(node, 'params', params);
            if (last) {
                token = params[params.length - 1];
                node.source.end = { line: token[4], column: token[5] };
                this.spaces = node.raws.between;
                node.raws.between = '';
            }
        } else {
            node.raws.afterName = '';
            node.params = '';
        }

        if (open) {
            node.nodes = [];
            this.current = node;
        }
    };

    Parser.prototype.end = function end(token) {
        if (this.current.nodes && this.current.nodes.length) {
            this.current.raws.semicolon = this.semicolon;
        }
        this.semicolon = false;

        this.current.raws.after = (this.current.raws.after || '') + this.spaces;
        this.spaces = '';

        if (this.current.parent) {
            this.current.source.end = { line: token[2], column: token[3] };
            this.current = this.current.parent;
        } else {
            this.unexpectedClose(token);
        }
    };

    Parser.prototype.endFile = function endFile() {
        if (this.current.parent) this.unclosedBlock();
        if (this.current.nodes && this.current.nodes.length) {
            this.current.raws.semicolon = this.semicolon;
        }
        this.current.raws.after = (this.current.raws.after || '') + this.spaces;
    };

    Parser.prototype.init = function init(node, line, column) {
        this.current.push(node);

        node.source = { start: { line: line, column: column }, input: this.input };
        node.raws.before = this.spaces;
        this.spaces = '';
        if (node.type !== 'comment') this.semicolon = false;
    };

    Parser.prototype.raw = function raw(node, prop, tokens) {
        var token = void 0,
            type = void 0;
        var length = tokens.length;
        var value = '';
        var clean = true;
        for (var i = 0; i < length; i += 1) {
            token = tokens[i];
            type = token[0];
            if (type === 'comment' || type === 'space' && i === length - 1) {
                clean = false;
            } else {
                value += token[1];
            }
        }
        if (!clean) {
            var raw = tokens.reduce(function (all, i) {
                return all + i[1];
            }, '');
            node.raws[prop] = { value: value, raw: raw };
        }
        node[prop] = value;
    };

    Parser.prototype.spacesFromEnd = function spacesFromEnd(tokens) {
        var lastTokenType = void 0;
        var spaces = '';
        while (tokens.length) {
            lastTokenType = tokens[tokens.length - 1][0];
            if (lastTokenType !== 'space' && lastTokenType !== 'comment') break;
            spaces = tokens.pop()[1] + spaces;
        }
        return spaces;
    };

    Parser.prototype.spacesFromStart = function spacesFromStart(tokens) {
        var next = void 0;
        var spaces = '';
        while (tokens.length) {
            next = tokens[0][0];
            if (next !== 'space' && next !== 'comment') break;
            spaces += tokens.shift()[1];
        }
        return spaces;
    };

    Parser.prototype.stringFrom = function stringFrom(tokens, from) {
        var result = '';
        for (var i = from; i < tokens.length; i++) {
            result += tokens[i][1];
        }
        tokens.splice(from, tokens.length - from);
        return result;
    };

    Parser.prototype.colon = function colon(tokens) {
        var brackets = 0;
        var token = void 0,
            type = void 0,
            prev = void 0;
        for (var i = 0; i < tokens.length; i++) {
            token = tokens[i];
            type = token[0];

            if (type === '(') {
                brackets += 1;
            } else if (type === ')') {
                brackets -= 1;
            } else if (brackets === 0 && type === ':') {
                if (!prev) {
                    this.doubleColon(token);
                } else if (prev[0] === 'word' && prev[1] === 'progid') {
                    continue;
                } else {
                    return i;
                }
            }

            prev = token;
        }
        return false;
    };

    Parser.prototype.unclosedBracket = function unclosedBracket(bracket) {
        throw this.input.error('Unclosed bracket', bracket[2], bracket[3]);
    };

    Parser.prototype.unknownWord = function unknownWord(start) {
        var token = this.tokens[start];
        throw this.input.error('Unknown word', token[2], token[3]);
    };

    Parser.prototype.unexpectedClose = function unexpectedClose(token) {
        throw this.input.error('Unexpected }', token[2], token[3]);
    };

    Parser.prototype.unclosedBlock = function unclosedBlock() {
        var pos = this.current.source.start;
        throw this.input.error('Unclosed block', pos.line, pos.column);
    };

    Parser.prototype.doubleColon = function doubleColon(token) {
        throw this.input.error('Double colon', token[2], token[3]);
    };

    Parser.prototype.unnamedAtrule = function unnamedAtrule(node, token) {
        throw this.input.error('At-rule without name', token[2], token[3]);
    };

    Parser.prototype.precheckMissedSemicolon = function precheckMissedSemicolon(tokens) {
        tokens;
    };

    Parser.prototype.checkMissedSemicolon = function checkMissedSemicolon(tokens) {
        var colon = this.colon(tokens);
        if (colon === false) return;

        var founded = 0;
        var token = void 0;
        for (var j = colon - 1; j >= 0; j--) {
            token = tokens[j];
            if (token[0] !== 'space') {
                founded += 1;
                if (founded === 2) break;
            }
        }
        throw this.input.error('Missed semicolon', token[2], token[3]);
    };

    return Parser;
}();

exports.default = Parser;
module.exports = exports['default'];
}, 544, null, "styled-components/lib/vendor/postcss/parser.js");
__d(/* styled-components/lib/vendor/postcss/declaration.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

var _warnOnce = require(546          ); // 546 = ./warn-once

var _warnOnce2 = _interopRequireDefault(_warnOnce);

var _node = require(547     ); // 547 = ./node

var _node2 = _interopRequireDefault(_node);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

function _possibleConstructorReturn(self, call) {
    if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var Declaration = function (_Node) {
    _inherits(Declaration, _Node);

    function Declaration(defaults) {
        _classCallCheck(this, Declaration);

        var _this = _possibleConstructorReturn(this, _Node.call(this, defaults));

        _this.type = 'decl';
        return _this;
    }

    _createClass(Declaration, [{
        key: '_value',
        get: function get() {
            (0, _warnOnce2.default)('Node#_value was deprecated. Use Node#raws.value');
            return this.raws.value;
        },
        set: function set(val) {
            (0, _warnOnce2.default)('Node#_value was deprecated. Use Node#raws.value');
            this.raws.value = val;
        }
    }, {
        key: '_important',
        get: function get() {
            (0, _warnOnce2.default)('Node#_important was deprecated. Use Node#raws.important');
            return this.raws.important;
        },
        set: function set(val) {
            (0, _warnOnce2.default)('Node#_important was deprecated. Use Node#raws.important');
            this.raws.important = val;
        }

    }]);

    return Declaration;
}(_node2.default);

exports.default = Declaration;
module.exports = exports['default'];
}, 545, null, "styled-components/lib/vendor/postcss/declaration.js");
__d(/* styled-components/lib/vendor/postcss/warn-once.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = warnOnce;
var printed = {};

function warnOnce(message) {
    if (printed[message]) return;
    printed[message] = true;

    if (typeof console !== 'undefined' && console.warn) console.warn(message);
}
module.exports = exports['default'];
}, 546, null, "styled-components/lib/vendor/postcss/warn-once.js");
__d(/* styled-components/lib/vendor/postcss/node.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
    return typeof obj;
} : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
};

var _cssSyntaxError = require(548                 ); // 548 = ./css-syntax-error

var _cssSyntaxError2 = _interopRequireDefault(_cssSyntaxError);

var _stringifier = require(552            ); // 552 = ./stringifier

var _stringifier2 = _interopRequireDefault(_stringifier);

var _stringify = require(553          ); // 553 = ./stringify

var _stringify2 = _interopRequireDefault(_stringify);

var _warnOnce = require(546          ); // 546 = ./warn-once

var _warnOnce2 = _interopRequireDefault(_warnOnce);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var cloneNode = function cloneNode(obj, parent) {
    var cloned = new obj.constructor();

    for (var i in obj) {
        if (!obj.hasOwnProperty(i)) continue;
        var value = obj[i];
        var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);

        if (i === 'parent' && type === 'object') {
            if (parent) cloned[i] = parent;
        } else if (i === 'source') {
            cloned[i] = value;
        } else if (value instanceof Array) {
            cloned[i] = value.map(function (j) {
                return cloneNode(j, cloned);
            });
        } else if (i !== 'before' && i !== 'after' && i !== 'between' && i !== 'semicolon') {
            if (type === 'object' && value !== null) value = cloneNode(value);
            cloned[i] = value;
        }
    }

    return cloned;
};

var Node = function () {
    function Node() {
        var defaults = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        _classCallCheck(this, Node);

        this.raws = {};
        for (var name in defaults) {
            this[name] = defaults[name];
        }
    }

    Node.prototype.error = function error(message) {
        var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        if (this.source) {
            var pos = this.positionBy(opts);
            return this.source.input.error(message, pos.line, pos.column, opts);
        } else {
            return new _cssSyntaxError2.default(message);
        }
    };

    Node.prototype.warn = function warn(result, text, opts) {
        var data = { node: this };
        for (var i in opts) {
            data[i] = opts[i];
        }return result.warn(text, data);
    };

    Node.prototype.remove = function remove() {
        if (this.parent) {
            this.parent.removeChild(this);
        }
        this.parent = undefined;
        return this;
    };

    Node.prototype.toString = function toString() {
        var stringifier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _stringify2.default;

        if (stringifier.stringify) stringifier = stringifier.stringify;
        var result = '';
        stringifier(this, function (i) {
            result += i;
        });
        return result;
    };

    Node.prototype.clone = function clone() {
        var overrides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        var cloned = cloneNode(this);
        for (var name in overrides) {
            cloned[name] = overrides[name];
        }
        return cloned;
    };

    Node.prototype.cloneBefore = function cloneBefore() {
        var overrides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        var cloned = this.clone(overrides);
        this.parent.insertBefore(this, cloned);
        return cloned;
    };

    Node.prototype.cloneAfter = function cloneAfter() {
        var overrides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        var cloned = this.clone(overrides);
        this.parent.insertAfter(this, cloned);
        return cloned;
    };

    Node.prototype.replaceWith = function replaceWith() {
        var _this = this;

        if (this.parent) {
            for (var _len = arguments.length, nodes = Array(_len), _key = 0; _key < _len; _key++) {
                nodes[_key] = arguments[_key];
            }

            nodes.forEach(function (node) {
                _this.parent.insertBefore(_this, node);
            });

            this.remove();
        }

        return this;
    };

    Node.prototype.moveTo = function moveTo(newParent) {
        this.cleanRaws(this.root() === newParent.root());
        this.remove();
        newParent.append(this);
        return this;
    };

    Node.prototype.moveBefore = function moveBefore(otherNode) {
        this.cleanRaws(this.root() === otherNode.root());
        this.remove();
        otherNode.parent.insertBefore(otherNode, this);
        return this;
    };

    Node.prototype.moveAfter = function moveAfter(otherNode) {
        this.cleanRaws(this.root() === otherNode.root());
        this.remove();
        otherNode.parent.insertAfter(otherNode, this);
        return this;
    };

    Node.prototype.next = function next() {
        var index = this.parent.index(this);
        return this.parent.nodes[index + 1];
    };

    Node.prototype.prev = function prev() {
        var index = this.parent.index(this);
        return this.parent.nodes[index - 1];
    };

    Node.prototype.toJSON = function toJSON() {
        var fixed = {};

        for (var name in this) {
            if (!this.hasOwnProperty(name)) continue;
            if (name === 'parent') continue;
            var value = this[name];

            if (value instanceof Array) {
                fixed[name] = value.map(function (i) {
                    if ((typeof i === 'undefined' ? 'undefined' : _typeof(i)) === 'object' && i.toJSON) {
                        return i.toJSON();
                    } else {
                        return i;
                    }
                });
            } else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value.toJSON) {
                fixed[name] = value.toJSON();
            } else {
                fixed[name] = value;
            }
        }

        return fixed;
    };

    Node.prototype.raw = function raw(prop, defaultType) {
        var str = new _stringifier2.default();
        return str.raw(this, prop, defaultType);
    };

    Node.prototype.root = function root() {
        var result = this;
        while (result.parent) {
            result = result.parent;
        }return result;
    };

    Node.prototype.cleanRaws = function cleanRaws(keepBetween) {
        delete this.raws.before;
        delete this.raws.after;
        if (!keepBetween) delete this.raws.between;
    };

    Node.prototype.positionInside = function positionInside(index) {
        var string = this.toString();
        var column = this.source.start.column;
        var line = this.source.start.line;

        for (var i = 0; i < index; i++) {
            if (string[i] === '\n') {
                column = 1;
                line += 1;
            } else {
                column += 1;
            }
        }

        return { line: line, column: column };
    };

    Node.prototype.positionBy = function positionBy(opts) {
        var pos = this.source.start;
        if (opts.index) {
            pos = this.positionInside(opts.index);
        } else if (opts.word) {
            var index = this.toString().indexOf(opts.word);
            if (index !== -1) pos = this.positionInside(index);
        }
        return pos;
    };

    Node.prototype.removeSelf = function removeSelf() {
        (0, _warnOnce2.default)('Node#removeSelf is deprecated. Use Node#remove.');
        return this.remove();
    };

    Node.prototype.replace = function replace(nodes) {
        (0, _warnOnce2.default)('Node#replace is deprecated. Use Node#replaceWith');
        return this.replaceWith(nodes);
    };

    Node.prototype.style = function style(own, detect) {
        (0, _warnOnce2.default)('Node#style() is deprecated. Use Node#raw()');
        return this.raw(own, detect);
    };

    Node.prototype.cleanStyles = function cleanStyles(keepBetween) {
        (0, _warnOnce2.default)('Node#cleanStyles() is deprecated. Use Node#cleanRaws()');
        return this.cleanRaws(keepBetween);
    };

    _createClass(Node, [{
        key: 'before',
        get: function get() {
            (0, _warnOnce2.default)('Node#before is deprecated. Use Node#raws.before');
            return this.raws.before;
        },
        set: function set(val) {
            (0, _warnOnce2.default)('Node#before is deprecated. Use Node#raws.before');
            this.raws.before = val;
        }
    }, {
        key: 'between',
        get: function get() {
            (0, _warnOnce2.default)('Node#between is deprecated. Use Node#raws.between');
            return this.raws.between;
        },
        set: function set(val) {
            (0, _warnOnce2.default)('Node#between is deprecated. Use Node#raws.between');
            this.raws.between = val;
        }

    }]);

    return Node;
}();

exports.default = Node;
module.exports = exports['default'];
}, 547, null, "styled-components/lib/vendor/postcss/node.js");
__d(/* styled-components/lib/vendor/postcss/css-syntax-error.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

var _supportsColor = require(549             ); // 549 = supports-color

var _supportsColor2 = _interopRequireDefault(_supportsColor);

var _terminalHighlight = require(550                   ); // 550 = ./terminal-highlight

var _terminalHighlight2 = _interopRequireDefault(_terminalHighlight);

var _warnOnce = require(546          ); // 546 = ./warn-once

var _warnOnce2 = _interopRequireDefault(_warnOnce);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var CssSyntaxError = function () {
    function CssSyntaxError(message, line, column, source, file, plugin) {
        _classCallCheck(this, CssSyntaxError);

        this.name = 'CssSyntaxError';

        this.reason = message;

        if (file) {
            this.file = file;
        }
        if (source) {
            this.source = source;
        }
        if (plugin) {
            this.plugin = plugin;
        }
        if (typeof line !== 'undefined' && typeof column !== 'undefined') {
            this.line = line;

            this.column = column;
        }

        this.setMessage();

        if (Error.captureStackTrace) {
            Error.captureStackTrace(this, CssSyntaxError);
        }
    }

    CssSyntaxError.prototype.setMessage = function setMessage() {
        this.message = this.plugin ? this.plugin + ': ' : '';
        this.message += this.file ? this.file : '<css input>';
        if (typeof this.line !== 'undefined') {
            this.message += ':' + this.line + ':' + this.column;
        }
        this.message += ': ' + this.reason;
    };

    CssSyntaxError.prototype.showSourceCode = function showSourceCode(color) {
        var _this = this;

        if (!this.source) return '';

        var css = this.source;
        if (typeof color === 'undefined') color = _supportsColor2.default;
        if (color) css = (0, _terminalHighlight2.default)(css);

        var lines = css.split(/\r?\n/);
        var start = Math.max(this.line - 3, 0);
        var end = Math.min(this.line + 2, lines.length);

        var maxWidth = String(end).length;

        return lines.slice(start, end).map(function (line, index) {
            var number = start + 1 + index;
            var padded = (' ' + number).slice(-maxWidth);
            var gutter = ' ' + padded + ' | ';
            if (number === _this.line) {
                var spacing = gutter.replace(/\d/g, ' ') + line.slice(0, _this.column - 1).replace(/[^\t]/g, ' ');
                return '>' + gutter + line + '\n ' + spacing + '^';
            } else {
                return ' ' + gutter + line;
            }
        }).join('\n');
    };

    CssSyntaxError.prototype.toString = function toString() {
        var code = this.showSourceCode();
        if (code) {
            code = '\n\n' + code + '\n';
        }
        return this.name + ': ' + this.message + code;
    };

    _createClass(CssSyntaxError, [{
        key: 'generated',
        get: function get() {
            (0, _warnOnce2.default)('CssSyntaxError#generated is depreacted. Use input instead.');
            return this.input;
        }

    }]);

    return CssSyntaxError;
}();

exports.default = CssSyntaxError;
module.exports = exports['default'];
}, 548, null, "styled-components/lib/vendor/postcss/css-syntax-error.js");
__d(/* supports-color/browser.js */function(global, require, module, exports) {'use strict';

module.exports = false;
}, 549, null, "supports-color/browser.js");
__d(/* styled-components/lib/vendor/postcss/terminal-highlight.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _tokenize = require(551         ); // 551 = ./tokenize

var _tokenize2 = _interopRequireDefault(_tokenize);

var _input = require(538      ); // 538 = ./input

var _input2 = _interopRequireDefault(_input);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

var HIGHLIGHT_THEME = {
    'brackets': [36, 39],
    'string': [31, 39],
    'at-word': [31, 39],
    'comment': [90, 39],
    '{': [32, 39],
    '}': [32, 39],
    ':': [1, 22],
    ';': [1, 22],
    '(': [1, 22],
    ')': [1, 22] };

function code(color) {
    return '\x1B[' + color + 'm';
}

function terminalHighlight(css) {
    var tokens = (0, _tokenize2.default)(new _input2.default(css), { ignoreErrors: true });
    var result = [];
    tokens.forEach(function (token) {
        var color = HIGHLIGHT_THEME[token[0]];
        if (color) {
            result.push(token[1].split(/\r?\n/).map(function (i) {
                return code(color[0]) + i + code(color[1]);
            }).join('\n'));
        } else {
            result.push(token[1]);
        }
    });
    return result.join('');
}

exports.default = terminalHighlight;
module.exports = exports['default'];
}, 550, null, "styled-components/lib/vendor/postcss/terminal-highlight.js");
__d(/* styled-components/lib/vendor/postcss/tokenize.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = tokenize;
var SINGLE_QUOTE = '\''.charCodeAt(0);
var DOUBLE_QUOTE = '"'.charCodeAt(0);
var BACKSLASH = '\\'.charCodeAt(0);
var SLASH = '/'.charCodeAt(0);
var NEWLINE = '\n'.charCodeAt(0);
var SPACE = ' '.charCodeAt(0);
var FEED = '\f'.charCodeAt(0);
var TAB = '\t'.charCodeAt(0);
var CR = '\r'.charCodeAt(0);
var OPEN_SQUARE = '['.charCodeAt(0);
var CLOSE_SQUARE = ']'.charCodeAt(0);
var OPEN_PARENTHESES = '('.charCodeAt(0);
var CLOSE_PARENTHESES = ')'.charCodeAt(0);
var OPEN_CURLY = '{'.charCodeAt(0);
var CLOSE_CURLY = '}'.charCodeAt(0);
var SEMICOLON = ';'.charCodeAt(0);
var ASTERISK = '*'.charCodeAt(0);
var COLON = ':'.charCodeAt(0);
var AT = '@'.charCodeAt(0);

var RE_AT_END = /[ \n\t\r\f\{\(\)'"\\;/\[\]#]/g;
var RE_WORD_END = /[ \n\t\r\f\(\)\{\}:;@!'"\\\]\[#]|\/(?=\*)/g;
var RE_BAD_BRACKET = /.[\\\/\("'\n]/;

function tokenize(input) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var tokens = [];
    var css = input.css.valueOf();

    var ignore = options.ignoreErrors;

    var code = void 0,
        next = void 0,
        quote = void 0,
        lines = void 0,
        last = void 0,
        content = void 0,
        escape = void 0,
        nextLine = void 0,
        nextOffset = void 0,
        escaped = void 0,
        escapePos = void 0,
        prev = void 0,
        n = void 0;

    var length = css.length;
    var offset = -1;
    var line = 1;
    var pos = 0;

    function unclosed(what) {
        throw input.error('Unclosed ' + what, line, pos - offset);
    }

    while (pos < length) {
        code = css.charCodeAt(pos);

        if (code === NEWLINE || code === FEED || code === CR && css.charCodeAt(pos + 1) !== NEWLINE) {
            offset = pos;
            line += 1;
        }

        switch (code) {
            case NEWLINE:
            case SPACE:
            case TAB:
            case CR:
            case FEED:
                next = pos;
                do {
                    next += 1;
                    code = css.charCodeAt(next);
                    if (code === NEWLINE) {
                        offset = next;
                        line += 1;
                    }
                } while (code === SPACE || code === NEWLINE || code === TAB || code === CR || code === FEED);

                tokens.push(['space', css.slice(pos, next)]);
                pos = next - 1;
                break;

            case OPEN_SQUARE:
                tokens.push(['[', '[', line, pos - offset]);
                break;

            case CLOSE_SQUARE:
                tokens.push([']', ']', line, pos - offset]);
                break;

            case OPEN_CURLY:
                tokens.push(['{', '{', line, pos - offset]);
                break;

            case CLOSE_CURLY:
                tokens.push(['}', '}', line, pos - offset]);
                break;

            case COLON:
                tokens.push([':', ':', line, pos - offset]);
                break;

            case SEMICOLON:
                tokens.push([';', ';', line, pos - offset]);
                break;

            case OPEN_PARENTHESES:
                prev = tokens.length ? tokens[tokens.length - 1][1] : '';
                n = css.charCodeAt(pos + 1);
                if (prev === 'url' && n !== SINGLE_QUOTE && n !== DOUBLE_QUOTE && n !== SPACE && n !== NEWLINE && n !== TAB && n !== FEED && n !== CR) {
                    next = pos;
                    do {
                        escaped = false;
                        next = css.indexOf(')', next + 1);
                        if (next === -1) {
                            if (ignore) {
                                next = pos;
                                break;
                            } else {
                                unclosed('bracket');
                            }
                        }
                        escapePos = next;
                        while (css.charCodeAt(escapePos - 1) === BACKSLASH) {
                            escapePos -= 1;
                            escaped = !escaped;
                        }
                    } while (escaped);

                    tokens.push(['brackets', css.slice(pos, next + 1), line, pos - offset, line, next - offset]);
                    pos = next;
                } else {
                    next = css.indexOf(')', pos + 1);
                    content = css.slice(pos, next + 1);

                    if (next === -1 || RE_BAD_BRACKET.test(content)) {
                        tokens.push(['(', '(', line, pos - offset]);
                    } else {
                        tokens.push(['brackets', content, line, pos - offset, line, next - offset]);
                        pos = next;
                    }
                }

                break;

            case CLOSE_PARENTHESES:
                tokens.push([')', ')', line, pos - offset]);
                break;

            case SINGLE_QUOTE:
            case DOUBLE_QUOTE:
                quote = code === SINGLE_QUOTE ? '\'' : '"';
                next = pos;
                do {
                    escaped = false;
                    next = css.indexOf(quote, next + 1);
                    if (next === -1) {
                        if (ignore) {
                            next = pos + 1;
                            break;
                        } else {
                            unclosed('quote');
                        }
                    }
                    escapePos = next;
                    while (css.charCodeAt(escapePos - 1) === BACKSLASH) {
                        escapePos -= 1;
                        escaped = !escaped;
                    }
                } while (escaped);

                content = css.slice(pos, next + 1);
                lines = content.split('\n');
                last = lines.length - 1;

                if (last > 0) {
                    nextLine = line + last;
                    nextOffset = next - lines[last].length;
                } else {
                    nextLine = line;
                    nextOffset = offset;
                }

                tokens.push(['string', css.slice(pos, next + 1), line, pos - offset, nextLine, next - nextOffset]);

                offset = nextOffset;
                line = nextLine;
                pos = next;
                break;

            case AT:
                RE_AT_END.lastIndex = pos + 1;
                RE_AT_END.test(css);
                if (RE_AT_END.lastIndex === 0) {
                    next = css.length - 1;
                } else {
                    next = RE_AT_END.lastIndex - 2;
                }
                tokens.push(['at-word', css.slice(pos, next + 1), line, pos - offset, line, next - offset]);
                pos = next;
                break;

            case BACKSLASH:
                next = pos;
                escape = true;
                while (css.charCodeAt(next + 1) === BACKSLASH) {
                    next += 1;
                    escape = !escape;
                }
                code = css.charCodeAt(next + 1);
                if (escape && code !== SLASH && code !== SPACE && code !== NEWLINE && code !== TAB && code !== CR && code !== FEED) {
                    next += 1;
                }
                tokens.push(['word', css.slice(pos, next + 1), line, pos - offset, line, next - offset]);
                pos = next;
                break;

            default:
                if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {
                    next = css.indexOf('*/', pos + 2) + 1;
                    if (next === 0) {
                        if (ignore) {
                            next = css.length;
                        } else {
                            unclosed('comment');
                        }
                    }

                    content = css.slice(pos, next + 1);
                    lines = content.split('\n');
                    last = lines.length - 1;

                    if (last > 0) {
                        nextLine = line + last;
                        nextOffset = next - lines[last].length;
                    } else {
                        nextLine = line;
                        nextOffset = offset;
                    }

                    tokens.push(['comment', content, line, pos - offset, nextLine, next - nextOffset]);

                    offset = nextOffset;
                    line = nextLine;
                    pos = next;
                } else {
                    RE_WORD_END.lastIndex = pos + 1;
                    RE_WORD_END.test(css);
                    if (RE_WORD_END.lastIndex === 0) {
                        next = css.length - 1;
                    } else {
                        next = RE_WORD_END.lastIndex - 2;
                    }

                    tokens.push(['word', css.slice(pos, next + 1), line, pos - offset, line, next - offset]);
                    pos = next;
                }

                break;
        }

        pos++;
    }

    return tokens;
}
module.exports = exports['default'];
}, 551, null, "styled-components/lib/vendor/postcss/tokenize.js");
__d(/* styled-components/lib/vendor/postcss/stringifier.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var defaultRaw = {
    colon: ': ',
    indent: '    ',
    beforeDecl: '\n',
    beforeRule: '\n',
    beforeOpen: ' ',
    beforeClose: '\n',
    beforeComment: '\n',
    after: '\n',
    emptyBody: '',
    commentLeft: ' ',
    commentRight: ' '
};

function capitalize(str) {
    return str[0].toUpperCase() + str.slice(1);
}

var Stringifier = function () {
    function Stringifier(builder) {
        _classCallCheck(this, Stringifier);

        this.builder = builder;
    }

    Stringifier.prototype.stringify = function stringify(node, semicolon) {
        this[node.type](node, semicolon);
    };

    Stringifier.prototype.root = function root(node) {
        this.body(node);
        if (node.raws.after) this.builder(node.raws.after);
    };

    Stringifier.prototype.comment = function comment(node) {
        var left = this.raw(node, 'left', 'commentLeft');
        var right = this.raw(node, 'right', 'commentRight');
        this.builder('/*' + left + node.text + right + '*/', node);
    };

    Stringifier.prototype.decl = function decl(node, semicolon) {
        var between = this.raw(node, 'between', 'colon');
        var string = node.prop + between + this.rawValue(node, 'value');

        if (node.important) {
            string += node.raws.important || ' !important';
        }

        if (semicolon) string += ';';
        this.builder(string, node);
    };

    Stringifier.prototype.rule = function rule(node) {
        this.block(node, this.rawValue(node, 'selector'));
    };

    Stringifier.prototype.atrule = function atrule(node, semicolon) {
        var name = '@' + node.name;
        var params = node.params ? this.rawValue(node, 'params') : '';

        if (typeof node.raws.afterName !== 'undefined') {
            name += node.raws.afterName;
        } else if (params) {
            name += ' ';
        }

        if (node.nodes) {
            this.block(node, name + params);
        } else {
            var end = (node.raws.between || '') + (semicolon ? ';' : '');
            this.builder(name + params + end, node);
        }
    };

    Stringifier.prototype.body = function body(node) {
        var last = node.nodes.length - 1;
        while (last > 0) {
            if (node.nodes[last].type !== 'comment') break;
            last -= 1;
        }

        var semicolon = this.raw(node, 'semicolon');
        for (var i = 0; i < node.nodes.length; i++) {
            var child = node.nodes[i];
            var before = this.raw(child, 'before');
            if (before) this.builder(before);
            this.stringify(child, last !== i || semicolon);
        }
    };

    Stringifier.prototype.block = function block(node, start) {
        var between = this.raw(node, 'between', 'beforeOpen');
        this.builder(start + between + '{', node, 'start');

        var after = void 0;
        if (node.nodes && node.nodes.length) {
            this.body(node);
            after = this.raw(node, 'after');
        } else {
            after = this.raw(node, 'after', 'emptyBody');
        }

        if (after) this.builder(after);
        this.builder('}', node, 'end');
    };

    Stringifier.prototype.raw = function raw(node, own, detect) {
        var value = void 0;
        if (!detect) detect = own;

        if (own) {
            value = node.raws[own];
            if (typeof value !== 'undefined') return value;
        }

        var parent = node.parent;

        if (detect === 'before') {
            if (!parent || parent.type === 'root' && parent.first === node) {
                return '';
            }
        }

        if (!parent) return defaultRaw[detect];

        var root = node.root();
        if (!root.rawCache) root.rawCache = {};
        if (typeof root.rawCache[detect] !== 'undefined') {
            return root.rawCache[detect];
        }

        if (detect === 'before' || detect === 'after') {
            return this.beforeAfter(node, detect);
        } else {
            var method = 'raw' + capitalize(detect);
            if (this[method]) {
                value = this[method](root, node);
            } else {
                root.walk(function (i) {
                    value = i.raws[own];
                    if (typeof value !== 'undefined') return false;
                });
            }
        }

        if (typeof value === 'undefined') value = defaultRaw[detect];

        root.rawCache[detect] = value;
        return value;
    };

    Stringifier.prototype.rawSemicolon = function rawSemicolon(root) {
        var value = void 0;
        root.walk(function (i) {
            if (i.nodes && i.nodes.length && i.last.type === 'decl') {
                value = i.raws.semicolon;
                if (typeof value !== 'undefined') return false;
            }
        });
        return value;
    };

    Stringifier.prototype.rawEmptyBody = function rawEmptyBody(root) {
        var value = void 0;
        root.walk(function (i) {
            if (i.nodes && i.nodes.length === 0) {
                value = i.raws.after;
                if (typeof value !== 'undefined') return false;
            }
        });
        return value;
    };

    Stringifier.prototype.rawIndent = function rawIndent(root) {
        if (root.raws.indent) return root.raws.indent;
        var value = void 0;
        root.walk(function (i) {
            var p = i.parent;
            if (p && p !== root && p.parent && p.parent === root) {
                if (typeof i.raws.before !== 'undefined') {
                    var parts = i.raws.before.split('\n');
                    value = parts[parts.length - 1];
                    value = value.replace(/[^\s]/g, '');
                    return false;
                }
            }
        });
        return value;
    };

    Stringifier.prototype.rawBeforeComment = function rawBeforeComment(root, node) {
        var value = void 0;
        root.walkComments(function (i) {
            if (typeof i.raws.before !== 'undefined') {
                value = i.raws.before;
                if (value.indexOf('\n') !== -1) {
                    value = value.replace(/[^\n]+$/, '');
                }
                return false;
            }
        });
        if (typeof value === 'undefined') {
            value = this.raw(node, null, 'beforeDecl');
        }
        return value;
    };

    Stringifier.prototype.rawBeforeDecl = function rawBeforeDecl(root, node) {
        var value = void 0;
        root.walkDecls(function (i) {
            if (typeof i.raws.before !== 'undefined') {
                value = i.raws.before;
                if (value.indexOf('\n') !== -1) {
                    value = value.replace(/[^\n]+$/, '');
                }
                return false;
            }
        });
        if (typeof value === 'undefined') {
            value = this.raw(node, null, 'beforeRule');
        }
        return value;
    };

    Stringifier.prototype.rawBeforeRule = function rawBeforeRule(root) {
        var value = void 0;
        root.walk(function (i) {
            if (i.nodes && (i.parent !== root || root.first !== i)) {
                if (typeof i.raws.before !== 'undefined') {
                    value = i.raws.before;
                    if (value.indexOf('\n') !== -1) {
                        value = value.replace(/[^\n]+$/, '');
                    }
                    return false;
                }
            }
        });
        return value;
    };

    Stringifier.prototype.rawBeforeClose = function rawBeforeClose(root) {
        var value = void 0;
        root.walk(function (i) {
            if (i.nodes && i.nodes.length > 0) {
                if (typeof i.raws.after !== 'undefined') {
                    value = i.raws.after;
                    if (value.indexOf('\n') !== -1) {
                        value = value.replace(/[^\n]+$/, '');
                    }
                    return false;
                }
            }
        });
        return value;
    };

    Stringifier.prototype.rawBeforeOpen = function rawBeforeOpen(root) {
        var value = void 0;
        root.walk(function (i) {
            if (i.type !== 'decl') {
                value = i.raws.between;
                if (typeof value !== 'undefined') return false;
            }
        });
        return value;
    };

    Stringifier.prototype.rawColon = function rawColon(root) {
        var value = void 0;
        root.walkDecls(function (i) {
            if (typeof i.raws.between !== 'undefined') {
                value = i.raws.between.replace(/[^\s:]/g, '');
                return false;
            }
        });
        return value;
    };

    Stringifier.prototype.beforeAfter = function beforeAfter(node, detect) {
        var value = void 0;
        if (node.type === 'decl') {
            value = this.raw(node, null, 'beforeDecl');
        } else if (node.type === 'comment') {
            value = this.raw(node, null, 'beforeComment');
        } else if (detect === 'before') {
            value = this.raw(node, null, 'beforeRule');
        } else {
            value = this.raw(node, null, 'beforeClose');
        }

        var buf = node.parent;
        var depth = 0;
        while (buf && buf.type !== 'root') {
            depth += 1;
            buf = buf.parent;
        }

        if (value.indexOf('\n') !== -1) {
            var indent = this.raw(node, null, 'indent');
            if (indent.length) {
                for (var step = 0; step < depth; step++) {
                    value += indent;
                }
            }
        }

        return value;
    };

    Stringifier.prototype.rawValue = function rawValue(node, prop) {
        var value = node[prop];
        var raw = node.raws[prop];
        if (raw && raw.value === value) {
            return raw.raw;
        } else {
            return value;
        }
    };

    return Stringifier;
}();

exports.default = Stringifier;
module.exports = exports['default'];
}, 552, null, "styled-components/lib/vendor/postcss/stringifier.js");
__d(/* styled-components/lib/vendor/postcss/stringify.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = stringify;

var _stringifier = require(552            ); // 552 = ./stringifier

var _stringifier2 = _interopRequireDefault(_stringifier);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function stringify(node, builder) {
    var str = new _stringifier2.default(builder);
    str.stringify(node);
}
module.exports = exports['default'];
}, 553, null, "styled-components/lib/vendor/postcss/stringify.js");
__d(/* styled-components/lib/vendor/postcss/comment.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

var _warnOnce = require(546          ); // 546 = ./warn-once

var _warnOnce2 = _interopRequireDefault(_warnOnce);

var _node = require(547     ); // 547 = ./node

var _node2 = _interopRequireDefault(_node);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

function _possibleConstructorReturn(self, call) {
    if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var Comment = function (_Node) {
    _inherits(Comment, _Node);

    function Comment(defaults) {
        _classCallCheck(this, Comment);

        var _this = _possibleConstructorReturn(this, _Node.call(this, defaults));

        _this.type = 'comment';
        return _this;
    }

    _createClass(Comment, [{
        key: 'left',
        get: function get() {
            (0, _warnOnce2.default)('Comment#left was deprecated. Use Comment#raws.left');
            return this.raws.left;
        },
        set: function set(val) {
            (0, _warnOnce2.default)('Comment#left was deprecated. Use Comment#raws.left');
            this.raws.left = val;
        }
    }, {
        key: 'right',
        get: function get() {
            (0, _warnOnce2.default)('Comment#right was deprecated. Use Comment#raws.right');
            return this.raws.right;
        },
        set: function set(val) {
            (0, _warnOnce2.default)('Comment#right was deprecated. Use Comment#raws.right');
            this.raws.right = val;
        }

    }]);

    return Comment;
}(_node2.default);

exports.default = Comment;
module.exports = exports['default'];
}, 554, null, "styled-components/lib/vendor/postcss/comment.js");
__d(/* styled-components/lib/vendor/postcss/list.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var list = {
    split: function split(string, separators, last) {
        var array = [];
        var current = '';
        var split = false;

        var func = 0;
        var quote = false;
        var escape = false;

        for (var i = 0; i < string.length; i++) {
            var letter = string[i];

            if (quote) {
                if (escape) {
                    escape = false;
                } else if (letter === '\\') {
                    escape = true;
                } else if (letter === quote) {
                    quote = false;
                }
            } else if (letter === '"' || letter === '\'') {
                quote = letter;
            } else if (letter === '(') {
                func += 1;
            } else if (letter === ')') {
                if (func > 0) func -= 1;
            } else if (func === 0) {
                if (separators.indexOf(letter) !== -1) split = true;
            }

            if (split) {
                if (current !== '') array.push(current.trim());
                current = '';
                split = false;
            } else {
                current += letter;
            }
        }

        if (last || current !== '') array.push(current.trim());
        return array;
    },

    space: function space(string) {
        var spaces = [' ', '\n', '\t'];
        return list.split(string, spaces);
    },

    comma: function comma(string) {
        var comma = ',';
        return list.split(string, [comma], true);
    }
};

exports.default = list;
module.exports = exports['default'];
}, 555, null, "styled-components/lib/vendor/postcss/list.js");
__d(/* styled-components/lib/vendor/postcss/lazy-result.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
    return typeof obj;
} : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
};

var _stringify2 = require(553          ); // 553 = ./stringify

var _stringify3 = _interopRequireDefault(_stringify2);

var _warnOnce = require(546          ); // 546 = ./warn-once

var _warnOnce2 = _interopRequireDefault(_warnOnce);

var _result = require(557       ); // 557 = ./result

var _result2 = _interopRequireDefault(_result);

var _parse = require(543      ); // 543 = ./parse

var _parse2 = _interopRequireDefault(_parse);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

function isPromise(obj) {
    return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && typeof obj.then === 'function';
}

var LazyResult = function () {
    function LazyResult(processor, css, opts) {
        _classCallCheck(this, LazyResult);

        this.stringified = false;
        this.processed = false;

        var root = void 0;
        if ((typeof css === 'undefined' ? 'undefined' : _typeof(css)) === 'object' && css.type === 'root') {
            root = css;
        } else if (css instanceof LazyResult || css instanceof _result2.default) {
            root = css.root;
            if (css.map) {
                if (typeof opts.map === 'undefined') opts.map = {};
                if (!opts.map.inline) opts.map.inline = false;
                opts.map.prev = css.map;
            }
        } else {
            var parser = _parse2.default;
            if (opts.syntax) parser = opts.syntax.parse;
            if (opts.parser) parser = opts.parser;
            if (parser.parse) parser = parser.parse;

            try {
                root = parser(css, opts);
            } catch (error) {
                this.error = error;
            }
        }

        this.result = new _result2.default(processor, root, opts);
    }

    LazyResult.prototype.warnings = function warnings() {
        return this.sync().warnings();
    };

    LazyResult.prototype.toString = function toString() {
        return this.css;
    };

    LazyResult.prototype.then = function then(onFulfilled, onRejected) {
        return this.async().then(onFulfilled, onRejected);
    };

    LazyResult.prototype.catch = function _catch(onRejected) {
        return this.async().catch(onRejected);
    };

    LazyResult.prototype.handleError = function handleError(error, plugin) {
        try {
            this.error = error;
            if (error.name === 'CssSyntaxError' && !error.plugin) {
                error.plugin = plugin.postcssPlugin;
                error.setMessage();
            } else if (plugin.postcssVersion) {
                var pluginName = plugin.postcssPlugin;
                var pluginVer = plugin.postcssVersion;
                var runtimeVer = this.result.processor.version;
                var a = pluginVer.split('.');
                var b = runtimeVer.split('.');

                if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {
                    (0, _warnOnce2.default)('Your current PostCSS version ' + 'is ' + runtimeVer + ', but ' + pluginName + ' ' + 'uses ' + pluginVer + '. Perhaps this is ' + 'the source of the error below.');
                }
            }
        } catch (err) {
            if (console && console.error) console.error(err);
        }
    };

    LazyResult.prototype.asyncTick = function asyncTick(resolve, reject) {
        var _this = this;

        if (this.plugin >= this.processor.plugins.length) {
            this.processed = true;
            return resolve();
        }

        try {
            var plugin = this.processor.plugins[this.plugin];
            var promise = this.run(plugin);
            this.plugin += 1;

            if (isPromise(promise)) {
                promise.then(function () {
                    _this.asyncTick(resolve, reject);
                }).catch(function (error) {
                    _this.handleError(error, plugin);
                    _this.processed = true;
                    reject(error);
                });
            } else {
                this.asyncTick(resolve, reject);
            }
        } catch (error) {
            this.processed = true;
            reject(error);
        }
    };

    LazyResult.prototype.async = function async() {
        var _this2 = this;

        if (this.processed) {
            return new Promise(function (resolve, reject) {
                if (_this2.error) {
                    reject(_this2.error);
                } else {
                    resolve(_this2.stringify());
                }
            });
        }
        if (this.processing) {
            return this.processing;
        }

        this.processing = new Promise(function (resolve, reject) {
            if (_this2.error) return reject(_this2.error);
            _this2.plugin = 0;
            _this2.asyncTick(resolve, reject);
        }).then(function () {
            _this2.processed = true;
            return _this2.stringify();
        });

        return this.processing;
    };

    LazyResult.prototype.sync = function sync() {
        var _this3 = this;

        if (this.processed) return this.result;
        this.processed = true;

        if (this.processing) {
            throw new Error('Use process(css).then(cb) to work with async plugins');
        }

        if (this.error) throw this.error;

        this.result.processor.plugins.forEach(function (plugin) {
            var promise = _this3.run(plugin);
            if (isPromise(promise)) {
                throw new Error('Use process(css).then(cb) to work with async plugins');
            }
        });

        return this.result;
    };

    LazyResult.prototype.run = function run(plugin) {
        this.result.lastPlugin = plugin;

        try {
            return plugin(this.result.root, this.result);
        } catch (error) {
            this.handleError(error, plugin);
            throw error;
        }
    };

    LazyResult.prototype.stringify = function stringify() {
        if (this.stringified) return this.result;
        this.stringified = true;

        this.sync();

        var opts = this.result.opts;
        var str = _stringify3.default;
        if (opts.syntax) str = opts.syntax.stringify;
        if (opts.stringifier) str = opts.stringifier;
        if (str.stringify) str = str.stringify;

        var result = '';
        str(this.root, function (i) {
            result += i;
        });
        this.result.css = result;

        return this.result;
    };

    _createClass(LazyResult, [{
        key: 'processor',
        get: function get() {
            return this.result.processor;
        }

    }, {
        key: 'opts',
        get: function get() {
            return this.result.opts;
        }

    }, {
        key: 'css',
        get: function get() {
            return this.stringify().css;
        }

    }, {
        key: 'content',
        get: function get() {
            return this.stringify().content;
        }

    }, {
        key: 'map',
        get: function get() {
            return this.stringify().map;
        }

    }, {
        key: 'root',
        get: function get() {
            return this.sync().root;
        }

    }, {
        key: 'messages',
        get: function get() {
            return this.sync().messages;
        }
    }]);

    return LazyResult;
}();

exports.default = LazyResult;
module.exports = exports['default'];
}, 556, null, "styled-components/lib/vendor/postcss/lazy-result.js");
__d(/* styled-components/lib/vendor/postcss/result.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
    }
  }return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
  };
}();

var _warning = require(558        ); // 558 = ./warning

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

var Result = function () {
  function Result(processor, root, opts) {
    _classCallCheck(this, Result);

    this.processor = processor;

    this.messages = [];

    this.root = root;

    this.opts = opts;

    this.css = undefined;

    this.map = undefined;
  }

  Result.prototype.toString = function toString() {
    return this.css;
  };

  Result.prototype.warn = function warn(text) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    if (!opts.plugin) {
      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {
        opts.plugin = this.lastPlugin.postcssPlugin;
      }
    }

    var warning = new _warning2.default(text, opts);
    this.messages.push(warning);

    return warning;
  };

  Result.prototype.warnings = function warnings() {
    return this.messages.filter(function (i) {
      return i.type === 'warning';
    });
  };

  _createClass(Result, [{
    key: 'content',
    get: function get() {
      return this.css;
    }
  }]);

  return Result;
}();

exports.default = Result;
module.exports = exports['default'];
}, 557, null, "styled-components/lib/vendor/postcss/result.js");
__d(/* styled-components/lib/vendor/postcss/warning.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

var Warning = function () {
  function Warning(text) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, Warning);

    this.type = 'warning';

    this.text = text;

    if (opts.node && opts.node.source) {
      var pos = opts.node.positionBy(opts);

      this.line = pos.line;

      this.column = pos.column;
    }

    for (var opt in opts) {
      this[opt] = opts[opt];
    }
  }

  Warning.prototype.toString = function toString() {
    if (this.node) {
      return this.node.error(this.text, {
        plugin: this.plugin,
        index: this.index,
        word: this.word
      }).message;
    } else if (this.plugin) {
      return this.plugin + ': ' + this.text;
    } else {
      return this.text;
    }
  };

  return Warning;
}();

exports.default = Warning;
module.exports = exports['default'];
}, 558, null, "styled-components/lib/vendor/postcss/warning.js");
__d(/* styled-components/lib/vendor/postcss/processor.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _typeof = typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
};

var _lazyResult = require(556            ); // 556 = ./lazy-result

var _lazyResult2 = _interopRequireDefault(_lazyResult);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

var Processor = function () {
  function Processor() {
    var plugins = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

    _classCallCheck(this, Processor);

    this.version = '5.2.0';

    this.plugins = this.normalize(plugins);
  }

  Processor.prototype.use = function use(plugin) {
    this.plugins = this.plugins.concat(this.normalize([plugin]));
    return this;
  };

  Processor.prototype.process = function process(css) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    return new _lazyResult2.default(this, css, opts);
  };

  Processor.prototype.normalize = function normalize(plugins) {
    var normalized = [];
    plugins.forEach(function (i) {
      if (i.postcss) i = i.postcss;

      if ((typeof i === 'undefined' ? 'undefined' : _typeof(i)) === 'object' && Array.isArray(i.plugins)) {
        normalized = normalized.concat(i.plugins);
      } else if (typeof i === 'function') {
        normalized.push(i);
      } else {
        throw new Error(i + ' is not a PostCSS plugin');
      }
    });
    return normalized;
  };

  return Processor;
}();

exports.default = Processor;
module.exports = exports['default'];
}, 559, null, "styled-components/lib/vendor/postcss/processor.js");
__d(/* styled-components/lib/vendor/postcss-safe-parser/safe-parser.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _tokenize2 = require(551                  ); // 551 = ../postcss/tokenize

var _tokenize3 = _interopRequireDefault(_tokenize2);

var _comment = require(554                 ); // 554 = ../postcss/comment

var _comment2 = _interopRequireDefault(_comment);

var _parser = require(544                ); // 544 = ../postcss/parser

var _parser2 = _interopRequireDefault(_parser);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

function _possibleConstructorReturn(self, call) {
    if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var SafeParser = function (_Parser) {
    _inherits(SafeParser, _Parser);

    function SafeParser() {
        _classCallCheck(this, SafeParser);

        return _possibleConstructorReturn(this, _Parser.apply(this, arguments));
    }

    SafeParser.prototype.tokenize = function tokenize() {
        this.tokens = (0, _tokenize3.default)(this.input, { ignoreErrors: true });
    };

    SafeParser.prototype.comment = function comment(token) {
        var node = new _comment2.default();
        this.init(node, token[2], token[3]);
        node.source.end = { line: token[4], column: token[5] };

        var text = token[1].slice(2);
        if (text.slice(-2) === '*/') text = text.slice(0, -2);

        if (/^\s*$/.test(text)) {
            node.text = '';
            node.raws.left = text;
            node.raws.right = '';
        } else {
            var match = text.match(/^(\s*)([^]*[^\s])(\s*)$/);
            node.text = match[2];
            node.raws.left = match[1];
            node.raws.right = match[3];
        }
    };

    SafeParser.prototype.unclosedBracket = function unclosedBracket() {};

    SafeParser.prototype.unknownWord = function unknownWord(start) {
        var buffer = this.tokens.slice(start, this.pos + 1);
        this.spaces += buffer.map(function (i) {
            return i[1];
        }).join('');
    };

    SafeParser.prototype.unexpectedClose = function unexpectedClose() {
        this.current.raws.after += '}';
    };

    SafeParser.prototype.doubleColon = function doubleColon() {};

    SafeParser.prototype.unnamedAtrule = function unnamedAtrule(node) {
        node.name = '';
    };

    SafeParser.prototype.precheckMissedSemicolon = function precheckMissedSemicolon(tokens) {
        var colon = this.colon(tokens);
        if (colon === false) return;

        var split = void 0;
        for (split = colon - 1; split >= 0; split--) {
            if (tokens[split][0] === 'word') break;
        }
        for (split -= 1; split >= 0; split--) {
            if (tokens[split][0] !== 'space') {
                split += 1;
                break;
            }
        }
        var other = tokens.splice(split, tokens.length - split);
        this.decl(other);
    };

    SafeParser.prototype.checkMissedSemicolon = function checkMissedSemicolon() {};

    SafeParser.prototype.endFile = function endFile() {
        if (this.current.nodes && this.current.nodes.length) {
            this.current.raws.semicolon = this.semicolon;
        }
        this.current.raws.after = (this.current.raws.after || '') + this.spaces;

        while (this.current.parent) {
            this.current = this.current.parent;
            this.current.raws.after = '';
        }
    };

    return SafeParser;
}(_parser2.default);

exports.default = SafeParser;
module.exports = exports['default'];
}, 560, null, "styled-components/lib/vendor/postcss-safe-parser/safe-parser.js");
__d(/* styled-components/lib/models/StyledNativeComponent.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
    }
  }return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
  };
}();

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

var _react = require(35     ); // 35 = react

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = _interopRequireDefault(_propTypes);

var _isTag = require(562             ); // 562 = ../utils/isTag

var _isTag2 = _interopRequireDefault(_isTag);

var _isStyledComponent = require(563                         ); // 563 = ../utils/isStyledComponent

var _isStyledComponent2 = _interopRequireDefault(_isStyledComponent);

var _getComponentName = require(564                        ); // 564 = ../utils/getComponentName

var _getComponentName2 = _interopRequireDefault(_getComponentName);

var _determineTheme = require(565                      ); // 565 = ../utils/determineTheme

var _determineTheme2 = _interopRequireDefault(_determineTheme);

var _ThemeProvider = require(566              ); // 566 = ./ThemeProvider

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _objectWithoutProperties(obj, keys) {
  var target = {};for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
  }return target;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var babelPluginFlowReactPropTypes_proptype_Theme = require(566              ).babelPluginFlowReactPropTypes_proptype_Theme || require(126         ).any; // 126 = prop-types // 566 = ./ThemeProvider

var babelPluginFlowReactPropTypes_proptype_Target = require(536       ).babelPluginFlowReactPropTypes_proptype_Target || require(126         ).any; // 126 = prop-types // 536 = ../types

var babelPluginFlowReactPropTypes_proptype_RuleSet = require(536       ).babelPluginFlowReactPropTypes_proptype_RuleSet || require(126         ).any; // 126 = prop-types // 536 = ../types

exports.default = function (constructWithOptions, InlineStyle) {
  var BaseStyledNativeComponent = function (_Component) {
    _inherits(BaseStyledNativeComponent, _Component);

    function BaseStyledNativeComponent() {
      var _temp, _this, _ret;

      _classCallCheck(this, BaseStyledNativeComponent);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.attrs = {}, _this.state = {
        theme: null,
        generatedStyles: undefined
      }, _this.unsubscribeId = -1, _this.onRef = function (node) {
        var innerRef = _this.props.innerRef;

        _this.root = node;

        if (typeof innerRef === 'function') {
          innerRef(node);
        }
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    BaseStyledNativeComponent.prototype.unsubscribeFromContext = function unsubscribeFromContext() {
      if (this.unsubscribeId !== -1) {
        this.context[_ThemeProvider.CHANNEL_NEXT].unsubscribe(this.unsubscribeId);
      }
    };

    BaseStyledNativeComponent.prototype.buildExecutionContext = function buildExecutionContext(theme, props) {
      var attrs = this.constructor.attrs;

      var context = _extends({}, props, { theme: theme });
      if (attrs === undefined) {
        return context;
      }

      this.attrs = Object.keys(attrs).reduce(function (acc, key) {
        var attr = attrs[key];

        acc[key] = typeof attr === 'function' ? attr(context) : attr;
        return acc;
      }, {});

      return _extends({}, context, this.attrs);
    };

    BaseStyledNativeComponent.prototype.generateAndInjectStyles = function generateAndInjectStyles(theme, props) {
      var inlineStyle = this.constructor.inlineStyle;

      var executionContext = this.buildExecutionContext(theme, props);

      return inlineStyle.generateStyleObject(executionContext);
    };

    BaseStyledNativeComponent.prototype.componentWillMount = function componentWillMount() {
      var _this2 = this;

      var styledContext = this.context[_ThemeProvider.CHANNEL_NEXT];
      if (styledContext !== undefined) {
        var subscribe = styledContext.subscribe;

        this.unsubscribeId = subscribe(function (nextTheme) {
          var theme = (0, _determineTheme2.default)(_this2.props, nextTheme, _this2.constructor.defaultProps);
          var generatedStyles = _this2.generateAndInjectStyles(theme, _this2.props);

          _this2.setState({ theme: theme, generatedStyles: generatedStyles });
        });
      } else {
        var _theme = this.props.theme || {};
        var generatedStyles = this.generateAndInjectStyles(_theme, this.props);
        this.setState({ theme: _theme, generatedStyles: generatedStyles });
      }
    };

    BaseStyledNativeComponent.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      var _this3 = this;

      this.setState(function (oldState) {
        var theme = (0, _determineTheme2.default)(nextProps, oldState.theme, _this3.constructor.defaultProps);
        var generatedStyles = _this3.generateAndInjectStyles(theme, nextProps);

        return { theme: theme, generatedStyles: generatedStyles };
      });
    };

    BaseStyledNativeComponent.prototype.componentWillUnmount = function componentWillUnmount() {
      this.unsubscribeFromContext();
    };

    BaseStyledNativeComponent.prototype.setNativeProps = function setNativeProps(nativeProps) {
      if (this.root !== undefined) {
        this.root.setNativeProps(nativeProps);
      } else {
        var displayName = this.constructor.displayName;

        console.warn('setNativeProps was called on a Styled Component wrapping a stateless functional component. ' + 'In this case no ref will be stored, and instead an innerRef prop will be passed on.\n' + ('Check whether the stateless functional component is passing on innerRef as a ref in ' + displayName + '.'));
      }
    };

    BaseStyledNativeComponent.prototype.render = function render() {
      var _props = this.props,
          children = _props.children,
          style = _props.style;
      var generatedStyles = this.state.generatedStyles;
      var target = this.constructor.target;

      var propsForElement = _extends({}, this.attrs, this.props, {
        style: [generatedStyles, style]
      });

      if (!(0, _isStyledComponent2.default)(target) && (typeof target !== 'function' || target.prototype && 'isReactComponent' in target.prototype)) {
        propsForElement.ref = this.onRef;
        delete propsForElement.innerRef;
      } else {
        propsForElement.innerRef = this.onRef;
      }

      return (0, _react.createElement)(target, propsForElement, children);
    };

    return BaseStyledNativeComponent;
  }(_react.Component);

  var createStyledNativeComponent = function createStyledNativeComponent(target, options, rules) {
    var _StyledNativeComponen;

    var _options$displayName = options.displayName,
        displayName = _options$displayName === undefined ? (0, _isTag2.default)(target) ? 'styled.' + target : 'Styled(' + (0, _getComponentName2.default)(target) + ')' : _options$displayName,
        _options$ParentCompon = options.ParentComponent,
        ParentComponent = _options$ParentCompon === undefined ? BaseStyledNativeComponent : _options$ParentCompon,
        extendingRules = options.rules,
        attrs = options.attrs;

    var inlineStyle = new InlineStyle(extendingRules === undefined ? rules : extendingRules.concat(rules));

    var StyledNativeComponent = function (_ParentComponent) {
      _inherits(StyledNativeComponent, _ParentComponent);

      function StyledNativeComponent() {
        _classCallCheck(this, StyledNativeComponent);

        return _possibleConstructorReturn(this, _ParentComponent.apply(this, arguments));
      }

      StyledNativeComponent.withComponent = function withComponent(tag) {
        var _ = options.displayName,
            __ = options.componentId,
            optionsToCopy = _objectWithoutProperties(options, ['displayName', 'componentId']);

        var newOptions = _extends({}, optionsToCopy, { ParentComponent: StyledNativeComponent });
        return createStyledNativeComponent(tag, newOptions, rules);
      };

      _createClass(StyledNativeComponent, null, [{
        key: 'extend',
        get: function get() {
          var _ = options.displayName,
              __ = options.componentId,
              rulesFromOptions = options.rules,
              optionsToCopy = _objectWithoutProperties(options, ['displayName', 'componentId', 'rules']);

          var newRules = rulesFromOptions === undefined ? rules : rulesFromOptions.concat(rules);

          var newOptions = _extends({}, optionsToCopy, {
            rules: newRules,
            ParentComponent: StyledNativeComponent
          });

          return constructWithOptions(createStyledNativeComponent, target, newOptions);
        }
      }]);

      return StyledNativeComponent;
    }(ParentComponent);

    StyledNativeComponent.displayName = displayName;
    StyledNativeComponent.target = target;
    StyledNativeComponent.attrs = attrs;
    StyledNativeComponent.inlineStyle = inlineStyle;
    StyledNativeComponent.contextTypes = (_StyledNativeComponen = {}, _StyledNativeComponen[_ThemeProvider.CHANNEL] = _propTypes2.default.func, _StyledNativeComponen[_ThemeProvider.CHANNEL_NEXT] = _ThemeProvider.CONTEXT_CHANNEL_SHAPE, _StyledNativeComponen);
    StyledNativeComponent.styledComponentId = 'StyledNativeComponent';

    return StyledNativeComponent;
  };

  return createStyledNativeComponent;
};

module.exports = exports['default'];
}, 561, null, "styled-components/lib/models/StyledNativeComponent.js");
__d(/* styled-components/lib/utils/isTag.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = isTag;

var babelPluginFlowReactPropTypes_proptype_Target = require(536       ).babelPluginFlowReactPropTypes_proptype_Target || require(126         ).any; // 126 = prop-types // 536 = ../types

function isTag(target) {
  return typeof target === 'string';
}
module.exports = exports['default'];
}, 562, null, "styled-components/lib/utils/isTag.js");
__d(/* styled-components/lib/utils/isStyledComponent.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = isStyledComponent;

var babelPluginFlowReactPropTypes_proptype_Target = require(536       ).babelPluginFlowReactPropTypes_proptype_Target || require(126         ).any; // 126 = prop-types // 536 = ../types

function isStyledComponent(target) {
  return typeof target === 'function' && typeof target.styledComponentId === 'string';
}
module.exports = exports['default'];
}, 563, null, "styled-components/lib/utils/isStyledComponent.js");
__d(/* styled-components/lib/utils/getComponentName.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.default = getComponentName;

function getComponentName(target) {
  return target.displayName || target.name || 'Component';
}
module.exports = exports['default'];
}, 564, null, "styled-components/lib/utils/getComponentName.js");
__d(/* styled-components/lib/utils/determineTheme.js */function(global, require, module, exports) {"use strict";

exports.__esModule = true;

exports.default = function (props, fallbackTheme, defaultProps) {
  var isDefaultTheme = defaultProps && props.theme === defaultProps.theme;
  var theme = props.theme && !isDefaultTheme ? props.theme : fallbackTheme;


  return theme;
};

module.exports = exports["default"];
}, 565, null, "styled-components/lib/utils/determineTheme.js");
__d(/* styled-components/lib/models/ThemeProvider.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
exports.CONTEXT_CHANNEL_SHAPE = exports.CHANNEL_NEXT = exports.CHANNEL = undefined;

var _ThemeProvider$childC, _ThemeProvider$contex;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

var _react = require(35     ); // 35 = react

var _react2 = _interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = _interopRequireDefault(_propTypes);

var _isFunction = require(567          ); // 567 = is-function

var _isFunction2 = _interopRequireDefault(_isFunction);

var _isPlainObject = require(534              ); // 534 = is-plain-object

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _createBroadcast = require(568                        ); // 568 = ../utils/create-broadcast

var _createBroadcast2 = _interopRequireDefault(_createBroadcast);

var _once = require(569            ); // 569 = ../utils/once

var _once2 = _interopRequireDefault(_once);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}


var babelPluginFlowReactPropTypes_proptype_Broadcast = require(568                        ).babelPluginFlowReactPropTypes_proptype_Broadcast || require(126         ).any; // 126 = prop-types // 568 = ../utils/create-broadcast

var CHANNEL = exports.CHANNEL = '__styled-components__';
var CHANNEL_NEXT = exports.CHANNEL_NEXT = CHANNEL + 'next__';

var CONTEXT_CHANNEL_SHAPE = exports.CONTEXT_CHANNEL_SHAPE = _propTypes2.default.shape({
  getTheme: _propTypes2.default.func,
  subscribe: _propTypes2.default.func,
  unsubscribe: _propTypes2.default.func
});

if (typeof exports !== 'undefined') Object.defineProperty(exports, 'babelPluginFlowReactPropTypes_proptype_Theme', {
  value: require(126         ).shape({}) // 126 = prop-types
});

var warnChannelDeprecated = (0, _once2.default)(function () {
  console.error('Warning: Usage of `context.' + CHANNEL + '` as a function is deprecated. It will be replaced with the object on `.context.' + CHANNEL_NEXT + '` in a future version.');
});


var ThemeProvider = function (_Component) {
  _inherits(ThemeProvider, _Component);

  function ThemeProvider() {
    _classCallCheck(this, ThemeProvider);

    var _this = _possibleConstructorReturn(this, _Component.call(this));

    _this.unsubscribeToOuterId = -1;

    _this.getTheme = _this.getTheme.bind(_this);
    return _this;
  }

  ThemeProvider.prototype.componentWillMount = function componentWillMount() {
    var _this2 = this;

    var outerContext = this.context[CHANNEL_NEXT];
    if (outerContext !== undefined) {
      this.unsubscribeToOuterId = outerContext.subscribe(function (theme) {
        _this2.outerTheme = theme;
      });
    }
    this.broadcast = (0, _createBroadcast2.default)(this.getTheme());
  };

  ThemeProvider.prototype.getChildContext = function getChildContext() {
    var _this3 = this,
        _extends2;

    return _extends({}, this.context, (_extends2 = {}, _extends2[CHANNEL_NEXT] = {
      getTheme: this.getTheme,
      subscribe: this.broadcast.subscribe,
      unsubscribe: this.broadcast.unsubscribe
    }, _extends2[CHANNEL] = function (subscriber) {
      warnChannelDeprecated();

      var unsubscribeId = _this3.broadcast.subscribe(subscriber);
      return function () {
        return _this3.broadcast.unsubscribe(unsubscribeId);
      };
    }, _extends2));
  };

  ThemeProvider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    if (this.props.theme !== nextProps.theme) this.broadcast.publish(this.getTheme(nextProps.theme));
  };

  ThemeProvider.prototype.componentWillUnmount = function componentWillUnmount() {
    if (this.unsubscribeToOuterId !== -1) {
      this.context[CHANNEL_NEXT].unsubscribe(this.unsubscribeToOuterId);
    }
  };

  ThemeProvider.prototype.getTheme = function getTheme(passedTheme) {
    var theme = passedTheme || this.props.theme;
    if ((0, _isFunction2.default)(theme)) {
      var mergedTheme = theme(this.outerTheme);
      if (!(0, _isPlainObject2.default)(mergedTheme)) {
        throw new Error('[ThemeProvider] Please return an object from your theme function, i.e. theme={() => ({})}!');
      }
      return mergedTheme;
    }
    if (!(0, _isPlainObject2.default)(theme)) {
      throw new Error('[ThemeProvider] Please make your theme prop a plain object');
    }
    return _extends({}, this.outerTheme, theme);
  };

  ThemeProvider.prototype.render = function render() {
    if (!this.props.children) {
      return null;
    }
    return _react2.default.Children.only(this.props.children);
  };

  return ThemeProvider;
}(_react.Component);

ThemeProvider.propTypes = {
  children: require(126         ).any, // 126 = prop-types
  theme: require(126         ).oneOfType([require(126         ).shape({}), require(126         ).func]).isRequired // 126 = prop-types // 126 = prop-types // 126 = prop-types
};

ThemeProvider.childContextTypes = (_ThemeProvider$childC = {}, _ThemeProvider$childC[CHANNEL] = _propTypes2.default.func, _ThemeProvider$childC[CHANNEL_NEXT] = CONTEXT_CHANNEL_SHAPE, _ThemeProvider$childC);
ThemeProvider.contextTypes = (_ThemeProvider$contex = {}, _ThemeProvider$contex[CHANNEL_NEXT] = CONTEXT_CHANNEL_SHAPE, _ThemeProvider$contex);

exports.default = ThemeProvider;
}, 566, null, "styled-components/lib/models/ThemeProvider.js");
__d(/* is-function/index.js */function(global, require, module, exports) {module.exports = isFunction;

var toString = Object.prototype.toString;

function isFunction(fn) {
  var string = toString.call(fn);
  return string === '[object Function]' || typeof fn === 'function' && string !== '[object RegExp]' || typeof window !== 'undefined' && (fn === window.setTimeout || fn === window.alert || fn === window.confirm || fn === window.prompt);
};
}, 567, null, "is-function/index.js");
__d(/* styled-components/lib/utils/create-broadcast.js */function(global, require, module, exports) {"use strict";

exports.__esModule = true;
if (typeof exports !== "undefined") Object.defineProperty(exports, "babelPluginFlowReactPropTypes_proptype_Broadcast", {
  value: require(126         ).shape({ // 126 = prop-types
    publish: require(126         ).func.isRequired, // 126 = prop-types
    subscribe: require(126         ).func.isRequired, // 126 = prop-types
    unsubscribe: require(126         ).func.isRequired // 126 = prop-types
  })
});


var createBroadcast = function createBroadcast(initialState) {
  var listeners = {};
  var id = 0;
  var state = initialState;

  function publish(nextState) {
    state = nextState;

    for (var key in listeners) {
      var _listener = listeners[key];
      if (_listener === undefined) {
        continue;
      }

      _listener(state);
    }
  }

  function subscribe(listener) {
    var currentId = id;
    listeners[currentId] = listener;
    id += 1;
    listener(state);
    return currentId;
  }

  function unsubscribe(unsubID) {
    listeners[unsubID] = undefined;
  }

  return { publish: publish, subscribe: subscribe, unsubscribe: unsubscribe };
};

exports.default = createBroadcast;
module.exports = exports["default"];
}, 568, null, "styled-components/lib/utils/create-broadcast.js");
__d(/* styled-components/lib/utils/once.js */function(global, require, module, exports) {"use strict";

exports.__esModule = true;

exports.default = function (cb) {
  var called = false;

  return function () {
    if (!called) {
      called = true;
      cb();
    }
  };
};

module.exports = exports["default"];
}, 569, null, "styled-components/lib/utils/once.js");
__d(/* styled-components/lib/constructors/constructWithOptions.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

var babelPluginFlowReactPropTypes_proptype_Target = require(536       ).babelPluginFlowReactPropTypes_proptype_Target || require(126         ).any; // 126 = prop-types // 536 = ../types

var babelPluginFlowReactPropTypes_proptype_Interpolation = require(536       ).babelPluginFlowReactPropTypes_proptype_Interpolation || require(126         ).any; // 126 = prop-types // 536 = ../types

exports.default = function (css) {
  var constructWithOptions = function constructWithOptions(componentConstructor, tag) {
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    if (typeof tag !== 'string' && typeof tag !== 'function') {
      throw new Error('Cannot create styled-component for component: ' + tag);
    }

    var templateFunction = function templateFunction(strings) {
      for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        interpolations[_key - 1] = arguments[_key];
      }

      return componentConstructor(tag, options, css.apply(undefined, [strings].concat(interpolations)));
    };

    templateFunction.withConfig = function (config) {
      return constructWithOptions(componentConstructor, tag, _extends({}, options, config));
    };
    templateFunction.attrs = function (attrs) {
      return constructWithOptions(componentConstructor, tag, _extends({}, options, {
        attrs: _extends({}, options.attrs || {}, attrs) }));
    };

    return templateFunction;
  };

  return constructWithOptions;
};

module.exports = exports['default'];
}, 570, null, "styled-components/lib/constructors/constructWithOptions.js");
__d(/* styled-components/lib/constructors/css.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _interleave = require(572                  ); // 572 = ../utils/interleave

var _interleave2 = _interopRequireDefault(_interleave);

var _flatten = require(531               ); // 531 = ../utils/flatten

var _flatten2 = _interopRequireDefault(_flatten);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

var babelPluginFlowReactPropTypes_proptype_RuleSet = require(536       ).babelPluginFlowReactPropTypes_proptype_RuleSet || require(126         ).any; // 126 = prop-types // 536 = ../types

var babelPluginFlowReactPropTypes_proptype_Interpolation = require(536       ).babelPluginFlowReactPropTypes_proptype_Interpolation || require(126         ).any; // 126 = prop-types // 536 = ../types

exports.default = function (strings) {
  for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    interpolations[_key - 1] = arguments[_key];
  }

  return (0, _flatten2.default)((0, _interleave2.default)(strings, interpolations));
};

module.exports = exports['default'];
}, 571, null, "styled-components/lib/constructors/css.js");
__d(/* styled-components/lib/utils/interleave.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var babelPluginFlowReactPropTypes_proptype_Interpolation = require(536       ).babelPluginFlowReactPropTypes_proptype_Interpolation || require(126         ).any; // 126 = prop-types // 536 = ../types

exports.default = function (strings, interpolations) {
  return interpolations.reduce(function (array, interp, i) {
    return array.concat(interp, strings[i + 1]);
  }, [strings[0]]);
};

module.exports = exports['default'];
}, 572, null, "styled-components/lib/utils/interleave.js");
__d(/* styled-components/lib/hoc/withTheme.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }return target;
};

var _react = require(35     ); // 35 = react

var _react2 = _interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = _interopRequireDefault(_propTypes);

var _hoistNonReactStatics = require(574                      ); // 574 = hoist-non-react-statics

var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

var _ThemeProvider = require(566                      ); // 566 = ../models/ThemeProvider

var _isStyledComponent2 = require(563                         ); // 563 = ../utils/isStyledComponent

var _isStyledComponent3 = _interopRequireDefault(_isStyledComponent2);

var _determineTheme = require(565                      ); // 565 = ../utils/determineTheme

var _determineTheme2 = _interopRequireDefault(_determineTheme);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}


var wrapWithTheme = function wrapWithTheme(Component) {
  var _WithTheme$contextTyp;

  var componentName = Component.displayName || Component.name || 'Component';

  var isStyledComponent = (0, _isStyledComponent3.default)(Component);

  var WithTheme = function (_React$Component) {
    _inherits(WithTheme, _React$Component);

    function WithTheme() {
      var _temp, _this, _ret;

      _classCallCheck(this, WithTheme);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {}, _this.unsubscribeId = -1, _temp), _possibleConstructorReturn(_this, _ret);
    }

    WithTheme.prototype.componentWillMount = function componentWillMount() {
      var _this2 = this;

      var defaultProps = this.constructor.defaultProps;

      var styledContext = this.context[_ThemeProvider.CHANNEL_NEXT];
      var themeProp = (0, _determineTheme2.default)(this.props, undefined, defaultProps);
      if (styledContext === undefined && themeProp === undefined && process.env.NODE_ENV !== 'production') {
        console.warn('[withTheme] You are not using a ThemeProvider nor passing a theme prop or a theme in defaultProps');
      } else if (styledContext === undefined && themeProp !== undefined) {
        this.setState({ theme: themeProp });
      } else {
        var subscribe = styledContext.subscribe;

        this.unsubscribeId = subscribe(function (nextTheme) {
          var theme = (0, _determineTheme2.default)(_this2.props, nextTheme, defaultProps);
          _this2.setState({ theme: theme });
        });
      }
    };

    WithTheme.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      var defaultProps = this.constructor.defaultProps;

      this.setState(function (oldState) {
        var theme = (0, _determineTheme2.default)(nextProps, oldState.theme, defaultProps);

        return { theme: theme };
      });
    };

    WithTheme.prototype.componentWillUnmount = function componentWillUnmount() {
      if (this.unsubscribeId !== -1) {
        this.context[_ThemeProvider.CHANNEL_NEXT].unsubscribe(this.unsubscribeId);
      }
    };

    WithTheme.prototype.render = function render() {
      var innerRef = this.props.innerRef;
      var theme = this.state.theme;

      return _react2.default.createElement(Component, _extends({
        theme: theme
      }, this.props, {
        innerRef: isStyledComponent ? innerRef : undefined,
        ref: isStyledComponent ? undefined : innerRef
      }));
    };

    return WithTheme;
  }(_react2.default.Component);

  WithTheme.displayName = 'WithTheme(' + componentName + ')';
  WithTheme.styledComponentId = 'withTheme';
  WithTheme.contextTypes = (_WithTheme$contextTyp = {}, _WithTheme$contextTyp[_ThemeProvider.CHANNEL] = _propTypes2.default.func, _WithTheme$contextTyp[_ThemeProvider.CHANNEL_NEXT] = _ThemeProvider.CONTEXT_CHANNEL_SHAPE, _WithTheme$contextTyp);

  return (0, _hoistNonReactStatics2.default)(WithTheme, Component);
};

exports.default = wrapWithTheme;
module.exports = exports['default'];
}, 573, null, "styled-components/lib/hoc/withTheme.js");
__d(/* hoist-non-react-statics/index.js */function(global, require, module, exports) {
'use strict';

var REACT_STATICS = {
    childContextTypes: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    mixins: true,
    propTypes: true,
    type: true
};

var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    arguments: true,
    arity: true
};

var isGetOwnPropertySymbolsAvailable = typeof Object.getOwnPropertySymbols === 'function';

module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, customStatics) {
    if (typeof sourceComponent !== 'string') {
        var keys = Object.getOwnPropertyNames(sourceComponent);

        if (isGetOwnPropertySymbolsAvailable) {
            keys = keys.concat(Object.getOwnPropertySymbols(sourceComponent));
        }

        for (var i = 0; i < keys.length; ++i) {
            if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]] && (!customStatics || !customStatics[keys[i]])) {
                try {
                    targetComponent[keys[i]] = sourceComponent[keys[i]];
                } catch (error) {}
            }
        }
    }

    return targetComponent;
};
}, 574, null, "hoist-non-react-statics/index.js");
__d(/* react-native-code-push/CodePush.js */function(global, require, module, exports) {var _jsxFileName = "/Users/mac/Documents/YuanXiaoCai/node_modules/react-native-code-push/CodePush.js";

var _acquisitionSdk = require(576                               ); // 576 = code-push/script/acquisition-sdk

var _AlertAdapter = require(577             ); // 577 = ./AlertAdapter

var _requestFetchAdapter = require(578                      ); // 578 = ./request-fetch-adapter

var _requestFetchAdapter2 = babelHelpers.interopRequireDefault(_requestFetchAdapter);

var _reactNative = require(12            ); // 12 = react-native

var _RestartManager = require(580               ); // 580 = ./RestartManager

var _RestartManager2 = babelHelpers.interopRequireDefault(_RestartManager);

var _logging = require(581        ); // 581 = ./logging

var _logging2 = babelHelpers.interopRequireDefault(_logging);

var _hoistNonReactStatics = require(338                      ); // 338 = hoist-non-react-statics

var _hoistNonReactStatics2 = babelHelpers.interopRequireDefault(_hoistNonReactStatics);

var NativeCodePush = require(12            ).NativeModules.CodePush; // 12 = react-native
var PackageMixins = require(582               )(NativeCodePush); // 582 = ./package-mixins

function checkForUpdate() {
  var deploymentKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
  var handleBinaryVersionMismatchCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  var nativeConfig, config, sdk, localPackage, queryPackage, update, remotePackage;
  return regeneratorRuntime.async(function checkForUpdate$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return regeneratorRuntime.awrap(getConfiguration());

        case 2:
          nativeConfig = _context.sent;
          config = deploymentKey ? babelHelpers.extends({}, nativeConfig, { deploymentKey: deploymentKey }) : nativeConfig;
          sdk = getPromisifiedSdk(_requestFetchAdapter2.default, config);
          _context.next = 7;
          return regeneratorRuntime.awrap(module.exports.getCurrentPackage());

        case 7:
          localPackage = _context.sent;
          queryPackage = void 0;

          if (localPackage) {
            queryPackage = localPackage;
          } else {
            queryPackage = { appVersion: config.appVersion };
            if (_reactNative.Platform.OS === "ios" && config.packageHash) {
              queryPackage.packageHash = config.packageHash;
            }
          }

          _context.next = 12;
          return regeneratorRuntime.awrap(sdk.queryUpdateWithCurrentPackage(queryPackage));

        case 12:
          update = _context.sent;

          if (!(!update || update.updateAppVersion || localPackage && update.packageHash === localPackage.packageHash || (!localPackage || localPackage._isDebugOnly) && config.packageHash === update.packageHash)) {
            _context.next = 18;
            break;
          }

          if (update && update.updateAppVersion) {
            (0, _logging2.default)("An update is available but it is not targeting the binary version of your app.");
            if (handleBinaryVersionMismatchCallback && typeof handleBinaryVersionMismatchCallback === "function") {
              handleBinaryVersionMismatchCallback(update);
            }
          }

          return _context.abrupt("return", null);

        case 18:
          remotePackage = babelHelpers.extends({}, update, PackageMixins.remote(sdk.reportStatusDownload));
          _context.next = 21;
          return regeneratorRuntime.awrap(NativeCodePush.isFailedUpdate(remotePackage.packageHash));

        case 21:
          remotePackage.failedInstall = _context.sent;

          remotePackage.deploymentKey = deploymentKey || nativeConfig.deploymentKey;
          return _context.abrupt("return", remotePackage);

        case 24:
        case "end":
          return _context.stop();
      }
    }
  }, null, this);
}

var getConfiguration = function () {
  var config = void 0;
  return function getConfiguration() {
    return regeneratorRuntime.async(function getConfiguration$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            if (!config) {
              _context2.next = 4;
              break;
            }

            return _context2.abrupt("return", config);

          case 4:
            if (!testConfig) {
              _context2.next = 8;
              break;
            }

            return _context2.abrupt("return", testConfig);

          case 8:
            _context2.next = 10;
            return regeneratorRuntime.awrap(NativeCodePush.getConfiguration());

          case 10:
            config = _context2.sent;
            return _context2.abrupt("return", config);

          case 12:
          case "end":
            return _context2.stop();
        }
      }
    }, null, this);
  };
}();

function getCurrentPackage() {
  return regeneratorRuntime.async(function getCurrentPackage$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          _context3.next = 2;
          return regeneratorRuntime.awrap(getUpdateMetadata(CodePush.UpdateState.LATEST));

        case 2:
          return _context3.abrupt("return", _context3.sent);

        case 3:
        case "end":
          return _context3.stop();
      }
    }
  }, null, this);
}

function getUpdateMetadata(updateState) {
  var updateMetadata;
  return regeneratorRuntime.async(function getUpdateMetadata$(_context4) {
    while (1) {
      switch (_context4.prev = _context4.next) {
        case 0:
          _context4.next = 2;
          return regeneratorRuntime.awrap(NativeCodePush.getUpdateMetadata(updateState || CodePush.UpdateState.RUNNING));

        case 2:
          updateMetadata = _context4.sent;

          if (!updateMetadata) {
            _context4.next = 11;
            break;
          }

          updateMetadata = babelHelpers.extends({}, PackageMixins.local, updateMetadata);
          _context4.next = 7;
          return regeneratorRuntime.awrap(NativeCodePush.isFailedUpdate(updateMetadata.packageHash));

        case 7:
          updateMetadata.failedInstall = _context4.sent;
          _context4.next = 10;
          return regeneratorRuntime.awrap(NativeCodePush.isFirstRun(updateMetadata.packageHash));

        case 10:
          updateMetadata.isFirstRun = _context4.sent;

        case 11:
          return _context4.abrupt("return", updateMetadata);

        case 12:
        case "end":
          return _context4.stop();
      }
    }
  }, null, this);
}

function getPromisifiedSdk(requestFetchAdapter, config) {
  var sdk = new module.exports.AcquisitionSdk(requestFetchAdapter, config);
  sdk.queryUpdateWithCurrentPackage = function (queryPackage) {
    return new Promise(function (resolve, reject) {
      module.exports.AcquisitionSdk.prototype.queryUpdateWithCurrentPackage.call(sdk, queryPackage, function (err, update) {
        if (err) {
          reject(err);
        } else {
          resolve(update);
        }
      });
    });
  };

  sdk.reportStatusDeploy = function (deployedPackage, status, previousLabelOrAppVersion, previousDeploymentKey) {
    return new Promise(function (resolve, reject) {
      module.exports.AcquisitionSdk.prototype.reportStatusDeploy.call(sdk, deployedPackage, status, previousLabelOrAppVersion, previousDeploymentKey, function (err) {
        if (err) {
          reject(err);
        } else {
          resolve();
        }
      });
    });
  };

  sdk.reportStatusDownload = function (downloadedPackage) {
    return new Promise(function (resolve, reject) {
      module.exports.AcquisitionSdk.prototype.reportStatusDownload.call(sdk, downloadedPackage, function (err) {
        if (err) {
          reject(err);
        } else {
          resolve();
        }
      });
    });
  };

  return sdk;
}

var notifyApplicationReady = function () {
  var notifyApplicationReadyPromise = void 0;
  return function () {
    if (!notifyApplicationReadyPromise) {
      notifyApplicationReadyPromise = notifyApplicationReadyInternal();
    }

    return notifyApplicationReadyPromise;
  };
}();

function notifyApplicationReadyInternal() {
  var statusReport;
  return regeneratorRuntime.async(function notifyApplicationReadyInternal$(_context5) {
    while (1) {
      switch (_context5.prev = _context5.next) {
        case 0:
          _context5.next = 2;
          return regeneratorRuntime.awrap(NativeCodePush.notifyApplicationReady());

        case 2:
          _context5.next = 4;
          return regeneratorRuntime.awrap(NativeCodePush.getNewStatusReport());

        case 4:
          statusReport = _context5.sent;

          statusReport && tryReportStatus(statusReport);return _context5.abrupt("return", statusReport);

        case 7:
        case "end":
          return _context5.stop();
      }
    }
  }, null, this);
}

function tryReportStatus(statusReport, _resumeListener) {
  var _this = this;

  var config, previousLabelOrAppVersion, previousDeploymentKey, sdk, label, _sdk;

  return regeneratorRuntime.async(function tryReportStatus$(_context7) {
    while (1) {
      switch (_context7.prev = _context7.next) {
        case 0:
          _context7.next = 2;
          return regeneratorRuntime.awrap(getConfiguration());

        case 2:
          config = _context7.sent;
          previousLabelOrAppVersion = statusReport.previousLabelOrAppVersion;
          previousDeploymentKey = statusReport.previousDeploymentKey || config.deploymentKey;
          _context7.prev = 5;

          if (!statusReport.appVersion) {
            _context7.next = 13;
            break;
          }

          (0, _logging2.default)("Reporting binary update (" + statusReport.appVersion + ")");

          sdk = getPromisifiedSdk(_requestFetchAdapter2.default, config);
          _context7.next = 11;
          return regeneratorRuntime.awrap(sdk.reportStatusDeploy(null, null, previousLabelOrAppVersion, previousDeploymentKey));

        case 11:
          _context7.next = 19;
          break;

        case 13:
          label = statusReport.package.label;

          if (statusReport.status === "DeploymentSucceeded") {
            (0, _logging2.default)("Reporting CodePush update success (" + label + ")");
          } else {
            (0, _logging2.default)("Reporting CodePush update rollback (" + label + ")");
          }

          config.deploymentKey = statusReport.package.deploymentKey;
          _sdk = getPromisifiedSdk(_requestFetchAdapter2.default, config);
          _context7.next = 19;
          return regeneratorRuntime.awrap(_sdk.reportStatusDeploy(statusReport.package, statusReport.status, previousLabelOrAppVersion, previousDeploymentKey));

        case 19:

          NativeCodePush.recordStatusReported(statusReport);
          _resumeListener && _reactNative.AppState.removeEventListener("change", _resumeListener);
          _context7.next = 28;
          break;

        case 23:
          _context7.prev = 23;
          _context7.t0 = _context7["catch"](5);

          (0, _logging2.default)("Report status failed: " + JSON.stringify(statusReport));
          NativeCodePush.saveStatusReportForRetry(statusReport);

          if (!_resumeListener) {
            _resumeListener = function resumeListener(newState) {
              var refreshedStatusReport;
              return regeneratorRuntime.async(function resumeListener$(_context6) {
                while (1) {
                  switch (_context6.prev = _context6.next) {
                    case 0:
                      if (!(newState !== "active")) {
                        _context6.next = 2;
                        break;
                      }

                      return _context6.abrupt("return");

                    case 2:
                      _context6.next = 4;
                      return regeneratorRuntime.awrap(NativeCodePush.getNewStatusReport());

                    case 4:
                      refreshedStatusReport = _context6.sent;

                      if (refreshedStatusReport) {
                        tryReportStatus(refreshedStatusReport, _resumeListener);
                      } else {
                        _reactNative.AppState.removeEventListener("change", _resumeListener);
                      }

                    case 6:
                    case "end":
                      return _context6.stop();
                  }
                }
              }, null, _this);
            };
            _reactNative.AppState.addEventListener("change", _resumeListener);
          }

        case 28:
        case "end":
          return _context7.stop();
      }
    }
  }, null, this, [[5, 23]]);
}

var testConfig;

function setUpTestDependencies(testSdk, providedTestConfig, testNativeBridge) {
  if (testSdk) module.exports.AcquisitionSdk = testSdk;
  if (providedTestConfig) testConfig = providedTestConfig;
  if (testNativeBridge) NativeCodePush = testNativeBridge;
}

var sync = function () {
  var syncInProgress = false;
  var setSyncCompleted = function setSyncCompleted() {
    syncInProgress = false;
  };

  return function () {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var syncStatusChangeCallback = arguments[1];
    var downloadProgressCallback = arguments[2];
    var handleBinaryVersionMismatchCallback = arguments[3];

    var syncStatusCallbackWithTryCatch = void 0,
        downloadProgressCallbackkWithTryCatch = void 0;
    if (typeof syncStatusChangeCallback === "function") {
      syncStatusCallbackWithTryCatch = function syncStatusCallbackWithTryCatch() {
        try {
          syncStatusChangeCallback.apply(undefined, arguments);
        } catch (error) {
          (0, _logging2.default)("An error has occurred : " + error.stack);
        }
      };
    }

    if (typeof downloadProgressCallback === "function") {
      downloadProgressCallbackkWithTryCatch = function downloadProgressCallbackkWithTryCatch() {
        try {
          downloadProgressCallback.apply(undefined, arguments);
        } catch (error) {
          (0, _logging2.default)("An error has occurred: " + error.stack);
        }
      };
    }

    if (syncInProgress) {
      typeof syncStatusCallbackWithTryCatch === "function" ? syncStatusCallbackWithTryCatch(CodePush.SyncStatus.SYNC_IN_PROGRESS) : (0, _logging2.default)("Sync already in progress.");
      return Promise.resolve(CodePush.SyncStatus.SYNC_IN_PROGRESS);
    }

    syncInProgress = true;
    var syncPromise = syncInternal(options, syncStatusCallbackWithTryCatch, downloadProgressCallbackkWithTryCatch, handleBinaryVersionMismatchCallback);
    syncPromise.then(setSyncCompleted).catch(setSyncCompleted);

    return syncPromise;
  };
}();

function syncInternal() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var syncStatusChangeCallback = arguments[1];

  var _this2 = this;

  var downloadProgressCallback = arguments[2];
  var handleBinaryVersionMismatchCallback = arguments[3];
  var resolvedInstallMode, syncOptions, remotePackage, doDownloadAndInstall, updateShouldBeIgnored, currentPackage;
  return regeneratorRuntime.async(function syncInternal$(_context9) {
    while (1) {
      switch (_context9.prev = _context9.next) {
        case 0:
          resolvedInstallMode = void 0;
          syncOptions = babelHelpers.extends({
            deploymentKey: null,
            ignoreFailedUpdates: true,
            installMode: CodePush.InstallMode.ON_NEXT_RESTART,
            mandatoryInstallMode: CodePush.InstallMode.IMMEDIATE,
            minimumBackgroundDuration: 0,
            updateDialog: null
          }, options);


          syncStatusChangeCallback = typeof syncStatusChangeCallback === "function" ? syncStatusChangeCallback : function (syncStatus) {
            switch (syncStatus) {
              case CodePush.SyncStatus.CHECKING_FOR_UPDATE:
                (0, _logging2.default)("Checking for update.");
                break;
              case CodePush.SyncStatus.AWAITING_USER_ACTION:
                (0, _logging2.default)("Awaiting user action.");
                break;
              case CodePush.SyncStatus.DOWNLOADING_PACKAGE:
                (0, _logging2.default)("Downloading package.");
                break;
              case CodePush.SyncStatus.INSTALLING_UPDATE:
                (0, _logging2.default)("Installing update.");
                break;
              case CodePush.SyncStatus.UP_TO_DATE:
                (0, _logging2.default)("App is up to date.");
                break;
              case CodePush.SyncStatus.UPDATE_IGNORED:
                (0, _logging2.default)("User cancelled the update.");
                break;
              case CodePush.SyncStatus.UPDATE_INSTALLED:
                if (resolvedInstallMode == CodePush.InstallMode.ON_NEXT_RESTART) {
                  (0, _logging2.default)("Update is installed and will be run on the next app restart.");
                } else if (resolvedInstallMode == CodePush.InstallMode.ON_NEXT_RESUME) {
                  if (syncOptions.minimumBackgroundDuration > 0) {
                    (0, _logging2.default)("Update is installed and will be run after the app has been in the background for at least " + syncOptions.minimumBackgroundDuration + " seconds.");
                  } else {
                    (0, _logging2.default)("Update is installed and will be run when the app next resumes.");
                  }
                }
                break;
              case CodePush.SyncStatus.UNKNOWN_ERROR:
                (0, _logging2.default)("An unknown error occurred.");
                break;
            }
          };

          _context9.prev = 3;
          _context9.next = 6;
          return regeneratorRuntime.awrap(CodePush.notifyApplicationReady());

        case 6:

          syncStatusChangeCallback(CodePush.SyncStatus.CHECKING_FOR_UPDATE);
          _context9.next = 9;
          return regeneratorRuntime.awrap(checkForUpdate(syncOptions.deploymentKey, handleBinaryVersionMismatchCallback));

        case 9:
          remotePackage = _context9.sent;

          doDownloadAndInstall = function doDownloadAndInstall() {
            var localPackage;
            return regeneratorRuntime.async(function doDownloadAndInstall$(_context8) {
              while (1) {
                switch (_context8.prev = _context8.next) {
                  case 0:
                    syncStatusChangeCallback(CodePush.SyncStatus.DOWNLOADING_PACKAGE);
                    _context8.next = 3;
                    return regeneratorRuntime.awrap(remotePackage.download(downloadProgressCallback));

                  case 3:
                    localPackage = _context8.sent;

                    resolvedInstallMode = localPackage.isMandatory ? syncOptions.mandatoryInstallMode : syncOptions.installMode;

                    syncStatusChangeCallback(CodePush.SyncStatus.INSTALLING_UPDATE);
                    _context8.next = 8;
                    return regeneratorRuntime.awrap(localPackage.install(resolvedInstallMode, syncOptions.minimumBackgroundDuration, function () {
                      syncStatusChangeCallback(CodePush.SyncStatus.UPDATE_INSTALLED);
                    }));

                  case 8:
                    return _context8.abrupt("return", CodePush.SyncStatus.UPDATE_INSTALLED);

                  case 9:
                  case "end":
                    return _context8.stop();
                }
              }
            }, null, _this2);
          };

          updateShouldBeIgnored = remotePackage && remotePackage.failedInstall && syncOptions.ignoreFailedUpdates;

          if (!(!remotePackage || updateShouldBeIgnored)) {
            _context9.next = 26;
            break;
          }

          if (updateShouldBeIgnored) {
            (0, _logging2.default)("An update is available, but it is being ignored due to having been previously rolled back.");
          }

          _context9.next = 16;
          return regeneratorRuntime.awrap(CodePush.getCurrentPackage());

        case 16:
          currentPackage = _context9.sent;

          if (!(currentPackage && currentPackage.isPending)) {
            _context9.next = 22;
            break;
          }

          syncStatusChangeCallback(CodePush.SyncStatus.UPDATE_INSTALLED);
          return _context9.abrupt("return", CodePush.SyncStatus.UPDATE_INSTALLED);

        case 22:
          syncStatusChangeCallback(CodePush.SyncStatus.UP_TO_DATE);
          return _context9.abrupt("return", CodePush.SyncStatus.UP_TO_DATE);

        case 24:
          _context9.next = 36;
          break;

        case 26:
          if (!syncOptions.updateDialog) {
            _context9.next = 33;
            break;
          }

          if (typeof syncOptions.updateDialog !== "object") {
            syncOptions.updateDialog = CodePush.DEFAULT_UPDATE_DIALOG;
          } else {
            syncOptions.updateDialog = babelHelpers.extends({}, CodePush.DEFAULT_UPDATE_DIALOG, syncOptions.updateDialog);
          }

          _context9.next = 30;
          return regeneratorRuntime.awrap(new Promise(function (resolve, reject) {
            var message = null;
            var dialogButtons = [{
              text: null,
              onPress: function onPress() {
                doDownloadAndInstall().then(resolve, reject);
              }
            }];

            if (remotePackage.isMandatory) {
              message = syncOptions.updateDialog.mandatoryUpdateMessage;
              dialogButtons[0].text = syncOptions.updateDialog.mandatoryContinueButtonLabel;
            } else {
              message = syncOptions.updateDialog.optionalUpdateMessage;
              dialogButtons[0].text = syncOptions.updateDialog.optionalInstallButtonLabel;

              dialogButtons.push({
                text: syncOptions.updateDialog.optionalIgnoreButtonLabel,
                onPress: function onPress() {
                  syncStatusChangeCallback(CodePush.SyncStatus.UPDATE_IGNORED);
                  resolve(CodePush.SyncStatus.UPDATE_IGNORED);
                }
              });
            }

            if (syncOptions.updateDialog.appendReleaseDescription && remotePackage.description) {
              message += syncOptions.updateDialog.descriptionPrefix + " " + remotePackage.description;
            }

            syncStatusChangeCallback(CodePush.SyncStatus.AWAITING_USER_ACTION);
            _AlertAdapter.Alert.alert(syncOptions.updateDialog.title, message, dialogButtons);
          }));

        case 30:
          return _context9.abrupt("return", _context9.sent);

        case 33:
          _context9.next = 35;
          return regeneratorRuntime.awrap(doDownloadAndInstall());

        case 35:
          return _context9.abrupt("return", _context9.sent);

        case 36:
          _context9.next = 43;
          break;

        case 38:
          _context9.prev = 38;
          _context9.t0 = _context9["catch"](3);

          syncStatusChangeCallback(CodePush.SyncStatus.UNKNOWN_ERROR);
          (0, _logging2.default)(_context9.t0.message);
          throw _context9.t0;

        case 43:
        case "end":
          return _context9.stop();
      }
    }
  }, null, this, [[3, 38]]);
};

var CodePush = void 0;

function codePushify() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var React = void 0;
  var ReactNative = require(12            ); // 12 = react-native

  try {
    React = require(35     ); // 35 = react
  } catch (e) {}
  if (!React) {
    try {
      React = ReactNative.React;
    } catch (e) {}
    if (!React) {
      throw new Error("Unable to find the 'React' module.");
    }
  }

  if (!React.Component) {
    throw new Error("Unable to find the \"Component\" class, please either:\n1. Upgrade to a newer version of React Native that supports it, or\n2. Call the codePush.sync API in your component instead of using the @codePush decorator");
  }

  var decorator = function decorator(RootComponent) {
    var extended = function (_React$Component) {
      babelHelpers.inherits(CodePushComponent, _React$Component);

      function CodePushComponent() {
        babelHelpers.classCallCheck(this, CodePushComponent);
        return babelHelpers.possibleConstructorReturn(this, (CodePushComponent.__proto__ || Object.getPrototypeOf(CodePushComponent)).apply(this, arguments));
      }

      babelHelpers.createClass(CodePushComponent, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          if (options.checkFrequency === CodePush.CheckFrequency.MANUAL) {
            CodePush.notifyAppReady();
          } else {
            var rootComponentInstance = this.refs.rootComponent;

            var syncStatusCallback = void 0;
            if (rootComponentInstance && rootComponentInstance.codePushStatusDidChange) {
              syncStatusCallback = rootComponentInstance.codePushStatusDidChange;
              if (rootComponentInstance instanceof React.Component) {
                syncStatusCallback = syncStatusCallback.bind(rootComponentInstance);
              }
            }

            var downloadProgressCallback = void 0;
            if (rootComponentInstance && rootComponentInstance.codePushDownloadDidProgress) {
              downloadProgressCallback = rootComponentInstance.codePushDownloadDidProgress;
              if (rootComponentInstance instanceof React.Component) {
                downloadProgressCallback = downloadProgressCallback.bind(rootComponentInstance);
              }
            }

            var handleBinaryVersionMismatchCallback = void 0;
            if (rootComponentInstance && rootComponentInstance.codePushOnBinaryVersionMismatch) {
              handleBinaryVersionMismatchCallback = rootComponentInstance.codePushOnBinaryVersionMismatch;
              if (rootComponentInstance instanceof React.Component) {
                handleBinaryVersionMismatchCallback = handleBinaryVersionMismatchCallback.bind(rootComponentInstance);
              }
            }

            CodePush.sync(options, syncStatusCallback, downloadProgressCallback, handleBinaryVersionMismatchCallback);
            if (options.checkFrequency === CodePush.CheckFrequency.ON_APP_RESUME) {
              ReactNative.AppState.addEventListener("change", function (newState) {
                newState === "active" && CodePush.sync(options, syncStatusCallback, downloadProgressCallback);
              });
            }
          }
        }
      }, {
        key: "render",
        value: function render() {
          var props = babelHelpers.extends({}, this.props);

          if (RootComponent.prototype.render) {
            props.ref = "rootComponent";
          }

          return React.createElement(RootComponent, babelHelpers.extends({}, props, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 504
            }
          }));
        }
      }]);
      return CodePushComponent;
    }(React.Component);

    return (0, _hoistNonReactStatics2.default)(extended, RootComponent);
  };

  if (typeof options === "function") {
    return decorator(options);
  } else {
    return decorator;
  }
}

if (NativeCodePush) {
  CodePush = codePushify;
  babelHelpers.extends(CodePush, {
    AcquisitionSdk: _acquisitionSdk.AcquisitionManager,
    checkForUpdate: checkForUpdate,
    getConfiguration: getConfiguration,
    getCurrentPackage: getCurrentPackage,
    getUpdateMetadata: getUpdateMetadata,
    log: _logging2.default,
    notifyAppReady: notifyApplicationReady,
    notifyApplicationReady: notifyApplicationReady,
    restartApp: _RestartManager2.default.restartApp,
    setUpTestDependencies: setUpTestDependencies,
    sync: sync,
    disallowRestart: _RestartManager2.default.disallow,
    allowRestart: _RestartManager2.default.allow,
    InstallMode: {
      IMMEDIATE: NativeCodePush.codePushInstallModeImmediate,
      ON_NEXT_RESTART: NativeCodePush.codePushInstallModeOnNextRestart,
      ON_NEXT_RESUME: NativeCodePush.codePushInstallModeOnNextResume,
      ON_NEXT_SUSPEND: NativeCodePush.codePushInstallModeOnNextSuspend },
    SyncStatus: {
      UP_TO_DATE: 0,
      UPDATE_INSTALLED: 1,
      UPDATE_IGNORED: 2,
      UNKNOWN_ERROR: 3,
      SYNC_IN_PROGRESS: 4,
      CHECKING_FOR_UPDATE: 5,
      AWAITING_USER_ACTION: 6,
      DOWNLOADING_PACKAGE: 7,
      INSTALLING_UPDATE: 8
    },
    CheckFrequency: {
      ON_APP_START: 0,
      ON_APP_RESUME: 1,
      MANUAL: 2
    },
    UpdateState: {
      RUNNING: NativeCodePush.codePushUpdateStateRunning,
      PENDING: NativeCodePush.codePushUpdateStatePending,
      LATEST: NativeCodePush.codePushUpdateStateLatest
    },
    DeploymentStatus: {
      FAILED: "DeploymentFailed",
      SUCCEEDED: "DeploymentSucceeded"
    },
    DEFAULT_UPDATE_DIALOG: {
      appendReleaseDescription: false,
      descriptionPrefix: " Description: ",
      mandatoryContinueButtonLabel: "Continue",
      mandatoryUpdateMessage: "An update is available that must be installed.",
      optionalIgnoreButtonLabel: "Ignore",
      optionalInstallButtonLabel: "Install",
      optionalUpdateMessage: "An update is available. Would you like to install it?",
      title: "Update available"
    }
  });
} else {
  (0, _logging2.default)("The CodePush module doesn't appear to be properly installed. Please double-check that everything is setup correctly.");
}

module.exports = CodePush;
}, 575, null, "react-native-code-push/CodePush.js");
__d(/* code-push/script/acquisition-sdk.js */function(global, require, module, exports) {
var AcquisitionStatus = function () {
    function AcquisitionStatus() {}
    AcquisitionStatus.DeploymentSucceeded = "DeploymentSucceeded";
    AcquisitionStatus.DeploymentFailed = "DeploymentFailed";
    return AcquisitionStatus;
}();
exports.AcquisitionStatus = AcquisitionStatus;
var AcquisitionManager = function () {
    function AcquisitionManager(httpRequester, configuration) {
        this._httpRequester = httpRequester;
        this._serverUrl = configuration.serverUrl;
        if (this._serverUrl.slice(-1) !== "/") {
            this._serverUrl += "/";
        }
        this._appVersion = configuration.appVersion;
        this._clientUniqueId = configuration.clientUniqueId;
        this._deploymentKey = configuration.deploymentKey;
        this._ignoreAppVersion = configuration.ignoreAppVersion;
    }
    AcquisitionManager.prototype.queryUpdateWithCurrentPackage = function (currentPackage, callback) {
        var _this = this;
        if (!currentPackage || !currentPackage.appVersion) {
            throw new Error("Calling common acquisition SDK with incorrect package");
        }
        var updateRequest = {
            deploymentKey: this._deploymentKey,
            appVersion: currentPackage.appVersion,
            packageHash: currentPackage.packageHash,
            isCompanion: this._ignoreAppVersion,
            label: currentPackage.label,
            clientUniqueId: this._clientUniqueId
        };
        var requestUrl = this._serverUrl + "updateCheck?" + queryStringify(updateRequest);
        this._httpRequester.request(0, requestUrl, function (error, response) {
            if (error) {
                callback(error, null);
                return;
            }
            if (response.statusCode !== 200) {
                callback(new Error(response.statusCode + ": " + response.body), null);
                return;
            }
            try {
                var responseObject = JSON.parse(response.body);
                var updateInfo = responseObject.updateInfo;
            } catch (error) {
                callback(error, null);
                return;
            }
            if (!updateInfo) {
                callback(error, null);
                return;
            } else if (updateInfo.updateAppVersion) {
                callback(null, { updateAppVersion: true, appVersion: updateInfo.appVersion });
                return;
            } else if (!updateInfo.isAvailable) {
                callback(null, null);
                return;
            }
            var remotePackage = {
                deploymentKey: _this._deploymentKey,
                description: updateInfo.description,
                label: updateInfo.label,
                appVersion: updateInfo.appVersion,
                isMandatory: updateInfo.isMandatory,
                packageHash: updateInfo.packageHash,
                packageSize: updateInfo.packageSize,
                downloadUrl: updateInfo.downloadURL
            };
            callback(null, remotePackage);
        });
    };
    AcquisitionManager.prototype.reportStatusDeploy = function (deployedPackage, status, previousLabelOrAppVersion, previousDeploymentKey, callback) {
        var url = this._serverUrl + "reportStatus/deploy";
        var body = {
            appVersion: this._appVersion,
            deploymentKey: this._deploymentKey
        };
        if (this._clientUniqueId) {
            body.clientUniqueId = this._clientUniqueId;
        }
        if (deployedPackage) {
            body.label = deployedPackage.label;
            body.appVersion = deployedPackage.appVersion;
            switch (status) {
                case AcquisitionStatus.DeploymentSucceeded:
                case AcquisitionStatus.DeploymentFailed:
                    body.status = status;
                    break;
                default:
                    if (callback) {
                        if (!status) {
                            callback(new Error("Missing status argument."), null);
                        } else {
                            callback(new Error("Unrecognized status \"" + status + "\"."), null);
                        }
                    }
                    return;
            }
        }
        if (previousLabelOrAppVersion) {
            body.previousLabelOrAppVersion = previousLabelOrAppVersion;
        }
        if (previousDeploymentKey) {
            body.previousDeploymentKey = previousDeploymentKey;
        }
        callback = typeof arguments[arguments.length - 1] === "function" && arguments[arguments.length - 1];
        this._httpRequester.request(2, url, JSON.stringify(body), function (error, response) {
            if (callback) {
                if (error) {
                    callback(error, null);
                    return;
                }
                if (response.statusCode !== 200) {
                    callback(new Error(response.statusCode + ": " + response.body), null);
                    return;
                }
                callback(null, null);
            }
        });
    };
    AcquisitionManager.prototype.reportStatusDownload = function (downloadedPackage, callback) {
        var url = this._serverUrl + "reportStatus/download";
        var body = {
            clientUniqueId: this._clientUniqueId,
            deploymentKey: this._deploymentKey,
            label: downloadedPackage.label
        };
        this._httpRequester.request(2, url, JSON.stringify(body), function (error, response) {
            if (callback) {
                if (error) {
                    callback(error, null);
                    return;
                }
                if (response.statusCode !== 200) {
                    callback(new Error(response.statusCode + ": " + response.body), null);
                    return;
                }
                callback(null, null);
            }
        });
    };
    return AcquisitionManager;
}();
exports.AcquisitionManager = AcquisitionManager;
function queryStringify(object) {
    var queryString = "";
    var isFirst = true;
    for (var property in object) {
        if (object.hasOwnProperty(property)) {
            var value = object[property];
            if (!isFirst) {
                queryString += "&";
            }
            queryString += encodeURIComponent(property) + "=";
            if (value !== null && typeof value !== "undefined") {
                queryString += encodeURIComponent(value);
            }
            isFirst = false;
        }
    }
    return queryString;
}
}, 576, null, "code-push/script/acquisition-sdk.js");
__d(/* react-native-code-push/AlertAdapter.js */function(global, require, module, exports) {var _reactNative = require(12            ); // 12 = react-native

var _reactNative2 = babelHelpers.interopRequireDefault(_reactNative);

var Alert = _reactNative2.default.Alert;


if (_reactNative.Platform.OS === "android") {
  var CodePushDialog = _reactNative2.default.NativeModules.CodePushDialog;


  Alert = {
    alert: function alert(title, message, buttons) {
      if (buttons.length > 2) {
        throw "Can only show 2 buttons for Android dialog.";
      }

      var button1Text = buttons[0] ? buttons[0].text : null,
          button2Text = buttons[1] ? buttons[1].text : null;

      CodePushDialog.showDialog(title, message, button1Text, button2Text, function (buttonId) {
        buttons[buttonId].onPress && buttons[buttonId].onPress();
      }, function (error) {
        throw error;
      });
    }
  };
}

module.exports = { Alert: Alert };
}, 577, null, "react-native-code-push/AlertAdapter.js");
__d(/* react-native-code-push/request-fetch-adapter.js */function(global, require, module, exports) {var packageJson = require(579             ); // 579 = ./package.json

module.exports = {
  request: function request(verb, url, requestBody, callback) {
    var headers, response, statusCode, body;
    return regeneratorRuntime.async(function request$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (typeof requestBody === "function") {
              callback = requestBody;
              requestBody = null;
            }

            headers = {
              "Accept": "application/json",
              "Content-Type": "application/json",
              "X-CodePush-Plugin-Name": packageJson.name,
              "X-CodePush-Plugin-Version": packageJson.version,
              "X-CodePush-SDK-Version": packageJson.dependencies["code-push"]
            };


            if (requestBody && typeof requestBody === "object") {
              requestBody = JSON.stringify(requestBody);
            }

            _context.prev = 3;
            _context.next = 6;
            return regeneratorRuntime.awrap(fetch(url, {
              method: getHttpMethodName(verb),
              headers: headers,
              body: requestBody
            }));

          case 6:
            response = _context.sent;
            statusCode = response.status;
            _context.next = 10;
            return regeneratorRuntime.awrap(response.text());

          case 10:
            body = _context.sent;

            callback(null, { statusCode: statusCode, body: body });
            _context.next = 17;
            break;

          case 14:
            _context.prev = 14;
            _context.t0 = _context["catch"](3);

            callback(_context.t0);

          case 17:
          case "end":
            return _context.stop();
        }
      }
    }, null, this, [[3, 14]]);
  }
};

function getHttpMethodName(verb) {
  return ["GET", "HEAD", "POST", "PUT", "DELETE", "TRACE", "OPTIONS", "CONNECT", "PATCH"][verb];
}
}, 578, null, "react-native-code-push/request-fetch-adapter.js");
__d(/* react-native-code-push/package.json */function(global, require, module, exports) {module.exports = module.exports = {
  "name": "react-native-code-push",
  "version": "5.2.0-beta",
  "description": "React Native plugin for the CodePush service",
  "main": "CodePush.js",
  "typings": "typings/react-native-code-push.d.ts",
  "homepage": "https://microsoft.github.io/code-push",
  "keywords": ["react-native", "code", "push"],
  "author": "Microsoft Corporation",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/Microsoft/react-native-code-push"
  },
  "dependencies": {
    "code-push": "1.11.2-beta",
    "glob": "^5.0.15",
    "hoist-non-react-statics": "^2.3.1",
    "inquirer": "1.1.2",
    "plist": "1.2.0",
    "xcode": "0.9.2"
  },
  "devDependencies": {
    "archiver": "latest",
    "body-parser": "latest",
    "code-push-plugin-testing-framework": "file:./code-push-plugin-testing-framework",
    "del": "latest",
    "express": "latest",
    "gulp-insert": "latest",
    "gulp-tslint": "latest",
    "gulp-typescript": "2.12.2",
    "mkdirp": "latest",
    "q": "^1.4.1",
    "run-sequence": "latest",
    "tslint": "^4.3.1",
    "typescript": "^2.1.5"
  },
  "rnpm": {
    "android": {
      "packageInstance": "new CodePush(${androidDeploymentKey}, getApplicationContext(), BuildConfig.DEBUG)"
    },
    "ios": {
      "sharedLibraries": ["libz"]
    },
    "params": [{
      "type": "input",
      "name": "androidDeploymentKey",
      "message": "What is your CodePush deployment key for Android (hit <ENTER> to ignore)"
    }],
    "commands": {
      "postlink": "node node_modules/react-native-code-push/scripts/postlink/run"
    }
  }
};
}, 579, null, "react-native-code-push/package.json");
__d(/* react-native-code-push/RestartManager.js */function(global, require, module, exports) {var log = require(581        ); // 581 = ./logging
var NativeCodePush = require(12            ).NativeModules.CodePush; // 12 = react-native

var RestartManager = function () {
    var _allowed = true;
    var _restartInProgress = false;
    var _restartQueue = [];

    function allow() {
        log("Re-allowing restarts");
        _allowed = true;

        if (_restartQueue.length) {
            log("Executing pending restart");
            restartApp(_restartQueue.shift(1));
        }
    }

    function clearPendingRestart() {
        _restartQueue = [];
    }

    function disallow() {
        log("Disallowing restarts");
        _allowed = false;
    }

    function restartApp() {
        var onlyIfUpdateIsPending = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
        return regeneratorRuntime.async(function restartApp$(_context) {
            while (1) {
                switch (_context.prev = _context.next) {
                    case 0:
                        if (!_restartInProgress) {
                            _context.next = 5;
                            break;
                        }

                        log("Restart request queued until the current restart is completed");
                        _restartQueue.push(onlyIfUpdateIsPending);
                        _context.next = 18;
                        break;

                    case 5:
                        if (_allowed) {
                            _context.next = 10;
                            break;
                        }

                        log("Restart request queued until restarts are re-allowed");
                        _restartQueue.push(onlyIfUpdateIsPending);
                        _context.next = 18;
                        break;

                    case 10:
                        _restartInProgress = true;
                        _context.next = 13;
                        return regeneratorRuntime.awrap(NativeCodePush.restartApp(onlyIfUpdateIsPending));

                    case 13:
                        if (!_context.sent) {
                            _context.next = 16;
                            break;
                        }

                        log("Restarting app");
                        return _context.abrupt("return");

                    case 16:

                        _restartInProgress = false;
                        if (_restartQueue.length) {
                            restartApp(_restartQueue.shift(1));
                        }

                    case 18:
                    case "end":
                        return _context.stop();
                }
            }
        }, null, this);
    }

    return {
        allow: allow,
        clearPendingRestart: clearPendingRestart,
        disallow: disallow,
        restartApp: restartApp
    };
}();

module.exports = RestartManager;
}, 580, null, "react-native-code-push/RestartManager.js");
__d(/* react-native-code-push/logging.js */function(global, require, module, exports) {
function log(message) {
  console.log("[CodePush] " + message);
}

module.exports = log;
}, 581, null, "react-native-code-push/logging.js");
__d(/* react-native-code-push/package-mixins.js */function(global, require, module, exports) {var _acquisitionSdk = require(576                               ); // 576 = code-push/script/acquisition-sdk

var _reactNative = require(12            ); // 12 = react-native

var _RestartManager = require(580               ); // 580 = ./RestartManager

var _RestartManager2 = babelHelpers.interopRequireDefault(_RestartManager);

module.exports = function (NativeCodePush) {
  var remote = function remote(reportStatusDownload) {
    return {
      download: function download(downloadProgressCallback) {
        var downloadProgressSubscription, codePushEventEmitter, updatePackageCopy, downloadedPackage;
        return regeneratorRuntime.async(function download$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (this.downloadUrl) {
                  _context.next = 2;
                  break;
                }

                throw new Error("Cannot download an update without a download url");

              case 2:
                downloadProgressSubscription = void 0;

                if (downloadProgressCallback) {
                  codePushEventEmitter = new _reactNative.NativeEventEmitter(NativeCodePush);

                  downloadProgressSubscription = codePushEventEmitter.addListener("CodePushDownloadProgress", downloadProgressCallback);
                }

                _context.prev = 4;
                updatePackageCopy = babelHelpers.extends({}, this);

                Object.keys(updatePackageCopy).forEach(function (key) {
                  return typeof updatePackageCopy[key] === 'function' && delete updatePackageCopy[key];
                });

                _context.next = 9;
                return regeneratorRuntime.awrap(NativeCodePush.downloadUpdate(updatePackageCopy, !!downloadProgressCallback));

              case 9:
                downloadedPackage = _context.sent;

                reportStatusDownload && reportStatusDownload(this);
                return _context.abrupt("return", babelHelpers.extends({}, downloadedPackage, local));

              case 12:
                _context.prev = 12;

                downloadProgressSubscription && downloadProgressSubscription.remove();
                return _context.finish(12);

              case 15:
              case "end":
                return _context.stop();
            }
          }
        }, null, this, [[4,, 12, 15]]);
      },


      isPending: false };
  };

  var local = {
    install: function install() {
      var installMode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : NativeCodePush.codePushInstallModeOnNextRestart;
      var minimumBackgroundDuration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var updateInstalledCallback = arguments[2];
      var localPackage, localPackageCopy;
      return regeneratorRuntime.async(function install$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              localPackage = this;
              localPackageCopy = babelHelpers.extends({}, localPackage);
              _context2.next = 4;
              return regeneratorRuntime.awrap(NativeCodePush.installUpdate(localPackageCopy, installMode, minimumBackgroundDuration));

            case 4:
              updateInstalledCallback && updateInstalledCallback();
              if (installMode == NativeCodePush.codePushInstallModeImmediate) {
                _RestartManager2.default.restartApp(false);
              } else {
                _RestartManager2.default.clearPendingRestart();
                localPackage.isPending = true;
              }

            case 6:
            case "end":
              return _context2.stop();
          }
        }
      }, null, this);
    },


    isPending: false };

  return { local: local, remote: remote };
};
}, 582, null, "react-native-code-push/package-mixins.js");
__d(/* react-native-swiper/index.js */function(global, require, module, exports) {var _src = require(584     ); // 584 = ./src/

var _src2 = babelHelpers.interopRequireDefault(_src);

module.exports = _src2.default;
}, 583, null, "react-native-swiper/index.js");
__d(/* react-native-swiper/src/index.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native-swiper/src/index.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var styles = {
  container: {
    backgroundColor: 'transparent',
    position: 'relative',
    flex: 1
  },

  wrapperIOS: {
    backgroundColor: 'transparent'
  },

  wrapperAndroid: {
    backgroundColor: 'transparent',
    flex: 1
  },

  slide: {
    backgroundColor: 'transparent'
  },

  pagination_x: {
    position: 'absolute',
    bottom: 25,
    left: 0,
    right: 0,
    flexDirection: 'row',
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: 'transparent'
  },

  pagination_y: {
    position: 'absolute',
    right: 15,
    top: 0,
    bottom: 0,
    flexDirection: 'column',
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: 'transparent'
  },

  title: {
    height: 30,
    justifyContent: 'center',
    position: 'absolute',
    paddingLeft: 10,
    bottom: -30,
    left: 0,
    flexWrap: 'nowrap',
    width: 250,
    backgroundColor: 'transparent'
  },

  buttonWrapper: {
    backgroundColor: 'transparent',
    flexDirection: 'row',
    position: 'absolute',
    top: 0,
    left: 0,
    flex: 1,
    paddingHorizontal: 10,
    paddingVertical: 10,
    justifyContent: 'space-between',
    alignItems: 'center'
  },

  buttonText: {
    fontSize: 50,
    color: '#007aff',
    fontFamily: 'Arial'
  }
};

var _class = function (_Component) {
  babelHelpers.inherits(_class, _Component);

  function _class() {
    var _ref;

    var _temp, _this, _ret;

    babelHelpers.classCallCheck(this, _class);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = babelHelpers.possibleConstructorReturn(this, (_ref = _class.__proto__ || Object.getPrototypeOf(_class)).call.apply(_ref, [this].concat(args))), _this), _this.state = _this.initState(_this.props), _this.initialRender = true, _this.autoplayTimer = null, _this.loopJumpTimer = null, _this.onLayout = function (event) {
      var _event$nativeEvent$la = event.nativeEvent.layout,
          width = _event$nativeEvent$la.width,
          height = _event$nativeEvent$la.height;

      var offset = _this.internals.offset = {};
      var state = { width: width, height: height };

      if (_this.state.total > 1) {
        var setup = _this.state.index;
        if (_this.props.loop) {
          setup++;
        }
        offset[_this.state.dir] = _this.state.dir === 'y' ? height * setup : width * setup;
      }

      if (!_this.state.offset || width !== _this.state.width || height !== _this.state.height) {
        state.offset = offset;
      }

      if (_reactNative.Platform.OS === 'ios') {
        if (_this.initialRender && _this.state.total > 1) {
          _this.scrollView.scrollTo(babelHelpers.extends({}, offset, { animated: false }));
          _this.initialRender = false;
        }
      }

      _this.setState(state);
    }, _this.loopJump = function () {
      if (!_this.state.loopJump) return;
      var i = _this.state.index + (_this.props.loop ? 1 : 0);
      var scrollView = _this.scrollView;
      _this.loopJumpTimer = setTimeout(function () {
        return scrollView.setPageWithoutAnimation && scrollView.setPageWithoutAnimation(i);
      }, 50);
    }, _this.autoplay = function () {
      if (!Array.isArray(_this.props.children) || !_this.props.autoplay || _this.internals.isScrolling || _this.state.autoplayEnd) return;

      _this.autoplayTimer && clearTimeout(_this.autoplayTimer);
      _this.autoplayTimer = setTimeout(function () {
        if (!_this.props.loop && (_this.props.autoplayDirection ? _this.state.index === _this.state.total - 1 : _this.state.index === 0)) return _this.setState({ autoplayEnd: true });

        _this.scrollBy(_this.props.autoplayDirection ? 1 : -1);
      }, _this.props.autoplayTimeout * 1000);
    }, _this.onScrollBegin = function (e) {
      _this.internals.isScrolling = true;
      _this.props.onScrollBeginDrag && _this.props.onScrollBeginDrag(e, _this.fullState(), _this);
    }, _this.onScrollEnd = function (e) {
      _this.internals.isScrolling = false;

      if (!e.nativeEvent.contentOffset) {
        if (_this.state.dir === 'x') {
          e.nativeEvent.contentOffset = { x: e.nativeEvent.position * _this.state.width };
        } else {
          e.nativeEvent.contentOffset = { y: e.nativeEvent.position * _this.state.height };
        }
      }

      _this.updateIndex(e.nativeEvent.contentOffset, _this.state.dir, function () {
        _this.autoplay();
        _this.loopJump();

        _this.props.onMomentumScrollEnd && _this.props.onMomentumScrollEnd(e, _this.fullState(), _this);
      });
    }, _this.onScrollEndDrag = function (e) {
      var contentOffset = e.nativeEvent.contentOffset;
      var _this$props = _this.props,
          horizontal = _this$props.horizontal,
          children = _this$props.children;
      var index = _this.state.index;
      var offset = _this.internals.offset;

      var previousOffset = horizontal ? offset.x : offset.y;
      var newOffset = horizontal ? contentOffset.x : contentOffset.y;

      if (previousOffset === newOffset && (index === 0 || index === children.length - 1)) {
        _this.internals.isScrolling = false;
      }
    }, _this.updateIndex = function (offset, dir, cb) {
      var state = _this.state;
      var index = state.index;
      var diff = offset[dir] - _this.internals.offset[dir];
      var step = dir === 'x' ? state.width : state.height;
      var loopJump = false;

      if (!diff) return;

      index = parseInt(index + Math.round(diff / step));

      if (_this.props.loop) {
        if (index <= -1) {
          index = state.total - 1;
          offset[dir] = step * state.total;
          loopJump = true;
        } else if (index >= state.total) {
          index = 0;
          offset[dir] = step;
          loopJump = true;
        }
      }

      var newState = {};
      newState.index = index;
      newState.loopJump = loopJump;

      _this.internals.offset = offset;

      if (loopJump) {
        if (offset[dir] === _this.internals.offset[dir]) {
          newState.offset = { x: 0, y: 0 };
          newState.offset[dir] = offset[dir] + 1;
          _this.setState(newState, function () {
            _this.setState({ offset: offset }, cb);
          });
        } else {
          newState.offset = offset;
          _this.setState(newState, cb);
        }
      } else {
        _this.setState(newState, cb);
      }
    }, _this.scrollBy = function (index) {
      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      if (_this.internals.isScrolling || _this.state.total < 2) return;
      var state = _this.state;
      var diff = (_this.props.loop ? 1 : 0) + index + _this.state.index;
      var x = 0;
      var y = 0;
      if (state.dir === 'x') x = diff * state.width;
      if (state.dir === 'y') y = diff * state.height;

      if (_reactNative.Platform.OS !== 'ios') {
        _this.scrollView && _this.scrollView[animated ? 'setPage' : 'setPageWithoutAnimation'](diff);
      } else {
        _this.scrollView && _this.scrollView.scrollTo({ x: x, y: y, animated: animated });
      }

      _this.internals.isScrolling = true;
      _this.setState({
        autoplayEnd: false
      });

      if (!animated || _reactNative.Platform.OS !== 'ios') {
        setImmediate(function () {
          _this.onScrollEnd({
            nativeEvent: {
              position: diff
            }
          });
        });
      }
    }, _this.scrollViewPropOverrides = function () {
      var props = _this.props;
      var overrides = {};

      for (var prop in props) {
        if (typeof props[prop] === 'function' && prop !== 'onMomentumScrollEnd' && prop !== 'renderPagination' && prop !== 'onScrollBeginDrag') {
          (function () {
            var originResponder = props[prop];
            overrides[prop] = function (e) {
              return originResponder(e, _this.fullState(), _this);
            };
          })();
        }
      }

      return overrides;
    }, _this.renderPagination = function () {
      if (_this.state.total <= 1) return null;

      var dots = [];
      var ActiveDot = _this.props.activeDot || _react2.default.createElement(_reactNative.View, { style: [{
          backgroundColor: _this.props.activeDotColor || '#007aff',
          width: 8,
          height: 8,
          borderRadius: 4,
          marginLeft: 3,
          marginRight: 3,
          marginTop: 3,
          marginBottom: 3
        }, _this.props.activeDotStyle], __source: {
          fileName: _jsxFileName,
          lineNumber: 527
        }
      });
      var Dot = _this.props.dot || _react2.default.createElement(_reactNative.View, { style: [{
          backgroundColor: _this.props.dotColor || 'rgba(0,0,0,.2)',
          width: 8,
          height: 8,
          borderRadius: 4,
          marginLeft: 3,
          marginRight: 3,
          marginTop: 3,
          marginBottom: 3
        }, _this.props.dotStyle], __source: {
          fileName: _jsxFileName,
          lineNumber: 537
        }
      });
      for (var i = 0; i < _this.state.total; i++) {
        dots.push(i === _this.state.index ? _react2.default.cloneElement(ActiveDot, { key: i }) : _react2.default.cloneElement(Dot, { key: i }));
      }

      return _react2.default.createElement(
        _reactNative.View,
        { pointerEvents: 'none', style: [styles['pagination_' + _this.state.dir], _this.props.paginationStyle], __source: {
            fileName: _jsxFileName,
            lineNumber: 555
          }
        },
        dots
      );
    }, _this.renderTitle = function () {
      var child = _this.props.children[_this.state.index];
      var title = child && child.props && child.props.title;
      return title ? _react2.default.createElement(
        _reactNative.View,
        { style: styles.title, __source: {
            fileName: _jsxFileName,
            lineNumber: 565
          }
        },
        _this.props.children[_this.state.index].props.title
      ) : null;
    }, _this.renderNextButton = function () {
      var button = null;

      if (_this.props.loop || _this.state.index !== _this.state.total - 1) {
        button = _this.props.nextButton || _react2.default.createElement(
          _reactNative.Text,
          { style: styles.buttonText, __source: {
              fileName: _jsxFileName,
              lineNumber: 576
            }
          },
          '\u203A'
        );
      }

      return _react2.default.createElement(
        _reactNative.TouchableOpacity,
        {
          onPress: function onPress() {
            return button !== null && _this.scrollBy(1);
          },
          disabled: _this.props.disableNextButton,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 580
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 584
            }
          },
          button
        )
      );
    }, _this.renderPrevButton = function () {
      var button = null;

      if (_this.props.loop || _this.state.index !== 0) {
        button = _this.props.prevButton || _react2.default.createElement(
          _reactNative.Text,
          { style: styles.buttonText, __source: {
              fileName: _jsxFileName,
              lineNumber: 595
            }
          },
          '\u2039'
        );
      }

      return _react2.default.createElement(
        _reactNative.TouchableOpacity,
        { onPress: function onPress() {
            return button !== null && _this.scrollBy(-1);
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 599
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 600
            }
          },
          button
        )
      );
    }, _this.renderButtons = function () {
      return _react2.default.createElement(
        _reactNative.View,
        { pointerEvents: 'box-none', style: [styles.buttonWrapper, {
            width: _this.state.width,
            height: _this.state.height
          }, _this.props.buttonWrapperStyle], __source: {
            fileName: _jsxFileName,
            lineNumber: 609
          }
        },
        _this.renderPrevButton(),
        _this.renderNextButton()
      );
    }, _this.refScrollView = function (view) {
      _this.scrollView = view;
    }, _this.renderScrollView = function (pages) {
      if (_reactNative.Platform.OS === 'ios') {
        return _react2.default.createElement(
          _reactNative.ScrollView,
          babelHelpers.extends({ ref: _this.refScrollView
          }, _this.props, _this.scrollViewPropOverrides(), {
            contentContainerStyle: [styles.wrapperIOS, _this.props.style],
            contentOffset: _this.state.offset,
            onScrollBeginDrag: _this.onScrollBegin,
            onMomentumScrollEnd: _this.onScrollEnd,
            onScrollEndDrag: _this.onScrollEndDrag,
            style: _this.props.scrollViewStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 626
            }
          }),
          pages
        );
      }
      return _react2.default.createElement(
        _reactNative.ViewPagerAndroid,
        babelHelpers.extends({ ref: _this.refScrollView
        }, _this.props, {
          initialPage: _this.props.loop ? _this.state.index + 1 : _this.state.index,
          onPageSelected: _this.onScrollEnd,
          key: pages.length,
          style: [styles.wrapperAndroid, _this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 640
          }
        }),
        pages
      );
    }, _temp), babelHelpers.possibleConstructorReturn(_this, _ret);
  }

  babelHelpers.createClass(_class, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (!nextProps.autoplay && this.autoplayTimer) clearTimeout(this.autoplayTimer);
      this.setState(this.initState(nextProps, this.props.index !== nextProps.index));
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.autoplay();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.autoplayTimer && clearTimeout(this.autoplayTimer);
      this.loopJumpTimer && clearTimeout(this.loopJumpTimer);
    }
  }, {
    key: 'componentWillUpdate',
    value: function componentWillUpdate(nextProps, nextState) {
      if (this.state.index !== nextState.index) this.props.onIndexChanged(nextState.index);
    }
  }, {
    key: 'initState',
    value: function initState(props) {
      var updateIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      var state = this.state || { width: 0, height: 0, offset: { x: 0, y: 0 } };

      var initState = {
        autoplayEnd: false,
        loopJump: false,
        offset: {}
      };

      initState.total = props.children ? props.children.length || 1 : 0;

      if (state.total === initState.total && !updateIndex) {
        initState.index = state.index;
      } else {
        initState.index = initState.total > 1 ? Math.min(props.index, initState.total - 1) : 0;
      }

      var _Dimensions$get = _reactNative.Dimensions.get('window'),
          width = _Dimensions$get.width,
          height = _Dimensions$get.height;

      initState.dir = props.horizontal === false ? 'y' : 'x';

      if (props.width) {
        initState.width = props.width;
      } else if (this.state && this.state.width) {
        initState.width = this.state.width;
      } else {
        initState.width = width;
      }

      if (props.height) {
        initState.height = props.height;
      } else if (this.state && this.state.height) {
        initState.height = this.state.height;
      } else {
        initState.height = height;
      }

      initState.offset[initState.dir] = initState.dir === 'y' ? height * props.index : width * props.index;

      this.internals = babelHelpers.extends({}, this.internals, {
        isScrolling: false
      });
      return initState;
    }
  }, {
    key: 'fullState',
    value: function fullState() {
      return babelHelpers.extends({}, this.state, this.internals);
    }
  }, {
    key: 'render',
    value: function render() {
      var state = this.state;
      var props = this.props;
      var _state = this.state,
          index = _state.index,
          total = _state.total,
          width = _state.width,
          height = _state.height;
      var _props = this.props,
          children = _props.children,
          containerStyle = _props.containerStyle,
          loop = _props.loop,
          loadMinimal = _props.loadMinimal,
          loadMinimalSize = _props.loadMinimalSize,
          loadMinimalLoader = _props.loadMinimalLoader,
          renderPagination = _props.renderPagination,
          showsButtons = _props.showsButtons,
          showsPagination = _props.showsPagination;

      var loopVal = loop ? 1 : 0;
      var pages = [];

      var pageStyle = [{ width: width, height: height }, styles.slide];
      var pageStyleLoading = {
        width: width,
        height: height,
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center'
      };

      if (total > 1) {
        pages = Object.keys(children);
        if (loop) {
          pages.unshift(total - 1 + '');
          pages.push('0');
        }

        pages = pages.map(function (page, i) {
          if (loadMinimal) {
            if (i >= index + loopVal - loadMinimalSize && i <= index + loopVal + loadMinimalSize) {
              return _react2.default.createElement(
                _reactNative.View,
                { style: pageStyle, key: i, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 702
                  }
                },
                children[page]
              );
            } else {
              return _react2.default.createElement(
                _reactNative.View,
                { style: pageStyleLoading, key: i, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 705
                  }
                },
                loadMinimalLoader ? loadMinimalLoader : _react2.default.createElement(_reactNative.ActivityIndicator, {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 706
                  }
                })
              );
            }
          } else {
            return _react2.default.createElement(
              _reactNative.View,
              { style: pageStyle, key: i, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 711
                }
              },
              children[page]
            );
          }
        });
      } else {
        pages = _react2.default.createElement(
          _reactNative.View,
          { style: pageStyle, key: 0, __source: {
              fileName: _jsxFileName,
              lineNumber: 715
            }
          },
          children
        );
      }

      return _react2.default.createElement(
        _reactNative.View,
        { style: [styles.container, containerStyle], onLayout: this.onLayout, __source: {
            fileName: _jsxFileName,
            lineNumber: 719
          }
        },
        this.renderScrollView(pages),
        showsPagination && (renderPagination ? renderPagination(index, total, this) : this.renderPagination()),
        this.renderTitle(),
        showsButtons && this.renderButtons()
      );
    }
  }]);
  return _class;
}(_react.Component);

_class.propTypes = {
  horizontal: _propTypes2.default.bool,
  children: _propTypes2.default.node.isRequired,
  containerStyle: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number]),
  style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number]),
  scrollViewStyle: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number]),
  pagingEnabled: _propTypes2.default.bool,
  showsHorizontalScrollIndicator: _propTypes2.default.bool,
  showsVerticalScrollIndicator: _propTypes2.default.bool,
  bounces: _propTypes2.default.bool,
  scrollsToTop: _propTypes2.default.bool,
  removeClippedSubviews: _propTypes2.default.bool,
  automaticallyAdjustContentInsets: _propTypes2.default.bool,
  showsPagination: _propTypes2.default.bool,
  showsButtons: _propTypes2.default.bool,
  disableNextButton: _propTypes2.default.bool,
  loadMinimal: _propTypes2.default.bool,
  loadMinimalSize: _propTypes2.default.number,
  loadMinimalLoader: _propTypes2.default.element,
  loop: _propTypes2.default.bool,
  autoplay: _propTypes2.default.bool,
  autoplayTimeout: _propTypes2.default.number,
  autoplayDirection: _propTypes2.default.bool,
  index: _propTypes2.default.number,
  renderPagination: _propTypes2.default.func,
  dotStyle: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number]),
  activeDotStyle: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number]),
  dotColor: _propTypes2.default.string,
  activeDotColor: _propTypes2.default.string,

  onIndexChanged: _propTypes2.default.func
};
_class.defaultProps = {
  horizontal: true,
  pagingEnabled: true,
  showsHorizontalScrollIndicator: false,
  showsVerticalScrollIndicator: false,
  bounces: false,
  scrollsToTop: false,
  removeClippedSubviews: true,
  automaticallyAdjustContentInsets: false,
  showsPagination: true,
  showsButtons: false,
  disableNextButton: false,
  loop: true,
  loadMinimal: false,
  loadMinimalSize: 1,
  autoplay: false,
  autoplayTimeout: 2.5,
  autoplayDirection: true,
  index: 0,
  onIndexChanged: function onIndexChanged() {
    return null;
  }
};
exports.default = _class;
}, 584, null, "react-native-swiper/src/index.js");
__d(/* YuanXC/src/components/Notification.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/components/Notification.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  padding-left:10;\n  padding-vertical:4;\n  flex-direction:row;\n'], ['\n  padding-left:10;\n  padding-vertical:4;\n  flex-direction:row;\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _UtilLib = require(586        ); // 586 = ./UtilLib

var _imgs = require(436                ); // 436 = ../resources/imgs

var _imgs2 = babelHelpers.interopRequireDefault(_imgs);

var _Touchable = require(497          ); // 497 = ./Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var NotificationView = (0, _native2.default)(_Touchable2.default)(_templateObject);

var Notification = function (_PureComponent) {
  babelHelpers.inherits(Notification, _PureComponent);

  function Notification(props) {
    babelHelpers.classCallCheck(this, Notification);

    var _this = babelHelpers.possibleConstructorReturn(this, (Notification.__proto__ || Object.getPrototypeOf(Notification)).call(this, props));

    _this.state = { idx: -1 };
    return _this;
  }

  babelHelpers.createClass(Notification, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      var notify = nextProps.notify;

      if (notify !== this.props.notify && notify && notify.length > 0) {
        this.interval && clearInterval(this.interval);
        this.setState({ idx: 0 }, function () {
          _this2.interval = setInterval(function () {
            var idx = _this2.state.idx + 1;
            idx === notify.length && (idx = 0);
            _this2.setState({ idx: idx });
          }, 3000);
        });
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.interval && clearInterval(this.interval);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      if (this.state.idx === -1) {
        return null;
      }
      var _props$notify$state$i = this.props.notify[this.state.idx],
          title = _props$notify$state$i.title,
          id = _props$notify$state$i.id;

      return _react2.default.createElement(
        NotificationView,
        { onPress: function onPress() {
            return _this3.props.navigate("NotifyDetail", { title: title.length > 12 ? title.substr(0, 12) + "..." : title, id: id });
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 42
          }
        },
        _imgs2.default.notification(),
        _react2.default.createElement(
          _UtilLib.StyledText,
          { color: '#333333', __source: {
              fileName: _jsxFileName,
              lineNumber: 44
            }
          },
          '  ' + title.substring(0, 20)
        )
      );
    }
  }]);
  return Notification;
}(_react.PureComponent);

exports.default = Notification;
}, 585, null, "YuanXC/src/components/Notification.js");
__d(/* YuanXC/src/components/UtilLib.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Header = exports.NormalView = exports.IconView = exports.FlexView = exports.HeaderButton = exports.MiddleView = exports.CenterRow = exports.CenterView = exports.RowView = exports.AroundView = exports.BetweenView = exports.ScrollLayout = exports.StyledButtom = exports.StyledText = exports.NoData = exports.Footer = exports.ActivityIndicatorInlineBlock = exports.ActivityIndicatorModal2 = exports.IndicatorTouchable = exports.InputView = exports.IndicatorView = exports.ActivityIndicatorModal = exports.GrayBottomRowWrapper = exports.RowWrapper = exports.GrayBottom = exports.BlockWrapper = undefined;
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/components/UtilLib.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  padding-vertical:10;\n  align-items:center;\n'], ['\n  padding-vertical:10;\n  align-items:center;\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  font-size:', ';\n  color:', ';\n  text-align:', ';\n  background-color:transparent;\n  font-weight:', ';\n  margin-top:', ';\n  margin-bottom:', ';\n  margin-left:', ';\n  ', ';\n'], ['\n  font-size:', ';\n  color:', ';\n  text-align:', ';\n  background-color:transparent;\n  font-weight:', ';\n  margin-top:', ';\n  margin-bottom:', ';\n  margin-left:', ';\n  ', ';\n']),
    _templateObject3 = babelHelpers.taggedTemplateLiteral(['\n  background-color:', ';\n  border-radius:', ';\n  margin-top:', ';\n  margin-bottom:', ';\n  width:', ';\n  height:', ';\n  flex-direction:row;\n  justify-content:center;\n  align-items:center;\n'], ['\n  background-color:', ';\n  border-radius:', ';\n  margin-top:', ';\n  margin-bottom:', ';\n  width:', ';\n  height:', ';\n  flex-direction:row;\n  justify-content:center;\n  align-items:center;\n']),
    _templateObject4 = babelHelpers.taggedTemplateLiteral(['\n  background-color:', ';\n'], ['\n  background-color:', ';\n']),
    _templateObject5 = babelHelpers.taggedTemplateLiteral(['\n  align-items:center;\n  justify-content:space-between;\n  flex-direction:row;\n'], ['\n  align-items:center;\n  justify-content:space-between;\n  flex-direction:row;\n']),
    _templateObject6 = babelHelpers.taggedTemplateLiteral(['\n  align-items:center;\n  justify-content:space-around;\n  flex-direction:row;\n'], ['\n  align-items:center;\n  justify-content:space-around;\n  flex-direction:row;\n']),
    _templateObject7 = babelHelpers.taggedTemplateLiteral(['\n  flex-direction:row;\n'], ['\n  flex-direction:row;\n']),
    _templateObject8 = babelHelpers.taggedTemplateLiteral(['\n  align-items:center;\n'], ['\n  align-items:center;\n']),
    _templateObject9 = babelHelpers.taggedTemplateLiteral(['\n  align-items:center;\n  flex-direction:row;\n'], ['\n  align-items:center;\n  flex-direction:row;\n']),
    _templateObject10 = babelHelpers.taggedTemplateLiteral(['\n  align-items:center;\n  justify-content:center;\n  ', ';\n'], ['\n  align-items:center;\n  justify-content:center;\n  ', ';\n']),
    _templateObject11 = babelHelpers.taggedTemplateLiteral(['\n  padding-horizontal:15;\n  padding-vertical:15;\n  width:60;\n'], ['\n  padding-horizontal:15;\n  padding-vertical:15;\n  width:60;\n']),
    _templateObject12 = babelHelpers.taggedTemplateLiteral(['\n  flex:1;\n'], ['\n  flex:1;\n']),
    _templateObject13 = babelHelpers.taggedTemplateLiteral(['\n  padding-horizontal:4;\n  height:16;\n  justify-content:center;\n  border-radius:8;\n  margin-horizontal:2;\n  background-color:', ';\n'], ['\n  padding-horizontal:4;\n  height:16;\n  justify-content:center;\n  border-radius:8;\n  margin-horizontal:2;\n  background-color:', ';\n']),
    _templateObject14 = babelHelpers.taggedTemplateLiteral(['\n  font-size:10;\n  color:#ffffff;\n'], ['\n  font-size:10;\n  color:#ffffff;\n']),
    _templateObject15 = babelHelpers.taggedTemplateLiteral([''], ['']),
    _templateObject16 = babelHelpers.taggedTemplateLiteral(['\n  height:', ';\n  padding-top:', ';\n  background-color:', ';\n  ', ';\n'], ['\n  height:', ';\n  padding-top:', ';\n  background-color:', ';\n  ', ';\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _color = require(587              ); // 587 = ../styles/color

var _color2 = babelHelpers.interopRequireDefault(_color);

var _constants = require(434                  ); // 434 = ../config/constants

var _Touchable = require(497          ); // 497 = ./Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var dismissKeyboard = require(228              ); // 228 = dismissKeyboard

var styles = _reactNative.StyleSheet.create({
  blockWrapper: {
    backgroundColor: '#FFF'
  },
  grayBottom: {
    borderBottomColor: _color2.default.border.separatorGray
  }
});

var BlockWrapper = exports.BlockWrapper = function (_PureComponent) {
  babelHelpers.inherits(BlockWrapper, _PureComponent);

  function BlockWrapper() {
    babelHelpers.classCallCheck(this, BlockWrapper);
    return babelHelpers.possibleConstructorReturn(this, (BlockWrapper.__proto__ || Object.getPrototypeOf(BlockWrapper)).apply(this, arguments));
  }

  babelHelpers.createClass(BlockWrapper, [{
    key: 'render',
    value: function render() {
      var marginType = this.props.marginType,
          marginValue = this.props.marginValue,
          wrapperStyle = {};
      if (marginType === 'both') {
        wrapperStyle.paddingTop = marginValue;
        wrapperStyle.paddingBottom = marginValue;
      } else if (marginType === 'top') {
        wrapperStyle.paddingTop = marginValue;
      } else if (marginType === 'bottom') {
        wrapperStyle.paddingBottom = marginValue;
      }
      return _react2.default.createElement(
        _reactNative.View,
        { style: [wrapperStyle], __source: {
            fileName: _jsxFileName,
            lineNumber: 47
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          { style: [{ backgroundColor: "#FFF" }, this.props.style], __source: {
              fileName: _jsxFileName,
              lineNumber: 48
            }
          },
          this.props.children
        )
      );
    }
  }]);
  return BlockWrapper;
}(_react.PureComponent);

BlockWrapper.propTypes = {
  marginType: _propTypes2.default.oneOf(['top', 'bottom', 'both', 'none']).isRequired,
  marginValue: _propTypes2.default.number,
  style: _propTypes2.default.any
};

BlockWrapper.defaultProps = {
  marginType: 'bottom',
  marginValue: 12
};

var GrayBottom = exports.GrayBottom = function (_PureComponent2) {
  babelHelpers.inherits(GrayBottom, _PureComponent2);

  function GrayBottom() {
    babelHelpers.classCallCheck(this, GrayBottom);
    return babelHelpers.possibleConstructorReturn(this, (GrayBottom.__proto__ || Object.getPrototypeOf(GrayBottom)).apply(this, arguments));
  }

  babelHelpers.createClass(GrayBottom, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactNative.View,
        { style: [styles.grayBottom, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 73
          }
        },
        this.props.children
      );
    }
  }]);
  return GrayBottom;
}(_react.PureComponent);

GrayBottom.propTypes = {
  style: _propTypes2.default.any
};

var RowWrapper = exports.RowWrapper = function (_PureComponent3) {
  babelHelpers.inherits(RowWrapper, _PureComponent3);

  function RowWrapper() {
    babelHelpers.classCallCheck(this, RowWrapper);
    return babelHelpers.possibleConstructorReturn(this, (RowWrapper.__proto__ || Object.getPrototypeOf(RowWrapper)).apply(this, arguments));
  }

  babelHelpers.createClass(RowWrapper, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactNative.View,
        { style: [{
            paddingLeft: this.props.leftPadding,
            paddingRight: this.props.rightPadding
          }, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 86
          }
        },
        this.props.children
      );
    }
  }]);
  return RowWrapper;
}(_react.PureComponent);

RowWrapper.propTypes = {
  leftPadding: _propTypes2.default.number,
  rightPadding: _propTypes2.default.number,
  style: _propTypes2.default.any
};

RowWrapper.defaultProps = {
  leftPadding: 15,
  rightPadding: 15
};

var GrayBottomRowWrapper = exports.GrayBottomRowWrapper = function (_PureComponent4) {
  babelHelpers.inherits(GrayBottomRowWrapper, _PureComponent4);

  function GrayBottomRowWrapper() {
    babelHelpers.classCallCheck(this, GrayBottomRowWrapper);
    return babelHelpers.possibleConstructorReturn(this, (GrayBottomRowWrapper.__proto__ || Object.getPrototypeOf(GrayBottomRowWrapper)).apply(this, arguments));
  }

  babelHelpers.createClass(GrayBottomRowWrapper, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactNative.View,
        { style: { paddingLeft: 15 }, __source: {
            fileName: _jsxFileName,
            lineNumber: 110
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          { style: [styles.grayBottom, {
              paddingRight: 15,
              borderBottomWidth: this.props.borderWidth
            }, this.props.style], __source: {
              fileName: _jsxFileName,
              lineNumber: 111
            }
          },
          this.props.children
        )
      );
    }
  }]);
  return GrayBottomRowWrapper;
}(_react.PureComponent);

GrayBottomRowWrapper.propTypes = {
  borderWidth: _propTypes2.default.number.isRequired
};

GrayBottomRowWrapper.defaultProps = {
  borderWidth: 1
};

var ActivityIndicatorModal = exports.ActivityIndicatorModal = function (_PureComponent5) {
  babelHelpers.inherits(ActivityIndicatorModal, _PureComponent5);

  function ActivityIndicatorModal() {
    babelHelpers.classCallCheck(this, ActivityIndicatorModal);
    return babelHelpers.possibleConstructorReturn(this, (ActivityIndicatorModal.__proto__ || Object.getPrototypeOf(ActivityIndicatorModal)).apply(this, arguments));
  }

  babelHelpers.createClass(ActivityIndicatorModal, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactNative.Modal,
        {
          onRequestClose: function onRequestClose() {},
          transparent: true,
          visible: this.props.visible, __source: {
            fileName: _jsxFileName,
            lineNumber: 135
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          {
            style: { flex: 1, backgroundColor: 'rgba(255,255,255,0.65)', justifyContent: 'center', alignItems: 'center' }, __source: {
              fileName: _jsxFileName,
              lineNumber: 140
            }
          },
          _react2.default.createElement(_reactNative.ActivityIndicator, {
            color: "#c0c0c0",
            size: 'large', __source: {
              fileName: _jsxFileName,
              lineNumber: 142
            }
          })
        )
      );
    }
  }]);
  return ActivityIndicatorModal;
}(_react.PureComponent);

ActivityIndicatorModal.propTypes = {
  visible: _propTypes2.default.bool.isRequired
};

ActivityIndicatorModal.defaultProps = {
  visible: false
};

var IndicatorView = exports.IndicatorView = function (_PureComponent6) {
  babelHelpers.inherits(IndicatorView, _PureComponent6);

  function IndicatorView() {
    babelHelpers.classCallCheck(this, IndicatorView);
    return babelHelpers.possibleConstructorReturn(this, (IndicatorView.__proto__ || Object.getPrototypeOf(IndicatorView)).apply(this, arguments));
  }

  babelHelpers.createClass(IndicatorView, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactNative.TouchableWithoutFeedback,
        { onPress: this.props.backPress, __source: {
            fileName: _jsxFileName,
            lineNumber: 166
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          { style: [{
              position: 'absolute',
              top: 0,
              left: 0,
              backgroundColor: this.props.visible ? 'rgba(0,0,0,0.3)' : 'transparent',
              width: _constants.WINDOW_WIDTH,
              height: _constants.WINDOW_HEIGHT - 100
            }, this.props.style], __source: {
              fileName: _jsxFileName,
              lineNumber: 167
            }
          },
          this.props.children
        )
      );
    }
  }]);
  return IndicatorView;
}(_react.PureComponent);

var InputView = exports.InputView = function (_PureComponent7) {
  babelHelpers.inherits(InputView, _PureComponent7);

  function InputView() {
    babelHelpers.classCallCheck(this, InputView);
    return babelHelpers.possibleConstructorReturn(this, (InputView.__proto__ || Object.getPrototypeOf(InputView)).apply(this, arguments));
  }

  babelHelpers.createClass(InputView, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactNative.TouchableWithoutFeedback,
        { onPress: function onPress() {
            return dismissKeyboard();
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 185
          }
        },
        this.props.children
      );
    }
  }]);
  return InputView;
}(_react.PureComponent);

var IndicatorTouchable = exports.IndicatorTouchable = function (_PureComponent8) {
  babelHelpers.inherits(IndicatorTouchable, _PureComponent8);

  function IndicatorTouchable() {
    babelHelpers.classCallCheck(this, IndicatorTouchable);
    return babelHelpers.possibleConstructorReturn(this, (IndicatorTouchable.__proto__ || Object.getPrototypeOf(IndicatorTouchable)).apply(this, arguments));
  }

  babelHelpers.createClass(IndicatorTouchable, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactNative.TouchableWithoutFeedback,
        { onPress: this.props.onPress, __source: {
            fileName: _jsxFileName,
            lineNumber: 195
          }
        },
        _react2.default.createElement(_reactNative.View, { style: { flex: 1 }, __source: {
            fileName: _jsxFileName,
            lineNumber: 196
          }
        })
      );
    }
  }]);
  return IndicatorTouchable;
}(_react.PureComponent);

var ActivityIndicatorModal2 = exports.ActivityIndicatorModal2 = function (_PureComponent9) {
  babelHelpers.inherits(ActivityIndicatorModal2, _PureComponent9);

  function ActivityIndicatorModal2(props) {
    babelHelpers.classCallCheck(this, ActivityIndicatorModal2);

    var _this9 = babelHelpers.possibleConstructorReturn(this, (ActivityIndicatorModal2.__proto__ || Object.getPrototypeOf(ActivityIndicatorModal2)).call(this, props));

    _this9.state = { visible: false };
    return _this9;
  }

  babelHelpers.createClass(ActivityIndicatorModal2, [{
    key: 'show',
    value: function show() {
      this.setState({
        visible: true
      });
    }
  }, {
    key: 'hide',
    value: function hide() {
      this.setState({
        visible: false
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return this.state.visible ? _react2.default.createElement(
        _reactNative.View,
        {
          style: [{
            flex: 1,
            position: 'absolute',
            top: 0,
            height: this.props.height,
            width: _constants.WINDOW_WIDTH,
            backgroundColor: 'rgba(255,255,255,0.65)',
            justifyContent: 'center',
            alignItems: 'center'
          }, this.props.style], __source: {
            fileName: _jsxFileName,
            lineNumber: 226
          }
        },
        _react2.default.createElement(_reactNative.ActivityIndicator, {
          color: "#c0c0c0",
          size: 'large', __source: {
            fileName: _jsxFileName,
            lineNumber: 237
          }
        })
      ) : null;
    }
  }]);
  return ActivityIndicatorModal2;
}(_react.PureComponent);

var ActivityIndicatorInlineBlock = exports.ActivityIndicatorInlineBlock = function (_PureComponent10) {
  babelHelpers.inherits(ActivityIndicatorInlineBlock, _PureComponent10);

  function ActivityIndicatorInlineBlock() {
    babelHelpers.classCallCheck(this, ActivityIndicatorInlineBlock);
    return babelHelpers.possibleConstructorReturn(this, (ActivityIndicatorInlineBlock.__proto__ || Object.getPrototypeOf(ActivityIndicatorInlineBlock)).apply(this, arguments));
  }

  babelHelpers.createClass(ActivityIndicatorInlineBlock, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactNative.View,
        { style: { height: 100, justifyContent: 'center', alignItems: 'center' }, __source: {
            fileName: _jsxFileName,
            lineNumber: 250
          }
        },
        _react2.default.createElement(_reactNative.ActivityIndicator, {
          size: 'large',
          color: this.props.color,
          style: { opacity: this.props.visible ? 1 : 0 },
          animating: true,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 251
          }
        })
      );
    }
  }]);
  return ActivityIndicatorInlineBlock;
}(_react.PureComponent);

IndicatorView.propTypes = {
  visible: _propTypes2.default.bool
};

IndicatorView.defaultProps = {
  visible: true
};

var FooterView = _native2.default.View(_templateObject);

var Footer = exports.Footer = function (_PureComponent11) {
  babelHelpers.inherits(Footer, _PureComponent11);

  function Footer() {
    babelHelpers.classCallCheck(this, Footer);
    return babelHelpers.possibleConstructorReturn(this, (Footer.__proto__ || Object.getPrototypeOf(Footer)).apply(this, arguments));
  }

  babelHelpers.createClass(Footer, [{
    key: 'render',
    value: function render() {
      return this.props.visible ? _react2.default.createElement(
        FooterView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 278
          }
        },
        _react2.default.createElement(_reactNative.ActivityIndicator, { size: 'small', color: '#3e9ce9', __source: {
            fileName: _jsxFileName,
            lineNumber: 279
          }
        }),
        _react2.default.createElement(
          StyledText,
          { color: '#B8B8B8', size: '13', __source: {
              fileName: _jsxFileName,
              lineNumber: 280
            }
          },
          '\u6B63\u5728\u52A0\u8F7D\u66F4\u591A'
        )
      ) : _react2.default.createElement(_reactNative.View, { style: { height: 10 }, __source: {
          fileName: _jsxFileName,
          lineNumber: 284
        }
      });
    }
  }]);
  return Footer;
}(_react.PureComponent);

var NoData = exports.NoData = function (_PureComponent12) {
  babelHelpers.inherits(NoData, _PureComponent12);

  function NoData() {
    babelHelpers.classCallCheck(this, NoData);
    return babelHelpers.possibleConstructorReturn(this, (NoData.__proto__ || Object.getPrototypeOf(NoData)).apply(this, arguments));
  }

  babelHelpers.createClass(NoData, [{
    key: 'render',
    value: function render() {
      return this.props.visible ? _react2.default.createElement(
        CenterView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 291
          }
        },
        _react2.default.createElement(
          StyledText,
          { top: '130', color: '#999999', __source: {
              fileName: _jsxFileName,
              lineNumber: 292
            }
          },
          this.props.text || '暂无数据'
        )
      ) : null;
    }
  }]);
  return NoData;
}(_react.PureComponent);

var StyledText = exports.StyledText = _native2.default.Text.attrs({
  allowFontScaling: false
})(_templateObject2, function (props) {
  return props.size || 13;
}, function (props) {
  return props.color || '#ffffff';
}, function (props) {
  return props.align || 'left';
}, function (props) {
  return props.weight || 'normal';
}, function (props) {
  return props.top || 0;
}, function (props) {
  return props.bottom || 0;
}, function (props) {
  return props.left || 0;
}, function (props) {
  return props.lh && "line-height:" + props.lh;
});
var StyledButtom = exports.StyledButtom = (0, _native2.default)(_Touchable2.default).attrs({})(_templateObject3, function (props) {
  return props.color || _color2.default.background.userBlue;
}, function (props) {
  return props.radius || 5;
}, function (props) {
  return props.top || 20;
}, function (props) {
  return props.bottom || 0;
}, function (props) {
  return props.width || _constants.WINDOW_WIDTH - 40;
}, function (props) {
  return props.height || 46;
});
var ScrollLayout = exports.ScrollLayout = _native2.default.ScrollView.attrs({
  keyboardShouldPersistTaps: 'handled',
  color: function color(props) {
    return props.color || "#ffffff";
  }
})(_templateObject4, function (props) {
  return props.color;
});
var BetweenView = exports.BetweenView = _native2.default.View(_templateObject5);
var AroundView = exports.AroundView = _native2.default.View(_templateObject6);
var RowView = exports.RowView = _native2.default.View(_templateObject7);
var CenterView = exports.CenterView = _native2.default.View(_templateObject8);
var CenterRow = exports.CenterRow = _native2.default.View(_templateObject9);
var MiddleView = exports.MiddleView = _native2.default.View(_templateObject10, function (props) {
  return props.width && "width:" + props.width;
});
var HeaderButton = exports.HeaderButton = (0, _native2.default)(_Touchable2.default)(_templateObject11);
var FlexView = exports.FlexView = _native2.default.View(_templateObject12);
var TypeView = CenterView.extend.attrs({
  color: function color(props) {
    return props.color;
  }
})(_templateObject13, function (props) {
  return props.color;
});
var IconText = _native2.default.Text(_templateObject14);

var IconView = exports.IconView = function (_PureComponent13) {
  babelHelpers.inherits(IconView, _PureComponent13);

  function IconView() {
    babelHelpers.classCallCheck(this, IconView);
    return babelHelpers.possibleConstructorReturn(this, (IconView.__proto__ || Object.getPrototypeOf(IconView)).apply(this, arguments));
  }

  babelHelpers.createClass(IconView, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        TypeView,
        { color: this.props.color, __source: {
            fileName: _jsxFileName,
            lineNumber: 377
          }
        },
        _react2.default.createElement(
          IconText,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 378
            }
          },
          this.props.text
        )
      );
    }
  }]);
  return IconView;
}(_react.PureComponent);

var NormalView = exports.NormalView = _native2.default.View(_templateObject15);
var Header = exports.Header = BetweenView.extend(_templateObject16, 44 + (_constants.STATUS_HEIGHT || 12), _constants.STATUS_HEIGHT || 12, function (props) {
  return props.color || _color2.default.background.userBlue;
}, function (props) {
  return props.center && "justify-content:center";
});
}, 586, null, "YuanXC/src/components/UtilLib.js");
__d(/* YuanXC/src/styles/color.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  font: {
    blue: "#2574CA",
    linkBlue: '#07e',
    navigatorGray: '#97abaf',
    explainGray: '#ACBBBF',
    titleGray: '#8a9da4',
    textGray: '#999',
    light: '#aaa',
    commentGray: "#888888",
    msgTime: "#9a9797",
    black: '#333',
    shallowBlack: '#333',
    shallowGray: '#ccc' },
  border: {
    blue: "#6295fd",
    standoutGray: "#ddd",
    separatorGray: "#F6F6F6",
    msgBorderGray: "#ededed" },
  background: {
    mainBlue: "#6295fd",
    userBlue: "#FD863F"
  }
};
}, 587, null, "YuanXC/src/styles/color.js");
__d(/* YuanXC/src/requests/axios.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initCookie = initCookie;
exports.register403Callback = register403Callback;
exports.registerNetWorkErrorCallback = registerNetWorkErrorCallback;
exports.clearCookie = clearCookie;
exports.logoutUser = logoutUser;
exports.loginUser = loginUser;

var _axios = require(589    ); // 589 = axios

var _axios2 = babelHelpers.interopRequireDefault(_axios);

var _qs = require(615 ); // 615 = qs

var _qs2 = babelHelpers.interopRequireDefault(_qs);

var _LocalStorage = require(620                    ); // 620 = ../utils/LocalStorage

var _LocalStorage2 = babelHelpers.interopRequireDefault(_LocalStorage);

var callback403 = function callback403() {};
var netWorkError = function netWorkError() {};

_axios2.default.interceptors.request.use(function (config) {
  config.headers = config.headers || {};
  if (global.token) {
    config.headers.token = global.token;
  }
  config.headers.osversion = global.version || '';
  config.headers.osname = global.os || '';
  return config;
}, function (error) {
  return Promise.reject(error);
});

_axios2.default.interceptors.response.use(function (response) {
  if (global.token && response.data.code === 403) {
    callback403();
    return Promise.reject({});
  } else {
    return response;
  }
}, function (error) {
  console.log(error);
  netWorkError();
  return Promise.reject(error);
});

var axiosPost = _axios2.default.post.bind(_axios2.default);
_axios2.default.post = function (url, data, config) {
  config = config || {};
  config.headers = babelHelpers.extends({
    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
  }, config.headers || {});
  data = _qs2.default.stringify(data || {});
  return axiosPost(url, data, config);
};

_axios2.default.upload = function (url, formData, config) {
  config = config || {};
  config.headers = babelHelpers.extends({
    'Content-Type': 'multipart/form-data'
  }, config.headers || {});
  return axiosPost(url, formData, config);
};

exports.default = _axios2.default;
function initCookie() {
  return new Promise(function (resolve) {
    _LocalStorage2.default.getItem('token', function (cachedCookie) {
      global.token = cachedCookie || "";
      resolve(global.token);
    });
  });
}

function register403Callback(cb) {
  callback403 = cb;
}

function registerNetWorkErrorCallback(cb) {
  netWorkError = cb;
}

function clearCookie() {
  global.token = '';
  _LocalStorage2.default.removeItem('token');
}

function logoutUser() {
  clearCookie();
}

function loginUser(token) {
  global.token = token;
  _LocalStorage2.default.setItem('token', token);
}
}, 588, null, "YuanXC/src/requests/axios.js");
__d(/* axios/index.js */function(global, require, module, exports) {module.exports = require(590          ); // 590 = ./lib/axios
}, 589, null, "axios/index.js");
__d(/* axios/lib/axios.js */function(global, require, module, exports) {'use strict';

var utils = require(591      ); // 591 = ./utils
var bind = require(592             ); // 592 = ./helpers/bind
var Axios = require(594           ); // 594 = ./core/Axios
var defaults = require(595         ); // 595 = ./defaults

function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  utils.extend(instance, Axios.prototype, context);

  utils.extend(instance, context);

  return instance;
}

var axios = createInstance(defaults);

axios.Axios = Axios;

axios.create = function create(instanceConfig) {
  return createInstance(utils.merge(defaults, instanceConfig));
};

axios.Cancel = require(612              ); // 612 = ./cancel/Cancel
axios.CancelToken = require(613                   ); // 613 = ./cancel/CancelToken
axios.isCancel = require(609                ); // 609 = ./cancel/isCancel

axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = require(614               ); // 614 = ./helpers/spread

module.exports = axios;

module.exports.default = axios;
}, 590, null, "axios/lib/axios.js");
__d(/* axios/lib/utils.js */function(global, require, module, exports) {'use strict';

var bind = require(592             ); // 592 = ./helpers/bind
var isBuffer = require(593        ); // 593 = is-buffer

var toString = Object.prototype.toString;

function isArray(val) {
  return toString.call(val) === '[object Array]';
}

function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

function isFormData(val) {
  return typeof FormData !== 'undefined' && val instanceof FormData;
}

function isArrayBufferView(val) {
  var result;
  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {
    result = ArrayBuffer.isView(val);
  } else {
    result = val && val.buffer && val.buffer instanceof ArrayBuffer;
  }
  return result;
}

function isString(val) {
  return typeof val === 'string';
}

function isNumber(val) {
  return typeof val === 'number';
}

function isUndefined(val) {
  return typeof val === 'undefined';
}

function isObject(val) {
  return val !== null && typeof val === 'object';
}

function isDate(val) {
  return toString.call(val) === '[object Date]';
}

function isFile(val) {
  return toString.call(val) === '[object File]';
}

function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
    return false;
  }
  return typeof window !== 'undefined' && typeof document !== 'undefined';
}

function forEach(obj, fn) {
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  if (typeof obj !== 'object') {
    obj = [obj];
  }

  if (isArray(obj)) {
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

function merge() {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = merge(result[key], val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim
};
}, 591, null, "axios/lib/utils.js");
__d(/* axios/lib/helpers/bind.js */function(global, require, module, exports) {'use strict';

module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};
}, 592, null, "axios/lib/helpers/bind.js");
__d(/* is-buffer/index.js */function(global, require, module, exports) {/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer);
};

function isBuffer(obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);
}

function isSlowBuffer(obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0));
}
}, 593, null, "is-buffer/index.js");
__d(/* axios/lib/core/Axios.js */function(global, require, module, exports) {'use strict';

var defaults = require(595            ); // 595 = ./../defaults
var utils = require(591         ); // 591 = ./../utils
var InterceptorManager = require(606                   ); // 606 = ./InterceptorManager
var dispatchRequest = require(607                ); // 607 = ./dispatchRequest

function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

Axios.prototype.request = function request(config) {
  if (typeof config === 'string') {
    config = utils.merge({
      url: arguments[0]
    }, arguments[1]);
  }

  config = utils.merge(defaults, this.defaults, { method: 'get' }, config);
  config.method = config.method.toLowerCase();

  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  Axios.prototype[method] = function (url, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  Axios.prototype[method] = function (url, data, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;
}, 594, null, "axios/lib/core/Axios.js");
__d(/* axios/lib/defaults.js */function(global, require, module, exports) {'use strict';

var utils = require(591      ); // 591 = ./utils
var normalizeHeaderName = require(596                            ); // 596 = ./helpers/normalizeHeaderName

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    adapter = require(597             ); // 597 = ./adapters/xhr
  } else if (typeof process !== 'undefined') {
    adapter = require(597              ); // 597 = ./adapters/http
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) {}
    }
    return data;
  }],

  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;
}, 595, null, "axios/lib/defaults.js");
__d(/* axios/lib/helpers/normalizeHeaderName.js */function(global, require, module, exports) {'use strict';

var utils = require(591       ); // 591 = ../utils

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};
}, 596, null, "axios/lib/helpers/normalizeHeaderName.js");
__d(/* axios/lib/adapters/xhr.js */function(global, require, module, exports) {'use strict';

var utils = require(591         ); // 591 = ./../utils
var settle = require(598               ); // 598 = ./../core/settle
var buildURL = require(601                    ); // 601 = ./../helpers/buildURL
var parseHeaders = require(602                        ); // 602 = ./../helpers/parseHeaders
var isURLSameOrigin = require(603                           ); // 603 = ./../helpers/isURLSameOrigin
var createError = require(599                  ); // 599 = ../core/createError
var btoa = typeof window !== 'undefined' && window.btoa && window.btoa.bind(window) || require(604                ); // 604 = ./../helpers/btoa

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type'];
    }

    var request = new XMLHttpRequest();
    var loadEvent = 'onreadystatechange';
    var xDomain = false;

    if (process.env.NODE_ENV !== 'test' && typeof window !== 'undefined' && window.XDomainRequest && !('withCredentials' in request) && !isURLSameOrigin(config.url)) {
      request = new window.XDomainRequest();
      loadEvent = 'onload';
      xDomain = true;
      request.onprogress = function handleProgress() {};
      request.ontimeout = function handleTimeout() {};
    }

    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);

    request.timeout = config.timeout;

    request[loadEvent] = function handleLoad() {
      if (!request || request.readyState !== 4 && !xDomain) {
        return;
      }

      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,

        status: request.status === 1223 ? 204 : request.status,
        statusText: request.status === 1223 ? 'No Content' : request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      request = null;
    };

    request.onerror = function handleError() {
      reject(createError('Network Error', config, null, request));

      request = null;
    };

    request.ontimeout = function handleTimeout() {
      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', request));

      request = null;
    };

    if (utils.isStandardBrowserEnv()) {
      var cookies = require(605                   ); // 605 = ./../helpers/cookies

      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          delete requestHeaders[key];
        } else {
          request.setRequestHeader(key, val);
        }
      });
    }

    if (config.withCredentials) {
      request.withCredentials = true;
    }

    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);

        request = null;
      });
    }

    if (requestData === undefined) {
      requestData = null;
    }

    request.send(requestData);
  });
};
}, 597, null, "axios/lib/adapters/xhr.js");
__d(/* axios/lib/core/settle.js */function(global, require, module, exports) {'use strict';

var createError = require(599            ); // 599 = ./createError

module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;

  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError('Request failed with status code ' + response.status, response.config, null, response.request, response));
  }
};
}, 598, null, "axios/lib/core/settle.js");
__d(/* axios/lib/core/createError.js */function(global, require, module, exports) {'use strict';

var enhanceError = require(600             ); // 600 = ./enhanceError

module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};
}, 599, null, "axios/lib/core/createError.js");
__d(/* axios/lib/core/enhanceError.js */function(global, require, module, exports) {'use strict';

module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }
  error.request = request;
  error.response = response;
  return error;
};
}, 600, null, "axios/lib/core/enhanceError.js");
__d(/* axios/lib/helpers/buildURL.js */function(global, require, module, exports) {'use strict';

var utils = require(591         ); // 591 = ./../utils

function encode(val) {
  return encodeURIComponent(val).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');
}

module.exports = function buildURL(url, params, paramsSerializer) {
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      }

      if (!utils.isArray(val)) {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};
}, 601, null, "axios/lib/helpers/buildURL.js");
__d(/* axios/lib/helpers/parseHeaders.js */function(global, require, module, exports) {'use strict';

var utils = require(591         ); // 591 = ./../utils

var ignoreDuplicateOf = ['age', 'authorization', 'content-length', 'content-type', 'etag', 'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since', 'last-modified', 'location', 'max-forwards', 'proxy-authorization', 'referer', 'retry-after', 'user-agent'];

module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) {
    return parsed;
  }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};
}, 602, null, "axios/lib/helpers/parseHeaders.js");
__d(/* axios/lib/helpers/isURLSameOrigin.js */function(global, require, module, exports) {'use strict';

var utils = require(591         ); // 591 = ./../utils

module.exports = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {
  var msie = /(msie|trident)/i.test(navigator.userAgent);
  var urlParsingNode = document.createElement('a');
  var originURL;

  function resolveURL(url) {
    var href = url;

    if (msie) {
      urlParsingNode.setAttribute('href', href);
      href = urlParsingNode.href;
    }

    urlParsingNode.setAttribute('href', href);

    return {
      href: urlParsingNode.href,
      protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
      host: urlParsingNode.host,
      search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
      hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
      hostname: urlParsingNode.hostname,
      port: urlParsingNode.port,
      pathname: urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname
    };
  }

  originURL = resolveURL(window.location.href);

  return function isURLSameOrigin(requestURL) {
    var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
    return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
  };
}() : function nonStandardBrowserEnv() {
  return function isURLSameOrigin() {
    return true;
  };
}();
}, 603, null, "axios/lib/helpers/isURLSameOrigin.js");
__d(/* axios/lib/helpers/btoa.js */function(global, require, module, exports) {'use strict';

var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

function E() {
  this.message = 'String contains an invalid character';
}
E.prototype = new Error();
E.prototype.code = 5;
E.prototype.name = 'InvalidCharacterError';

function btoa(input) {
  var str = String(input);
  var output = '';
  for (var block, charCode, idx = 0, map = chars; str.charAt(idx | 0) || (map = '=', idx % 1); output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {
    charCode = str.charCodeAt(idx += 3 / 4);
    if (charCode > 0xFF) {
      throw new E();
    }
    block = block << 8 | charCode;
  }
  return output;
}

module.exports = btoa;
}, 604, null, "axios/lib/helpers/btoa.js");
__d(/* axios/lib/helpers/cookies.js */function(global, require, module, exports) {'use strict';

var utils = require(591         ); // 591 = ./../utils

module.exports = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {
  return {
    write: function write(name, value, expires, path, domain, secure) {
      var cookie = [];
      cookie.push(name + '=' + encodeURIComponent(value));

      if (utils.isNumber(expires)) {
        cookie.push('expires=' + new Date(expires).toGMTString());
      }

      if (utils.isString(path)) {
        cookie.push('path=' + path);
      }

      if (utils.isString(domain)) {
        cookie.push('domain=' + domain);
      }

      if (secure === true) {
        cookie.push('secure');
      }

      document.cookie = cookie.join('; ');
    },

    read: function read(name) {
      var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
      return match ? decodeURIComponent(match[3]) : null;
    },

    remove: function remove(name) {
      this.write(name, '', Date.now() - 86400000);
    }
  };
}() : function nonStandardBrowserEnv() {
  return {
    write: function write() {},
    read: function read() {
      return null;
    },
    remove: function remove() {}
  };
}();
}, 605, null, "axios/lib/helpers/cookies.js");
__d(/* axios/lib/core/InterceptorManager.js */function(global, require, module, exports) {'use strict';

var utils = require(591         ); // 591 = ./../utils

function InterceptorManager() {
  this.handlers = [];
}

InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;
}, 606, null, "axios/lib/core/InterceptorManager.js");
__d(/* axios/lib/core/dispatchRequest.js */function(global, require, module, exports) {'use strict';

var utils = require(591         ); // 591 = ./../utils
var transformData = require(608              ); // 608 = ./transformData
var isCancel = require(609                 ); // 609 = ../cancel/isCancel
var defaults = require(595          ); // 595 = ../defaults
var isAbsoluteURL = require(610                         ); // 610 = ./../helpers/isAbsoluteURL
var combineURLs = require(611                       ); // 611 = ./../helpers/combineURLs

function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  if (config.baseURL && !isAbsoluteURL(config.url)) {
    config.url = combineURLs(config.baseURL, config.url);
  }

  config.headers = config.headers || {};

  config.data = transformData(config.data, config.headers, config.transformRequest);

  config.headers = utils.merge(config.headers.common || {}, config.headers[config.method] || {}, config.headers || {});

  utils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function cleanHeaderConfig(method) {
    delete config.headers[method];
  });

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    response.data = transformData(response.data, response.headers, config.transformResponse);

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      if (reason && reason.response) {
        reason.response.data = transformData(reason.response.data, reason.response.headers, config.transformResponse);
      }
    }

    return Promise.reject(reason);
  });
};
}, 607, null, "axios/lib/core/dispatchRequest.js");
__d(/* axios/lib/core/transformData.js */function(global, require, module, exports) {'use strict';

var utils = require(591         ); // 591 = ./../utils

module.exports = function transformData(data, headers, fns) {
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};
}, 608, null, "axios/lib/core/transformData.js");
__d(/* axios/lib/cancel/isCancel.js */function(global, require, module, exports) {'use strict';

module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};
}, 609, null, "axios/lib/cancel/isCancel.js");
__d(/* axios/lib/helpers/isAbsoluteURL.js */function(global, require, module, exports) {'use strict';

module.exports = function isAbsoluteURL(url) {
  return (/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url)
  );
};
}, 610, null, "axios/lib/helpers/isAbsoluteURL.js");
__d(/* axios/lib/helpers/combineURLs.js */function(global, require, module, exports) {'use strict';

module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '') : baseURL;
};
}, 611, null, "axios/lib/helpers/combineURLs.js");
__d(/* axios/lib/cancel/Cancel.js */function(global, require, module, exports) {'use strict';

function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;
}, 612, null, "axios/lib/cancel/Cancel.js");
__d(/* axios/lib/cancel/CancelToken.js */function(global, require, module, exports) {'use strict';

var Cancel = require(612       ); // 612 = ./Cancel

function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;
}, 613, null, "axios/lib/cancel/CancelToken.js");
__d(/* axios/lib/helpers/spread.js */function(global, require, module, exports) {'use strict';

module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};
}, 614, null, "axios/lib/helpers/spread.js");
__d(/* qs/lib/index.js */function(global, require, module, exports) {'use strict';

var stringify = require(616          ); // 616 = ./stringify
var parse = require(619      ); // 619 = ./parse
var formats = require(618        ); // 618 = ./formats

module.exports = {
    formats: formats,
    parse: parse,
    stringify: stringify
};
}, 615, null, "qs/lib/index.js");
__d(/* qs/lib/stringify.js */function(global, require, module, exports) {'use strict';

var utils = require(617      ); // 617 = ./utils
var formats = require(618        ); // 618 = ./formats

var arrayPrefixGenerators = {
    brackets: function brackets(prefix) {
        return prefix + '[]';
    },
    indices: function indices(prefix, key) {
        return prefix + '[' + key + ']';
    },
    repeat: function repeat(prefix) {
        return prefix;
    }
};

var toISO = Date.prototype.toISOString;

var defaults = {
    delimiter: '&',
    encode: true,
    encoder: utils.encode,
    encodeValuesOnly: false,
    serializeDate: function serializeDate(date) {
        return toISO.call(date);
    },
    skipNulls: false,
    strictNullHandling: false
};

var stringify = function stringify(object, prefix, generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots, serializeDate, formatter, encodeValuesOnly) {
    var obj = object;
    if (typeof filter === 'function') {
        obj = filter(prefix, obj);
    } else if (obj instanceof Date) {
        obj = serializeDate(obj);
    } else if (obj === null) {
        if (strictNullHandling) {
            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder) : prefix;
        }

        obj = '';
    }

    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {
        if (encoder) {
            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder);
            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder))];
        }
        return [formatter(prefix) + '=' + formatter(String(obj))];
    }

    var values = [];

    if (typeof obj === 'undefined') {
        return values;
    }

    var objKeys;
    if (Array.isArray(filter)) {
        objKeys = filter;
    } else {
        var keys = Object.keys(obj);
        objKeys = sort ? keys.sort(sort) : keys;
    }

    for (var i = 0; i < objKeys.length; ++i) {
        var key = objKeys[i];

        if (skipNulls && obj[key] === null) {
            continue;
        }

        if (Array.isArray(obj)) {
            values = values.concat(stringify(obj[key], generateArrayPrefix(prefix, key), generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots, serializeDate, formatter, encodeValuesOnly));
        } else {
            values = values.concat(stringify(obj[key], prefix + (allowDots ? '.' + key : '[' + key + ']'), generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots, serializeDate, formatter, encodeValuesOnly));
        }
    }

    return values;
};

module.exports = function (object, opts) {
    var obj = object;
    var options = opts ? utils.assign({}, opts) : {};

    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {
        throw new TypeError('Encoder has to be a function.');
    }

    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;
    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;
    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;
    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;
    var encoder = typeof options.encoder === 'function' ? options.encoder : defaults.encoder;
    var sort = typeof options.sort === 'function' ? options.sort : null;
    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;
    var serializeDate = typeof options.serializeDate === 'function' ? options.serializeDate : defaults.serializeDate;
    var encodeValuesOnly = typeof options.encodeValuesOnly === 'boolean' ? options.encodeValuesOnly : defaults.encodeValuesOnly;
    if (typeof options.format === 'undefined') {
        options.format = formats['default'];
    } else if (!Object.prototype.hasOwnProperty.call(formats.formatters, options.format)) {
        throw new TypeError('Unknown format option provided.');
    }
    var formatter = formats.formatters[options.format];
    var objKeys;
    var filter;

    if (typeof options.filter === 'function') {
        filter = options.filter;
        obj = filter('', obj);
    } else if (Array.isArray(options.filter)) {
        filter = options.filter;
        objKeys = filter;
    }

    var keys = [];

    if (typeof obj !== 'object' || obj === null) {
        return '';
    }

    var arrayFormat;
    if (options.arrayFormat in arrayPrefixGenerators) {
        arrayFormat = options.arrayFormat;
    } else if ('indices' in options) {
        arrayFormat = options.indices ? 'indices' : 'repeat';
    } else {
        arrayFormat = 'indices';
    }

    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];

    if (!objKeys) {
        objKeys = Object.keys(obj);
    }

    if (sort) {
        objKeys.sort(sort);
    }

    for (var i = 0; i < objKeys.length; ++i) {
        var key = objKeys[i];

        if (skipNulls && obj[key] === null) {
            continue;
        }

        keys = keys.concat(stringify(obj[key], key, generateArrayPrefix, strictNullHandling, skipNulls, encode ? encoder : null, filter, sort, allowDots, serializeDate, formatter, encodeValuesOnly));
    }

    var joined = keys.join(delimiter);
    var prefix = options.addQueryPrefix === true ? '?' : '';

    return joined.length > 0 ? prefix + joined : '';
};
}, 616, null, "qs/lib/stringify.js");
__d(/* qs/lib/utils.js */function(global, require, module, exports) {'use strict';

var has = Object.prototype.hasOwnProperty;

var hexTable = function () {
    var array = [];
    for (var i = 0; i < 256; ++i) {
        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());
    }

    return array;
}();

var compactQueue = function compactQueue(queue) {
    var obj;

    while (queue.length) {
        var item = queue.pop();
        obj = item.obj[item.prop];

        if (Array.isArray(obj)) {
            var compacted = [];

            for (var j = 0; j < obj.length; ++j) {
                if (typeof obj[j] !== 'undefined') {
                    compacted.push(obj[j]);
                }
            }

            item.obj[item.prop] = compacted;
        }
    }

    return obj;
};

exports.arrayToObject = function arrayToObject(source, options) {
    var obj = options && options.plainObjects ? Object.create(null) : {};
    for (var i = 0; i < source.length; ++i) {
        if (typeof source[i] !== 'undefined') {
            obj[i] = source[i];
        }
    }

    return obj;
};

exports.merge = function merge(target, source, options) {
    if (!source) {
        return target;
    }

    if (typeof source !== 'object') {
        if (Array.isArray(target)) {
            target.push(source);
        } else if (typeof target === 'object') {
            if (options.plainObjects || options.allowPrototypes || !has.call(Object.prototype, source)) {
                target[source] = true;
            }
        } else {
            return [target, source];
        }

        return target;
    }

    if (typeof target !== 'object') {
        return [target].concat(source);
    }

    var mergeTarget = target;
    if (Array.isArray(target) && !Array.isArray(source)) {
        mergeTarget = exports.arrayToObject(target, options);
    }

    if (Array.isArray(target) && Array.isArray(source)) {
        source.forEach(function (item, i) {
            if (has.call(target, i)) {
                if (target[i] && typeof target[i] === 'object') {
                    target[i] = exports.merge(target[i], item, options);
                } else {
                    target.push(item);
                }
            } else {
                target[i] = item;
            }
        });
        return target;
    }

    return Object.keys(source).reduce(function (acc, key) {
        var value = source[key];

        if (has.call(acc, key)) {
            acc[key] = exports.merge(acc[key], value, options);
        } else {
            acc[key] = value;
        }
        return acc;
    }, mergeTarget);
};

exports.assign = function assignSingleSource(target, source) {
    return Object.keys(source).reduce(function (acc, key) {
        acc[key] = source[key];
        return acc;
    }, target);
};

exports.decode = function (str) {
    try {
        return decodeURIComponent(str.replace(/\+/g, ' '));
    } catch (e) {
        return str;
    }
};

exports.encode = function encode(str) {
    if (str.length === 0) {
        return str;
    }

    var string = typeof str === 'string' ? str : String(str);

    var out = '';
    for (var i = 0; i < string.length; ++i) {
        var c = string.charCodeAt(i);

        if (c === 0x2D || c === 0x2E || c === 0x5F || c === 0x7E || c >= 0x30 && c <= 0x39 || c >= 0x41 && c <= 0x5A || c >= 0x61 && c <= 0x7A) {
                out += string.charAt(i);
                continue;
            }

        if (c < 0x80) {
            out = out + hexTable[c];
            continue;
        }

        if (c < 0x800) {
            out = out + (hexTable[0xC0 | c >> 6] + hexTable[0x80 | c & 0x3F]);
            continue;
        }

        if (c < 0xD800 || c >= 0xE000) {
            out = out + (hexTable[0xE0 | c >> 12] + hexTable[0x80 | c >> 6 & 0x3F] + hexTable[0x80 | c & 0x3F]);
            continue;
        }

        i += 1;
        c = 0x10000 + ((c & 0x3FF) << 10 | string.charCodeAt(i) & 0x3FF);
        out += hexTable[0xF0 | c >> 18] + hexTable[0x80 | c >> 12 & 0x3F] + hexTable[0x80 | c >> 6 & 0x3F] + hexTable[0x80 | c & 0x3F];
    }

    return out;
};

exports.compact = function compact(value) {
    var queue = [{ obj: { o: value }, prop: 'o' }];
    var refs = [];

    for (var i = 0; i < queue.length; ++i) {
        var item = queue[i];
        var obj = item.obj[item.prop];

        var keys = Object.keys(obj);
        for (var j = 0; j < keys.length; ++j) {
            var key = keys[j];
            var val = obj[key];
            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {
                queue.push({ obj: obj, prop: key });
                refs.push(val);
            }
        }
    }

    return compactQueue(queue);
};

exports.isRegExp = function isRegExp(obj) {
    return Object.prototype.toString.call(obj) === '[object RegExp]';
};

exports.isBuffer = function isBuffer(obj) {
    if (obj === null || typeof obj === 'undefined') {
        return false;
    }

    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
};
}, 617, null, "qs/lib/utils.js");
__d(/* qs/lib/formats.js */function(global, require, module, exports) {'use strict';

var replace = String.prototype.replace;
var percentTwenties = /%20/g;

module.exports = {
    'default': 'RFC3986',
    formatters: {
        RFC1738: function RFC1738(value) {
            return replace.call(value, percentTwenties, '+');
        },
        RFC3986: function RFC3986(value) {
            return value;
        }
    },
    RFC1738: 'RFC1738',
    RFC3986: 'RFC3986'
};
}, 618, null, "qs/lib/formats.js");
__d(/* qs/lib/parse.js */function(global, require, module, exports) {'use strict';

var utils = require(617      ); // 617 = ./utils

var has = Object.prototype.hasOwnProperty;

var defaults = {
    allowDots: false,
    allowPrototypes: false,
    arrayLimit: 20,
    decoder: utils.decode,
    delimiter: '&',
    depth: 5,
    parameterLimit: 1000,
    plainObjects: false,
    strictNullHandling: false
};

var parseValues = function parseQueryStringValues(str, options) {
    var obj = {};
    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, '') : str;
    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;
    var parts = cleanStr.split(options.delimiter, limit);

    for (var i = 0; i < parts.length; ++i) {
        var part = parts[i];

        var bracketEqualsPos = part.indexOf(']=');
        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;

        var key, val;
        if (pos === -1) {
            key = options.decoder(part, defaults.decoder);
            val = options.strictNullHandling ? null : '';
        } else {
            key = options.decoder(part.slice(0, pos), defaults.decoder);
            val = options.decoder(part.slice(pos + 1), defaults.decoder);
        }
        if (has.call(obj, key)) {
            obj[key] = [].concat(obj[key]).concat(val);
        } else {
            obj[key] = val;
        }
    }

    return obj;
};

var parseObject = function parseObject(chain, val, options) {
    var leaf = val;

    for (var i = chain.length - 1; i >= 0; --i) {
        var obj;
        var root = chain[i];

        if (root === '[]') {
            obj = [];
            obj = obj.concat(leaf);
        } else {
            obj = options.plainObjects ? Object.create(null) : {};
            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;
            var index = parseInt(cleanRoot, 10);
            if (!isNaN(index) && root !== cleanRoot && String(index) === cleanRoot && index >= 0 && options.parseArrays && index <= options.arrayLimit) {
                obj = [];
                obj[index] = leaf;
            } else {
                obj[cleanRoot] = leaf;
            }
        }

        leaf = obj;
    }

    return leaf;
};

var parseKeys = function parseQueryStringKeys(givenKey, val, options) {
    if (!givenKey) {
        return;
    }

    var key = options.allowDots ? givenKey.replace(/\.([^.[]+)/g, '[$1]') : givenKey;

    var brackets = /(\[[^[\]]*])/;
    var child = /(\[[^[\]]*])/g;

    var segment = brackets.exec(key);
    var parent = segment ? key.slice(0, segment.index) : key;

    var keys = [];
    if (parent) {
        if (!options.plainObjects && has.call(Object.prototype, parent)) {
            if (!options.allowPrototypes) {
                return;
            }
        }

        keys.push(parent);
    }

    var i = 0;
    while ((segment = child.exec(key)) !== null && i < options.depth) {
        i += 1;
        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
            if (!options.allowPrototypes) {
                return;
            }
        }
        keys.push(segment[1]);
    }

    if (segment) {
        keys.push('[' + key.slice(segment.index) + ']');
    }

    return parseObject(keys, val, options);
};

module.exports = function (str, opts) {
    var options = opts ? utils.assign({}, opts) : {};

    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {
        throw new TypeError('Decoder has to be a function.');
    }

    options.ignoreQueryPrefix = options.ignoreQueryPrefix === true;
    options.delimiter = typeof options.delimiter === 'string' || utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;
    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;
    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;
    options.parseArrays = options.parseArrays !== false;
    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;
    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;
    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;
    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;
    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;
    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;

    if (str === '' || str === null || typeof str === 'undefined') {
        return options.plainObjects ? Object.create(null) : {};
    }

    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;
    var obj = options.plainObjects ? Object.create(null) : {};

    var keys = Object.keys(tempObj);
    for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];
        var newObj = parseKeys(key, tempObj[key], options);
        obj = utils.merge(obj, newObj, options);
    }

    return utils.compact(obj);
};
}, 619, null, "qs/lib/parse.js");
__d(/* YuanXC/src/utils/LocalStorage.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.USED_CAR_REGION_KEY = exports.USER_KEY = exports.COMMON_DATA_KEY = undefined;

var _LocalStorage = require(621                 ); // 621 = ./lib/LocalStorage

var _LocalStorage2 = babelHelpers.interopRequireDefault(_LocalStorage);

exports.default = new _LocalStorage2.default('creditBox@');
var COMMON_DATA_KEY = exports.COMMON_DATA_KEY = "COMMON_DATA_KEY";
var USER_KEY = exports.USER_KEY = "USER_KEY";
var USED_CAR_REGION_KEY = exports.USED_CAR_REGION_KEY = "USED_CAR_REGION_KEY";
}, 620, null, "YuanXC/src/utils/LocalStorage.js");
__d(/* YuanXC/src/utils/lib/LocalStorage.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

var _this = this;

exports.default = LocalStorage;

var _reactNative = require(12            ); // 12 = react-native

function LocalStorage(keyPrefix) {
  this._keyPrefix = keyPrefix || 'LOCAL_STORAGE@';
}

LocalStorage.prototype = {
  _getStorageKey: function _getStorageKey(key) {
    return _this._keyPrefix + key;
  },

  setItem: function setItem(key, data) {
    _reactNative.AsyncStorage.setItem(this._getStorageKey(key), JSON.stringify(data));
  },

  getItem: function getItem(key, success, failure) {
    _reactNative.AsyncStorage.getItem(this._getStorageKey(key), function (err, data) {
      if (err && typeof failure === 'function') {
        failure(err);
      } else if (typeof success === 'function') {
        success(JSON.parse(data));
      }
    });
  },

  removeItem: function removeItem(key, cb) {
    cb = typeof cb === 'function' ? cb : function () {};
    _reactNative.AsyncStorage.removeItem(this._getStorageKey(key), cb);
  },

  multiGet: function multiGet(keys, success, failure) {
    var _this2 = this;

    var storageKeys = keys.map(function (key) {
      return _this2._getStorageKey(key);
    });
    _reactNative.AsyncStorage.multiGet(storageKeys, function (err, dataArr) {
      if (!err) {
        var composedData = {};
        dataArr.forEach(function (data, index) {
          composedData[keys[index]] = JSON.parse(data[1]);
        });
        if (typeof success === 'function') {
          success(composedData);
        }
      } else if (typeof failure === 'function') {
        failure(err);
      }
    });
  },
  multiSet: function multiSet(keyValueMap) {
    var keys = Object.keys(keyValueMap);
    var multi_set_pairs = keys.map(function (key) {
      return [key, JSON.stringify(keyValueMap[key])];
    });
    _reactNative.AsyncStorage.multiSet(multi_set_pairs);
  }
};
}, 621, null, "YuanXC/src/utils/lib/LocalStorage.js");
__d(/* YuanXC/src/requests/http.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createApiUrl = createApiUrl;
exports.createH5Url = createH5Url;
exports.login = login;
exports.logout = logout;
exports.register = register;
exports.sendCode = sendCode;
exports.getImageCode = getImageCode;
exports.checkCode = checkCode;
exports.checkPhone = checkPhone;
exports.forget = forget;
exports.modifyPassword = modifyPassword;
exports.setPayPassword = setPayPassword;
exports.modifyPayPassword = modifyPayPassword;
exports.getUserProfile = getUserProfile;
exports.cashRequest = cashRequest;
exports.cash = cash;
exports.deposit = deposit;
exports.authenticate = authenticate;
exports.tiedCard = tiedCard;
exports.invest = invest;
exports.bankCardDetail = bankCardDetail;
exports.capitalRecord = capitalRecord;
exports.investList = investList;
exports.capitalDetail = capitalDetail;
exports.messageList = messageList;
exports.bonusList = bonusList;
exports.getBonusListForBuy = getBonusListForBuy;
exports.messageDetail = messageDetail;
exports.financeList = financeList;
exports.financeDetail = financeDetail;
exports.getBanner = getBanner;
exports.getAds = getAds;
exports.getNotification = getNotification;
exports.getNotifiyDetail = getNotifiyDetail;
exports.getHome = getHome;
exports.getBankList = getBankList;
exports.uploadFeedback = uploadFeedback;
exports.checkUpdate = checkUpdate;

var _axios = require(588      ); // 588 = ./axios

var _axios2 = babelHelpers.interopRequireDefault(_axios);

function createApiUrl(path) {
  return "http://api.liqun888.com" + path;
}

function createH5Url(path) {
  return createApiUrl(path).replace("api", "m");
}

function login(data) {
  return _axios2.default.post(createApiUrl('/user/login'), data);
}

function logout(data) {
  return _axios2.default.post(createApiUrl('/user/logout'), data);
}

function register(data) {
  return _axios2.default.post(createApiUrl('/user/register'), data);
}

function sendCode(data) {
  return _axios2.default.post(createApiUrl('/verification-code/get'), data);
}

function getImageCode(data) {
  return _axios2.default.get(createApiUrl('/captcha/'), { params: data });
}

function checkCode(data) {
  return _axios2.default.get(createApiUrl('/verification-code/verify'), { params: data });
}

function checkPhone(data) {
  return _axios2.default.post(createApiUrl('/user/resetMobile/verification'), data);
}

function forget(data) {
  return _axios2.default.post(createApiUrl('/user/password/forget'), data);
}

function modifyPassword(data) {
  return _axios2.default.post(createApiUrl('/user/password/reset'), data);
}

function setPayPassword(data) {
  return _axios2.default.post(createApiUrl('/user/trading-password/set'), data);
}

function modifyPayPassword(data) {
  return _axios2.default.post(createApiUrl('/user/trading-password/reset'), data);
}

function getUserProfile() {
  return _axios2.default.get(createApiUrl('/user/info'));
}

function cashRequest(data) {
  return _axios2.default.get(createApiUrl('/withdraw/handle-fee'), { params: data });
}

function cash(data) {
  return _axios2.default.post(createApiUrl('/withdraw/create'), data);
}

function deposit(data) {
  return _axios2.default.post(createApiUrl('/deposit/create'), data);
}

function authenticate(data) {
  return _axios2.default.post(createApiUrl('/user/authenticate'), data);
}

function tiedCard(data) {
  return _axios2.default.post(createApiUrl('/user/tied-card'), data);
}

function invest(data) {
  return _axios2.default.post(createApiUrl('/invest/create'), data);
}

function bankCardDetail() {
  return _axios2.default.get(createApiUrl('/user/bank-card/info'));
}

function capitalRecord(data) {
  return _axios2.default.get(createApiUrl('/cash/'), { params: data });
}

function investList(data) {
  return _axios2.default.get(createApiUrl('/invest/'), { params: data });
}

function capitalDetail(data) {
  return _axios2.default.get(createApiUrl('/invest/detail'), { params: data });
}

function messageList(data) {
  return _axios2.default.get(createApiUrl('/user-message/'), { params: data });
}

function bonusList(data) {
  return _axios2.default.get(createApiUrl('/user/member-coupon'), { params: data });
}

function getBonusListForBuy(data) {
  return _axios2.default.get(createApiUrl('/invest/get-coupon'), { params: data });
}

function messageDetail(data) {
  return _axios2.default.get(createApiUrl('/user-message/detail'), { params: data });
}

function financeList(data) {
  return _axios2.default.get(createApiUrl('/finance-base/'), { params: data });
}

function financeDetail(data) {
  return _axios2.default.get(createApiUrl('/finance-base/detail'), { params: data });
}

function getBanner() {
  return _axios2.default.get(createApiUrl('/banner/'));
}

function getAds() {
  return _axios2.default.get(createApiUrl('/banner/ad-operations'));
}

function getNotification(data) {
  return _axios2.default.get(createApiUrl('/notice/list'), { params: data });
}

function getNotifiyDetail(data) {
  return _axios2.default.get(createApiUrl('/notice/detail'), { params: data });
}

function getHome() {
  return _axios2.default.get(createApiUrl('/index/'));
}

function getBankList() {
  return _axios2.default.get(createApiUrl('/user/bank'));
}

function uploadFeedback(data) {
  return _axios2.default.post(createApiUrl('/feedback/create'), data);
}

function checkUpdate() {
  return _axios2.default.get(createApiUrl('/app/version/info?os=ios'));
}
}, 622, null, "YuanXC/src/requests/http.js");
__d(/* YuanXC/src/actions/workingTableActions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getData = getData;
exports.getBanner = getBanner;
exports.getAds = getAds;
exports.getNotification = getNotification;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);

var _http = require(622               ); // 622 = ../requests/http

function getData(loading) {
  return function (dispatch) {
    dispatch(requestData({ loading: loading }));
    (0, _http.getHome)().then(function (data) {
      if (data.data.code == 0) {
        dispatch(receiveProfile({ list: data.data.data.financeBaseList }));
      } else {
        dispatch(receiveProfile({ error: true, msg: data.data.msg }));
      }
    }).catch(function (err) {
      dispatch(receiveProfile({ error: true, msgStr: 'netWorkError' }));
    });
  };
}

function getBanner() {
  return function (dispatch) {
    (0, _http.getBanner)().then(function (data) {
      if (data.data.code == 0) {
        dispatch(receiveBanner({ banner: data.data.data.bannerDataList }));
      }
    });
  };
}

function getAds() {
  return function (dispatch) {
    (0, _http.getAds)().then(function (data) {
      if (data.data.code == 0) {
        var adOperationsList = data.data.data.adOperationsList;
        if (adOperationsList && adOperationsList.length > 2) {
          global.https = adOperationsList[2].link.indexOf("https") > -1 ? "s" : "";
        }
        dispatch(receiveAds({ ads: adOperationsList }));
      }
    });
  };
}

function getNotification() {
  return function (dispatch) {
    (0, _http.getNotification)({ position: 'index' }).then(function (data) {
      if (data.data.code == 0) {
        dispatch(receiveNotification({ notification: data.data.data }));
      }
    });
  };
}

function requestData(data) {
  return babelHelpers.extends({
    type: types.REQUEST_WORKINGTABLE
  }, data);
}

function receiveProfile(data) {
  return babelHelpers.extends({
    type: types.RECEIVE_WORKINGTABLE_INFO
  }, data);
}

function receiveBanner(data) {
  return babelHelpers.extends({
    type: types.RECEIVE_BANNER
  }, data);
}

function receiveAds(data) {
  return babelHelpers.extends({
    type: types.RECEIVE_ADS
  }, data);
}

function receiveNotification(data) {
  return babelHelpers.extends({
    type: types.RECEIVE_NOTIFICATION
  }, data);
}
}, 623, null, "YuanXC/src/actions/workingTableActions.js");
__d(/* YuanXC/src/actions/actionTypes.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var SPLASH_HIDE = exports.SPLASH_HIDE = 'SPLASH_HIDE';var REQUEST_WORKINGTABLE = exports.REQUEST_WORKINGTABLE = 'REQUEST_WORKINGTABLE';var RECEIVE_WORKINGTABLE_INFO = exports.RECEIVE_WORKINGTABLE_INFO = 'RECEIVE_WORKINGTABLE_INFO';var RECEIVE_BANNER = exports.RECEIVE_BANNER = 'RECEIVE_BANNER';var RECEIVE_ADS = exports.RECEIVE_ADS = 'RECEIVE_ADS';var RECEIVE_NOTIFICATION = exports.RECEIVE_NOTIFICATION = 'RECEIVE_NOTIFICATION';var RECEIVE_USER_INFO = exports.RECEIVE_USER_INFO = 'RECEIVE_USER_INFO';var REQUEST_CAPITAL_RECORD = exports.REQUEST_CAPITAL_RECORD = 'REQUEST_CAPITAL_RECORD';var RECEIVE_CAPITAL_RECORD = exports.RECEIVE_CAPITAL_RECORD = 'RECEIVE_CAPITAL_RECORD';var REQUEST_CAPITAL_LIST = exports.REQUEST_CAPITAL_LIST = 'REQUEST_CAPITAL_LIST';var RECEIVE_CAPITAL_LIST = exports.RECEIVE_CAPITAL_LIST = 'RECEIVE_CAPITAL_LIST';var REQUEST_BONUS_LIST = exports.REQUEST_BONUS_LIST = 'REQUEST_BONUS_LIST';var RECEIVE_BONUS_LIST = exports.RECEIVE_BONUS_LIST = 'RECEIVE_BONUS_LIST';var REQUEST_CAPITAL_DETAIL = exports.REQUEST_CAPITAL_DETAIL = 'REQUEST_CAPITAL_DETAIL';var RECEIVE_CAPITAL_DETAIL = exports.RECEIVE_CAPITAL_DETAIL = 'RECEIVE_CAPITAL_DETAIL';var CLEAR_CAPITAL_CACHE = exports.CLEAR_CAPITAL_CACHE = 'CLEAR_CAPITAL_CACHE';var REQUEST_BANK_LIST = exports.REQUEST_BANK_LIST = 'REQUEST_BANK_LIST';var RECEIVE_BANK_LIST = exports.RECEIVE_BANK_LIST = 'RECEIVE_BANK_LIST';var REQUEST_BANKCARD_DETAIL = exports.REQUEST_BANKCARD_DETAIL = 'REQUEST_BANKCARD_DETAIL';var RECEIVE_BANKCARD_DETAIL = exports.RECEIVE_BANKCARD_DETAIL = 'RECEIVE_BANKCARD_DETAIL';var CLEAR_BANKCARD_CACHE = exports.CLEAR_BANKCARD_CACHE = 'CLEAR_BANKCARD_CACHE';var REQUEST_MESSAGE_LIST = exports.REQUEST_MESSAGE_LIST = 'REQUEST_MESSAGE_LIST';var RECEIVE_MESSAGE_LIST = exports.RECEIVE_MESSAGE_LIST = 'RECEIVE_MESSAGE_LIST';var REQUEST_NOTIFY_LIST = exports.REQUEST_NOTIFY_LIST = 'REQUEST_NOTIFY_LIST';var RECEIVE_NOTIFY_LIST = exports.RECEIVE_NOTIFY_LIST = 'RECEIVE_NOTIFY_LIST';var REQUEST_FINANCE_LIST = exports.REQUEST_FINANCE_LIST = 'REQUEST_FINANCE_LIST';var RECEIVE_FINANCE_LIST = exports.RECEIVE_FINANCE_LIST = 'RECEIVE_FINANCE_LIST';var REFRESH_FINANCE_LIST = exports.REFRESH_FINANCE_LIST = 'REFRESH_FINANCE_LIST';var REQUEST_FINANCE_DETAIL = exports.REQUEST_FINANCE_DETAIL = 'REQUEST_FINANCE_DETAIL';var RECEIVE_FINANCE_DETAIL = exports.RECEIVE_FINANCE_DETAIL = 'RECEIVE_FINANCE_DETAIL';var CLEAR_FINANCE_CACHE = exports.CLEAR_FINANCE_CACHE = 'CLEAR_FINANCE_CACHE';var REQUEST_FORGET = exports.REQUEST_FORGET = 'REQUEST_FORGET';var RECEIVE_SEND_CODE = exports.RECEIVE_SEND_CODE = 'RECEIVE_SEND_CODE';var RECEIVE_FORGET_PASSWORD = exports.RECEIVE_FORGET_PASSWORD = 'RECEIVE_FORGET_PASSWORD';var REQUEST_USER_LOGIN = exports.REQUEST_USER_LOGIN = 'REQUEST_USER_LOGIN';var RECEIVE_USER_LOGIN = exports.RECEIVE_USER_LOGIN = 'RECEIVE_USER_LOGIN';var REQUEST_USER_REGISTER = exports.REQUEST_USER_REGISTER = 'REQUEST_USER_REGISTER';var RECEIVE_USER_REGISTER = exports.RECEIVE_USER_REGISTER = 'RECEIVE_USER_REGISTER';var REQUEST_LOAN = exports.REQUEST_LOAN = 'REQUEST_LOAN';var RECEIVE_LOAN_ADD = exports.RECEIVE_LOAN_ADD = 'RECEIVE_LOAN_ADD';var CLEAR_ORDERDETAIL_CACHE = exports.CLEAR_ORDERDETAIL_CACHE = 'CLEAR_ORDERDETAIL_CACHE';var REQUEST_STATISTIC = exports.REQUEST_STATISTIC = 'REQUEST_STATISTIC';var RECEIVE_STATISTIC_INFO = exports.RECEIVE_STATISTIC_INFO = 'RECEIVE_STATISTIC_INFO';var RECEIVE_STATISTIC_ORDER = exports.RECEIVE_STATISTIC_ORDER = 'RECEIVE_STATISTIC_ORDER';var TOGGLE_MODAL = exports.TOGGLE_MODAL = 'TOGGLE_MODAL';
}, 624, null, "YuanXC/src/actions/actionTypes.js");
__d(/* YuanXC/src/components/MessageBox.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/components/MessageBox.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _Touchable = require(497                      ); // 497 = ../components/Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var _constants = require(434                  ); // 434 = ../config/constants

var MessageBox = function (_Component) {
  babelHelpers.inherits(MessageBox, _Component);

  function MessageBox() {
    babelHelpers.classCallCheck(this, MessageBox);
    return babelHelpers.possibleConstructorReturn(this, (MessageBox.__proto__ || Object.getPrototypeOf(MessageBox)).apply(this, arguments));
  }

  babelHelpers.createClass(MessageBox, [{
    key: 'render',
    value: function render() {
      var button = this.props.button;
      return _react2.default.createElement(
        _reactNative.Modal,
        {
          onRequestClose: function onRequestClose() {},
          transparent: true,
          visible: this.props.visible, __source: {
            fileName: _jsxFileName,
            lineNumber: 12
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          { style: styles.container, __source: {
              fileName: _jsxFileName,
              lineNumber: 16
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            { style: [styles.boxWrapper, this.props.style], __source: {
                fileName: _jsxFileName,
                lineNumber: 17
              }
            },
            _react2.default.createElement(
              _reactNative.View,
              { style: [styles.boxContentWrapper, this.props.boxStyle], __source: {
                  fileName: _jsxFileName,
                  lineNumber: 18
                }
              },
              typeof this.props.content === 'string' ? _react2.default.createElement(
                _reactNative.Text,
                { style: [{ color: 'black', lineHeight: 22, textAlign: 'center' }, this.props.contentStyle], __source: {
                    fileName: _jsxFileName,
                    lineNumber: 19
                  }
                },
                this.props.content
              ) : this.props.children
            ),
            _react2.default.createElement(_reactNative.View, { style: styles.lineHorizontal, __source: {
                fileName: _jsxFileName,
                lineNumber: 21
              }
            }),
            button && Array.isArray(button) ? _react2.default.createElement(
              _reactNative.View,
              { style: styles.boxMultiButtonWrapper, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 24
                }
              },
              _react2.default.createElement(
                _Touchable2.default,
                {
                  key: '1',
                  style: styles.boxButtonLeft,
                  onPress: function onPress() {
                    button[0].onPress();
                  }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 25
                  }
                },
                _react2.default.createElement(
                  _reactNative.Text,
                  { style: styles.boxButtonText, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 31
                    }
                  },
                  button[0].text
                )
              ),
              _react2.default.createElement(_reactNative.View, { style: styles.lineVertical, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 33
                }
              }),
              _react2.default.createElement(
                _Touchable2.default,
                {
                  key: '2',
                  style: styles.boxButtonRight,
                  onPress: function onPress() {
                    button[1].onPress();
                  }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 34
                  }
                },
                _react2.default.createElement(
                  _reactNative.Text,
                  { style: styles.boxButtonText, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 40
                    }
                  },
                  button[1].text
                )
              )
            ) : button && _react2.default.createElement(
              _Touchable2.default,
              {
                style: styles.boxSingleButton,
                onPress: function onPress() {
                  button.onPress();
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 45
                }
              },
              _react2.default.createElement(
                _reactNative.Text,
                { style: styles.boxButtonText, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 50
                  }
                },
                button.text
              )
            )
          )
        )
      );
    }
  }]);
  return MessageBox;
}(_react.Component);

exports.default = MessageBox;


MessageBox.defaultProps = {
  visible: false
};

MessageBox.propTypes = {
  visible: _propTypes2.default.bool,
  content: _propTypes2.default.any,
  button: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.array])
};

var boxParams = {
  borderRadius: 10,
  width: 250,
  height: 140,
  contentHeight: 95,
  buttonHeight: 45
};

var styles = _reactNative.StyleSheet.create({
  container: {
    backgroundColor: 'rgba(0,0,0,0.50)',
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center'

  },
  boxWrapper: {
    borderRadius: boxParams.borderRadius,
    width: boxParams.width,
    backgroundColor: 'white',
    height: boxParams.height
  },
  lineHorizontal: {
    flex: 1,
    borderBottomColor: '#dddddd',
    borderBottomWidth: _constants.BORDER_WIDTH
  },
  lineVertical: {
    borderRightWidth: _constants.BORDER_WIDTH,
    borderRightColor: '#dddddd'
  },
  boxContentWrapper: {
    height: boxParams.contentHeight,
    alignItems: 'center',
    justifyContent: 'center',
    borderTopLeftRadius: boxParams.borderRadius,
    borderTopRightRadius: boxParams.borderRadius,
    paddingHorizontal: 15
  },
  boxSingleButton: {
    height: boxParams.buttonHeight,
    borderBottomLeftRadius: boxParams.borderRadius,
    borderBottomRightRadius: boxParams.borderRadius,
    justifyContent: 'center',
    alignItems: 'center'
  },
  boxMultiButtonWrapper: {
    flexDirection: 'row',
    borderBottomLeftRadius: boxParams.borderRadius,
    borderBottomRightRadius: boxParams.borderRadius
  },
  boxButtonLeft: {
    flex: 1,
    height: boxParams.buttonHeight,
    justifyContent: 'center',
    alignItems: 'center',
    borderBottomLeftRadius: boxParams.borderRadius
  },
  boxButtonRight: {
    flex: 1,
    height: boxParams.buttonHeight,
    justifyContent: 'center',
    alignItems: 'center',
    borderBottomRightRadius: boxParams.borderRadius
  },
  boxButtonText: {
    fontSize: 16,
    color: '#188eee'
  }
});
}, 625, null, "YuanXC/src/components/MessageBox.js");
__d(/* moment/moment.js */function(global, require, module, exports) {

;(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();
})(this, function () {
    'use strict';

    var hookCallback;

    function hooks() {
        return hookCallback.apply(null, arguments);
    }

    function setHookCallback(callback) {
        hookCallback = callback;
    }

    function isArray(input) {
        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
    }

    function isObject(input) {
        return input != null && Object.prototype.toString.call(input) === '[object Object]';
    }

    function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
            return Object.getOwnPropertyNames(obj).length === 0;
        } else {
            var k;
            for (k in obj) {
                if (obj.hasOwnProperty(k)) {
                    return false;
                }
            }
            return true;
        }
    }

    function isUndefined(input) {
        return input === void 0;
    }

    function isNumber(input) {
        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
    }

    function isDate(input) {
        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
    }

    function map(arr, fn) {
        var res = [],
            i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function createUTC(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
    }

    function defaultParsingFlags() {
        return {
            empty: false,
            unusedTokens: [],
            unusedInput: [],
            overflow: -2,
            charsLeftOver: 0,
            nullInput: false,
            invalidMonth: null,
            invalidFormat: false,
            userInvalidated: false,
            iso: false,
            parsedDateParts: [],
            meridiem: null,
            rfc2822: false,
            weekdayMismatch: false
        };
    }

    function getParsingFlags(m) {
        if (m._pf == null) {
            m._pf = defaultParsingFlags();
        }
        return m._pf;
    }

    var some;
    if (Array.prototype.some) {
        some = Array.prototype.some;
    } else {
        some = function some(fun) {
            var t = Object(this);
            var len = t.length >>> 0;

            for (var i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                    return true;
                }
            }

            return false;
        };
    }

    function isValid(m) {
        if (m._isValid == null) {
            var flags = getParsingFlags(m);
            var parsedParts = some.call(flags.parsedDateParts, function (i) {
                return i != null;
            });
            var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);

            if (m._strict) {
                isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;
            }

            if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
            } else {
                return isNowValid;
            }
        }
        return m._isValid;
    }

    function createInvalid(flags) {
        var m = createUTC(NaN);
        if (flags != null) {
            extend(getParsingFlags(m), flags);
        } else {
            getParsingFlags(m).userInvalidated = true;
        }

        return m;
    }

    var momentProperties = hooks.momentProperties = [];

    function copyConfig(to, from) {
        var i, prop, val;

        if (!isUndefined(from._isAMomentObject)) {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (!isUndefined(from._i)) {
            to._i = from._i;
        }
        if (!isUndefined(from._f)) {
            to._f = from._f;
        }
        if (!isUndefined(from._l)) {
            to._l = from._l;
        }
        if (!isUndefined(from._strict)) {
            to._strict = from._strict;
        }
        if (!isUndefined(from._tzm)) {
            to._tzm = from._tzm;
        }
        if (!isUndefined(from._isUTC)) {
            to._isUTC = from._isUTC;
        }
        if (!isUndefined(from._offset)) {
            to._offset = from._offset;
        }
        if (!isUndefined(from._pf)) {
            to._pf = getParsingFlags(from);
        }
        if (!isUndefined(from._locale)) {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i = 0; i < momentProperties.length; i++) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    var updateInProgress = false;

    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        if (!this.isValid()) {
            this._d = new Date(NaN);
        }

        if (updateInProgress === false) {
            updateInProgress = true;
            hooks.updateOffset(this);
            updateInProgress = false;
        }
    }

    function isMoment(obj) {
        return obj instanceof Moment || obj != null && obj._isAMomentObject != null;
    }

    function absFloor(number) {
        if (number < 0) {
            return Math.ceil(number) || 0;
        } else {
            return Math.floor(number);
        }
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value = absFloor(coercedNumber);
        }

        return value;
    }

    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    function warn(msg) {
        if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;

        return extend(function () {
            if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(null, msg);
            }
            if (firstTime) {
                var args = [];
                var arg;
                for (var i = 0; i < arguments.length; i++) {
                    arg = '';
                    if (typeof arguments[i] === 'object') {
                        arg += '\n[' + i + '] ';
                        for (var key in arguments[0]) {
                            arg += key + ': ' + arguments[0][key] + ', ';
                        }
                        arg = arg.slice(0, -2);
                    } else {
                        arg = arguments[i];
                    }
                    args.push(arg);
                }
                warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + new Error().stack);
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(name, msg);
        }
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true;
        }
    }

    hooks.suppressDeprecationWarnings = false;
    hooks.deprecationHandler = null;

    function isFunction(input) {
        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
    }

    function set(config) {
        var prop, i;
        for (i in config) {
            prop = config[i];
            if (isFunction(prop)) {
                this[i] = prop;
            } else {
                this['_' + i] = prop;
            }
        }
        this._config = config;

        this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\d{1,2}/.source);
    }

    function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig),
            prop;
        for (prop in childConfig) {
            if (hasOwnProp(childConfig, prop)) {
                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                    res[prop] = {};
                    extend(res[prop], parentConfig[prop]);
                    extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                    res[prop] = childConfig[prop];
                } else {
                    delete res[prop];
                }
            }
        }
        for (prop in parentConfig) {
            if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {
                res[prop] = extend({}, res[prop]);
            }
        }
        return res;
    }

    function Locale(config) {
        if (config != null) {
            this.set(config);
        }
    }

    var keys;

    if (Object.keys) {
        keys = Object.keys;
    } else {
        keys = function keys(obj) {
            var i,
                res = [];
            for (i in obj) {
                if (hasOwnProp(obj, i)) {
                    res.push(i);
                }
            }
            return res;
        };
    }

    var defaultCalendar = {
        sameDay: '[Today at] LT',
        nextDay: '[Tomorrow at] LT',
        nextWeek: 'dddd [at] LT',
        lastDay: '[Yesterday at] LT',
        lastWeek: '[Last] dddd [at] LT',
        sameElse: 'L'
    };

    function calendar(key, mom, now) {
        var output = this._calendar[key] || this._calendar['sameElse'];
        return isFunction(output) ? output.call(mom, now) : output;
    }

    var defaultLongDateFormat = {
        LTS: 'h:mm:ss A',
        LT: 'h:mm A',
        L: 'MM/DD/YYYY',
        LL: 'MMMM D, YYYY',
        LLL: 'MMMM D, YYYY h:mm A',
        LLLL: 'dddd, MMMM D, YYYY h:mm A'
    };

    function longDateFormat(key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
            return format;
        }

        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
            return val.slice(1);
        });

        return this._longDateFormat[key];
    }

    var defaultInvalidDate = 'Invalid date';

    function invalidDate() {
        return this._invalidDate;
    }

    var defaultOrdinal = '%d';
    var defaultDayOfMonthOrdinalParse = /\d{1,2}/;

    function ordinal(number) {
        return this._ordinal.replace('%d', number);
    }

    var defaultRelativeTime = {
        future: 'in %s',
        past: '%s ago',
        s: 'a few seconds',
        ss: '%d seconds',
        m: 'a minute',
        mm: '%d minutes',
        h: 'an hour',
        hh: '%d hours',
        d: 'a day',
        dd: '%d days',
        M: 'a month',
        MM: '%d months',
        y: 'a year',
        yy: '%d years'
    };

    function relativeTime(number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);
    }

    function pastFuture(diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
    }

    var aliases = {};

    function addUnitAlias(unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
    }

    function normalizeUnits(units) {
        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    var priorities = {};

    function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
    }

    function getPrioritizedUnits(unitsObj) {
        var units = [];
        for (var u in unitsObj) {
            units.push({ unit: u, priority: priorities[u] });
        }
        units.sort(function (a, b) {
            return a.priority - b.priority;
        });
        return units;
    }

    function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
    }

    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

    var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

    var formatFunctions = {};

    var formatTokenFunctions = {};

    function addFormatToken(token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === 'string') {
            func = function func() {
                return this[callback]();
            };
        }
        if (token) {
            formatTokenFunctions[token] = func;
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(func.apply(this, arguments), token);
            };
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens),
            i,
            length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '',
                i;
            for (i = 0; i < length; i++) {
                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
            }
            return output;
        };
    }

    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }

    var match1 = /\d/;
    var match2 = /\d\d/;
    var match3 = /\d{3}/;
    var match4 = /\d{4}/;
    var match6 = /[+-]?\d{6}/;
    var match1to2 = /\d\d?/;
    var match3to4 = /\d\d\d\d?/;
    var match5to6 = /\d\d\d\d\d\d?/;
    var match1to3 = /\d{1,3}/;
    var match1to4 = /\d{1,4}/;
    var match1to6 = /[+-]?\d{1,6}/;

    var matchUnsigned = /\d+/;
    var matchSigned = /[+-]?\d+/;

    var matchOffset = /Z|[+-]\d\d:?\d\d/gi;
    var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi;

    var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/;
    var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;

    var regexes = {};

    function addRegexToken(token, regex, strictRegex) {
        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
            return isStrict && strictRegex ? strictRegex : regex;
        };
    }

    function getParseRegexForToken(token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
    }

    function unescapeFormat(s) {
        return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
            return p1 || p2 || p3 || p4;
        }));
    }

    function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var tokens = {};

    function addParseToken(token, callback) {
        var i,
            func = callback;
        if (typeof token === 'string') {
            token = [token];
        }
        if (isNumber(callback)) {
            func = function func(input, array) {
                array[callback] = toInt(input);
            };
        }
        for (i = 0; i < token.length; i++) {
            tokens[token[i]] = func;
        }
    }

    function addWeekParseToken(token, callback) {
        addParseToken(token, function (input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token);
        });
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token);
        }
    }

    var YEAR = 0;
    var MONTH = 1;
    var DATE = 2;
    var HOUR = 3;
    var MINUTE = 4;
    var SECOND = 5;
    var MILLISECOND = 6;
    var WEEK = 7;
    var WEEKDAY = 8;

    addFormatToken('Y', 0, 0, function () {
        var y = this.year();
        return y <= 9999 ? '' + y : '+' + y;
    });

    addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
    });

    addFormatToken(0, ['YYYY', 4], 0, 'year');
    addFormatToken(0, ['YYYYY', 5], 0, 'year');
    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

    addUnitAlias('year', 'y');

    addUnitPriority('year', 1);

    addRegexToken('Y', matchSigned);
    addRegexToken('YY', match1to2, match2);
    addRegexToken('YYYY', match1to4, match4);
    addRegexToken('YYYYY', match1to6, match6);
    addRegexToken('YYYYYY', match1to6, match6);

    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
    addParseToken('YYYY', function (input, array) {
        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken('YY', function (input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
    });
    addParseToken('Y', function (input, array) {
        array[YEAR] = parseInt(input, 10);
    });

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    function isLeapYear(year) {
        return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
    }

    hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    var getSetYear = makeGetSet('FullYear', true);

    function getIsLeapYear() {
        return isLeapYear(this.year());
    }

    function makeGetSet(unit, keepTime) {
        return function (value) {
            if (value != null) {
                set$1(this, unit, value);
                hooks.updateOffset(this, keepTime);
                return this;
            } else {
                return get(this, unit);
            }
        };
    }

    function get(mom, unit) {
        return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
    }

    function set$1(mom, unit, value) {
        if (mom.isValid() && !isNaN(value)) {
            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));
            } else {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
            }
        }
    }

    function stringGet(units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units]();
        }
        return this;
    }

    function stringSet(units, value) {
        if (typeof units === 'object') {
            units = normalizeObjectUnits(units);
            var prioritized = getPrioritizedUnits(units);
            for (var i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
            }
        } else {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units](value);
            }
        }
        return this;
    }

    function mod(n, x) {
        return (n % x + x) % x;
    }

    var indexOf;

    if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
    } else {
        indexOf = function indexOf(o) {
            var i;
            for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                    return i;
                }
            }
            return -1;
        };
    }

    function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
            return NaN;
        }
        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;
    }

    addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
    });

    addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
    });

    addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
    });

    addUnitAlias('month', 'M');

    addUnitPriority('month', 8);

    addRegexToken('M', match1to2);
    addRegexToken('MM', match1to2, match2);
    addRegexToken('MMM', function (isStrict, locale) {
        return locale.monthsShortRegex(isStrict);
    });
    addRegexToken('MMMM', function (isStrict, locale) {
        return locale.monthsRegex(isStrict);
    });

    addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
    });

    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);

        if (month != null) {
            array[MONTH] = month;
        } else {
            getParsingFlags(config).invalidMonth = input;
        }
    });

    var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
    function localeMonths(m, format) {
        if (!m) {
            return isArray(this._months) ? this._months : this._months['standalone'];
        }
        return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
    }

    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
    function localeMonthsShort(m, format) {
        if (!m) {
            return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];
        }
        return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
    }

    function handleStrictParse(monthName, format, strict) {
        var i,
            ii,
            mom,
            llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (i = 0; i < 12; ++i) {
                mom = createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeMonthsParse(monthName, format, strict) {
        var i, mom, regex;

        if (this._monthsParseExact) {
            return handleStrictParse.call(this, monthName, format, strict);
        }

        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
        }

        for (i = 0; i < 12; i++) {
            mom = createUTC([2000, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
            }
            if (!strict && !this._monthsParse[i]) {
                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }

            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
                return i;
            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
                return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
            }
        }
    }

    function setMonth(mom, value) {
        var dayOfMonth;

        if (!mom.isValid()) {
            return mom;
        }

        if (typeof value === 'string') {
            if (/^\d+$/.test(value)) {
                value = toInt(value);
            } else {
                value = mom.localeData().monthsParse(value);

                if (!isNumber(value)) {
                    return mom;
                }
            }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function getSetMonth(value) {
        if (value != null) {
            setMonth(this, value);
            hooks.updateOffset(this, true);
            return this;
        } else {
            return get(this, 'Month');
        }
    }

    function getDaysInMonth() {
        return daysInMonth(this.year(), this.month());
    }

    var defaultMonthsShortRegex = matchWord;
    function monthsShortRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsShortStrictRegex;
            } else {
                return this._monthsShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex;
            }
            return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;
        }
    }

    var defaultMonthsRegex = matchWord;
    function monthsRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsStrictRegex;
            } else {
                return this._monthsRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex;
            }
            return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;
        }
    }

    function computeMonthsParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom;
        for (i = 0; i < 12; i++) {
            mom = createUTC([2000, i]);
            shortPieces.push(this.monthsShort(mom, ''));
            longPieces.push(this.months(mom, ''));
            mixedPieces.push(this.months(mom, ''));
            mixedPieces.push(this.monthsShort(mom, ''));
        }

        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 12; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
        }
        for (i = 0; i < 24; i++) {
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
    }

    function createDate(y, m, d, h, M, s, ms) {
        var date = new Date(y, m, d, h, M, s, ms);

        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
            date.setFullYear(y);
        }
        return date;
    }

    function createUTCDate(y) {
        var date = new Date(Date.UTC.apply(null, arguments));

        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
            date.setUTCFullYear(y);
        }
        return date;
    }

    function firstWeekOffset(year, dow, doy) {
        var fwd = 7 + dow - doy,
            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

        return -fwdlw + fwd - 1;
    }

    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear,
            resDayOfYear;

        if (dayOfYear <= 0) {
            resYear = year - 1;
            resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
            resYear = year + 1;
            resDayOfYear = dayOfYear - daysInYear(year);
        } else {
            resYear = year;
            resDayOfYear = dayOfYear;
        }

        return {
            year: resYear,
            dayOfYear: resDayOfYear
        };
    }

    function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek,
            resYear;

        if (week < 1) {
            resYear = mom.year() - 1;
            resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
            resWeek = week - weeksInYear(mom.year(), dow, doy);
            resYear = mom.year() + 1;
        } else {
            resYear = mom.year();
            resWeek = week;
        }

        return {
            week: resWeek,
            year: resYear
        };
    }

    function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
    }

    addFormatToken('w', ['ww', 2], 'wo', 'week');
    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

    addUnitAlias('week', 'w');
    addUnitAlias('isoWeek', 'W');

    addUnitPriority('week', 5);
    addUnitPriority('isoWeek', 5);

    addRegexToken('w', match1to2);
    addRegexToken('ww', match1to2, match2);
    addRegexToken('W', match1to2);
    addRegexToken('WW', match1to2, match2);

    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
        week[token.substr(0, 1)] = toInt(input);
    });

    function localeWeek(mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
    }

    var defaultLocaleWeek = {
        dow: 0,
        doy: 6 };

    function localeFirstDayOfWeek() {
        return this._week.dow;
    }

    function localeFirstDayOfYear() {
        return this._week.doy;
    }

    function getSetWeek(input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    function getSetISOWeek(input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    addFormatToken('d', 0, 'do', 'day');

    addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
    });

    addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
    });

    addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
    });

    addFormatToken('e', 0, 0, 'weekday');
    addFormatToken('E', 0, 0, 'isoWeekday');

    addUnitAlias('day', 'd');
    addUnitAlias('weekday', 'e');
    addUnitAlias('isoWeekday', 'E');

    addUnitPriority('day', 11);
    addUnitPriority('weekday', 11);
    addUnitPriority('isoWeekday', 11);

    addRegexToken('d', match1to2);
    addRegexToken('e', match1to2);
    addRegexToken('E', match1to2);
    addRegexToken('dd', function (isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict);
    });
    addRegexToken('ddd', function (isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict);
    });
    addRegexToken('dddd', function (isStrict, locale) {
        return locale.weekdaysRegex(isStrict);
    });

    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict);

        if (weekday != null) {
            week.d = weekday;
        } else {
            getParsingFlags(config).invalidWeekday = input;
        }
    });

    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
    });

    function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
            return input;
        }

        if (!isNaN(input)) {
            return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);
        if (typeof input === 'number') {
            return input;
        }

        return null;
    }

    function parseIsoWeekday(input, locale) {
        if (typeof input === 'string') {
            return locale.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
    }

    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
    function localeWeekdays(m, format) {
        if (!m) {
            return isArray(this._weekdays) ? this._weekdays : this._weekdays['standalone'];
        }
        return isArray(this._weekdays) ? this._weekdays[m.day()] : this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];
    }

    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
    function localeWeekdaysShort(m) {
        return m ? this._weekdaysShort[m.day()] : this._weekdaysShort;
    }

    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
    function localeWeekdaysMin(m) {
        return m ? this._weekdaysMin[m.day()] : this._weekdaysMin;
    }

    function handleStrictParse$1(weekdayName, format, strict) {
        var i,
            ii,
            mom,
            llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];

            for (i = 0; i < 7; ++i) {
                mom = createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeWeekdaysParse(weekdayName, format, strict) {
        var i, mom, regex;

        if (this._weekdaysParseExact) {
            return handleStrictParse$1.call(this, weekdayName, format, strict);
        }

        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {

            mom = createUTC([2000, 1]).day(i);
            if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\.?') + '$', 'i');
                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\.?') + '$', 'i');
                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\.?') + '$', 'i');
            }
            if (!this._weekdaysParse[i]) {
                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }

            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
            }
        }
    }

    function getSetDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, 'd');
        } else {
            return day;
        }
    }

    function getSetLocaleDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
    }

    function getSetISODayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }

        if (input != null) {
            var weekday = parseIsoWeekday(input, this.localeData());
            return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
            return this.day() || 7;
        }
    }

    var defaultWeekdaysRegex = matchWord;
    function weekdaysRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysStrictRegex;
            } else {
                return this._weekdaysRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex;
            }
            return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;
        }
    }

    var defaultWeekdaysShortRegex = matchWord;
    function weekdaysShortRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysShortStrictRegex;
            } else {
                return this._weekdaysShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
            }
            return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
        }
    }

    var defaultWeekdaysMinRegex = matchWord;
    function weekdaysMinRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysMinStrictRegex;
            } else {
                return this._weekdaysMinRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
            }
            return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
        }
    }

    function computeWeekdaysParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var minPieces = [],
            shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom,
            minp,
            shortp,
            longp;
        for (i = 0; i < 7; i++) {
            mom = createUTC([2000, 1]).day(i);
            minp = this.weekdaysMin(mom, '');
            shortp = this.weekdaysShort(mom, '');
            longp = this.weekdays(mom, '');
            minPieces.push(minp);
            shortPieces.push(shortp);
            longPieces.push(longp);
            mixedPieces.push(minp);
            mixedPieces.push(shortp);
            mixedPieces.push(longp);
        }

        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 7; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;

        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
    }

    function hFormat() {
        return this.hours() % 12 || 12;
    }

    function kFormat() {
        return this.hours() || 24;
    }

    addFormatToken('H', ['HH', 2], 0, 'hour');
    addFormatToken('h', ['hh', 2], 0, hFormat);
    addFormatToken('k', ['kk', 2], 0, kFormat);

    addFormatToken('hmm', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
    });

    addFormatToken('hmmss', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
    });

    addFormatToken('Hmm', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2);
    });

    addFormatToken('Hmmss', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
    });

    function meridiem(token, lowercase) {
        addFormatToken(token, 0, 0, function () {
            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
        });
    }

    meridiem('a', true);
    meridiem('A', false);

    addUnitAlias('hour', 'h');

    addUnitPriority('hour', 13);

    function matchMeridiem(isStrict, locale) {
        return locale._meridiemParse;
    }

    addRegexToken('a', matchMeridiem);
    addRegexToken('A', matchMeridiem);
    addRegexToken('H', match1to2);
    addRegexToken('h', match1to2);
    addRegexToken('k', match1to2);
    addRegexToken('HH', match1to2, match2);
    addRegexToken('hh', match1to2, match2);
    addRegexToken('kk', match1to2, match2);

    addRegexToken('hmm', match3to4);
    addRegexToken('hmmss', match5to6);
    addRegexToken('Hmm', match3to4);
    addRegexToken('Hmmss', match5to6);

    addParseToken(['H', 'HH'], HOUR);
    addParseToken(['k', 'kk'], function (input, array, config) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
    });
    addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
    });
    addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('Hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
    });
    addParseToken('Hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
    });

    function localeIsPM(input) {
        return (input + '').toLowerCase().charAt(0) === 'p';
    }

    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
    function localeMeridiem(hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'pm' : 'PM';
        } else {
            return isLower ? 'am' : 'AM';
        }
    }

    var getSetHour = makeGetSet('Hours', true);

    var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,

        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,

        week: defaultLocaleWeek,

        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,

        meridiemParse: defaultLocaleMeridiemParse
    };

    var locales = {};
    var localeFamilies = {};
    var globalLocale;

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    function chooseLocale(names) {
        var i = 0,
            j,
            next,
            locale,
            split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                    break;
                }
                j--;
            }
            i++;
        }
        return null;
    }

    function loadLocale(name) {
        var oldLocale = null;

        if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {
            try {
                oldLocale = globalLocale._abbr;
                var aliasedRequire = require;
                aliasedRequire('./locale/' + name);
                getSetGlobalLocale(oldLocale);
            } catch (e) {}
        }
        return locales[name];
    }

    function getSetGlobalLocale(key, values) {
        var data;
        if (key) {
            if (isUndefined(values)) {
                data = getLocale(key);
            } else {
                data = defineLocale(key, values);
            }

            if (data) {
                globalLocale = data;
            }
        }

        return globalLocale._abbr;
    }

    function defineLocale(name, config) {
        if (config !== null) {
            var parentConfig = baseConfig;
            config.abbr = name;
            if (locales[name] != null) {
                deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
                parentConfig = locales[name]._config;
            } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                    parentConfig = locales[config.parentLocale]._config;
                } else {
                    if (!localeFamilies[config.parentLocale]) {
                        localeFamilies[config.parentLocale] = [];
                    }
                    localeFamilies[config.parentLocale].push({
                        name: name,
                        config: config
                    });
                    return null;
                }
            }
            locales[name] = new Locale(mergeConfigs(parentConfig, config));

            if (localeFamilies[name]) {
                localeFamilies[name].forEach(function (x) {
                    defineLocale(x.name, x.config);
                });
            }

            getSetGlobalLocale(name);

            return locales[name];
        } else {
            delete locales[name];
            return null;
        }
    }

    function updateLocale(name, config) {
        if (config != null) {
            var locale,
                tmpLocale,
                parentConfig = baseConfig;

            tmpLocale = loadLocale(name);
            if (tmpLocale != null) {
                parentConfig = tmpLocale._config;
            }
            config = mergeConfigs(parentConfig, config);
            locale = new Locale(config);
            locale.parentLocale = locales[name];
            locales[name] = locale;

            getSetGlobalLocale(name);
        } else {
            if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                    locales[name] = locales[name].parentLocale;
                } else if (locales[name] != null) {
                    delete locales[name];
                }
            }
        }
        return locales[name];
    }

    function getLocale(key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return globalLocale;
        }

        if (!isArray(key)) {
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    }

    function listLocales() {
        return keys(locales);
    }

    function checkOverflow(m) {
        var overflow;
        var a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
            overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;

            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
                overflow = DATE;
            }
            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
            }
            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
            }

            getParsingFlags(m).overflow = overflow;
        }

        return m;
    }

    function defaults(a, b, c) {
        if (a != null) {
            return a;
        }
        if (b != null) {
            return b;
        }
        return c;
    }

    function currentDateArray(config) {
        var nowValue = new Date(hooks.now());
        if (config._useUTC) {
            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
    }

    function configFromArray(config) {
        var i,
            date,
            input = [],
            currentDate,
            yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        if (config._dayOfYear != null) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
                getParsingFlags(config)._overflowDayOfYear = true;
            }

            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        for (; i < 7; i++) {
            config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];
        }

        if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);

        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }

        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== config._d.getDay()) {
            getParsingFlags(config).weekdayMismatch = true;
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
            if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
            }
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            var curWeek = weekOfYear(createLocal(), dow, doy);

            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

            week = defaults(w.w, curWeek.week);

            if (w.d != null) {
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                    weekdayOverflow = true;
                }
            } else if (w.e != null) {
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                    weekdayOverflow = true;
                }
            } else {
                weekday = dow;
            }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
            getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
            getParsingFlags(config)._overflowWeekday = true;
        } else {
            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
            config._a[YEAR] = temp.year;
            config._dayOfYear = temp.dayOfYear;
        }
    }

    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
    var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

    var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

    var isoDates = [['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/], ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/], ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/], ['GGGG-[W]WW', /\d{4}-W\d\d/, false], ['YYYY-DDD', /\d{4}-\d{3}/], ['YYYY-MM', /\d{4}-\d\d/, false], ['YYYYYYMMDD', /[+-]\d{10}/], ['YYYYMMDD', /\d{8}/], ['GGGG[W]WWE', /\d{4}W\d{3}/], ['GGGG[W]WW', /\d{4}W\d{2}/, false], ['YYYYDDD', /\d{7}/]];

    var isoTimes = [['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/], ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/], ['HH:mm:ss', /\d\d:\d\d:\d\d/], ['HH:mm', /\d\d:\d\d/], ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/], ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/], ['HHmmss', /\d\d\d\d\d\d/], ['HHmm', /\d\d\d\d/], ['HH', /\d\d/]];

    var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

    function configFromISO(config) {
        var i,
            l,
            string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime,
            dateFormat,
            timeFormat,
            tzFormat;

        if (match) {
            getParsingFlags(config).iso = true;

            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                    dateFormat = isoDates[i][0];
                    allowTime = isoDates[i][2] !== false;
                    break;
                }
            }
            if (dateFormat == null) {
                config._isValid = false;
                return;
            }
            if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                    if (isoTimes[i][1].exec(match[3])) {
                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
                        break;
                    }
                }
                if (timeFormat == null) {
                    config._isValid = false;
                    return;
                }
            }
            if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
            }
            if (match[4]) {
                if (tzRegex.exec(match[4])) {
                    tzFormat = 'Z';
                } else {
                    config._isValid = false;
                    return;
                }
            }
            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
            configFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;

    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
        var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];

        if (secondStr) {
            result.push(parseInt(secondStr, 10));
        }

        return result;
    }

    function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);
        if (year <= 49) {
            return 2000 + year;
        } else if (year <= 999) {
            return 1900 + year;
        }
        return year;
    }

    function preprocessRFC2822(s) {
        return s.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').trim();
    }

    function checkWeekday(weekdayStr, parsedInput, config) {
        if (weekdayStr) {
            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
            if (weekdayProvided !== weekdayActual) {
                getParsingFlags(config).weekdayMismatch = true;
                config._isValid = false;
                return false;
            }
        }
        return true;
    }

    var obsOffsets = {
        UT: 0,
        GMT: 0,
        EDT: -4 * 60,
        EST: -5 * 60,
        CDT: -5 * 60,
        CST: -6 * 60,
        MDT: -6 * 60,
        MST: -7 * 60,
        PDT: -7 * 60,
        PST: -8 * 60
    };

    function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
            return obsOffsets[obsOffset];
        } else if (militaryOffset) {
            return 0;
        } else {
            var hm = parseInt(numOffset, 10);
            var m = hm % 100,
                h = (hm - m) / 100;
            return h * 60 + m;
        }
    }

    function configFromRFC2822(config) {
        var match = rfc2822.exec(preprocessRFC2822(config._i));
        if (match) {
            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
            if (!checkWeekday(match[1], parsedArray, config)) {
                return;
            }

            config._a = parsedArray;
            config._tzm = calculateOffset(match[8], match[9], match[10]);

            config._d = createUTCDate.apply(null, config._a);
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

            getParsingFlags(config).rfc2822 = true;
        } else {
            config._isValid = false;
        }
    }

    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);

        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return;
        }

        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        configFromRFC2822(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        hooks.createFromInputFallback(config);
    }

    hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {
        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
    });

    hooks.ISO_8601 = function () {};

    hooks.RFC_2822 = function () {};

    function configFromStringAndFormat(config) {
        if (config._f === hooks.ISO_8601) {
            configFromISO(config);
            return;
        }
        if (config._f === hooks.RFC_2822) {
            configFromRFC2822(config);
            return;
        }
        config._a = [];
        getParsingFlags(config).empty = true;

        var string = '' + config._i,
            i,
            parsedInput,
            tokens,
            token,
            skipped,
            stringLength = string.length,
            totalParsedInputLength = 0;

        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];

            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
                totalParsedInputLength += parsedInput.length;
            }

            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    getParsingFlags(config).empty = false;
                } else {
                    getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            } else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
            }
        }

        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
        if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string);
        }

        if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {
            getParsingFlags(config).bigHour = undefined;
        }

        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem;

        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

        configFromArray(config);
        checkOverflow(config);
    }

    function meridiemFixWrap(locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            return hour;
        }
    }

    function configFromStringAndArray(config) {
        var tempConfig, bestMoment, scoreToBeat, i, currentScore;

        if (config._f.length === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);

            if (!isValid(tempConfig)) {
                continue;
            }

            currentScore += getParsingFlags(tempConfig).charsLeftOver;

            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

            getParsingFlags(tempConfig).score = currentScore;

            if (scoreToBeat == null || currentScore < scoreToBeat) {
                scoreToBeat = currentScore;
                bestMoment = tempConfig;
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    function configFromObject(config) {
        if (config._d) {
            return;
        }

        var i = normalizeObjectUnits(config._i);
        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
            return obj && parseInt(obj, 10);
        });

        configFromArray(config);
    }

    function createFromConfig(config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    function prepareConfig(config) {
        var input = config._i,
            format = config._f;

        config._locale = config._locale || getLocale(config._l);

        if (input === null || format === undefined && input === '') {
            return createInvalid({ nullInput: true });
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
            return new Moment(checkOverflow(input));
        } else if (isDate(input)) {
            config._d = input;
        } else if (isArray(format)) {
            configFromStringAndArray(config);
        } else if (format) {
            configFromStringAndFormat(config);
        } else {
            configFromInput(config);
        }

        if (!isValid(config)) {
            config._d = null;
        }

        return config;
    }

    function configFromInput(config) {
        var input = config._i;
        if (isUndefined(input)) {
            config._d = new Date(hooks.now());
        } else if (isDate(input)) {
            config._d = new Date(input.valueOf());
        } else if (typeof input === 'string') {
            configFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            configFromArray(config);
        } else if (isObject(input)) {
            configFromObject(config);
        } else if (isNumber(input)) {
            config._d = new Date(input);
        } else {
            hooks.createFromInputFallback(config);
        }
    }

    function createLocalOrUTC(input, format, locale, strict, isUTC) {
        var c = {};

        if (locale === true || locale === false) {
            strict = locale;
            locale = undefined;
        }

        if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {
            input = undefined;
        }

        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;

        return createFromConfig(c);
    }

    function createLocal(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
    }

    var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {
        var other = createLocal.apply(null, arguments);
        if (this.isValid() && other.isValid()) {
            return other < this ? this : other;
        } else {
            return createInvalid();
        }
    });

    var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {
        var other = createLocal.apply(null, arguments);
        if (this.isValid() && other.isValid()) {
            return other > this ? this : other;
        } else {
            return createInvalid();
        }
    });

    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    function min() {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    }

    function max() {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    }

    var now = function now() {
        return Date.now ? Date.now() : +new Date();
    };

    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];

    function isDurationValid(m) {
        for (var key in m) {
            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
                return false;
            }
        }

        var unitHasDecimal = false;
        for (var i = 0; i < ordering.length; ++i) {
            if (m[ordering[i]]) {
                if (unitHasDecimal) {
                    return false;
                }
                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                    unitHasDecimal = true;
                }
            }
        }

        return true;
    }

    function isValid$1() {
        return this._isValid;
    }

    function createInvalid$1() {
        return createDuration(NaN);
    }

    function Duration(duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        this._isValid = isDurationValid(normalizedInput);

        this._milliseconds = +milliseconds + seconds * 1e3 + minutes * 6e4 + hours * 1000 * 60 * 60;
        this._days = +days + weeks * 7;

        this._months = +months + quarters * 3 + years * 12;

        this._data = {};

        this._locale = getLocale();

        this._bubble();
    }

    function isDuration(obj) {
        return obj instanceof Duration;
    }

    function absRound(number) {
        if (number < 0) {
            return Math.round(-1 * number) * -1;
        } else {
            return Math.round(number);
        }
    }

    function offset(token, separator) {
        addFormatToken(token, 0, 0, function () {
            var offset = this.utcOffset();
            var sign = '+';
            if (offset < 0) {
                offset = -offset;
                sign = '-';
            }
            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);
        });
    }

    offset('Z', ':');
    offset('ZZ', '');

    addRegexToken('Z', matchShortOffset);
    addRegexToken('ZZ', matchShortOffset);
    addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
    });

    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(matcher, string) {
        var matches = (string || '').match(matcher);

        if (matches === null) {
            return null;
        }

        var chunk = matches[matches.length - 1] || [];
        var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        var minutes = +(parts[1] * 60) + toInt(parts[2]);

        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;
    }

    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();

            res._d.setTime(res._d.valueOf() + diff);
            hooks.updateOffset(res, false);
            return res;
        } else {
            return createLocal(input).local();
        }
    }

    function getDateOffset(m) {
        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
    }

    hooks.updateOffset = function () {};

    function getSetOffset(input, keepLocalTime, keepMinutes) {
        var offset = this._offset || 0,
            localAdjust;
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        if (input != null) {
            if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input);
                if (input === null) {
                    return this;
                }
            } else if (Math.abs(input) < 16 && !keepMinutes) {
                input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, 'm');
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                }
            }
            return this;
        } else {
            return this._isUTC ? offset : getDateOffset(this);
        }
    }

    function getSetZone(input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== 'string') {
                input = -input;
            }

            this.utcOffset(input, keepLocalTime);

            return this;
        } else {
            return -this.utcOffset();
        }
    }

    function setOffsetToUTC(keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
    }

    function setOffsetToLocal(keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;

            if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
            }
        }
        return this;
    }

    function setOffsetToParsedOffset() {
        if (this._tzm != null) {
            this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === 'string') {
            var tZone = offsetFromString(matchOffset, this._i);
            if (tZone != null) {
                this.utcOffset(tZone);
            } else {
                this.utcOffset(0, true);
            }
        }
        return this;
    }

    function hasAlignedHourOffset(input) {
        if (!this.isValid()) {
            return false;
        }
        input = input ? createLocal(input).utcOffset() : 0;

        return (this.utcOffset() - input) % 60 === 0;
    }

    function isDaylightSavingTime() {
        return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
    }

    function isDaylightSavingTimeShifted() {
        if (!isUndefined(this._isDSTShifted)) {
            return this._isDSTShifted;
        }

        var c = {};

        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
            this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;
        } else {
            this._isDSTShifted = false;
        }

        return this._isDSTShifted;
    }

    function isLocal() {
        return this.isValid() ? !this._isUTC : false;
    }

    function isUtcOffset() {
        return this.isValid() ? this._isUTC : false;
    }

    function isUtc() {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
    }

    var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;

    var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

    function createDuration(input, key) {
        var duration = input,
            match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
            duration = {
                ms: input._milliseconds,
                d: input._days,
                M: input._months
            };
        } else if (isNumber(input)) {
            duration = {};
            if (key) {
                duration[key] = input;
            } else {
                duration.milliseconds = input;
            }
        } else if (!!(match = aspNetRegex.exec(input))) {
            sign = match[1] === '-' ? -1 : 1;
            duration = {
                y: 0,
                d: toInt(match[DATE]) * sign,
                h: toInt(match[HOUR]) * sign,
                m: toInt(match[MINUTE]) * sign,
                s: toInt(match[SECOND]) * sign,
                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign };
        } else if (!!(match = isoRegex.exec(input))) {
            sign = match[1] === '-' ? -1 : match[1] === '+' ? 1 : 1;
            duration = {
                y: parseIso(match[2], sign),
                M: parseIso(match[3], sign),
                w: parseIso(match[4], sign),
                d: parseIso(match[5], sign),
                h: parseIso(match[6], sign),
                m: parseIso(match[7], sign),
                s: parseIso(match[8], sign)
            };
        } else if (duration == null) {
            duration = {};
        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        return ret;
    }

    createDuration.fn = Duration.prototype;
    createDuration.invalid = createInvalid$1;

    function parseIso(inp, sign) {
        var res = inp && parseFloat(inp.replace(',', '.'));

        return (isNaN(res) ? 0 : res) * sign;
    }

    function positiveMomentsDifference(base, other) {
        var res = { milliseconds: 0, months: 0 };

        res.months = other.month() - base.month() + (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +base.clone().add(res.months, 'M');

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
            return { milliseconds: 0, months: 0 };
        }

        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;

            if (period !== null && !isNaN(+period)) {
                deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
                tmp = val;val = period;period = tmp;
            }

            val = typeof val === 'string' ? +val : val;
            dur = createDuration(val, period);
            addSubtract(this, dur, direction);
            return this;
        };
    }

    function addSubtract(mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);

        if (!mom.isValid()) {
            return;
        }

        updateOffset = updateOffset == null ? true : updateOffset;

        if (months) {
            setMonth(mom, get(mom, 'Month') + months * isAdding);
        }
        if (days) {
            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
        }
        if (milliseconds) {
            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
        }
        if (updateOffset) {
            hooks.updateOffset(mom, days || months);
        }
    }

    var add = createAdder(1, 'add');
    var subtract = createAdder(-1, 'subtract');

    function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, 'days', true);
        return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';
    }

    function calendar$1(time, formats) {
        var now = time || createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            format = hooks.calendarFormat(this, sod) || 'sameElse';

        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);

        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
    }

    function clone() {
        return new Moment(this);
    }

    function isAfter(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
        if (units === 'millisecond') {
            return this.valueOf() > localInput.valueOf();
        } else {
            return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
    }

    function isBefore(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
        if (units === 'millisecond') {
            return this.valueOf() < localInput.valueOf();
        } else {
            return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
    }

    function isBetween(from, to, units, inclusivity) {
        inclusivity = inclusivity || '()';
        return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) && (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));
    }

    function isSame(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input),
            inputMs;
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units || 'millisecond');
        if (units === 'millisecond') {
            return this.valueOf() === localInput.valueOf();
        } else {
            inputMs = localInput.valueOf();
            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
        }
    }

    function isSameOrAfter(input, units) {
        return this.isSame(input, units) || this.isAfter(input, units);
    }

    function isSameOrBefore(input, units) {
        return this.isSame(input, units) || this.isBefore(input, units);
    }

    function diff(input, units, asFloat) {
        var that, zoneDelta, delta, output;

        if (!this.isValid()) {
            return NaN;
        }

        that = cloneWithOffset(input, this);

        if (!that.isValid()) {
            return NaN;
        }

        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

        units = normalizeUnits(units);

        switch (units) {
            case 'year':
                output = monthDiff(this, that) / 12;break;
            case 'month':
                output = monthDiff(this, that);break;
            case 'quarter':
                output = monthDiff(this, that) / 3;break;
            case 'second':
                output = (this - that) / 1e3;break;
            case 'minute':
                output = (this - that) / 6e4;break;
            case 'hour':
                output = (this - that) / 36e5;break;
            case 'day':
                output = (this - that - zoneDelta) / 864e5;break;
            case 'week':
                output = (this - that - zoneDelta) / 6048e5;break;
            default:
                output = this - that;
        }

        return asFloat ? output : absFloor(output);
    }

    function monthDiff(a, b) {
        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2,
            adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');

            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');

            adjust = (b - anchor) / (anchor2 - anchor);
        }

        return -(wholeMonthDiff + adjust) || 0;
    }

    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

    function toString() {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    }

    function toISOString() {
        if (!this.isValid()) {
            return null;
        }
        var m = this.clone().utc();
        if (m.year() < 0 || m.year() > 9999) {
            return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
        }
        if (isFunction(Date.prototype.toISOString)) {
            return this.toDate().toISOString();
        }
        return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
    }

    function inspect() {
        if (!this.isValid()) {
            return 'moment.invalid(/* ' + this._i + ' */)';
        }
        var func = 'moment';
        var zone = '';
        if (!this.isLocal()) {
            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
            zone = 'Z';
        }
        var prefix = '[' + func + '("]';
        var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';
        var datetime = '-MM-DD[T]HH:mm:ss.SSS';
        var suffix = zone + '[")]';

        return this.format(prefix + year + datetime + suffix);
    }

    function format(inputString) {
        if (!inputString) {
            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
    }

    function from(time, withoutSuffix) {
        if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
            return createDuration({ to: this, from: time }).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function fromNow(withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
    }

    function to(time, withoutSuffix) {
        if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
            return createDuration({ from: this, to: time }).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function toNow(withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
    }

    function locale(key) {
        var newLocaleData;

        if (key === undefined) {
            return this._locale._abbr;
        } else {
            newLocaleData = getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData;
            }
            return this;
        }
    }

    var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {
        if (key === undefined) {
            return this.localeData();
        } else {
            return this.locale(key);
        }
    });

    function localeData() {
        return this._locale;
    }

    function startOf(units) {
        units = normalizeUnits(units);

        switch (units) {
            case 'year':
                this.month(0);

            case 'quarter':
            case 'month':
                this.date(1);

            case 'week':
            case 'isoWeek':
            case 'day':
            case 'date':
                this.hours(0);

            case 'hour':
                this.minutes(0);

            case 'minute':
                this.seconds(0);

            case 'second':
                this.milliseconds(0);
        }

        if (units === 'week') {
            this.weekday(0);
        }
        if (units === 'isoWeek') {
            this.isoWeekday(1);
        }

        if (units === 'quarter') {
            this.month(Math.floor(this.month() / 3) * 3);
        }

        return this;
    }

    function endOf(units) {
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond') {
            return this;
        }

        if (units === 'date') {
            units = 'day';
        }

        return this.startOf(units).add(1, units === 'isoWeek' ? 'week' : units).subtract(1, 'ms');
    }

    function valueOf() {
        return this._d.valueOf() - (this._offset || 0) * 60000;
    }

    function unix() {
        return Math.floor(this.valueOf() / 1000);
    }

    function toDate() {
        return new Date(this.valueOf());
    }

    function toArray() {
        var m = this;
        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
    }

    function toObject() {
        var m = this;
        return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds()
        };
    }

    function toJSON() {
        return this.isValid() ? this.toISOString() : null;
    }

    function isValid$2() {
        return isValid(this);
    }

    function parsingFlags() {
        return extend({}, getParsingFlags(this));
    }

    function invalidAt() {
        return getParsingFlags(this).overflow;
    }

    function creationData() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict
        };
    }

    addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
    });

    addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
    });

    function addWeekYearFormatToken(token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
    }

    addWeekYearFormatToken('gggg', 'weekYear');
    addWeekYearFormatToken('ggggg', 'weekYear');
    addWeekYearFormatToken('GGGG', 'isoWeekYear');
    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

    addUnitAlias('weekYear', 'gg');
    addUnitAlias('isoWeekYear', 'GG');

    addUnitPriority('weekYear', 1);
    addUnitPriority('isoWeekYear', 1);

    addRegexToken('G', matchSigned);
    addRegexToken('g', matchSigned);
    addRegexToken('GG', match1to2, match2);
    addRegexToken('gg', match1to2, match2);
    addRegexToken('GGGG', match1to4, match4);
    addRegexToken('gggg', match1to4, match4);
    addRegexToken('GGGGG', match1to6, match6);
    addRegexToken('ggggg', match1to6, match6);

    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
        week[token.substr(0, 2)] = toInt(input);
    });

    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = hooks.parseTwoDigitYear(input);
    });

    function getSetWeekYear(input) {
        return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);
    }

    function getSetISOWeekYear(input) {
        return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);
    }

    function getISOWeeksInYear() {
        return weeksInYear(this.year(), 1, 4);
    }

    function getWeeksInYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    }

    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
            return weekOfYear(this, dow, doy).year;
        } else {
            weeksTarget = weeksInYear(input, dow, doy);
            if (week > weeksTarget) {
                week = weeksTarget;
            }
            return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
    }

    function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
    }

    addFormatToken('Q', 0, 'Qo', 'quarter');

    addUnitAlias('quarter', 'Q');

    addUnitPriority('quarter', 7);

    addRegexToken('Q', match1);
    addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
    });

    function getSetQuarter(input) {
        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
    }

    addFormatToken('D', ['DD', 2], 'Do', 'date');

    addUnitAlias('date', 'D');

    addUnitPriority('date', 9);

    addRegexToken('D', match1to2);
    addRegexToken('DD', match1to2, match2);
    addRegexToken('Do', function (isStrict, locale) {
        return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;
    });

    addParseToken(['D', 'DD'], DATE);
    addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0], 10);
    });

    var getSetDayOfMonth = makeGetSet('Date', true);

    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

    addUnitAlias('dayOfYear', 'DDD');

    addUnitPriority('dayOfYear', 4);

    addRegexToken('DDD', match1to3);
    addRegexToken('DDDD', match3);
    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
    });

    function getSetDayOfYear(input) {
        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
    }

    addFormatToken('m', ['mm', 2], 0, 'minute');

    addUnitAlias('minute', 'm');

    addUnitPriority('minute', 14);

    addRegexToken('m', match1to2);
    addRegexToken('mm', match1to2, match2);
    addParseToken(['m', 'mm'], MINUTE);

    var getSetMinute = makeGetSet('Minutes', false);

    addFormatToken('s', ['ss', 2], 0, 'second');

    addUnitAlias('second', 's');

    addUnitPriority('second', 15);

    addRegexToken('s', match1to2);
    addRegexToken('ss', match1to2, match2);
    addParseToken(['s', 'ss'], SECOND);

    var getSetSecond = makeGetSet('Seconds', false);

    addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
    });

    addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
    });

    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
    addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
    });
    addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
    });
    addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
    });
    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
    });
    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
    });
    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
    });

    addUnitAlias('millisecond', 'ms');

    addUnitPriority('millisecond', 16);

    addRegexToken('S', match1to3, match1);
    addRegexToken('SS', match1to3, match2);
    addRegexToken('SSS', match1to3, match3);

    var token;
    for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
    }

    function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
    }

    for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
    }


    var getSetMillisecond = makeGetSet('Milliseconds', false);

    addFormatToken('z', 0, 0, 'zoneAbbr');
    addFormatToken('zz', 0, 0, 'zoneName');

    function getZoneAbbr() {
        return this._isUTC ? 'UTC' : '';
    }

    function getZoneName() {
        return this._isUTC ? 'Coordinated Universal Time' : '';
    }

    var proto = Moment.prototype;

    proto.add = add;
    proto.calendar = calendar$1;
    proto.clone = clone;
    proto.diff = diff;
    proto.endOf = endOf;
    proto.format = format;
    proto.from = from;
    proto.fromNow = fromNow;
    proto.to = to;
    proto.toNow = toNow;
    proto.get = stringGet;
    proto.invalidAt = invalidAt;
    proto.isAfter = isAfter;
    proto.isBefore = isBefore;
    proto.isBetween = isBetween;
    proto.isSame = isSame;
    proto.isSameOrAfter = isSameOrAfter;
    proto.isSameOrBefore = isSameOrBefore;
    proto.isValid = isValid$2;
    proto.lang = lang;
    proto.locale = locale;
    proto.localeData = localeData;
    proto.max = prototypeMax;
    proto.min = prototypeMin;
    proto.parsingFlags = parsingFlags;
    proto.set = stringSet;
    proto.startOf = startOf;
    proto.subtract = subtract;
    proto.toArray = toArray;
    proto.toObject = toObject;
    proto.toDate = toDate;
    proto.toISOString = toISOString;
    proto.inspect = inspect;
    proto.toJSON = toJSON;
    proto.toString = toString;
    proto.unix = unix;
    proto.valueOf = valueOf;
    proto.creationData = creationData;

    proto.year = getSetYear;
    proto.isLeapYear = getIsLeapYear;

    proto.weekYear = getSetWeekYear;
    proto.isoWeekYear = getSetISOWeekYear;

    proto.quarter = proto.quarters = getSetQuarter;

    proto.month = getSetMonth;
    proto.daysInMonth = getDaysInMonth;

    proto.week = proto.weeks = getSetWeek;
    proto.isoWeek = proto.isoWeeks = getSetISOWeek;
    proto.weeksInYear = getWeeksInYear;
    proto.isoWeeksInYear = getISOWeeksInYear;

    proto.date = getSetDayOfMonth;
    proto.day = proto.days = getSetDayOfWeek;
    proto.weekday = getSetLocaleDayOfWeek;
    proto.isoWeekday = getSetISODayOfWeek;
    proto.dayOfYear = getSetDayOfYear;

    proto.hour = proto.hours = getSetHour;

    proto.minute = proto.minutes = getSetMinute;

    proto.second = proto.seconds = getSetSecond;

    proto.millisecond = proto.milliseconds = getSetMillisecond;

    proto.utcOffset = getSetOffset;
    proto.utc = setOffsetToUTC;
    proto.local = setOffsetToLocal;
    proto.parseZone = setOffsetToParsedOffset;
    proto.hasAlignedHourOffset = hasAlignedHourOffset;
    proto.isDST = isDaylightSavingTime;
    proto.isLocal = isLocal;
    proto.isUtcOffset = isUtcOffset;
    proto.isUtc = isUtc;
    proto.isUTC = isUtc;

    proto.zoneAbbr = getZoneAbbr;
    proto.zoneName = getZoneName;

    proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
    proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);
    proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

    function createUnix(input) {
        return createLocal(input * 1000);
    }

    function createInZone() {
        return createLocal.apply(null, arguments).parseZone();
    }

    function preParsePostFormat(string) {
        return string;
    }

    var proto$1 = Locale.prototype;

    proto$1.calendar = calendar;
    proto$1.longDateFormat = longDateFormat;
    proto$1.invalidDate = invalidDate;
    proto$1.ordinal = ordinal;
    proto$1.preparse = preParsePostFormat;
    proto$1.postformat = preParsePostFormat;
    proto$1.relativeTime = relativeTime;
    proto$1.pastFuture = pastFuture;
    proto$1.set = set;

    proto$1.months = localeMonths;
    proto$1.monthsShort = localeMonthsShort;
    proto$1.monthsParse = localeMonthsParse;
    proto$1.monthsRegex = monthsRegex;
    proto$1.monthsShortRegex = monthsShortRegex;

    proto$1.week = localeWeek;
    proto$1.firstDayOfYear = localeFirstDayOfYear;
    proto$1.firstDayOfWeek = localeFirstDayOfWeek;

    proto$1.weekdays = localeWeekdays;
    proto$1.weekdaysMin = localeWeekdaysMin;
    proto$1.weekdaysShort = localeWeekdaysShort;
    proto$1.weekdaysParse = localeWeekdaysParse;

    proto$1.weekdaysRegex = weekdaysRegex;
    proto$1.weekdaysShortRegex = weekdaysShortRegex;
    proto$1.weekdaysMinRegex = weekdaysMinRegex;

    proto$1.isPM = localeIsPM;
    proto$1.meridiem = localeMeridiem;

    function get$1(format, index, field, setter) {
        var locale = getLocale();
        var utc = createUTC().set(setter, index);
        return locale[field](utc, format);
    }

    function listMonthsImpl(format, index, field) {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';

        if (index != null) {
            return get$1(format, index, field, 'month');
        }

        var i;
        var out = [];
        for (i = 0; i < 12; i++) {
            out[i] = get$1(format, i, field, 'month');
        }
        return out;
    }

    function listWeekdaysImpl(localeSorted, format, index, field) {
        if (typeof localeSorted === 'boolean') {
            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        } else {
            format = localeSorted;
            index = format;
            localeSorted = false;

            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        }

        var locale = getLocale(),
            shift = localeSorted ? locale._week.dow : 0;

        if (index != null) {
            return get$1(format, (index + shift) % 7, field, 'day');
        }

        var i;
        var out = [];
        for (i = 0; i < 7; i++) {
            out[i] = get$1(format, (i + shift) % 7, field, 'day');
        }
        return out;
    }

    function listMonths(format, index) {
        return listMonthsImpl(format, index, 'months');
    }

    function listMonthsShort(format, index) {
        return listMonthsImpl(format, index, 'monthsShort');
    }

    function listWeekdays(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
    }

    function listWeekdaysShort(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
    }

    function listWeekdaysMin(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
    }

    getSetGlobalLocale('en', {
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function ordinal(number) {
            var b = number % 10,
                output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
            return number + output;
        }
    });

    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);

    var mathAbs = Math.abs;

    function abs() {
        var data = this._data;

        this._milliseconds = mathAbs(this._milliseconds);
        this._days = mathAbs(this._days);
        this._months = mathAbs(this._months);

        data.milliseconds = mathAbs(data.milliseconds);
        data.seconds = mathAbs(data.seconds);
        data.minutes = mathAbs(data.minutes);
        data.hours = mathAbs(data.hours);
        data.months = mathAbs(data.months);
        data.years = mathAbs(data.years);

        return this;
    }

    function addSubtract$1(duration, input, value, direction) {
        var other = createDuration(input, value);

        duration._milliseconds += direction * other._milliseconds;
        duration._days += direction * other._days;
        duration._months += direction * other._months;

        return duration._bubble();
    }

    function add$1(input, value) {
        return addSubtract$1(this, input, value, 1);
    }

    function subtract$1(input, value) {
        return addSubtract$1(this, input, value, -1);
    }

    function absCeil(number) {
        if (number < 0) {
            return Math.floor(number);
        } else {
            return Math.ceil(number);
        }
    }

    function bubble() {
        var milliseconds = this._milliseconds;
        var days = this._days;
        var months = this._months;
        var data = this._data;
        var seconds, minutes, hours, years, monthsFromDays;

        if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {
            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
            days = 0;
            months = 0;
        }

        data.milliseconds = milliseconds % 1000;

        seconds = absFloor(milliseconds / 1000);
        data.seconds = seconds % 60;

        minutes = absFloor(seconds / 60);
        data.minutes = minutes % 60;

        hours = absFloor(minutes / 60);
        data.hours = hours % 24;

        days += absFloor(hours / 24);

        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays));

        years = absFloor(months / 12);
        months %= 12;

        data.days = days;
        data.months = months;
        data.years = years;

        return this;
    }

    function daysToMonths(days) {
        return days * 4800 / 146097;
    }

    function monthsToDays(months) {
        return months * 146097 / 4800;
    }

    function as(units) {
        if (!this.isValid()) {
            return NaN;
        }
        var days;
        var months;
        var milliseconds = this._milliseconds;

        units = normalizeUnits(units);

        if (units === 'month' || units === 'year') {
            days = this._days + milliseconds / 864e5;
            months = this._months + daysToMonths(days);
            return units === 'month' ? months : months / 12;
        } else {
            days = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
                case 'week':
                    return days / 7 + milliseconds / 6048e5;
                case 'day':
                    return days + milliseconds / 864e5;
                case 'hour':
                    return days * 24 + milliseconds / 36e5;
                case 'minute':
                    return days * 1440 + milliseconds / 6e4;
                case 'second':
                    return days * 86400 + milliseconds / 1000;

                case 'millisecond':
                    return Math.floor(days * 864e5) + milliseconds;
                default:
                    throw new Error('Unknown unit ' + units);
            }
        }
    }

    function valueOf$1() {
        if (!this.isValid()) {
            return NaN;
        }
        return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;
    }

    function makeAs(alias) {
        return function () {
            return this.as(alias);
        };
    }

    var asMilliseconds = makeAs('ms');
    var asSeconds = makeAs('s');
    var asMinutes = makeAs('m');
    var asHours = makeAs('h');
    var asDays = makeAs('d');
    var asWeeks = makeAs('w');
    var asMonths = makeAs('M');
    var asYears = makeAs('y');

    function clone$1() {
        return createDuration(this);
    }

    function get$2(units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + 's']() : NaN;
    }

    function makeGetter(name) {
        return function () {
            return this.isValid() ? this._data[name] : NaN;
        };
    }

    var milliseconds = makeGetter('milliseconds');
    var seconds = makeGetter('seconds');
    var minutes = makeGetter('minutes');
    var hours = makeGetter('hours');
    var days = makeGetter('days');
    var months = makeGetter('months');
    var years = makeGetter('years');

    function weeks() {
        return absFloor(this.days() / 7);
    }

    var round = Math.round;
    var thresholds = {
        ss: 44,
        s: 45,
        m: 45,
        h: 22,
        d: 26,
        M: 11 };

    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function relativeTime$1(posNegDuration, withoutSuffix, locale) {
        var duration = createDuration(posNegDuration).abs();
        var seconds = round(duration.as('s'));
        var minutes = round(duration.as('m'));
        var hours = round(duration.as('h'));
        var days = round(duration.as('d'));
        var months = round(duration.as('M'));
        var years = round(duration.as('y'));

        var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];

        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
    }

    function getSetRelativeTimeRounding(roundingFunction) {
        if (roundingFunction === undefined) {
            return round;
        }
        if (typeof roundingFunction === 'function') {
            round = roundingFunction;
            return true;
        }
        return false;
    }

    function getSetRelativeTimeThreshold(threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        if (threshold === 's') {
            thresholds.ss = limit - 1;
        }
        return true;
    }

    function humanize(withSuffix) {
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var locale = this.localeData();
        var output = relativeTime$1(this, !withSuffix, locale);

        if (withSuffix) {
            output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
    }

    var abs$1 = Math.abs;

    function sign(x) {
        return (x > 0) - (x < 0) || +x;
    }

    function toISOString$1() {
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var seconds = abs$1(this._milliseconds) / 1000;
        var days = abs$1(this._days);
        var months = abs$1(this._months);
        var minutes, hours, years;

        minutes = absFloor(seconds / 60);
        hours = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60;

        years = absFloor(months / 12);
        months %= 12;

        var Y = years;
        var M = months;
        var D = days;
        var h = hours;
        var m = minutes;
        var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';
        var total = this.asSeconds();

        if (!total) {
            return 'P0D';
        }

        var totalSign = total < 0 ? '-' : '';
        var ymSign = sign(this._months) !== sign(total) ? '-' : '';
        var daysSign = sign(this._days) !== sign(total) ? '-' : '';
        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

        return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');
    }

    var proto$2 = Duration.prototype;

    proto$2.isValid = isValid$1;
    proto$2.abs = abs;
    proto$2.add = add$1;
    proto$2.subtract = subtract$1;
    proto$2.as = as;
    proto$2.asMilliseconds = asMilliseconds;
    proto$2.asSeconds = asSeconds;
    proto$2.asMinutes = asMinutes;
    proto$2.asHours = asHours;
    proto$2.asDays = asDays;
    proto$2.asWeeks = asWeeks;
    proto$2.asMonths = asMonths;
    proto$2.asYears = asYears;
    proto$2.valueOf = valueOf$1;
    proto$2._bubble = bubble;
    proto$2.clone = clone$1;
    proto$2.get = get$2;
    proto$2.milliseconds = milliseconds;
    proto$2.seconds = seconds;
    proto$2.minutes = minutes;
    proto$2.hours = hours;
    proto$2.days = days;
    proto$2.weeks = weeks;
    proto$2.months = months;
    proto$2.years = years;
    proto$2.humanize = humanize;
    proto$2.toISOString = toISOString$1;
    proto$2.toString = toISOString$1;
    proto$2.toJSON = toISOString$1;
    proto$2.locale = locale;
    proto$2.localeData = localeData;

    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
    proto$2.lang = lang;

    addFormatToken('X', 0, 0, 'unix');
    addFormatToken('x', 0, 0, 'valueOf');

    addRegexToken('x', matchSigned);
    addRegexToken('X', matchTimestamp);
    addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input, 10) * 1000);
    });
    addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
    });

    hooks.version = '2.19.3';

    setHookCallback(createLocal);

    hooks.fn = proto;
    hooks.min = min;
    hooks.max = max;
    hooks.now = now;
    hooks.utc = createUTC;
    hooks.unix = createUnix;
    hooks.months = listMonths;
    hooks.isDate = isDate;
    hooks.locale = getSetGlobalLocale;
    hooks.invalid = createInvalid;
    hooks.duration = createDuration;
    hooks.isMoment = isMoment;
    hooks.weekdays = listWeekdays;
    hooks.parseZone = createInZone;
    hooks.localeData = getLocale;
    hooks.isDuration = isDuration;
    hooks.monthsShort = listMonthsShort;
    hooks.weekdaysMin = listWeekdaysMin;
    hooks.defineLocale = defineLocale;
    hooks.updateLocale = updateLocale;
    hooks.locales = listLocales;
    hooks.weekdaysShort = listWeekdaysShort;
    hooks.normalizeUnits = normalizeUnits;
    hooks.relativeTimeRounding = getSetRelativeTimeRounding;
    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
    hooks.calendarFormat = getCalendarFormat;
    hooks.prototype = proto;

    return hooks;
});
}, 626, null, "moment/moment.js");
__d(/* YuanXC/src/utils/Update.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.autoUpdate = autoUpdate;
exports.checkUpdate = checkUpdate;

var _reactNative = require(12            ); // 12 = react-native

var RNUpdate = _reactNative.NativeModules.RNUpdate;

function autoUpdate(updateUrl, uploadUrl) {
  RNUpdate && RNUpdate.autoUpdate(updateUrl, uploadUrl);
}

function checkUpdate(name) {
  RNUpdate && RNUpdate.checkUpdate(name);
}
}, 627, null, "YuanXC/src/utils/Update.js");
__d(/* YuanXC/src/utils/Float.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = format = function format(number) {
  if (number && !isNaN(number)) {
    return parseFloat(number).toFixed(2);
  } else {
    return '0.00';
  }
};
}, 628, null, "YuanXC/src/utils/Float.js");
__d(/* YuanXC/src/pages/UserInfo.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/UserInfo.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  padding-top: ', ';\n  padding-horizontal:15;\n  width:', ';\n  height:', ';\n'], ['\n  padding-top: ', ';\n  padding-horizontal:15;\n  width:', ';\n  height:', ';\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  flex-direction: row;\n  justify-content:space-between;\n'], ['\n  flex-direction: row;\n  justify-content:space-between;\n']),
    _templateObject3 = babelHelpers.taggedTemplateLiteral(['\n'], ['\n']),
    _templateObject4 = babelHelpers.taggedTemplateLiteral(['\n  padding-horizontal:15;\n  padding-vertical:15;\n  margin-bottom:5;\n'], ['\n  padding-horizontal:15;\n  padding-vertical:15;\n  margin-bottom:5;\n']),
    _templateObject5 = babelHelpers.taggedTemplateLiteral(['\n  border-radius:21px;\n  width:125px;\n  height:45px;\n  align-items:center;\n  justify-content:center;\n  padding-bottom:2;\n'], ['\n  border-radius:21px;\n  width:125px;\n  height:45px;\n  align-items:center;\n  justify-content:center;\n  padding-bottom:2;\n']),
    _templateObject6 = babelHelpers.taggedTemplateLiteral(['\n  background-color:#4285F4;\n'], ['\n  background-color:#4285F4;\n']),
    _templateObject7 = babelHelpers.taggedTemplateLiteral(['\n  border-width:1;\n  border-color:#4285F4;\n  margin-left:15;\n'], ['\n  border-width:1;\n  border-color:#4285F4;\n  margin-left:15;\n']),
    _templateObject8 = babelHelpers.taggedTemplateLiteral(['\n  border-right-width:', ';\n  border-color:#eeeeee;\n  border-bottom-width:', ';\n  width:', ';\n  padding-vertical:30;\n  background-color:#ffffff;\n  padding-left:', ';\n'], ['\n  border-right-width:', ';\n  border-color:#eeeeee;\n  border-bottom-width:', ';\n  width:', ';\n  padding-vertical:30;\n  background-color:#ffffff;\n  padding-left:', ';\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _reactNative = require(12            ); // 12 = react-native

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _userActions = require(630                     ); // 630 = ../actions/userActions

var userCreator = babelHelpers.interopRequireWildcard(_userActions);

var _workingTableActions = require(623                             ); // 623 = ../actions/workingTableActions

var workingTableCreator = babelHelpers.interopRequireWildcard(_workingTableActions);

var _bonusListActions = require(631                          ); // 631 = ../actions/bonusListActions

var bonusListCreator = babelHelpers.interopRequireWildcard(_bonusListActions);

var _imgs = require(436                ); // 436 = ../resources/imgs

var _imgs2 = babelHelpers.interopRequireDefault(_imgs);

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _Touchable = require(497                      ); // 497 = ../components/Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var _http = require(622               ); // 622 = ../requests/http

var _constants = require(434                  ); // 434 = ../config/constants

var _color = require(587              ); // 587 = ../styles/color

var _color2 = babelHelpers.interopRequireDefault(_color);

var _Float = require(628             ); // 628 = ../utils/Float

var _Float2 = babelHelpers.interopRequireDefault(_Float);

var _Check = require(632             ); // 632 = ../utils/Check

var _Check2 = babelHelpers.interopRequireDefault(_Check);

var HBgView = _native2.default.ImageBackground(_templateObject, 20 + _constants.STATUS_HEIGHT, _constants.WINDOW_WIDTH, _constants.WINDOW_WIDTH * 0.92);
var BetweenView = _native2.default.View(_templateObject2);
var MoneyView = _UtilLib.AroundView.extend(_templateObject3);
var BMoneyView = BetweenView.extend(_templateObject4);
var Button = (0, _native2.default)(_Touchable2.default)(_templateObject5);
var BlueBgButton = Button.extend(_templateObject6);
var BlueBdButton = Button.extend(_templateObject7);
var MenuButton = (0, _native2.default)(_Touchable2.default).attrs({
  borderRight: function borderRight(props) {
    return props.br ? 1 : 0;
  },
  borderBottom: function borderBottom(props) {
    return props.bb ? 1 : 0;
  }
})(_templateObject8, function (props) {
  return props.borderRight;
}, function (props) {
  return props.borderBottom;
}, _constants.WINDOW_WIDTH / 2, (_constants.WINDOW_WIDTH / 2 - 130) / 2);
var icon = { marginRight: 15 };

var UserInfo = function (_Component) {
  babelHelpers.inherits(UserInfo, _Component);

  function UserInfo(props) {
    babelHelpers.classCallCheck(this, UserInfo);

    var _this = babelHelpers.possibleConstructorReturn(this, (UserInfo.__proto__ || Object.getPrototypeOf(UserInfo)).call(this, props));

    _this._navigate = function (router, params) {
      _this.props.navigation.navigate(router, params);
    };

    _this.state = {
      eyeOpen: true
    };
    return _this;
  }

  babelHelpers.createClass(UserInfo, [{
    key: '_toWebView',
    value: function _toWebView(url) {
      console.log('global.token: ' + global.token);
      this.props.navigation.navigate("WebView", { url: url });
    }
  }, {
    key: '_navigateCheck',
    value: function _navigateCheck(level, route, params, toast) {
      var routers = (0, _Check2.default)(this.props.user.check, level, route, params);
      if (routers[0]) {
        this._navigate(routers[0], routers[1]);
      } else {
        toast && this.context.callToast(toast);
      }
    }
  }, {
    key: '_onRefresh',
    value: function _onRefresh() {
      if (!this.props.user.loading) {
        var userActions = this.props.userActions;

        userActions.userProfile(true);
        this.props.workingTableAction.getAds();
      }
    }
  }, {
    key: '_toBonus',
    value: function _toBonus(type, params) {
      this.props.bonusListActions.getData(false, false, false, type, null, null, true);
      this._navigate("BonusList", params);
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var userActions = this.props.userActions;

      userActions.userProfile(false);
      !this.props.ads && this.props.workingTableAction.getAds();
      setTimeout(function () {
        return global.userInfoLoaded = true;
      }, 500);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props$user = this.props.user,
          loading = _props$user.loading,
          userInfo = _props$user.userInfo;

      var bonusCount = userInfo ? userInfo.coupons + userInfo.hikeOutTickets : 0;
      return _react2.default.createElement(
        _UtilLib.FlexView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 130
          }
        },
        _react2.default.createElement(
          _reactNative.ScrollView,
          { removeClippedSubviews: false, refreshControl: _react2.default.createElement(_reactNative.RefreshControl, {
              refreshing: loading,
              onRefresh: function onRefresh() {
                return _this2._onRefresh();
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 132
              }
            }), __source: {
              fileName: _jsxFileName,
              lineNumber: 131
            }
          },
          _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: loading, __source: {
              fileName: _jsxFileName,
              lineNumber: 137
            }
          }),
          _react2.default.createElement(
            HBgView,
            { source: require(633                          ), __source: { // 633 = ../resources/imgs/me-bg.png
                fileName: _jsxFileName,
                lineNumber: 138
              }
            },
            _react2.default.createElement(
              BetweenView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 139
                }
              },
              _react2.default.createElement(
                _Touchable2.default,
                { onPress: function onPress() {
                    return _this2._navigate("Setting");
                  }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 140
                  }
                },
                _imgs2.default.shezhi({ marginRight: 20 })
              ),
              _react2.default.createElement(
                _UtilLib.CenterView,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 144
                  }
                },
                _imgs2.default.touxiang({ width: 60, height: 60 }),
                _react2.default.createElement(
                  _UtilLib.StyledText,
                  { top: '8', size: '16', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 146
                    }
                  },
                  userInfo.mobile && userInfo.mobile.replace(/^(\d{3})\d{4}(\d+)/, "$1****$2")
                )
              ),
              _react2.default.createElement(
                _Touchable2.default,
                { onPress: function onPress() {
                    return _this2._navigate("MessageList");
                  }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 151
                  }
                },
                _imgs2.default.message({ marginLeft: 20 })
              )
            ),
            _react2.default.createElement(
              _UtilLib.CenterView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 155
                }
              },
              _react2.default.createElement(
                _UtilLib.CenterRow,
                { style: { marginTop: 28 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 156
                  }
                },
                _react2.default.createElement(
                  _UtilLib.StyledText,
                  { size: '32', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 157
                    }
                  },
                  (0, _Float2.default)(userInfo.totleProperty)
                )
              ),
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '14', color: '#F0DCCE', top: '10', bottom: '20', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 159
                  }
                },
                '\u603B\u8D44\u4EA7\uFF08\u5143\uFF09'
              )
            ),
            _react2.default.createElement(
              MoneyView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 161
                }
              },
              _react2.default.createElement(
                _Touchable2.default,
                { onPress: function onPress() {
                    return _this2._navigate("Asset");
                  }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 162
                  }
                },
                _react2.default.createElement(
                  _UtilLib.CenterView,
                  {
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 163
                    }
                  },
                  _react2.default.createElement(
                    _reactNative.View,
                    {
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 164
                      }
                    },
                    _react2.default.createElement(
                      _UtilLib.StyledText,
                      { size: '22', __source: {
                          fileName: _jsxFileName,
                          lineNumber: 165
                        }
                      },
                      (0, _Float2.default)(userInfo.balance)
                    ),
                    _react2.default.createElement(
                      _UtilLib.StyledText,
                      { size: '14', top: '4', color: '#F0DCCE', __source: {
                          fileName: _jsxFileName,
                          lineNumber: 166
                        }
                      },
                      '\u53EF\u7528\u4F59\u989D\uFF08\u5143\uFF09'
                    )
                  )
                )
              ),
              _react2.default.createElement(
                _UtilLib.CenterView,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 170
                  }
                },
                _react2.default.createElement(
                  _reactNative.View,
                  {
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 171
                    }
                  },
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { size: '22', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 172
                      }
                    },
                    (0, _Float2.default)(userInfo.total)
                  ),
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { size: '14', top: '4', color: '#F0DCCE', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 173
                      }
                    },
                    '\u7D2F\u8BA1\u6536\u76CA\uFF08\u5143\uFF09'
                  )
                )
              )
            )
          ),
          _react2.default.createElement(
            BMoneyView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 178
              }
            },
            _react2.default.createElement(
              BlueBdButton,
              { onPress: function onPress() {
                  return _this2._navigateCheck(2, "Cash", { hideHeader: true });
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 179
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#5bb9ff', size: '14', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 180
                  }
                },
                '\u63D0\u73B0'
              )
            ),
            _react2.default.createElement(
              BlueBgButton,
              { onPress: function onPress() {
                  return _this2._navigateCheck(2, "Recharge", { hideHeader: true });
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 182
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '14', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 183
                  }
                },
                '\u5145\u503C'
              )
            )
          ),
          _react2.default.createElement(
            BetweenView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 185
              }
            },
            _react2.default.createElement(
              MenuButton,
              { bb: true, br: true, onPress: function onPress() {
                  return _this2._navigate("CapitalList");
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 186
                }
              },
              _react2.default.createElement(
                _UtilLib.CenterRow,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 187
                  }
                },
                _imgs2.default.touzi(icon),
                _react2.default.createElement(
                  _reactNative.View,
                  {
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 189
                    }
                  },
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { color: '#333333', size: '16', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 190
                      }
                    },
                    '\u6211\u7684\u6295\u8D44'
                  ),
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { color: '#999999', size: '11', top: '4', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 191
                      }
                    },
                    '\u67E5\u770B\u6295\u8D44\u8BB0\u5F55\u660E\u7EC6'
                  )
                )
              )
            ),
            _react2.default.createElement(
              MenuButton,
              { bb: true, onPress: function onPress() {
                  return _this2._navigate("CapitalRecord");
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 195
                }
              },
              _react2.default.createElement(
                _UtilLib.CenterRow,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 196
                  }
                },
                _imgs2.default.liushui(icon),
                _react2.default.createElement(
                  _reactNative.View,
                  {
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 198
                    }
                  },
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { color: '#333333', size: '16', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 199
                      }
                    },
                    '\u8D44\u91D1\u6D41\u6C34'
                  ),
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { color: '#999999', size: '11', top: '4', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 200
                      }
                    },
                    '\u67E5\u770B\u8D26\u6237\u8D44\u91D1\u6D41\u52A8'
                  )
                )
              )
            )
          ),
          _react2.default.createElement(
            BetweenView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 205
              }
            },
            _react2.default.createElement(
              MenuButton,
              { br: true, onPress: function onPress() {
                  return _this2._toBonus("1", { title: "我的福利" });
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 206
                }
              },
              _react2.default.createElement(
                _UtilLib.CenterRow,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 207
                  }
                },
                _imgs2.default.hongbao(icon),
                _react2.default.createElement(
                  _reactNative.View,
                  {
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 209
                    }
                  },
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { color: '#333333', size: '16', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 210
                      }
                    },
                    '\u6211\u7684\u798F\u5229'
                  ),
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { color: '#999999', size: '11', top: '4', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 211
                      }
                    },
                    bonusCount ? bonusCount + '份可用' : '暂无'
                  )
                )
              )
            ),
            _react2.default.createElement(
              MenuButton,
              { onPress: function onPress() {
                  return _this2._toWebView((0, _http.createH5Url)("/user/invitation?t=" + global.token));
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 217
                }
              },
              _react2.default.createElement(
                _UtilLib.CenterRow,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 218
                  }
                },
                _imgs2.default.haoyou(icon),
                _react2.default.createElement(
                  _reactNative.View,
                  {
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 220
                    }
                  },
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { color: '#333333', size: '16', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 221
                      }
                    },
                    '\u9080\u8BF7\u597D\u53CB'
                  ),
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { color: '#999999', top: '4', size: '11', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 222
                      }
                    },
                    '\u9080\u8BF7\u597D\u53CB\uFF0C\u5750\u4EAB\u6536\u76CA'
                  )
                )
              )
            )
          ),
          _react2.default.createElement(_reactNative.View, { style: { height: 5 }, __source: {
              fileName: _jsxFileName,
              lineNumber: 227
            }
          })
        )
      );
    }
  }]);
  return UserInfo;
}(_react.Component);

UserInfo.navigationOptions = function (_ref) {
  var navigation = _ref.navigation,
      screenProps = _ref.screenProps;
  return {
    header: null
  };
};

UserInfo.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
  var user = state.user;

  return { user: user };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var userActions = (0, _redux.bindActionCreators)(userCreator, dispatch);
  var workingTableAction = (0, _redux.bindActionCreators)(workingTableCreator, dispatch);
  var bonusListActions = (0, _redux.bindActionCreators)(bonusListCreator, dispatch);
  return { userActions: userActions, workingTableAction: workingTableAction, bonusListActions: bonusListActions };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(UserInfo);
}, 629, null, "YuanXC/src/pages/UserInfo.js");
__d(/* YuanXC/src/actions/userActions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.userProfile = userProfile;
exports.userSign = userSign;
exports.userLogout = userLogout;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);

var _http = require(622               ); // 622 = ../requests/http

var _axios = require(588                ); // 588 = ../requests/axios

function userProfile(loading) {
  var time = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

  return function (dispatch) {
    dispatch(requestData({ loading: loading }));
    setTimeout(function () {
      (0, _http.getUserProfile)().then(function (data) {
        var user = data.data.data;
        if (data.data.code == 0) {
          var check = [{
            routeName: 'Authentication',
            checked: user.isAuthenticated,
            tip: user.isAuthenticated ? '已认证' : '未认证'
          }, {
            routeName: 'BankCardBind',
            checked: user.isBindBankCard,
            tip: user.isBindBankCard ? '已绑定' : '未绑定'
          }, {
            routeName: 'PayPasswordInit',
            checked: user.isSetTradingPassword
          }];
          user.total = user.redPacketMoney + user.inviteRewards + user.platformRewards + user.totleInterestMoney;
          dispatch(receiveUserProfile({ userInfo: user, check: check }));
        } else {
          dispatch(receiveUserProfile({ error: true, msg: data.data.msg }));
        }
      }).catch(function (err) {
        dispatch(receiveUserProfile({ error: true, msgStr: 'netWorkError' }));
      });
    }, time);
  };
}

function userSign(signing) {
  return function (dispatch) {
    dispatch(requestData({ signing: signing }));
    (0, _http.sign)().then(function (data) {
      if (data.data.code == 0) {
        dispatch(receiveUserSign({}));
      } else {
        dispatch(receiveUserSign({ error: true, msg: data.data.msg }));
      }
    }).catch(function (err) {
      dispatch(receiveUserSign({ error: true, msgStr: 'netWorkError' }));
    });
  };
}

function userLogout() {
  return function (dispatch) {
    (0, _http.logout)({ token: global.token });
    (0, _axios.logoutUser)();
  };
}

function requestData(data) {
  return babelHelpers.extends({
    type: types.REQUEST_USER_LOGIN
  }, data);
}

function receiveData(data) {
  return babelHelpers.extends({
    type: types.RECEIVE_USER_LOGIN
  }, data);
}

function receiveUserProfile(data) {
  return babelHelpers.extends({
    type: types.RECEIVE_USER_INFO
  }, data);
}

function receiveUserSign(data) {
  return babelHelpers.extends({
    type: types.RECEIVE_USER_SIGN
  }, data);
}
}, 630, null, "YuanXC/src/actions/userActions.js");
__d(/* YuanXC/src/actions/bonusListActions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getData = getData;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);

var _http = require(622               ); // 622 = ../requests/http

function getData(isRefreshing, isLoadMore, loading, ctype) {
  var isOverdue = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
  var pageNumber = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;
  var navi = arguments[6];

  return function (dispatch) {
    dispatch(requestData({ isRefreshing: isRefreshing, isLoadMore: isLoadMore, loading: loading, ctype: ctype }));
    if (!navi) {
      (0, _http.bonusList)({ pageNumber: pageNumber, isOverdue: isOverdue, type: ctype }).then(function (data) {
        if (data.data.code == 0) {
          dispatch(receiveData({ list: data.data.data.memberCouponList }));
        } else {
          dispatch(receiveData({ error: true, msg: data.data.msg }));
        }
      }).catch(function (err) {
        dispatch(receiveData({ error: true, msgStr: 'netWorkError' }));
      });
    }
  };
}

function requestData(data) {
  return babelHelpers.extends({
    type: types.REQUEST_BONUS_LIST
  }, data);
}

function receiveData(data) {
  return babelHelpers.extends({
    type: types.RECEIVE_BONUS_LIST
  }, data);
}
}, 631, null, "YuanXC/src/actions/bonusListActions.js");
__d(/* YuanXC/src/utils/Check.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = AuthCheck = function AuthCheck(array, level, router, params) {
  if (!array[0].routeName || array[level].checked) {
    return [router, params];
  } else {
    var i = 0;
    for (i; i <= level; i++) {
      if (!array[i].checked) {
        return [array[i].routeName];
      }
    }
  }
};
}, 632, null, "YuanXC/src/utils/Check.js");
__d(/* YuanXC/src/resources/imgs/me-bg.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":750,"height":691,"scales":[1],"hash":"ded3b2565022f43a0194f4121d271ad3","name":"me-bg","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 633, null, "YuanXC/src/resources/imgs/me-bg.png");
__d(/* YuanXC/src/pages/FinanceList.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/FinanceList.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  background-color:#ffffff;\n  margin-top:10;\n'], ['\n  background-color:#ffffff;\n  margin-top:10;\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  flex-direction:row;\n  align-items:center;\n  padding-bottom:4;\n  margin-left:10;\n  height:50;\n'], ['\n  flex-direction:row;\n  align-items:center;\n  padding-bottom:4;\n  margin-left:10;\n  height:50;\n']),
    _templateObject3 = babelHelpers.taggedTemplateLiteral(['\n  margin-vertical:10;\n  flex-direction:row;\n  justify-content:center;\n'], ['\n  margin-vertical:10;\n  flex-direction:row;\n  justify-content:center;\n']),
    _templateObject4 = babelHelpers.taggedTemplateLiteral(['\n  align-items:center;\n  justify-content:center;\n  height:40;\n'], ['\n  align-items:center;\n  justify-content:center;\n  height:40;\n']),
    _templateObject5 = babelHelpers.taggedTemplateLiteral(['\n  background-color: #EEEEEE;\n  width:', ';\n  height:2;\n  border-radius:1;\n'], ['\n  background-color: #EEEEEE;\n  width:', ';\n  height:2;\n  border-radius:1;\n']),
    _templateObject6 = babelHelpers.taggedTemplateLiteral(['\n  height:2;\n  border-radius:1;\n  background-color:#2E8CFB;\n  width:', ';\n'], ['\n  height:2;\n  border-radius:1;\n  background-color:#2E8CFB;\n  width:', ';\n']),
    _templateObject7 = babelHelpers.taggedTemplateLiteral(['\n  margin-left:10;\n'], ['\n  margin-left:10;\n']),
    _templateObject8 = babelHelpers.taggedTemplateLiteral(['\n'], ['\n']),
    _templateObject9 = babelHelpers.taggedTemplateLiteral(['\n  height:40;\n'], ['\n  height:40;\n']),
    _templateObject10 = babelHelpers.taggedTemplateLiteral(['\n  padding-vertical:4;\n  width:56;\n  background-color:#FC9657;\n  position:absolute;\n  right:0;\n  top:0;\n'], ['\n  padding-vertical:4;\n  width:56;\n  background-color:#FC9657;\n  position:absolute;\n  right:0;\n  top:0;\n']),
    _templateObject11 = babelHelpers.taggedTemplateLiteral(['\n  border-right-width:1;\n  border-color:#eeeeee;\n  width:', ';\n  padding-left:2;\n  margin-top:6;\n  justify-content:center;\n'], ['\n  border-right-width:1;\n  border-color:#eeeeee;\n  width:', ';\n  padding-left:2;\n  margin-top:6;\n  justify-content:center;\n']),
    _templateObject12 = babelHelpers.taggedTemplateLiteral(['\n  height:', ';\n  width:', ';\n'], ['\n  height:', ';\n  width:', ';\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _imgs = require(436                ); // 436 = ../resources/imgs

var _imgs2 = babelHelpers.interopRequireDefault(_imgs);

var _Touchable = require(497                      ); // 497 = ../components/Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _constants = require(434                  ); // 434 = ../config/constants

var _Float = require(628             ); // 628 = ../utils/Float

var _Float2 = babelHelpers.interopRequireDefault(_Float);

var _http = require(622               ); // 622 = ../requests/http

var _financeListActions = require(635                            ); // 635 = ../actions/financeListActions

var financeListCreator = babelHelpers.interopRequireWildcard(_financeListActions);

var _workingTableActions = require(623                             ); // 623 = ../actions/workingTableActions

var workingTableCreator = babelHelpers.interopRequireWildcard(_workingTableActions);


var progressWidth = _constants.WINDOW_WIDTH - 145;
var ItemView = (0, _native2.default)(_Touchable2.default)(_templateObject);
var TitleView = _native2.default.View(_templateObject2);
var FooterView = _native2.default.View(_templateObject3);
var ProgressContainer = _UtilLib.CenterRow.extend(_templateObject4);
var ProgressBg = _native2.default.View(_templateObject5, progressWidth);
var ProgressView = _native2.default.View.attrs({
  progress: function progress(props) {
    return props.progress || 0;
  }
})(_templateObject6, function (props) {
  return props.progress * progressWidth;
});
var ProgressText = _UtilLib.StyledText.extend.attrs({
  size: 12,
  height: 12,
  bottom: 1
})(_templateObject7);
var MiddleView = _UtilLib.BetweenView.extend(_templateObject8);
var BlankView = _native2.default.View(_templateObject9);
var Type = _UtilLib.CenterView.extend(_templateObject10);
var ColumnView = _UtilLib.CenterView.extend(_templateObject11, _constants.WINDOW_WIDTH / 3);
var AdsView = (0, _native2.default)(_Touchable2.default)(_templateObject8);
var AdsImage = _native2.default.Image(_templateObject12, _constants.WINDOW_WIDTH * 0.26, _constants.WINDOW_WIDTH);

var page = 1;
var types = ["新手专享", "超短项目", "爆款项目", "精选项目", "体验项目"];

var FinanceList = function (_Component) {
  babelHelpers.inherits(FinanceList, _Component);

  function FinanceList(props) {
    babelHelpers.classCallCheck(this, FinanceList);

    var _this = babelHelpers.possibleConstructorReturn(this, (FinanceList.__proto__ || Object.getPrototypeOf(FinanceList)).call(this, props));

    _this.state = {};
    return _this;
  }

  babelHelpers.createClass(FinanceList, [{
    key: '_renderItems',
    value: function _renderItems(item) {
      var _this2 = this;

      var bcolor = !item.isEnd ? "#ffa30f" : "#999999";
      var ycolor = !item.isEnd ? "#6295fd" : "#999999";
      var textcolor = !item.isEnd ? "#333333" : "#999999";
      var ncolor = !item.isEnd ? "#F1BE64" : "#999999";
      var progress = item.investedMoney / item.financeMoney;
      var investedProgress = void 0;
      if (progress < 0.9) {
        investedProgress = Math.ceil(progress * 100);
      } else {
        investedProgress = Math.floor(progress * 100);
      }
      var residueMoney = item.financeMoney - item.investedMoney;
      var str = void 0;
      if (residueMoney > 100) {
        residueMoney = residueMoney / 10000;
        str = "万元";
      } else {
        str = "元";
      }
      (residueMoney + "").indexOf(".") > -1 && (residueMoney = residueMoney.toFixed(2));
      return _react2.default.createElement(
        ItemView,
        { onPress: function onPress() {
            return _this2.props.navigation.navigate("WebView", { url: (0, _http.createApiUrl)('/finance-base/h5/detail?id=' + item.id) });
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 146
          }
        },
        _react2.default.createElement(
          TitleView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 147
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#333333', size: '16', __source: {
                fileName: _jsxFileName,
                lineNumber: 148
              }
            },
            item.title
          ),
          item.isGuarantee ? _react2.default.createElement(_UtilLib.IconView, { text: '\u62C5\u4FDD', color: bcolor, __source: {
              fileName: _jsxFileName,
              lineNumber: 149
            }
          }) : null,
          item.financeGoodsId ? _react2.default.createElement(_UtilLib.IconView, { text: '\u62B5\u62BC', color: ycolor, __source: {
              fileName: _jsxFileName,
              lineNumber: 150
            }
          }) : null
        ),
        _react2.default.createElement(
          MiddleView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 152
            }
          },
          _react2.default.createElement(
            ColumnView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 153
              }
            },
            _react2.default.createElement(
              _UtilLib.NormalView,
              { style: { alignItems: 'flex-end' }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 154
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '26', color: ncolor, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 155
                  }
                },
                (0, _Float2.default)(item.rate * 100),
                '%'
              ),
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '12', color: '#999999', top: '10', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 156
                  }
                },
                '\u9884\u671F\u5E74\u5316'
              )
            )
          ),
          _react2.default.createElement(
            ColumnView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 159
              }
            },
            _react2.default.createElement(
              _UtilLib.NormalView,
              { style: { alignItems: 'flex-end' }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 160
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '26', color: ncolor, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 161
                  }
                },
                item.deadLine.replace("天", ""),
                _react2.default.createElement(
                  _UtilLib.StyledText,
                  { color: '#333333', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 162
                    }
                  },
                  '\u5929'
                )
              ),
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '12', color: '#999999', top: '10', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 164
                  }
                },
                '\u9879\u76EE\u671F\u9650'
              )
            )
          ),
          _react2.default.createElement(
            ColumnView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 167
              }
            },
            _react2.default.createElement(
              _UtilLib.NormalView,
              { style: { alignItems: 'flex-end' }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 168
                }
              },
              item.isEnd ? _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '20', color: textcolor, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 169
                  }
                },
                '\u52DF\u96C6\u7ED3\u675F'
              ) : _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '26', color: '#333333', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 170
                  }
                },
                (0, _Float2.default)(residueMoney),
                _react2.default.createElement(
                  _UtilLib.StyledText,
                  { color: '#333333', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 171
                    }
                  },
                  str
                )
              ),
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '12', color: '#999999', top: '10', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 174
                  }
                },
                '\u5269\u4F59\u53EF\u6295'
              )
            )
          )
        ),
        !item.isEnd ? _react2.default.createElement(
          ProgressContainer,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 179
            }
          },
          _react2.default.createElement(
            ProgressBg,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 180
              }
            },
            _react2.default.createElement(ProgressView, { progress: progress, __source: {
                fileName: _jsxFileName,
                lineNumber: 181
              }
            })
          ),
          _react2.default.createElement(
            ProgressText,
            { color: '#333333', __source: {
                fileName: _jsxFileName,
                lineNumber: 183
              }
            },
            '\u6295\u8D44\u8FDB\u5EA6',
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#7AADFB', size: '12', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 184
                }
              },
              investedProgress + "%"
            )
          )
        ) : _react2.default.createElement(BlankView, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 187
          }
        }),
        !item.isEnd ? _react2.default.createElement(
          Type,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 189
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { size: '12', __source: {
                fileName: _jsxFileName,
                lineNumber: 190
              }
            },
            types[item.isNewuserOnly]
          )
        ) : null
      );
    }
  }, {
    key: '_renderFooter',
    value: function _renderFooter() {
      var _props$financeList = this.props.financeList,
          loading = _props$financeList.loading,
          isLoadMore = _props$financeList.isLoadMore;

      if (!loading && !isLoadMore) {
        return _react2.default.createElement(
          FooterView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 200
            }
          },
          _react2.default.createElement(_UtilLib.StyledText, { color: '#999999', __source: {
              fileName: _jsxFileName,
              lineNumber: 201
            }
          })
        );
      } else {
        return _react2.default.createElement(_UtilLib.Footer, { visible: isLoadMore && !loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 205
          }
        });
      }
    }
  }, {
    key: '_onEndReached',
    value: function _onEndReached() {
      var _props$financeList2 = this.props.financeList,
          isLoadMore = _props$financeList2.isLoadMore,
          noMore = _props$financeList2.noMore,
          list = _props$financeList2.list,
          isRefreshing = _props$financeList2.isRefreshing,
          loading = _props$financeList2.loading;

      if (!isLoadMore && !noMore && !isRefreshing && !loading) {
        var financeListActions = this.props.financeListActions;

        financeListActions.getData(false, true, false, ++page);
      } else {
        console.log("cd-----");
      }
    }
  }, {
    key: '_onRefresh',
    value: function _onRefresh() {
      page = 1;
      var _props = this.props,
          financeListActions = _props.financeListActions,
          financeList = _props.financeList;

      if (!financeList.isRefreshing) {
        financeListActions.getData(true, false, false, page);
        this.props.workingTableAction.getAds();
      }
    }
  }, {
    key: '_renderHeader',
    value: function _renderHeader() {
      var _this3 = this;

      var ads = this.props.ads;
      return _react2.default.createElement(
        _reactNative.View,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 231
          }
        },
        ads && ads[1] && ads[1].position === "pic4" ? _react2.default.createElement(
          AdsView,
          { feedback: ads[1].link ? true : false,
            onPress: function onPress() {
              return ads[1].link && _this3.props.navigation.navigate("WebView", { url: ads[1].link });
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 233
            }
          },
          _react2.default.createElement(AdsImage, { source: { uri: ads[1].url }, __source: {
              fileName: _jsxFileName,
              lineNumber: 235
            }
          })
        ) : null
      );
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      page = 1;
      global.didMount = true;
      var financeListActions = this.props.financeListActions;

      financeListActions.getData(false, false, true, page);
      !this.props.ads && this.props.workingTableAction.getAds();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this4 = this;

      var _props$financeList3 = this.props.financeList,
          loading = _props$financeList3.loading,
          isRefreshing = _props$financeList3.isRefreshing,
          list = _props$financeList3.list;

      return _react2.default.createElement(
        _UtilLib.FlexView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 252
          }
        },
        _react2.default.createElement(
          _UtilLib.Header,
          { center: true, color: '#38373C', __source: {
              fileName: _jsxFileName,
              lineNumber: 253
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { size: '17', __source: {
                fileName: _jsxFileName,
                lineNumber: 254
              }
            },
            '\u7406\u8D22\u5217\u8868'
          )
        ),
        _react2.default.createElement(_reactNative.FlatList, { data: list, initialNumToRender: 5,
          refreshControl: _react2.default.createElement(_reactNative.RefreshControl, {
            refreshing: isRefreshing,
            onRefresh: function onRefresh() {
              return _this4._onRefresh();
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 258
            }
          }),
          renderItem: function renderItem(_ref) {
            var item = _ref.item;
            return _this4._renderItems(item);
          },
          onEndReached: function onEndReached() {
            return _this4._onEndReached();
          },
          ListEmptyComponent: function ListEmptyComponent() {
            return _react2.default.createElement(_UtilLib.NoData, { visible: !loading, __source: {
                fileName: _jsxFileName,
                lineNumber: 265
              }
            });
          },
          keyExtractor: function keyExtractor(item) {
            return item.id;
          },
          ListHeaderComponent: this._renderHeader(),
          ListFooterComponent: function ListFooterComponent() {
            return _this4._renderFooter();
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 256
          }
        }),
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 269
          }
        })
      );
    }
  }]);
  return FinanceList;
}(_react.Component);

FinanceList.navigationOptions = function (_ref2) {
  var navigation = _ref2.navigation,
      screenProps = _ref2.screenProps;
  return {
    title: '项目列表'
  };
};

FinanceList.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
  var financeList = state.financeList;

  var ads = state.workingTable.ads;
  return { financeList: financeList, ads: ads };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var financeListActions = (0, _redux.bindActionCreators)(financeListCreator, dispatch);
  var workingTableAction = (0, _redux.bindActionCreators)(workingTableCreator, dispatch);
  return { financeListActions: financeListActions, workingTableAction: workingTableAction };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(FinanceList);
}, 634, null, "YuanXC/src/pages/FinanceList.js");
__d(/* YuanXC/src/actions/financeListActions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getData = getData;
exports.refresh = refresh;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);

var _http = require(622               ); // 622 = ../requests/http

function getData(isRefreshing, isLoadMore, loading) {
  var pageNumber = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;

  return function (dispatch) {
    dispatch(requestData({ isRefreshing: isRefreshing, isLoadMore: isLoadMore, loading: loading, noMore: false }));
    (0, _http.financeList)({ pageNumber: pageNumber }).then(function (data) {
      if (data.data.code == 0) {
        dispatch(receiveData({ list: data.data.data.financeBaseList || [] }));
      } else {
        dispatch(receiveData({ error: true, msg: data.data.msg }));
      }
    }).catch(function (err) {
      dispatch(receiveData({ error: true, msgStr: 'netWorkError' }));
    });
  };
}

function refresh() {
  return function (dispatch) {
    (0, _http.financeList)({ pageNumber: 1 }).then(function (data) {
      if (data.data.code == 0) {
        dispatch(refreshData({ list: data.data.data.financeBaseList || [] }));
      }
    }).catch(function (err) {});
  };
}

function requestData(data) {
  return babelHelpers.extends({
    type: types.REQUEST_FINANCE_LIST
  }, data);
}

function receiveData(data) {
  return babelHelpers.extends({
    type: types.RECEIVE_FINANCE_LIST
  }, data);
}

function refreshData(data) {
  return babelHelpers.extends({
    type: types.REFRESH_FINANCE_LIST
  }, data);
}
}, 635, null, "YuanXC/src/actions/financeListActions.js");
__d(/* YuanXC/src/pages/Login.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/Login.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  width:', ';\n  margin-top:14;\n'], ['\n  width:', ';\n  margin-top:14;\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  border-width:1;\n  border-color:#E0E0E0;\n  margin-top:24;\n  height:50;\n  border-radius:5;\n'], ['\n  border-width:1;\n  border-color:#E0E0E0;\n  margin-top:24;\n  height:50;\n  border-radius:5;\n']),
    _templateObject3 = babelHelpers.taggedTemplateLiteral(['\n  margin-top:', ';\n  align-self:flex-end;\n'], ['\n  margin-top:', ';\n  align-self:flex-end;\n']),
    _templateObject4 = babelHelpers.taggedTemplateLiteral(['\n  margin-top:20;\n  margin-bottom:20;\n'], ['\n  margin-top:20;\n  margin-bottom:20;\n']),
    _templateObject5 = babelHelpers.taggedTemplateLiteral(['\n  flex-direction:row;\n  justify-content:space-between;\n  margin-top:10;\n  width:', ';\n '], ['\n  flex-direction:row;\n  justify-content:space-between;\n  margin-top:10;\n  width:', ';\n ']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _reactNativeDeviceInfo = require(435                       ); // 435 = react-native-device-info

var _reactNativeDeviceInfo2 = babelHelpers.interopRequireDefault(_reactNativeDeviceInfo);

var _reactNavigation = require(371               ); // 371 = react-navigation

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _reactNative = require(12            ); // 12 = react-native

var _formStyles = require(637                   ); // 637 = ../styles/formStyles

var _formStyles2 = babelHelpers.interopRequireDefault(_formStyles);

var _color = require(587              ); // 587 = ../styles/color

var _color2 = babelHelpers.interopRequireDefault(_color);

var _Touchable = require(497                      ); // 497 = ../components/Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var _imgs = require(436                ); // 436 = ../resources/imgs

var _imgs2 = babelHelpers.interopRequireDefault(_imgs);

var _MessageBox = require(625                       ); // 625 = ../components/MessageBox

var _MessageBox2 = babelHelpers.interopRequireDefault(_MessageBox);

var _TextInputCustomized = require(638                                ); // 638 = ../components/TextInputCustomized

var _TextInputCustomized2 = babelHelpers.interopRequireDefault(_TextInputCustomized);

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _axios = require(588                ); // 588 = ../requests/axios

var _http = require(622               ); // 622 = ../requests/http

var _userActions = require(630                     ); // 630 = ../actions/userActions

var userCreator = babelHelpers.interopRequireWildcard(_userActions);

var _workingTableActions = require(623                             ); // 623 = ../actions/workingTableActions

var workingTableCreator = babelHelpers.interopRequireWildcard(_workingTableActions);

var _constants = require(434                  ); // 434 = ../config/constants

var _TD = require(639          ); // 639 = ../utils/TD

var RNTD = babelHelpers.interopRequireWildcard(_TD);


var LInputView = _native2.default.View(_templateObject, _constants.WINDOW_WIDTH - 40);
var Input = (0, _native2.default)(_TextInputCustomized2.default)(_templateObject2);
var CloseButton = _UtilLib.HeaderButton.extend(_templateObject3, _constants.STATUS_HEIGHT);
var Image = _native2.default.Image(_templateObject4);
var GiteView = _native2.default.View(_templateObject5, _constants.WINDOW_WIDTH - 40);
var textInputIcon = {
  width: 40,
  height: 40,
  resizeMode: 'center'
};

var Login = function (_Component) {
  babelHelpers.inherits(Login, _Component);

  function Login(props) {
    babelHelpers.classCallCheck(this, Login);

    var _this = babelHelpers.possibleConstructorReturn(this, (Login.__proto__ || Object.getPrototypeOf(Login)).call(this, props));

    _this.state = {
      mobile: '',
      password: '',
      loginErr: '',
      loading: false,
      messageBox: {
        visible: false,
        content: '',
        onCancel: function onCancel() {}
      }
    };
    return _this;
  }

  babelHelpers.createClass(Login, [{
    key: '_loginUser',
    value: function _loginUser() {
      var _this2 = this;

      if (!this.state.mobile) {
        this.context.callToast('请输入手机号码');
      } else if (!this.state.password) {
        this.context.callToast('请输入密码');
      } else if (!/^[1][34578][0-9]{9}$/.test(this.state.mobile)) {
        this.context.callToast('请输入正确的手机号码');
      } else {
        var data = {
          mobile: this.state.mobile,
          password: this.state.password,
          deviceName: _reactNativeDeviceInfo2.default.getModel(),
          osName: _constants.OS,
          deviceId: global.rid || ''
        };
        this.setState({ loading: true });
        (0, _http.login)(data).then(function (data) {
          _this2.setState({ loading: false });
          if (data.data.code === 0) {
            (0, _axios.loginUser)(data.data.data.token);
            _this2.props.userActions.userProfile(false);
            RNTD.onLogin(_this2.state.mobile);
            _this2._loginSuccess();
          } else {
            _this2.context.callToast(data.data.msg);
          }
        }).catch(function () {
          _this2.setState({ loading: false });
          _this2.context.callToast('提交失败');
        });
      }
    }
  }, {
    key: '_loginSuccess',
    value: function _loginSuccess() {
      if (global.initRouter) {
        this.context.callToast('登录成功');
        var navigateAction = _reactNavigation.NavigationActions.reset({
          index: 0,
          actions: [_reactNavigation.NavigationActions.navigate({ routeName: 'Main' })]
        });
        this.props.navigation.dispatch(navigateAction);
      } else {
        this.props.navigation.goBack();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var _props$navigation = this.props.navigation,
          navigate = _props$navigation.navigate,
          goBack = _props$navigation.goBack;

      return _react2.default.createElement(
        _UtilLib.FlexView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 142
          }
        },
        _react2.default.createElement(
          CloseButton,
          { onPress: function onPress() {
              return goBack();
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 143
            }
          },
          _imgs2.default.cha({ height: 20, width: 20, marginRight: 5, tintColor: "#B6B6B6" })
        ),
        _react2.default.createElement(
          _UtilLib.CenterView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 155
            }
          },
          _react2.default.createElement(
            LInputView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 156
              }
            },
            _react2.default.createElement(
              _UtilLib.CenterView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 157
                }
              },
              _react2.default.createElement(Image, { source: require(470                         ), __source: { // 470 = ../resources/imgs/logo.png
                  fileName: _jsxFileName,
                  lineNumber: 158
                }
              })
            ),
            _react2.default.createElement(Input, {
              icon: _imgs2.default.mobile(textInputIcon),
              value: this.state.mobile,
              onChangeText: function onChangeText(text) {
                _this3.setState({ mobile: text });
              },
              keyboardType: 'numeric',
              placeholder: '\u8BF7\u8F93\u5165\u624B\u673A\u53F7\u7801',
              textInputStyle: { height: 30 },
              onClear: function onClear() {
                _this3.setState({ mobile: '' });
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 160
              }
            }),
            _react2.default.createElement(Input, {
              icon: _imgs2.default.password(textInputIcon),
              secureTextEntry: true,
              value: this.state.password,
              onChangeText: function onChangeText(text) {
                _this3.setState({ password: text });
              },
              placeholder: '\u8BF7\u8F93\u5165\u5BC6\u7801',
              textInputStyle: { height: 30 },
              onClear: function onClear() {
                _this3.setState({ password: '' });
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 173
              }
            })
          ),
          _react2.default.createElement(
            _UtilLib.StyledButtom,
            { onPress: this._loginUser.bind(this), top: '46',
              width: _constants.WINDOW_WIDTH - 40, height: '45', __source: {
                fileName: _jsxFileName,
                lineNumber: 188
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { size: '17', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 190
                }
              },
              '\u767B\u5F55'
            )
          ),
          _react2.default.createElement(
            GiteView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 192
              }
            },
            _react2.default.createElement(
              _Touchable2.default,
              { onPress: function onPress() {
                  return navigate('ForgetPassword');
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 193
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '16', color: '#4A4A4A', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 194
                  }
                },
                '\u5FD8\u8BB0\u5BC6\u7801\uFF1F'
              )
            ),
            _react2.default.createElement(
              _Touchable2.default,
              { onPress: function onPress() {
                  global.loginRouter = _this3.props.navigation.state.key;
                  navigate('Register');
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 196
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#B5B5B5', size: '16', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 200
                  }
                },
                '\u6CA1\u6709\u8D26\u53F7\uFF1F',
                _react2.default.createElement(
                  _UtilLib.StyledText,
                  { color: '#F1BE64',
                    size: '16', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 200
                    }
                  },
                  '\u9A6C\u4E0A\u6CE8\u518C'
                )
              )
            )
          )
        ),
        _react2.default.createElement(_MessageBox2.default, {
          visible: this.state.messageBox.visible,
          content: this.state.messageBox.content,
          button: this.state.messageBox.button, __source: {
            fileName: _jsxFileName,
            lineNumber: 205
          }
        }),
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: this.state.loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 209
          }
        })
      );
    }
  }]);
  return Login;
}(_react.Component);

Login.navigationOptions = function (_ref) {
  var navigation = _ref.navigation;
  return {
    title: '登录'
  };
};

Login.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

var mapStateToProps = function mapStateToProps() {
  return {};
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var userActions = (0, _redux.bindActionCreators)(userCreator, dispatch);
  var workingTableAction = (0, _redux.bindActionCreators)(workingTableCreator, dispatch);
  return { userActions: userActions, workingTableAction: workingTableAction };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Login);
}, 636, null, "YuanXC/src/pages/Login.js");
__d(/* YuanXC/src/styles/formStyles.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clearTextWidthSmall = exports.clearTextWidth = exports.inputHeight = undefined;

var _reactNative = require(12            ); // 12 = react-native

var _constants = require(434                  ); // 434 = ../config/constants

var inputHeight = exports.inputHeight = 50;
var clearTextWidth = exports.clearTextWidth = 40;
var clearTextWidthSmall = exports.clearTextWidthSmall = 25;

exports.default = _reactNative.StyleSheet.create({
  formControl: {
    position: 'relative',
    flexDirection: 'row',
    alignItems: 'center'
  },
  textInputIcon: {
    width: 28,
    height: 28,
    resizeMode: 'center',
    padding: 10
  },
  textInput: {
    padding: 0,
    height: inputHeight,
    color: '#000',
    fontSize: 15,
    paddingLeft: 10
  },
  textInputWrapper: {
    position: 'relative',
    flex: 1,
    paddingRight: clearTextWidth
  },
  clearTextBtn: {
    position: 'absolute',
    top: 0,
    right: 0,
    bottom: 0,
    width: clearTextWidth,
    justifyContent: 'center',
    alignItems: 'center'
  },
  hideClearBtn: {
    width: 0,
    height: 0,
    overflow: 'hidden'
  },
  clearTextIcon: {
    width: 15,
    height: 15
  },
  inputIconWrapper: {
    position: 'absolute',
    left: 0,
    top: 0,
    bottom: 0,
    width: 30,
    justifyContent: 'center',
    alignItems: 'center'
  },
  multiline: {
    marginLeft: 10,
    marginTop: 10
  },
  borderBottom: {
    borderBottomWidth: _constants.BORDER_WIDTH,
    borderColor: '#878787'
  },
  multilineInput: {
    height: 100,
    borderWidth: _constants.BORDER_WIDTH,
    borderColor: '#878787',
    width: _constants.WINDOW_WIDTH - 20,
    borderRadius: 4,
    padding: 6
  }
});
}, 637, null, "YuanXC/src/styles/formStyles.js");
__d(/* YuanXC/src/components/TextInputCustomized.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/components/TextInputCustomized.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _Touchable = require(497          ); // 497 = ./Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var _imgs = require(436                ); // 436 = ../resources/imgs

var _imgs2 = babelHelpers.interopRequireDefault(_imgs);

var _formStyles = require(637                   ); // 637 = ../styles/formStyles

var _formStyles2 = babelHelpers.interopRequireDefault(_formStyles);

var _global = require(433               ); // 433 = ../styles/global

var _global2 = babelHelpers.interopRequireDefault(_global);

var emptyFunc = function emptyFunc() {};

var TextInputCustomized = function (_Component) {
  babelHelpers.inherits(TextInputCustomized, _Component);

  function TextInputCustomized(props) {
    babelHelpers.classCallCheck(this, TextInputCustomized);

    var _this = babelHelpers.possibleConstructorReturn(this, (TextInputCustomized.__proto__ || Object.getPrototypeOf(TextInputCustomized)).call(this, props));

    _this.state = {
      isFocused: false
    };
    _this._onFocus = function () {
      _this.setState({ isFocused: true });
    };

    _this._onBlur = function () {
      _this.props.onBlur();
      _this.setState({ isFocused: false });
    };
    return _this;
  }

  babelHelpers.createClass(TextInputCustomized, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.props.onDidMount();
      if (this.props.focusOnDidMount) {
        this.input.focus();
      }
    }
  }, {
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState) {
      return nextProps.flag !== this.props.flag || nextProps.placeholder !== this.props.placeholder || nextProps.value !== this.props.value || this.state.isFocused !== nextState.isFocused;
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var icon = this.props.icon || null,
          inputIcon = this.props.inputIcon,
          label = this.props.label,
          rightLabel = this.props.rightLabel,
          labelStyle = { color: '#333333', fontSize: 15 };
      if (this.props.labelWidth) {
        labelStyle.width = this.props.labelWidth;
      }
      var clearBtnStyle = this.props.value && this.state.isFocused ? _formStyles2.default.clearTextBtn : _formStyles2.default.hideClearBtn;
      return _react2.default.createElement(
        _reactNative.View,
        {
          style: [_formStyles2.default.formControl, this.props.style, this.props.multiline && _formStyles2.default.multiline, this.props.borderBottom && _formStyles2.default.borderBottom], __source: {
            fileName: _jsxFileName,
            lineNumber: 55
          }
        },
        icon ? icon : label ? _react2.default.createElement(
          _reactNative.Text,
          { style: labelStyle, __source: {
              fileName: _jsxFileName,
              lineNumber: 57
            }
          },
          label
        ) : null,
        _react2.default.createElement(
          _reactNative.View,
          { style: [_formStyles2.default.textInputWrapper, this.props.textInputWrapper, { paddingLeft: inputIcon ? 30 : 0 }], __source: {
              fileName: _jsxFileName,
              lineNumber: 58
            }
          },
          inputIcon ? _react2.default.createElement(
            _reactNative.View,
            { style: _formStyles2.default.inputIconWrapper, __source: {
                fileName: _jsxFileName,
                lineNumber: 61
              }
            },
            inputIcon
          ) : null,
          _react2.default.createElement(_reactNative.TextInput, {
            ref: function ref(_ref) {
              _this2.input = _ref;
            },
            keyboardType: this.props.keyboardType || 'default',
            placeholderTextColor: this.props.holderColor || "#999999",
            secureTextEntry: this.props.secureTextEntry,
            style: [_formStyles2.default.textInput, this.props.textInputStyle, this.props.multiline && _formStyles2.default.multilineInput],
            multiline: this.props.multiline,
            onChangeText: this.props.onChangeText,
            placeholder: this.props.placeholder,
            underlineColorAndroid: 'transparent',
            onBlur: this._onBlur,
            onFocus: this._onFocus,
            autoFocus: this.props.autoFocus || false,
            value: this.props.value ? this.props.value + '' : '', __source: {
              fileName: _jsxFileName,
              lineNumber: 66
            }
          }),
          !this.props.multiline && !this.props.hideClear && _react2.default.createElement(
            _Touchable2.default,
            {
              style: [clearBtnStyle, this.props.cleanStyle],
              feedback: true,
              onPress: this.props.onClear, __source: {
                fileName: _jsxFileName,
                lineNumber: 82
              }
            },
            _react2.default.createElement(
              _reactNative.View,
              { style: _global2.default.directionRow, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 86
                }
              },
              _imgs2.default.inputClear(_formStyles2.default.clearTextIcon)
            )
          )
        ),
        typeof rightLabel === "string" ? _react2.default.createElement(
          _reactNative.Text,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 91
            }
          },
          rightLabel
        ) : rightLabel
      );
    }
  }]);
  return TextInputCustomized;
}(_react.Component);

TextInputCustomized.defaultProps = {
  secureTextEntry: false,
  multiline: false,
  onChangeText: emptyFunc,
  onBlur: emptyFunc,
  onClear: emptyFunc,
  onDidMount: emptyFunc,
  keyboardType: 'default',
  focusOnDidMount: false,
  hideClear: false
};

TextInputCustomized.propTypes = {
  focusOnDidMount: _propTypes2.default.bool.isRequired,
  textInputStyle: _propTypes2.default.any,
  label: _propTypes2.default.string,
  labelWidth: _propTypes2.default.number,
  rightLabel: _propTypes2.default.any,
  style: _propTypes2.default.any,
  icon: _propTypes2.default.any,
  inputIcon: _propTypes2.default.any,
  multiline: _propTypes2.default.bool,
  onChangeText: _propTypes2.default.func.isRequired,
  onBlur: _propTypes2.default.func.isRequired,
  onClear: _propTypes2.default.func.isRequired,
  onDidMount: _propTypes2.default.func.isRequired,
  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  keyboardType: _propTypes2.default.string,
  placeholder: _propTypes2.default.string,
  secureTextEntry: _propTypes2.default.bool
};

exports.default = TextInputCustomized;
}, 638, null, "YuanXC/src/components/TextInputCustomized.js");
__d(/* YuanXC/src/utils/TD.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.init = init;
exports.onRegister = onRegister;
exports.onLogin = onLogin;
exports.onPay = onPay;

var _reactNative = require(12            ); // 12 = react-native

var RNTD = null;

function init(appId, channelId) {
  RNTD && RNTD.init(appId, channelId);
}

function onRegister(name) {
  RNTD && RNTD.onRegister(name);
}

function onLogin(name) {
  RNTD && RNTD.onLogin(name);
}

function onPay(userId, orderId, amount, payType) {
  RNTD && RNTD.onPay(userId, orderId, amount, payType);
}
}, 639, null, "YuanXC/src/utils/TD.js");
__d(/* YuanXC/src/pages/Setting.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/Setting.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _reactNavigation = require(371               ); // 371 = react-navigation

var _Touchable = require(497                      ); // 497 = ../components/Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var _GuideMenu = require(641                      ); // 641 = ../components/GuideMenu

var _GuideMenu2 = babelHelpers.interopRequireDefault(_GuideMenu);

var _MessageBox = require(625                       ); // 625 = ../components/MessageBox

var _MessageBox2 = babelHelpers.interopRequireDefault(_MessageBox);

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _color = require(587              ); // 587 = ../styles/color

var _color2 = babelHelpers.interopRequireDefault(_color);

var _constants = require(434                  ); // 434 = ../config/constants

var _userActions = require(630                     ); // 630 = ../actions/userActions

var userCreator = babelHelpers.interopRequireWildcard(_userActions);

var _Check = require(632             ); // 632 = ../utils/Check

var _Check2 = babelHelpers.interopRequireDefault(_Check);

var Setting = function (_Component) {
  babelHelpers.inherits(Setting, _Component);

  function Setting(props) {
    babelHelpers.classCallCheck(this, Setting);

    var _this = babelHelpers.possibleConstructorReturn(this, (Setting.__proto__ || Object.getPrototypeOf(Setting)).call(this, props));

    _this.state = {
      messageBox: {
        visible: false,
        content: '',
        button: null
      }
    };
    _this.second = 59;
    return _this;
  }

  babelHelpers.createClass(Setting, [{
    key: '_showOptionModal',
    value: function _showOptionModal(msg, onCancel, onConfirm) {
      this.props.navigation.setParams({
        gesturesEnabled: false
      });
      this.setState({
        messageBox: {
          visible: true,
          content: msg,
          button: [{
            text: '取消',
            onPress: onCancel
          }, {
            text: '确定',
            onPress: onConfirm
          }]
        }
      });
    }
  }, {
    key: '_logout',
    value: function _logout() {
      var _this2 = this;

      this._showOptionModal('确认退出登录？', function () {
        _this2.setState({ messageBox: { visible: false } }, function () {
          _this2.props.navigation.setParams({
            gesturesEnabled: true
          });
        });
      }, function () {
        _this2.setState({ messageBox: { visible: false } }, function () {
          _this2.context.callToast("已退出登录");
          _this2.props.userActions.userLogout();
          global.financeListoLoaded = false;
          global.userInfoLoaded = false;
          var navigateAction = _reactNavigation.NavigationActions.reset({
            index: 1,
            actions: [_reactNavigation.NavigationActions.navigate({ routeName: 'Main' }), _reactNavigation.NavigationActions.navigate({ routeName: 'Login' })]
          });
          _this2.props.navigation.dispatch(navigateAction);
        });
      });
    }
  }, {
    key: '_navigateCheck',
    value: function _navigateCheck(level, route, params, toast) {
      var routers = (0, _Check2.default)(this.props.user.check, level, route, params);
      if (routers[0]) {
        this.props.navigation.navigate(routers[0], routers[1]);
      } else {
        toast && this.context.callToast(toast);
      }
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _props = this.props,
          userActions = _props.userActions,
          user = _props.user;

      userActions.userProfile(!user.userInfo.mobile);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var navigate = this.props.navigation.navigate;
      var _props$user = this.props.user,
          userInfo = _props$user.userInfo,
          check = _props$user.check;

      return _react2.default.createElement(
        _reactNative.View,
        { style: { flex: 1 }, __source: {
            fileName: _jsxFileName,
            lineNumber: 106
          }
        },
        _react2.default.createElement(
          _reactNative.ScrollView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 107
            }
          },
          _react2.default.createElement(
            _UtilLib.BlockWrapper,
            { marginType: 'top', __source: {
                fileName: _jsxFileName,
                lineNumber: 108
              }
            },
            _react2.default.createElement(
              _UtilLib.GrayBottomRowWrapper,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 109
                }
              },
              _react2.default.createElement(_GuideMenu2.default, { title: '\u7ED1\u5B9A\u624B\u673A\u53F7',
                iconComment: '' + (userInfo.mobile && userInfo.mobile.replace(/^(\d{3})\d{4}(\d+)/, "$1****$2")),
                onPress: function onPress() {
                  return navigate("PhoneBind");
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 110
                }
              })
            ),
            _react2.default.createElement(
              _UtilLib.GrayBottomRowWrapper,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 114
                }
              },
              _react2.default.createElement(_GuideMenu2.default, { title: '\u5B9E\u540D\u8BA4\u8BC1', iconComment: userInfo.idCard || "未认证",
                commentTextColor: !userInfo.idCard && "#4285F4",
                onPress: function onPress() {
                  return _this3._navigateCheck(0, null, null, "已实名认证");
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 115
                }
              })
            ),
            _react2.default.createElement(
              _UtilLib.GrayBottomRowWrapper,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 119
                }
              },
              _react2.default.createElement(_GuideMenu2.default, { title: '\u6211\u7684\u94F6\u884C\u5361', iconComment: userInfo.bankCard || "未绑定",
                commentTextColor: !userInfo.bankCard && "#4285F4",
                onPress: function onPress() {
                  return _this3._navigateCheck(1, "BankCardDetail");
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 120
                }
              })
            ),
            _react2.default.createElement(
              _UtilLib.GrayBottomRowWrapper,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 124
                }
              },
              _react2.default.createElement(_GuideMenu2.default, { title: '\u4EA4\u6613\u5BC6\u7801', iconComment: userInfo.isSetTradingPassword ? "修改" : "未设置",
                commentTextColor: !userInfo.isSetTradingPassword && "#4285F4",
                onPress: function onPress() {
                  return _this3._navigateCheck(2, 'PayPasswordModify');
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 125
                }
              })
            ),
            _react2.default.createElement(
              _UtilLib.RowWrapper,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 129
                }
              },
              _react2.default.createElement(_GuideMenu2.default, { title: '\u767B\u5F55\u5BC6\u7801', iconComment: '\u4FEE\u6539',
                onPress: function onPress() {
                  return navigate('ModifyPassword');
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 130
                }
              })
            )
          ),
          _react2.default.createElement(
            _UtilLib.BlockWrapper,
            { marginType: 'both', __source: {
                fileName: _jsxFileName,
                lineNumber: 134
              }
            },
            _react2.default.createElement(
              _UtilLib.RowWrapper,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 135
                }
              },
              _react2.default.createElement(_GuideMenu2.default, { title: '\u5173\u4E8E',
                onPress: function onPress() {
                  return navigate("AboutUs");
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 136
                }
              })
            )
          ),
          _react2.default.createElement(_MessageBox2.default, {
            visible: this.state.messageBox.visible,
            content: this.state.messageBox.content,
            button: this.state.messageBox.button, __source: {
              fileName: _jsxFileName,
              lineNumber: 140
            }
          })
        ),
        _react2.default.createElement(
          _UtilLib.BlockWrapper,
          { style: { position: 'absolute', bottom: 0, left: 0, width: _constants.WINDOW_WIDTH }, __source: {
              fileName: _jsxFileName,
              lineNumber: 145
            }
          },
          _react2.default.createElement(
            _Touchable2.default,
            {
              style: { justifyContent: 'center', alignItems: 'center', paddingVertical: 15 },
              onPress: this._logout.bind(this), __source: {
                fileName: _jsxFileName,
                lineNumber: 146
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: _color2.default.font.blue, size: '14', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 149
                }
              },
              '\u5B89\u5168\u9000\u51FA'
            )
          )
        )
      );
    }
  }]);
  return Setting;
}(_react.Component);

Setting.navigationOptions = function (_ref) {
  var navigation = _ref.navigation,
      screenProps = _ref.screenProps;
  return {
    title: '设置'
  };
};

Setting.propTypes = {};

Setting.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
  var user = state.user;

  return { user: user };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var userActions = (0, _redux.bindActionCreators)(userCreator, dispatch);
  return { userActions: userActions };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Setting);
}, 640, null, "YuanXC/src/pages/Setting.js");
__d(/* YuanXC/src/components/GuideMenu.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/components/GuideMenu.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _Touchable = require(497          ); // 497 = ./Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var _imgs = require(436                ); // 436 = ../resources/imgs

var _imgs2 = babelHelpers.interopRequireDefault(_imgs);

var _constants = require(434                  ); // 434 = ../config/constants

var emptyFunc = function emptyFunc() {};

var GuideMenu = function (_Component) {
  babelHelpers.inherits(GuideMenu, _Component);

  function GuideMenu() {
    babelHelpers.classCallCheck(this, GuideMenu);
    return babelHelpers.possibleConstructorReturn(this, (GuideMenu.__proto__ || Object.getPrototypeOf(GuideMenu)).apply(this, arguments));
  }

  babelHelpers.createClass(GuideMenu, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var textTitleStyle = [styles.textTitle, this.props.titleStyle];
      if (typeof this.props.titleWidth === 'number') {
        textTitleStyle.push({ width: this.props.titleWidth });
      }
      return _react2.default.createElement(
        _Touchable2.default,
        {
          style: [styles.container, this.props.style, this.props.bottomBorder && styles.bottomBorder, this.props.topBorder && styles.topBorder],
          onPress: this.props.onPress, feedback: this.props.feedback, __source: {
            fileName: _jsxFileName,
            lineNumber: 20
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          { style: styles.textWrapper, __source: {
              fileName: _jsxFileName,
              lineNumber: 23
            }
          },
          this.props.icon ? _react2.default.createElement(
            _reactNative.View,
            { style: { marginRight: 10 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 24
              }
            },
            this.props.icon
          ) : null,
          _react2.default.createElement(
            _reactNative.Text,
            { style: textTitleStyle, __source: {
                fileName: _jsxFileName,
                lineNumber: 25
              }
            },
            this.props.title
          ),
          function () {
            if (_this2.props.content && (_this2.props.content + '').trim()) {
              var contentStyle = [styles.textContent, _this2.props.contentStyle, { color: _this2.props.contentColor || '#888888', textAlign: _this2.props.contentAlign || 'center' }];
              return _react2.default.createElement(
                _reactNative.Text,
                { style: contentStyle, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 30
                  }
                },
                _this2.props.content
              );
            } else if (_this2.props.defaultContent) {
              var defaultContentStyle = [styles.textContent, { color: '#999999', textAlign: _this2.props.contentAlign || 'center' }];
              return _react2.default.createElement(
                _reactNative.Text,
                { style: defaultContentStyle, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 33
                  }
                },
                _this2.props.defaultContent
              );
            }
          }()
        ),
        this.props.showRightIcon ? _react2.default.createElement(
          _reactNative.View,
          { style: { flexDirection: 'row', alignItems: 'center' }, __source: {
              fileName: _jsxFileName,
              lineNumber: 39
            }
          },
          this.props.iconComment1 && _react2.default.createElement(
            _reactNative.View,
            { style: [this.props.commentStyle, { marginRight: 5 }], __source: {
                fileName: _jsxFileName,
                lineNumber: 40
              }
            },
            this.props.iconComment1
          ),
          this.props.iconComment ? _react2.default.createElement(
            _reactNative.View,
            { style: [this.props.commentStyle, { marginRight: 5 }], __source: {
                fileName: _jsxFileName,
                lineNumber: 41
              }
            },
            _react2.default.createElement(
              _reactNative.Text,
              { style: [{ color: this.props.commentTextColor || '#B6B6B6', fontSize: 13 }], __source: {
                  fileName: _jsxFileName,
                  lineNumber: 41
                }
              },
              this.props.iconComment
            )
          ) : null,
          !this.props.hideArrow && (this.props.rightArrow || _imgs2.default.rightArrowGary())
        ) : null
      );
    }
  }]);
  return GuideMenu;
}(_react.Component);

exports.default = GuideMenu;


GuideMenu.defaultProps = {
  onPress: emptyFunc,
  title: '',
  showRightIcon: true
};

GuideMenu.propTypes = {
  icon: _propTypes2.default.any,
  iconComment: _propTypes2.default.any,
  style: _propTypes2.default.any,
  title: _propTypes2.default.string,
  titleWidth: _propTypes2.default.number,
  titleColor: _propTypes2.default.string,
  content: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  contentAlign: _propTypes2.default.string,
  contentColor: _propTypes2.default.string,
  defaultContent: _propTypes2.default.string,
  onPress: _propTypes2.default.func.isRequired,
  showRightIcon: _propTypes2.default.bool,
  bottomBorder: _propTypes2.default.bool
};

var styles = _reactNative.StyleSheet.create({
  container: {
    backgroundColor: "#FFF",
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: 14
  },
  textWrapper: {
    flex: 1,
    flexDirection: 'row',
    alignItems: 'center'
  },
  textTitle: {
    fontSize: 15,
    color: '#333'
  },
  textContent: {
    fontSize: 15
  },
  bottomBorder: {
    borderBottomWidth: _constants.BORDER_WIDTH,
    borderColor: '#eeeeee'
  },
  topBorder: {
    borderTopWidth: _constants.BORDER_WIDTH,
    borderColor: '#eeeeee'
  }
});
}, 641, null, "YuanXC/src/components/GuideMenu.js");
__d(/* YuanXC/src/pages/Feedback.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/Feedback.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  background-color:#fff;\n  margin-top:10;\n  padding-horizontal:15;\n  padding-vertical:10;\n'], ['\n  background-color:#fff;\n  margin-top:10;\n  padding-horizontal:15;\n  padding-vertical:10;\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _reactNative = require(12            ); // 12 = react-native

var _color = require(587              ); // 587 = ../styles/color

var _color2 = babelHelpers.interopRequireDefault(_color);

var _TextInputCustomized = require(638                                ); // 638 = ../components/TextInputCustomized

var _TextInputCustomized2 = babelHelpers.interopRequireDefault(_TextInputCustomized);

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _http = require(622               ); // 622 = ../requests/http

var InputView = _native2.default.View(_templateObject);

var Feedback = function (_Component) {
  babelHelpers.inherits(Feedback, _Component);

  function Feedback(props) {
    babelHelpers.classCallCheck(this, Feedback);

    var _this = babelHelpers.possibleConstructorReturn(this, (Feedback.__proto__ || Object.getPrototypeOf(Feedback)).call(this, props));

    _this.state = {
      feedbackText: '',
      mobile: '',
      loading: false
    };
    return _this;
  }

  babelHelpers.createClass(Feedback, [{
    key: '_submit',
    value: function _submit() {
      var _this2 = this;

      if (!this.state.feedbackText) {
        this.context.callToast('请输入问题描述');
      } else {
        (0, _http.uploadFeedback)({
          content: this.state.feedbackText,
          mobile: this.state.mobile
        }).then(function (data) {
          _this2.setState({ loading: false });
          if (data.data.code === 0) {
            _this2.context.callToast("提交成功", true);
            setTimeout(function () {
              _this2.props.navigation.goBack();
            }, 500);
          } else {
            _this2.context.callToast(data.data.msg);
          }
        }).catch(function () {
          _this2.setState({ loading: false });
          _this2.context.callToast('提交失败');
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      return _react2.default.createElement(
        _UtilLib.ScrollLayout,
        { color: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 68
          }
        },
        _react2.default.createElement(
          InputView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 69
            }
          },
          _react2.default.createElement(_reactNative.TextInput, {
            value: this.state.feedbackText,
            placeholderTextColor: '#999999',
            style: { height: 100, paddingVertical: 5, fontSize: 14, color: _color2.default.black },
            placeholder: '\u8BF7\u8BE6\u7EC6\u63CF\u8FF0\u60A8\u7684\u95EE\u9898\u6216\u5EFA\u8BAE\uFF0C\u6211\u4EEC\u5C06\u53CA\u65F6\u8DDF\u8FDB\u89E3\u51B3',
            underlineColorAndroid: 'transparent',
            multiline: true,
            onChangeText: function onChangeText(text) {
              _this3.setState({ feedbackText: text });
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 70
            }
          })
        ),
        _react2.default.createElement(
          InputView,
          { style: { paddingVertical: 0 }, __source: {
              fileName: _jsxFileName,
              lineNumber: 81
            }
          },
          _react2.default.createElement(_TextInputCustomized2.default, {
            value: this.state.mobile,
            keyboardType: 'numeric',
            onChangeText: function onChangeText(text) {
              _this3.setState({ mobile: text });
            },
            placeholder: '\u624B\u673A\u53F7\uFF0F\u90AE\u7BB1\uFF08\u9009\u586B\uFF0C\u65B9\u4FBF\u6211\u4EEC\u8054\u7CFB\u60A8\uFF09',
            onClear: function onClear() {
              _this3.setState({ mobile: '' });
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 82
            }
          })
        ),
        _react2.default.createElement(
          _UtilLib.CenterView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 94
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledButtom,
            { feedback: this.state.feedbackText ? true : false, height: '38', radius: '19',
              color: this.state.feedbackText ? _color2.default.background.blue : '#dddddd', top: '40', width: '153',
              onPress: function onPress() {
                return _this3.state.feedbackText && _this3._submit();
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 95
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { size: '13', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 98
                }
              },
              '\u786E\u5B9A'
            )
          )
        ),
        _react2.default.createElement(_UtilLib.ActivityIndicatorInlineBlock, { visible: this.state.loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 101
          }
        })
      );
    }
  }]);
  return Feedback;
}(_react.Component);

Feedback.navigationOptions = function (_ref) {
  var navigation = _ref.navigation,
      screenProps = _ref.screenProps;
  return {
    title: '意见反馈'
  };
};

exports.default = Feedback;


Feedback.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};
}, 642, null, "YuanXC/src/pages/Feedback.js");
__d(/* YuanXC/src/pages/HelpCenter.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/HelpCenter.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _GuideMenu = require(641                      ); // 641 = ../components/GuideMenu

var _GuideMenu2 = babelHelpers.interopRequireDefault(_GuideMenu);

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _http = require(622               ); // 622 = ../requests/http

var HelpCenter = function (_Component) {
  babelHelpers.inherits(HelpCenter, _Component);

  function HelpCenter(props) {
    babelHelpers.classCallCheck(this, HelpCenter);
    return babelHelpers.possibleConstructorReturn(this, (HelpCenter.__proto__ || Object.getPrototypeOf(HelpCenter)).call(this, props));
  }

  babelHelpers.createClass(HelpCenter, [{
    key: 'render',
    value: function render() {
      var navigate = this.props.navigation.navigate;

      return _react2.default.createElement(
        _reactNative.ScrollView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 25
          }
        },
        _react2.default.createElement(
          _UtilLib.BlockWrapper,
          { marginType: 'top', __source: {
              fileName: _jsxFileName,
              lineNumber: 26
            }
          },
          _react2.default.createElement(
            _UtilLib.GrayBottomRowWrapper,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 27
              }
            },
            _react2.default.createElement(_GuideMenu2.default, { title: '\u5E2E\u52A9\u4E2D\u5FC3', onPress: function onPress() {
                navigate('WebView', { url: (0, _http.createApiUrl)("/user/h5/help-center") });
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 28
              }
            })
          ),
          _react2.default.createElement(
            _UtilLib.RowWrapper,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 32
              }
            },
            _react2.default.createElement(_GuideMenu2.default, { title: '\u610F\u89C1\u53CD\u9988', onPress: function onPress() {
                navigate("Feedback");
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 33
              }
            })
          )
        )
      );
    }
  }]);
  return HelpCenter;
}(_react.Component);

HelpCenter.navigationOptions = function (_ref) {
  var navigation = _ref.navigation,
      screenProps = _ref.screenProps;
  return {
    title: '帮助与反馈'
  };
};

exports.default = HelpCenter;
}, 643, null, "YuanXC/src/pages/HelpCenter.js");
__d(/* YuanXC/src/pages/ModifyPassword.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/ModifyPassword.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  background-color:#ffffff;\n  margin-top:10;\n  width:', ';\n'], ['\n  background-color:#ffffff;\n  margin-top:10;\n  width:', ';\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  border-bottom-color:#F6F6F6;\n  border-bottom-width:1;\n  padding-left:15;\n'], ['\n  border-bottom-color:#F6F6F6;\n  border-bottom-width:1;\n  padding-left:15;\n']),
    _templateObject3 = babelHelpers.taggedTemplateLiteral(['\n  width:', ';\n  margin-top:10;\n  background-color:#fff;\n'], ['\n  width:', ';\n  margin-top:10;\n  background-color:#fff;\n']),
    _templateObject4 = babelHelpers.taggedTemplateLiteral(['\n  align-self:flex-start;\n  margin-left:25;\n  margin-top:10;\n'], ['\n  align-self:flex-start;\n  margin-left:25;\n  margin-top:10;\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _TextInputCustomized = require(638                                ); // 638 = ../components/TextInputCustomized

var _TextInputCustomized2 = babelHelpers.interopRequireDefault(_TextInputCustomized);

var _constants = require(434                  ); // 434 = ../config/constants

var _http = require(622               ); // 622 = ../requests/http

var _axios = require(588                ); // 588 = ../requests/axios

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var View = _native2.default.View(_templateObject, _constants.WINDOW_WIDTH);
var BorderInput = (0, _native2.default)(_TextInputCustomized2.default)(_templateObject2);
var LInputView = _UtilLib.CenterView.extend(_templateObject3, _constants.WINDOW_WIDTH);
var DescView = _native2.default.View(_templateObject4);

var ModifyPassword = function (_Component) {
  babelHelpers.inherits(ModifyPassword, _Component);

  function ModifyPassword(props) {
    babelHelpers.classCallCheck(this, ModifyPassword);

    var _this = babelHelpers.possibleConstructorReturn(this, (ModifyPassword.__proto__ || Object.getPrototypeOf(ModifyPassword)).call(this, props));

    _this.state = {
      oldPassword: '',
      newPassword: '',
      rePassword: '',
      loading: false
    };
    return _this;
  }

  babelHelpers.createClass(ModifyPassword, [{
    key: '_submit',
    value: function _submit() {
      var _this2 = this;

      if (!this.state.oldPassword) {
        this.context.callToast('请输入原密码');
      } else if (!this.state.newPassword) {
        this.context.callToast('请输入新密码');
      } else if (!/^(?=.*?[a-zA-Z])(?=.*?[0-9])[a-zA-Z0-9]{6,20}$/.test(this.state.newPassword)) {
        this.context.callToast('密码格式有误');
      } else if (!this.state.rePassword) {
        this.context.callToast('请输入确认密码');
      } else if (this.state.newPassword !== this.state.rePassword) {
        this.context.callToast('两次输入不一致');
      } else {
        this.setState({ loading: true });
        (0, _http.modifyPassword)({
          oldPassword: this.state.oldPassword,
          newPassword: this.state.newPassword
        }).then(function (res) {
          _this2.setState({ loading: false });
          var data = res.data;
          if (0 === data.code) {
            _this2.context.callToast('密码修改成功', 'success');
            (0, _axios.loginUser)(data.data.token);
            _this2.props.navigation.goBack();
          } else {
            _this2.context.callToast(data.msg);
          }
        }).catch(function (err) {
          _this2.setState({ loading: false });
          _this2.context.callToast("提交失败");
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      return _react2.default.createElement(
        _UtilLib.ScrollLayout,
        { color: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 91
          }
        },
        _react2.default.createElement(
          _UtilLib.CenterView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 92
            }
          },
          _react2.default.createElement(
            View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 93
              }
            },
            _react2.default.createElement(BorderInput, {
              secureTextEntry: true,
              value: this.state.oldPassword,
              onChangeText: function onChangeText(text) {
                _this3.setState({ oldPassword: text });
              },
              placeholder: '\u8BF7\u8F93\u5165\u539F\u5BC6\u7801',
              onClear: function onClear() {
                _this3.setState({ oldPassword: '' });
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 94
              }
            }),
            _react2.default.createElement(BorderInput, {
              secureTextEntry: true,
              value: this.state.newPassword,
              onChangeText: function onChangeText(text) {
                _this3.setState({ newPassword: text });
              },
              placeholder: '\u8BF7\u8F93\u5165\u65B0\u5BC6\u7801',
              onClear: function onClear() {
                _this3.setState({ newPassword: '' });
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 105
              }
            }),
            _react2.default.createElement(BorderInput, {
              secureTextEntry: true,
              value: this.state.rePassword,
              onChangeText: function onChangeText(text) {
                _this3.setState({ rePassword: text });
              },
              placeholder: '\u8BF7\u8F93\u5165\u786E\u8BA4\u5BC6\u7801',
              onClear: function onClear() {
                _this3.setState({ rePassword: '' });
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 116
              }
            })
          ),
          _react2.default.createElement(
            DescView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 128
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#9b9b9b', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 129
                }
              },
              '\u8BF7\u4F7F\u75286\uFF5E20\u4F4D\u7531\u6570\u5B57\u3001\u5B57\u6BCD\u7EC4\u6210\u7684\u5BC6\u7801'
            )
          ),
          _react2.default.createElement(
            _UtilLib.StyledButtom,
            { onPress: this._submit.bind(this), __source: {
                fileName: _jsxFileName,
                lineNumber: 131
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { size: '17', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 132
                }
              },
              '\u786E \u5B9A'
            )
          )
        ),
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: this.state.loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 135
          }
        })
      );
    }
  }]);
  return ModifyPassword;
}(_react.Component);

ModifyPassword.navigationOptions = function (_ref) {
  var navigation = _ref.navigation,
      screenProps = _ref.screenProps;
  return {
    title: '修改密码'
  };
};

ModifyPassword.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

exports.default = ModifyPassword;
}, 644, null, "YuanXC/src/pages/ModifyPassword.js");
__d(/* YuanXC/src/pages/Register.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/Register.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  width:', ';\n  margin-top:14;\n'], ['\n  width:', ';\n  margin-top:14;\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  border-width:1;\n  border-color:#E0E0E0;\n  margin-top:24;\n  height:50;\n  border-radius:5;\n'], ['\n  border-width:1;\n  border-color:#E0E0E0;\n  margin-top:24;\n  height:50;\n  border-radius:5;\n']),
    _templateObject3 = babelHelpers.taggedTemplateLiteral(['\n  align-self:flex-start;\n  margin-left:15;\n  margin-top:10;\n'], ['\n  align-self:flex-start;\n  margin-left:15;\n  margin-top:10;\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _reactNavigation = require(371               ); // 371 = react-navigation

var _reactNativeDeviceInfo = require(435                       ); // 435 = react-native-device-info

var _reactNativeDeviceInfo2 = babelHelpers.interopRequireDefault(_reactNativeDeviceInfo);

var _constants = require(434                  ); // 434 = ../config/constants

var _reactNative = require(12            ); // 12 = react-native

var _axios = require(588                ); // 588 = ../requests/axios

var _TextInputCustomized = require(638                                ); // 638 = ../components/TextInputCustomized

var _TextInputCustomized2 = babelHelpers.interopRequireDefault(_TextInputCustomized);

var _Touchable = require(497                      ); // 497 = ../components/Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _color = require(587              ); // 587 = ../styles/color

var _color2 = babelHelpers.interopRequireDefault(_color);

var _imgs = require(436                ); // 436 = ../resources/imgs

var _imgs2 = babelHelpers.interopRequireDefault(_imgs);

var _http = require(622               ); // 622 = ../requests/http

var _modalActions = require(646                      ); // 646 = ../actions/modalActions

var modalCreator = babelHelpers.interopRequireWildcard(_modalActions);

var _userActions = require(630                     ); // 630 = ../actions/userActions

var userCreator = babelHelpers.interopRequireWildcard(_userActions);

var _TD = require(639          ); // 639 = ../utils/TD

var RNTD = babelHelpers.interopRequireWildcard(_TD);


var LInputView = _native2.default.View(_templateObject, _constants.WINDOW_WIDTH - 40);
var Input = (0, _native2.default)(_TextInputCustomized2.default)(_templateObject2);
var DescView = _native2.default.View(_templateObject3);

var textInputIcon = {
  width: 40,
  height: 40,
  resizeMode: 'center'
};

var Register = function (_Component) {
  babelHelpers.inherits(Register, _Component);

  function Register(props) {
    babelHelpers.classCallCheck(this, Register);

    var _this = babelHelpers.possibleConstructorReturn(this, (Register.__proto__ || Object.getPrototypeOf(Register)).call(this, props));

    _this.state = {
      mobile: '',
      pwd: '',
      code: '',
      mode: 1,
      second: '',
      loading: false,
      sending: false,
      canSend: true
    };
    _this.second = 59;
    return _this;
  }

  babelHelpers.createClass(Register, [{
    key: '_submit',
    value: function _submit() {
      var _this2 = this;

      if (!this.state.mobile) {
        this.context.callToast('请输入手机号');
      } else if (!this.state.code) {
        this.context.callToast('请输入验证码');
      } else if (!/^[1][34578][0-9]{9}$/.test(this.state.mobile)) {
        this.context.callToast('请输入正确的手机号');
      } else {
        this.setState({ loading: true });
        (0, _http.checkCode)({ mobile: this.state.mobile, code: this.state.code, type: 1 }).then(function (data) {
          _this2.setState({ loading: false });
          if (data.data.code === 0) {
            _this2.setState({ mode: 2 });
          } else {
            _this2.context.callToast(data.data.msg);
          }
        }).catch(function () {
          _this2.setState({ loading: false });
          _this2.context.callToast('提交失败');
        });
      }
    }
  }, {
    key: '_sendCode',
    value: function _sendCode() {
      var _this3 = this;

      if (!this.state.sending && this.state.canSend) {
        if (!this.state.mobile) {
          this.context.callToast('请输入手机号');
        } else if (!/^[1][34578][0-9]{9}$/.test(this.state.mobile)) {
          this.context.callToast('请输入正确的手机号');
        } else {
          this.setState({ sending: true });
          (0, _http.sendCode)({ mobile: this.state.mobile, type: 1 }).then(function (data) {
            if (data.data.code === 0) {
              _this3.context.callToast('验证码发送成功');
              _this3.setState({ second: _this3.second, canSend: false, sending: false }, function () {
                _this3.interval = setInterval(function () {
                  if (_this3.state.second == 1) {
                    clearInterval(_this3.interval);
                    _this3.setState({ canSend: true, second: '' });
                  } else {
                    _this3.setState({ second: --_this3.state.second });
                  }
                }, 1000);
              });
            } else {
              _this3.setState({ sending: false });
              _this3.context.callToast(data.data.msg);
            }
          }).catch(function () {
            _this3.setState({ sending: false });
            _this3.context.callToast('发送失败');
          });
        }
      }
    }
  }, {
    key: '_register',
    value: function _register() {
      var _this4 = this;

      if (!this.state.pwd) {
        this.context.callToast('请输入登录密码');
      } else if (!/^(?=.*?[a-zA-Z])(?=.*?[0-9])[a-zA-Z0-9]{6,20}$/.test(this.state.pwd)) {
        this.context.callToast('密码格式有误');
      } else if (this.state.pwd !== this.state.repwd) {
        this.context.callToast('两次密码输入不一致');
      } else {
        var data = {
          mobile: this.state.mobile,
          password: this.state.pwd,
          code: this.state.code,
          deviceName: _reactNativeDeviceInfo2.default.getModel(),
          deviceId: global.rid || '',
          registerFrom: _constants.OS === 'ios' ? 3 : 2,
          osName: _constants.OS,
          sid: _constants.Channel,
          packageName: _constants.PackageName
        };
        this.setState({ loading: true });
        (0, _http.register)(data).then(function (data) {
          _this4.setState({ loading: false });
          if (data.data.code === 0) {
            _this4.context.callToast('注册成功', true);
            (0, _axios.loginUser)(data.data.data.token);
            _this4.props.userActions.userProfile(true);
            _this4.props.navigation.dispatch(_reactNavigation.NavigationActions.back({ key: global.loginRouter }));

            RNTD.onRegister(_this4.state.mobile);
          } else {
            _this4.context.callToast(data.data.msg);
          }
        }).catch(function () {
          _this4.setState({ loading: false });
          _this4.context.callToast('提交失败');
        });
      }
    }
  }, {
    key: '_renderReg',
    value: function _renderReg() {
      var _this5 = this;

      return _react2.default.createElement(
        _UtilLib.CenterView,
        { style: { flex: 1, backgroundColor: "#fff" }, __source: {
            fileName: _jsxFileName,
            lineNumber: 170
          }
        },
        _react2.default.createElement(
          LInputView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 171
            }
          },
          _react2.default.createElement(Input, {
            icon: _imgs2.default.mobile(textInputIcon),
            value: this.state.mobile,
            onChangeText: function onChangeText(text) {
              _this5.setState({ mobile: text });
            },
            keyboardType: 'numeric',
            placeholder: '\u8BF7\u8F93\u5165\u624B\u673A\u53F7\u7801',
            textInputStyle: { height: 44 },
            onClear: function onClear() {
              _this5.setState({ mobile: '' });
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 172
            }
          }),
          _react2.default.createElement(Input, {
            icon: _imgs2.default.code(textInputIcon),
            value: this.state.code,
            onChangeText: function onChangeText(text) {
              _this5.setState({ code: text });
            },
            hideClear: true,
            placeholder: '\u8BF7\u8F93\u5165\u77ED\u4FE1\u9A8C\u8BC1\u7801',
            keyboardType: 'numeric',
            textInputStyle: { height: 44 },
            onClear: function onClear() {
              _this5.setState({ code: '' });
            },
            flag: this.state.canSend + this.state.second + this.state.sending,
            rightLabel: _react2.default.createElement(
              _UtilLib.StyledButtom,
              { width: '100', height: '50', top: '-1', radius: '0',
                style: {
                  borderTopRightRadius: 4,
                  borderBottomRightRadius: 4
                },
                color: !this.state.canSend || this.state.sending ? "#BBBBBB" : "#FD863F",
                feedback: this.state.canSend && !this.state.sending,
                onPress: this._sendCode.bind(this), __source: {
                  fileName: _jsxFileName,
                  lineNumber: 200
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '14', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 208
                  }
                },
                this.state.second ? this.state.second + 'S\u540E\u91CD\u53D1' : '获取验证码'
              )
            ),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 185
            }
          }),
          _react2.default.createElement(
            _UtilLib.RowView,
            { style: { marginTop: 20 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 212
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#999999', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 213
                }
              },
              '\u6CE8\u518C\u5373\u8868\u793A\u60A8\u5DF2\u540C\u610F'
            ),
            _react2.default.createElement(
              _Touchable2.default,
              {
                onPress: function onPress() {
                  return _this5.props.navigation.navigate("WebView", { url: (0, _http.createApiUrl)('/user/h5/register-protocol') });
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 214
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#ED7148', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 216
                  }
                },
                '\u300A\u6CE8\u518C\u534F\u8BAE\u300B'
              )
            )
          ),
          _react2.default.createElement(
            _UtilLib.StyledButtom,
            { onPress: this._submit.bind(this), __source: {
                fileName: _jsxFileName,
                lineNumber: 219
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { size: '17', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 220
                }
              },
              '\u4E0B\u4E00\u6B65'
            )
          )
        ),
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: this.state.loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 223
          }
        })
      );
    }
  }, {
    key: '_renderPwd',
    value: function _renderPwd() {
      var _this6 = this;

      return _react2.default.createElement(
        _UtilLib.CenterView,
        { style: { flex: 1, backgroundColor: "#fff" }, __source: {
            fileName: _jsxFileName,
            lineNumber: 230
          }
        },
        _react2.default.createElement(
          LInputView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 231
            }
          },
          _react2.default.createElement(Input, {
            secureTextEntry: true,
            icon: _imgs2.default.password(textInputIcon),
            labelWidth: 105,
            value: this.state.pwd,
            onChangeText: function onChangeText(text) {
              _this6.setState({ pwd: text });
            },
            placeholder: '\u8BF7\u8F93\u5165\u767B\u5F55\u5BC6\u7801',
            onClear: function onClear() {
              _this6.setState({ pwd: '' });
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 232
            }
          }),
          _react2.default.createElement(Input, {
            secureTextEntry: true,
            icon: _imgs2.default.password(textInputIcon),
            labelWidth: 105,
            value: this.state.repwd,
            onChangeText: function onChangeText(text) {
              _this6.setState({ repwd: text });
            },
            placeholder: '\u518D\u6B21\u8F93\u5165\u767B\u5F55\u5BC6\u7801',
            onClear: function onClear() {
              _this6.setState({ repwd: '' });
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 245
            }
          }),
          _react2.default.createElement(
            DescView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 258
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#9b9b9b', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 259
                }
              },
              '\u8BF7\u4F7F\u75286\uFF5E20\u4F4D\u7531\u6570\u5B57\u3001\u5B57\u6BCD\u7EC4\u6210\u7684\u5BC6\u7801'
            )
          ),
          _react2.default.createElement(
            _UtilLib.StyledButtom,
            { onPress: this._register.bind(this), __source: {
                fileName: _jsxFileName,
                lineNumber: 261
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { size: '17', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 262
                }
              },
              '\u63D0\u4EA4'
            )
          )
        ),
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: this.state.loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 265
          }
        })
      );
    }
  }, {
    key: '_bonusNavigate',
    value: function _bonusNavigate() {
      this._bonusClose();
      this.props.navigation.navigate("WebView", { url: (0, _http.createApiUrl)("/h5/activity/ad-operations/new") });
    }
  }, {
    key: '_bonusClose',
    value: function _bonusClose() {
      this.props.modalActions.toggleModal();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.interval && clearInterval(this.interval);
    }
  }, {
    key: 'render',
    value: function render() {
      return this.state.mode === 1 ? this._renderReg() : this._renderPwd();
    }
  }]);
  return Register;
}(_react.Component);

Register.navigationOptions = {
  title: '注册'
};


Register.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
  return {};
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var modalActions = (0, _redux.bindActionCreators)(modalCreator, dispatch);
  var userActions = (0, _redux.bindActionCreators)(userCreator, dispatch);
  return { modalActions: modalActions, userActions: userActions };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Register);
}, 645, null, "YuanXC/src/pages/Register.js");
__d(/* YuanXC/src/actions/modalActions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toggleModal = toggleModal;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);
function toggleModal(children) {
  var swiperClose = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var time = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

  return function (dispatch, getState) {
    if (children) {
      setTimeout(function () {
        dispatch(_toggleModal({
          visible: !getState().modal.visible,
          children: children,
          swiperClose: swiperClose
        }));
      }, time);
    } else {
      setTimeout(function () {
        dispatch(_toggleModal({ visible: !getState().modal.visible, swiperClose: swiperClose }));
      }, time);
    }
  };
}

function _toggleModal(data) {
  return babelHelpers.extends({
    type: types.TOGGLE_MODAL
  }, data);
}
}, 646, null, "YuanXC/src/actions/modalActions.js");
__d(/* YuanXC/src/pages/ForgetPassword.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/ForgetPassword.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  width:', ';\n  margin-top:14;\n'], ['\n  width:', ';\n  margin-top:14;\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  border-width:1;\n  border-color:#E0E0E0;\n  margin-top:24;\n  height:50;\n  border-radius:5;\n'], ['\n  border-width:1;\n  border-color:#E0E0E0;\n  margin-top:24;\n  height:50;\n  border-radius:5;\n']),
    _templateObject3 = babelHelpers.taggedTemplateLiteral(['\n  background-color:#ffffff;\n  margin-top:10;\n  padding-left:15;\n'], ['\n  background-color:#ffffff;\n  margin-top:10;\n  padding-left:15;\n']),
    _templateObject4 = babelHelpers.taggedTemplateLiteral(['\n  margin-right:15;\n'], ['\n  margin-right:15;\n']),
    _templateObject5 = babelHelpers.taggedTemplateLiteral(['\n  align-self:flex-start;\n  margin-left:15;\n  margin-top:10;\n'], ['\n  align-self:flex-start;\n  margin-left:15;\n  margin-top:10;\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _reactNavigation = require(371               ); // 371 = react-navigation

var _reactNativeDeviceInfo = require(435                       ); // 435 = react-native-device-info

var _reactNativeDeviceInfo2 = babelHelpers.interopRequireDefault(_reactNativeDeviceInfo);

var _reactNative = require(12            ); // 12 = react-native

var _Touchable = require(497                      ); // 497 = ../components/Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var _TextInputCustomized = require(638                                ); // 638 = ../components/TextInputCustomized

var _TextInputCustomized2 = babelHelpers.interopRequireDefault(_TextInputCustomized);

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _imgs = require(436                ); // 436 = ../resources/imgs

var _imgs2 = babelHelpers.interopRequireDefault(_imgs);

var _constants = require(434                  ); // 434 = ../config/constants

var _http = require(622               ); // 622 = ../requests/http

var LInputView = _native2.default.View(_templateObject, _constants.WINDOW_WIDTH - 40);
var Input = (0, _native2.default)(_TextInputCustomized2.default)(_templateObject2);
var PwdInput = (0, _native2.default)(_TextInputCustomized2.default)(_templateObject3);
var CodeButton = (0, _native2.default)(_Touchable2.default)(_templateObject4);
var DescView = _native2.default.View(_templateObject5);

var textInputIcon = {
  width: 40,
  height: 40,
  resizeMode: 'center'
};

var ForgetPassword = function (_Component) {
  babelHelpers.inherits(ForgetPassword, _Component);

  function ForgetPassword(props) {
    babelHelpers.classCallCheck(this, ForgetPassword);

    var _this = babelHelpers.possibleConstructorReturn(this, (ForgetPassword.__proto__ || Object.getPrototypeOf(ForgetPassword)).call(this, props));

    _this.state = {
      mobile: '',
      code: '',
      mode: 2,
      second: '',
      loading: false,
      sending: false,
      canSend: true
    };
    _this.second = 59;
    return _this;
  }

  babelHelpers.createClass(ForgetPassword, [{
    key: '_submit',
    value: function _submit() {
      var _this2 = this;

      if (!this.state.mobile) {
        this.context.callToast('请输入手机号');
      } else if (!this.state.code) {
        this.context.callToast('请输入短信验证码');
      } else if (!/^[1][34578][0-9]{9}$/.test(this.state.mobile)) {
        this.context.callToast('请输入正确的手机号');
      } else {
        this.setState({ loading: true });
        (0, _http.checkCode)({ mobile: this.state.mobile, code: this.state.code, type: 2 }).then(function (data) {
          _this2.setState({ loading: false });
          if (data.data.code === 0) {
            _this2.setState({ mode: 2 });
          } else {
            _this2.context.callToast(data.data.msg);
          }
        }).catch(function () {
          _this2.setState({ loading: false });
          _this2.context.callToast('提交失败');
        });
      }
    }
  }, {
    key: '_sendCode',
    value: function _sendCode() {
      var _this3 = this;

      if (!this.state.sending && this.state.canSend) {
        if (!this.state.mobile) {
          this.context.callToast('请输入手机号');
        } else if (!/^[1][34578][0-9]{9}$/.test(this.state.mobile)) {
          this.context.callToast('请输入正确的手机号');
        } else {
          this.setState({ sending: true });
          (0, _http.sendCode)({ mobile: this.state.mobile, type: 2 }).then(function (data) {
            if (data.data.code === 0) {
              _this3.context.callToast('验证码发送成功');
              _this3.setState({ second: _this3.second, canSend: false, sending: false }, function () {
                _this3.interval = setInterval(function () {
                  if (_this3.state.second == 1) {
                    clearInterval(_this3.interval);
                    _this3.setState({ canSend: true, second: '' });
                  } else {
                    _this3.setState({ second: --_this3.state.second });
                  }
                }, 1000);
              });
            } else {
              _this3.setState({ sending: false });
              _this3.context.callToast(data.data.msg);
            }
          }).catch(function () {
            _this3.setState({ sending: false });
            _this3.context.callToast('发送失败');
          });
        }
      }
    }
  }, {
    key: '_register',
    value: function _register() {
      var _this4 = this;

      if (!this.state.pwd) {
        this.context.callToast('请输入新的登录密码');
      } else if (!/^(?=.*?[a-zA-Z])(?=.*?[0-9])[a-zA-Z0-9]{6,20}$/.test(this.state.pwd)) {
        this.context.callToast('密码格式有误');
      } else if (this.state.pwd !== this.state.repwd) {
        this.context.callToast('两次密码输入不一致');
      } else {
        this.setState({ loading: true });
        (0, _http.forget)({ mobile: this.state.mobile, password: this.state.pwd, code: this.state.code }).then(function (data) {
          _this4.setState({ loading: false });
          if (data.data.code === 0) {
            _this4.context.callToast('密码修改成功', true);
            _this4.props.navigation.goBack();
          } else {
            _this4.context.callToast(data.data.msg);
          }
        }).catch(function () {
          _this4.setState({ loading: false });
          _this4.context.callToast('提交失败');
        });
      }
    }
  }, {
    key: '_renderReg',
    value: function _renderReg() {
      var _this5 = this;

      return _react2.default.createElement(
        _UtilLib.CenterView,
        { style: { flex: 1, backgroundColor: "#fff" }, __source: {
            fileName: _jsxFileName,
            lineNumber: 154
          }
        },
        _react2.default.createElement(
          LInputView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 155
            }
          },
          _react2.default.createElement(Input, {
            icon: _imgs2.default.mobile(textInputIcon),
            value: this.state.mobile,
            onChangeText: function onChangeText(text) {
              _this5.setState({ mobile: text });
            },
            keyboardType: 'numeric',
            placeholder: '\u8BF7\u8F93\u5165\u624B\u673A\u53F7\u7801',
            textInputStyle: { height: 44 },
            onClear: function onClear() {
              _this5.setState({ mobile: '' });
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 156
            }
          }),
          _react2.default.createElement(Input, {
            icon: _imgs2.default.code(textInputIcon),
            value: this.state.code,
            onChangeText: function onChangeText(text) {
              _this5.setState({ code: text });
            },
            hideClear: true,
            placeholder: '\u8BF7\u8F93\u5165\u77ED\u4FE1\u9A8C\u8BC1\u7801',
            keyboardType: 'numeric',
            textInputStyle: { height: 44 },
            onClear: function onClear() {
              _this5.setState({ code: '' });
            },
            flag: this.state.canSend + this.state.second + this.state.sending,
            rightLabel: _react2.default.createElement(
              _UtilLib.StyledButtom,
              { width: '100', height: '50', top: '-1', radius: '0',
                style: {
                  borderTopRightRadius: 4,
                  borderBottomRightRadius: 4
                },
                color: !this.state.canSend || this.state.sending,
                feedback: this.state.canSend && !this.state.sending,
                onPress: this._sendCode.bind(this), __source: {
                  fileName: _jsxFileName,
                  lineNumber: 184
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '14', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 192
                  }
                },
                this.state.second ? this.state.second + 'S\u540E\u91CD\u53D1' : '获取验证码'
              )
            ),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 169
            }
          })
        ),
        _react2.default.createElement(
          _UtilLib.StyledButtom,
          { onPress: this._submit.bind(this), __source: {
              fileName: _jsxFileName,
              lineNumber: 198
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { size: '17', __source: {
                fileName: _jsxFileName,
                lineNumber: 199
              }
            },
            '\u4E0B\u4E00\u6B65'
          )
        ),
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: this.state.loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 201
          }
        })
      );
    }
  }, {
    key: '_renderPwd',
    value: function _renderPwd() {
      var _this6 = this;

      return _react2.default.createElement(
        _UtilLib.CenterView,
        { style: { flex: 1, backgroundColor: "#fff" }, __source: {
            fileName: _jsxFileName,
            lineNumber: 208
          }
        },
        _react2.default.createElement(
          LInputView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 209
            }
          },
          _react2.default.createElement(Input, {
            secureTextEntry: true,
            icon: _imgs2.default.password(textInputIcon),
            labelWidth: 105,
            value: this.state.pwd,
            onChangeText: function onChangeText(text) {
              _this6.setState({ pwd: text });
            },
            placeholder: '\u8BF7\u8F93\u5165\u65B0\u7684\u767B\u5F55\u5BC6\u7801',
            onClear: function onClear() {
              _this6.setState({ pwd: '' });
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 210
            }
          }),
          _react2.default.createElement(Input, {
            secureTextEntry: true,
            icon: _imgs2.default.password(textInputIcon),
            labelWidth: 105,
            value: this.state.repwd,
            onChangeText: function onChangeText(text) {
              _this6.setState({ repwd: text });
            },
            placeholder: '\u518D\u6B21\u8F93\u5165\u65B0\u7684\u767B\u5F55\u5BC6\u7801',
            onClear: function onClear() {
              _this6.setState({ repwd: '' });
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 223
            }
          }),
          _react2.default.createElement(
            DescView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 236
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#9b9b9b', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 237
                }
              },
              '\u8BF7\u4F7F\u75286\uFF5E20\u4F4D\u7531\u6570\u5B57\u3001\u5B57\u6BCD\u7EC4\u6210\u7684\u5BC6\u7801'
            )
          ),
          _react2.default.createElement(
            _UtilLib.StyledButtom,
            { onPress: this._register.bind(this), __source: {
                fileName: _jsxFileName,
                lineNumber: 239
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { size: '17', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 240
                }
              },
              '\u63D0\u4EA4'
            )
          )
        ),
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: this.state.loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 243
          }
        })
      );
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.interval && clearInterval(this.interval);
    }
  }, {
    key: 'render',
    value: function render() {
      return this.state.mode === 1 ? this._renderReg() : this._renderPwd();
    }
  }]);
  return ForgetPassword;
}(_react.Component);

ForgetPassword.navigationOptions = {
  title: '忘记密码'
};
exports.default = ForgetPassword;


ForgetPassword.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};
}, 647, null, "YuanXC/src/pages/ForgetPassword.js");
__d(/* YuanXC/src/pages/SafeSetting.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/SafeSetting.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _reactNative = require(12            ); // 12 = react-native

var _GuideMenu = require(641                      ); // 641 = ../components/GuideMenu

var _GuideMenu2 = babelHelpers.interopRequireDefault(_GuideMenu);

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _Check = require(632             ); // 632 = ../utils/Check

var _Check2 = babelHelpers.interopRequireDefault(_Check);

var SafeSetting = function (_Component) {
  babelHelpers.inherits(SafeSetting, _Component);

  function SafeSetting(props) {
    babelHelpers.classCallCheck(this, SafeSetting);
    return babelHelpers.possibleConstructorReturn(this, (SafeSetting.__proto__ || Object.getPrototypeOf(SafeSetting)).call(this, props));
  }

  babelHelpers.createClass(SafeSetting, [{
    key: '_navigateCheck',
    value: function _navigateCheck(level, route, params) {
      var routers = (0, _Check2.default)(this.props.check, level, route, params);
      if (routers[0]) {
        this.props.navigation.navigate(routers[0], routers[1]);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var navigate = this.props.navigation.navigate;

      return _react2.default.createElement(
        _reactNative.ScrollView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 34
          }
        },
        _react2.default.createElement(
          _UtilLib.BlockWrapper,
          { marginType: 'top', __source: {
              fileName: _jsxFileName,
              lineNumber: 35
            }
          },
          _react2.default.createElement(
            _UtilLib.GrayBottomRowWrapper,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 36
              }
            },
            _react2.default.createElement(_GuideMenu2.default, { title: '\u4FEE\u6539\u767B\u5F55\u5BC6\u7801', onPress: function onPress() {
                navigate('ModifyPassword');
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 37
              }
            })
          ),
          _react2.default.createElement(
            _UtilLib.RowWrapper,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 41
              }
            },
            _react2.default.createElement(_GuideMenu2.default, { title: '\u4FEE\u6539\u4EA4\u6613\u5BC6\u7801', onPress: function onPress() {
                _this2._navigateCheck(2, 'PayPasswordModify');
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 42
              }
            })
          )
        )
      );
    }
  }]);
  return SafeSetting;
}(_react.Component);

SafeSetting.navigationOptions = function (_ref) {
  var navigation = _ref.navigation,
      screenProps = _ref.screenProps;
  return {
    title: '安全设置'
  };
};

var mapStateToProps = function mapStateToProps(state) {
  var check = state.user.check;
  return { check: check };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  return {};
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(SafeSetting);
}, 648, null, "YuanXC/src/pages/SafeSetting.js");
__d(/* YuanXC/src/pages/Authentication.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/Authentication.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  border-bottom-color:#F6F6F6;\n  border-bottom-width:1;\n  padding-left:15;\n'], ['\n  border-bottom-color:#F6F6F6;\n  border-bottom-width:1;\n  padding-left:15;\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  width:', ';\n  margin-top:10;\n  background-color:#fff;\n'], ['\n  width:', ';\n  margin-top:10;\n  background-color:#fff;\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _userActions = require(630                     ); // 630 = ../actions/userActions

var userCreator = babelHelpers.interopRequireWildcard(_userActions);

var _imgs = require(436                ); // 436 = ../resources/imgs

var _imgs2 = babelHelpers.interopRequireDefault(_imgs);

var _TextInputCustomized = require(638                                ); // 638 = ../components/TextInputCustomized

var _TextInputCustomized2 = babelHelpers.interopRequireDefault(_TextInputCustomized);

var _constants = require(434                  ); // 434 = ../config/constants

var _http = require(622               ); // 622 = ../requests/http

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var Input = (0, _native2.default)(_TextInputCustomized2.default)(_templateObject);
var LInputView = _UtilLib.CenterView.extend(_templateObject2, _constants.WINDOW_WIDTH);

var Authentication = function (_Component) {
  babelHelpers.inherits(Authentication, _Component);

  function Authentication(props) {
    babelHelpers.classCallCheck(this, Authentication);

    var _this = babelHelpers.possibleConstructorReturn(this, (Authentication.__proto__ || Object.getPrototypeOf(Authentication)).call(this, props));

    _this.state = {
      name: '',
      card: '',
      mode: 1,
      loading: false
    };
    return _this;
  }

  babelHelpers.createClass(Authentication, [{
    key: '_submit',
    value: function _submit() {
      var _this2 = this;

      if (!this.state.name) {
        this.context.callToast('请输入姓名');
      } else if (!this.state.card) {
        this.context.callToast('请输入身份证号');
      } else if (!/(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/.test(this.state.card)) {
        this.context.callToast('身份证号格式有误');
      } else {
        this.setState({ loading: true });
        (0, _http.authenticate)({
          name: this.state.name,
          idCardNo: this.state.card
        }).then(function (res) {
          _this2.setState({ loading: false });
          var data = res.data;
          if (0 === data.code) {
            _this2.props.userActions.userProfile(false);
            var goBack = _this2.props.navigation.goBack;

            _this2.setState({ mode: 2 }, function () {});
          } else {
            _this2.context.callToast(data.msg);
          }
        }).catch(function (err) {
          _this2.setState({ loading: false });
          _this2.context.callToast("提交失败");
        });
      }
    }
  }, {
    key: '_renderAuth',
    value: function _renderAuth() {
      var _this3 = this;

      return _react2.default.createElement(
        _UtilLib.NormalView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 93
          }
        },
        _react2.default.createElement(
          LInputView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 94
            }
          },
          _react2.default.createElement(Input, {
            label: '\u6301\u5361\u4EBA',
            labelWidth: 90,
            value: this.state.name,
            onChangeText: function onChangeText(text) {
              _this3.setState({ name: text });
            },
            placeholder: '\u8BF7\u8F93\u5165\u6301\u5361\u4EBA\u59D3\u540D',
            onClear: function onClear() {
              _this3.setState({ name: '' });
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 95
            }
          }),
          _react2.default.createElement(Input, {
            label: '\u8EAB\u4EFD\u8BC1',
            labelWidth: 90,
            value: this.state.card,
            onChangeText: function onChangeText(text) {
              _this3.setState({ card: text });
            },
            placeholder: '\u8BF7\u8F93\u5165\u6301\u5361\u4EBA\u5BF9\u5E94\u8EAB\u4EFD\u8BC1\u53F7',
            onClear: function onClear() {
              _this3.setState({ card: '' });
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 107
            }
          }),
          _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: this.state.loading, __source: {
              fileName: _jsxFileName,
              lineNumber: 119
            }
          })
        ),
        _react2.default.createElement(
          _UtilLib.CenterView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 121
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledButtom,
            { onPress: this._submit.bind(this), top: '40', radius: '5', width: _constants.WINDOW_WIDTH - 40, height: '45', __source: {
                fileName: _jsxFileName,
                lineNumber: 122
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { size: '17', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 123
                }
              },
              '\u786E\u8BA4'
            )
          )
        )
      );
    }
  }, {
    key: '_renderSuccess',
    value: function _renderSuccess() {
      var _this4 = this;

      return _react2.default.createElement(
        _UtilLib.CenterView,
        { style: { backgroundColor: "#fff", flex: 1, marginTop: 5 }, __source: {
            fileName: _jsxFileName,
            lineNumber: 132
          }
        },
        _imgs2.default.operSuccess({ margin: 18 }),
        _react2.default.createElement(
          _UtilLib.StyledText,
          { color: '#999999', align: 'center', lh: '16', __source: {
              fileName: _jsxFileName,
              lineNumber: 134
            }
          },
          '\u606D\u559C\u60A8\u5B9E\u540D\u8BA4\u8BC1\u6210\u529F',
          "\n",
          '\u524D\u53BB\u7ED1\u5B9A\u94F6\u884C\u5361\u53EF\u83B7\u5F97\u6295\u8D44\u8D44\u683C'
        ),
        !this.props.check[1].checked && _react2.default.createElement(
          _UtilLib.StyledButtom,
          { onPress: function onPress() {
              return _this4._toBankCardBind();
            },
            top: '40', radius: '20', width: '153', height: '38', __source: {
              fileName: _jsxFileName,
              lineNumber: 139
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { size: '14', __source: {
                fileName: _jsxFileName,
                lineNumber: 141
              }
            },
            '\u7ED1\u5B9A\u94F6\u884C\u5361'
          )
        )
      );
    }
  }, {
    key: '_toBankCardBind',
    value: function _toBankCardBind() {
      global.backRouter = this.props.navigation.state.key;
      this.props.navigation.navigate("BankCardBind");
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      global.backRouter = '';
    }
  }, {
    key: 'render',
    value: function render() {
      return this.state.mode === 1 ? _react2.default.createElement(
        _UtilLib.ScrollLayout,
        { color: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 159
          }
        },
        this._renderAuth()
      ) : this._renderSuccess();
    }
  }]);
  return Authentication;
}(_react.Component);

Authentication.navigationOptions = function (_ref) {
  var navigation = _ref.navigation,
      screenProps = _ref.screenProps;
  return {
    title: '实名认证',
    headerRight: navigation.state.params && navigation.state.params.headerRight
  };
};

Authentication.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
  var check = state.user.check;
  return { check: check };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var userActions = (0, _redux.bindActionCreators)(userCreator, dispatch);
  return { userActions: userActions };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Authentication);
}, 649, null, "YuanXC/src/pages/Authentication.js");
__d(/* YuanXC/src/pages/BankCardBind.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/BankCardBind.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  background-color:#ffffff;\n  padding-left:15;\n  margin-top:10;\n  width:', ';\n'], ['\n  background-color:#ffffff;\n  padding-left:15;\n  margin-top:10;\n  width:', ';\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  border-bottom-width:', ';\n  border-bottom-color:#eeeeee;\n'], ['\n  border-bottom-width:', ';\n  border-bottom-color:#eeeeee;\n']),
    _templateObject3 = babelHelpers.taggedTemplateLiteral(['\n  align-items:center;\n  flex:1;\n'], ['\n  align-items:center;\n  flex:1;\n']),
    _templateObject4 = babelHelpers.taggedTemplateLiteral(['\n  position:absolute;\n  bottom:14;\n  right:20;\n'], ['\n  position:absolute;\n  bottom:14;\n  right:20;\n']),
    _templateObject5 = babelHelpers.taggedTemplateLiteral(['\n   \n'], ['\n   \n']),
    _templateObject6 = babelHelpers.taggedTemplateLiteral(['\n  width:', ';\n  background-color:#ffffff;\n  margin-top:22;\n  padding-top:25;\n'], ['\n  width:', ';\n  background-color:#ffffff;\n  margin-top:22;\n  padding-top:25;\n']),
    _templateObject7 = babelHelpers.taggedTemplateLiteral(['\n  align-self:flex-start;\n  margin-left:20;\n  margin-top:10;\n'], ['\n  align-self:flex-start;\n  margin-left:20;\n  margin-top:10;\n']),
    _templateObject8 = babelHelpers.taggedTemplateLiteral(['\n  margin-top:14;\n  height:40;\n  width:', ';\n  background-color:#FBFBFB;\n  border-width:', ';\n  border-color:#EDEDED;\n  padding-left:10;\n'], ['\n  margin-top:14;\n  height:40;\n  width:', ';\n  background-color:#FBFBFB;\n  border-width:', ';\n  border-color:#EDEDED;\n  padding-left:10;\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _reactNavigation = require(371               ); // 371 = react-navigation

var _userActions = require(630                     ); // 630 = ../actions/userActions

var userCreator = babelHelpers.interopRequireWildcard(_userActions);

var _color = require(587              ); // 587 = ../styles/color

var _color2 = babelHelpers.interopRequireDefault(_color);

var _imgs = require(436                ); // 436 = ../resources/imgs

var _imgs2 = babelHelpers.interopRequireDefault(_imgs);

var _TextInputCustomized = require(638                                ); // 638 = ../components/TextInputCustomized

var _TextInputCustomized2 = babelHelpers.interopRequireDefault(_TextInputCustomized);

var _GuideMenu = require(641                      ); // 641 = ../components/GuideMenu

var _GuideMenu2 = babelHelpers.interopRequireDefault(_GuideMenu);

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _constants = require(434                  ); // 434 = ../config/constants

var _http = require(622               ); // 622 = ../requests/http

var View = _native2.default.View(_templateObject, _constants.WINDOW_WIDTH);
var BorderInput = (0, _native2.default)(_TextInputCustomized2.default)(_templateObject2, _constants.BORDER_WIDTH);
var CenterView = _native2.default.View(_templateObject3);
var CodeButton = (0, _native2.default)(_UtilLib.StyledButtom)(_templateObject4);
var SubmitButton = (0, _native2.default)(_UtilLib.StyledButtom).attrs({
  radius: 5,
  width: _constants.WINDOW_WIDTH - 40,
  height: 45
})(_templateObject5);
var BottomView = (0, _native2.default)(CenterView)(_templateObject6, _constants.WINDOW_WIDTH);
var DescView = _native2.default.View(_templateObject7);
var PwdInput = (0, _native2.default)(_TextInputCustomized2.default)(_templateObject8, _constants.WINDOW_WIDTH - 40, _constants.BORDER_WIDTH);

var BankCardBind = function (_Component) {
  babelHelpers.inherits(BankCardBind, _Component);

  function BankCardBind(props) {
    babelHelpers.classCallCheck(this, BankCardBind);

    var _this = babelHelpers.possibleConstructorReturn(this, (BankCardBind.__proto__ || Object.getPrototypeOf(BankCardBind)).call(this, props));

    _this.state = {
      name: '',
      card: '',
      mobile: '',
      code: '',
      bankNo: '',
      bankName: '',
      bankCode: '',
      mode: 1,
      second: '',
      loading: false,
      sending: false,
      canSend: true
    };
    _this.second = 59;
    return _this;
  }

  babelHelpers.createClass(BankCardBind, [{
    key: '_submit',
    value: function _submit() {
      var _this2 = this;

      this.setState({ mode: 2 }, function () {
        var headerRight = _react2.default.createElement(
          _UtilLib.HeaderButton,
          { onPress: function onPress() {
              goBack();
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 102
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: _color2.default.font.blue, align: 'center', __source: {
                fileName: _jsxFileName,
                lineNumber: 105
              }
            },
            '\u5148\u901B\u901B'
          )
        );
        _this2.props.navigation.setParams({
          headerRight: headerRight
        });
      });
      return;
      if (!this.state.mobile) {
        this.context.callToast('请输入手机号');
      } else if (!this.state.code) {
        this.context.callToast('请输入验证码');
      } else if (!/^[1][34578][0-9]{9}$/.test(this.state.mobile)) {
        this.context.callToast('请输入正确的手机号');
      } else {
        this.setState({ loading: true });
        register().then(function (data) {
          _this2.setState({ loading: false });
          if (data.data.code === 0) {
            _this2.setState({ mode: 2 });
          } else {
            _this2.context.callToast(data.data.msg);
          }
        }).catch(function () {
          _this2.setState({ loading: false });
          _this2.context.callToast('提交失败');
        });
      }
    }
  }, {
    key: '_sendCode',
    value: function _sendCode() {
      var _this3 = this;

      if (!this.state.mobile) {
        this.context.callToast('请输入手机号');
      } else if (!/^[1][34578][0-9]{9}$/.test(this.state.mobile)) {
        this.context.callToast('请输入正确的手机号');
      } else {
        if (!this.state.sending && this.state.canSend) {
          this.setState({ sending: true });
          (0, _http.sendCode)({ mobile: this.state.mobile, type: 3 }).then(function (data) {
            if (data.data.code === 0) {
              _this3.context.callToast('验证码发送成功');
              _this3.setState({ second: _this3.second, canSend: false, sending: false }, function () {
                _this3.interval = setInterval(function () {
                  if (_this3.state.second == 1) {
                    clearInterval(_this3.interval);
                    _this3.setState({ canSend: true, second: '' });
                  } else {
                    _this3.setState({ second: --_this3.state.second });
                  }
                }, 900);
              });
            } else {
              _this3.setState({ sending: false });
              _this3.context.callToast(data.data.msg);
            }
          }).catch(function () {
            _this3.setState({ sending: false });
            _this3.context.callToast('发送失败');
          });
        }
      }
    }
  }, {
    key: '_selectBank',
    value: function _selectBank(bank) {
      this.setState({ bankName: bank.name, bankCode: bank.code });
    }
  }, {
    key: '_submit',
    value: function _submit() {
      var _this4 = this;

      if (!this.state.bankCode) {
        this.context.callToast('请选择银行');
      } else if (!this.state.bankNo) {
        this.context.callToast('请输入本人储蓄卡号');
      } else if (!this.state.mobile) {
        this.context.callToast('请输入银行预留手机号');
      } else if (!/^[1][34578][0-9]{9}$/.test(this.state.mobile)) {
        this.context.callToast('请输入正确的手机号');
      } else if (!this.state.code) {
        this.context.callToast('请输入短信验证码');
      } else {
        this.setState({ loading: true });
        (0, _http.tiedCard)({
          bankId: this.state.bankCode,
          bankCardNo: this.state.bankNo,
          mobile: this.state.mobile,
          code: this.state.code
        }).then(function (res) {
          _this4.setState({ loading: false });
          var data = res.data;
          if (0 === data.code) {
            _this4.props.userActions.userProfile(false);
            var _goBack = _this4.props.navigation.goBack;

            _this4.setState({ mode: 2, setCode: data.data.firstSetCode }, function () {});
          } else {
            _this4.context.callToast(data.msg);
          }
        }).catch(function (err) {
          _this4.setState({ loading: false });
          _this4.context.callToast("提交失败");
        });
      }
    }
  }, {
    key: '_submitPwd',
    value: function _submitPwd() {
      var _this5 = this;

      if (!this.state.password) {
        this.context.callToast('请输入新密码');
      } else if (!/^(?=.*?[a-zA-Z])(?=.*?[0-9])[a-zA-Z0-9]{6,20}$/.test(this.state.password)) {
        this.context.callToast('密码格式有误');
      } else {
        (0, _http.setPayPassword)({
          password: this.state.password,
          firstSetCode: this.state.setCode
        }).then(function (res) {
          _this5.setState({ loading: false });
          var data = res.data;
          if (0 === data.code) {
            _this5.context.callToast("交易密码设置成功", true);
            _this5.props.userActions.userProfile(false);
            _this5.props.navigation.dispatch(_reactNavigation.NavigationActions.back({ key: global.backRouter }));
          } else {
            _this5.context.callToast(data.msg);
          }
        }).catch(function (err) {
          _this5.setState({ loading: false });
          _this5.context.callToast("提交失败");
        });
      }
    }
  }, {
    key: '_renderBind',
    value: function _renderBind() {
      var _this6 = this;

      return _react2.default.createElement(
        _UtilLib.FlexView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 255
          }
        },
        _react2.default.createElement(
          _UtilLib.ScrollLayout,
          { color: 'transparent', __source: {
              fileName: _jsxFileName,
              lineNumber: 256
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#999999', top: '15', left: '15', bottom: '3', __source: {
                fileName: _jsxFileName,
                lineNumber: 257
              }
            },
            '\u8BF7\u6DFB\u52A0\u6301\u5361\u672C\u4EBA\u7684\u94F6\u884C\u5361'
          ),
          _react2.default.createElement(
            View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 258
              }
            },
            _react2.default.createElement(_GuideMenu2.default, {
              style: { paddingRight: 24 },
              bottomBorder: true,
              titleWidth: 100,
              title: '开户行',
              content: this.state.bankName,
              contentColor: '#000',
              defaultContent: '请选择开户银行',
              onPress: function onPress() {
                _this6.props.navigation.navigate("BankList", { onSelect: _this6._selectBank.bind(_this6) });
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 283
              }
            }),
            _react2.default.createElement(BorderInput, {
              label: '\u94F6\u884C\u5361',
              labelWidth: 90,
              value: this.state.bankNo,
              keyboardType: 'numeric',
              onChangeText: function onChangeText(text) {
                _this6.setState({ bankNo: text });
              },
              placeholder: '\u8BF7\u8F93\u5165\u94F6\u884C\u5361\u53F7',
              onClear: function onClear() {
                _this6.setState({ bankNo: '' });
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 294
              }
            }),
            _react2.default.createElement(BorderInput, {
              label: '\u624B\u673A\u53F7',
              labelWidth: 90,
              value: this.state.mobile,
              keyboardType: 'numeric',
              onChangeText: function onChangeText(text) {
                _this6.setState({ mobile: text });
              },
              placeholder: '\u8BF7\u8F93\u5165\u94F6\u884C\u9884\u7559\u624B\u673A\u53F7',
              onClear: function onClear() {
                _this6.setState({ mobile: '' });
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 307
              }
            }),
            _react2.default.createElement(BorderInput, {
              label: '\u9A8C\u8BC1\u7801',
              labelWidth: 90,
              value: this.state.code,
              keyboardType: 'numeric',
              onChangeText: function onChangeText(text) {
                _this6.setState({ code: text });
              },
              placeholder: '\u8BF7\u8F93\u5165\u77ED\u4FE1\u9A8C\u8BC1\u7801',
              hideClear: true,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 320
              }
            }),
            _react2.default.createElement(
              CodeButton,
              { top: '0', radius: '6', width: '80', height: '28',
                color: (!this.state.canSend || this.state.sending) && '#979797',
                feedback: this.state.canSend || this.state.sending,
                onPress: this._sendCode.bind(this), __source: {
                  fileName: _jsxFileName,
                  lineNumber: 331
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { height: '24', size: '13', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 335
                  }
                },
                this.state.second ? this.state.second + 'S\u540E\u91CD\u53D1' : '获取验证码'
              )
            )
          ),
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#999999', top: '15', left: '15', bottom: '3', __source: {
                fileName: _jsxFileName,
                lineNumber: 338
              }
            },
            '\u4FE1\u606F\u52A0\u5BC6\u5904\u7406\uFF0C\u4EC5\u7528\u4E8E\u94F6\u884C\u9A8C\u8BC1'
          ),
          _react2.default.createElement(
            CenterView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 339
              }
            },
            _react2.default.createElement(
              SubmitButton,
              { onPress: this._submit.bind(this), __source: {
                  fileName: _jsxFileName,
                  lineNumber: 340
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '17', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 341
                  }
                },
                '\u786E  \u5B9A'
              )
            )
          )
        ),
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: this.state.loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 349
          }
        })
      );
    }
  }, {
    key: '_renderSuccess',
    value: function _renderSuccess() {
      var _this7 = this;

      return _react2.default.createElement(
        _UtilLib.InputView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 356
          }
        },
        _react2.default.createElement(
          CenterView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 357
            }
          },
          _imgs2.default.operSuccess({ margin: 18 }),
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#999999', __source: {
                fileName: _jsxFileName,
                lineNumber: 359
              }
            },
            '\u606D\u559C\u4F60\u5DF2\u7ED1\u5B9A\u94F6\u884C\u5361\uFF08',
            this.state.bankName,
            ' \u5C3E\u53F7',
            this.state.bankNo.substr(-4),
            '\uFF09\u6210\u529F'
          ),
          _react2.default.createElement(
            BottomView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 362
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#333333', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 363
                }
              },
              '\u8BF7\u8BBE\u7F6E\u4EA4\u6613\u5BC6\u7801'
            ),
            _react2.default.createElement(PwdInput, { label: '\u8F93\u5165\u4EA4\u6613\u5BC6\u7801', labelWidth: 106,
              secureTextEntry: true,
              value: this.state.password,
              onChangeText: function onChangeText(text) {
                _this7.setState({ password: text });
              },
              placeholder: '\u8BF7\u8F93\u5165\u4EA4\u6613\u5BC6\u7801',
              onClear: function onClear() {
                _this7.setState({ password: '' });
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 364
              }
            }),
            _react2.default.createElement(
              DescView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 374
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#9b9b9b', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 375
                  }
                },
                '\u8BF7\u4F7F\u75286\uFF5E20\u4F4D\u7531\u6570\u5B57\u3001\u5B57\u6BCD\u7EC4\u6210\u7684\u5BC6\u7801'
              )
            ),
            _react2.default.createElement(
              _UtilLib.StyledButtom,
              { onPress: this._submitPwd.bind(this), top: '60', radius: '20', width: '153', height: '38', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 377
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '14', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 378
                  }
                },
                '\u786E\u5B9A'
              )
            )
          )
        )
      );
    }
  }, {
    key: 'render',
    value: function render() {
      return this.state.mode === 1 ? this._renderBind() : this._renderSuccess();
    }
  }]);
  return BankCardBind;
}(_react.Component);

BankCardBind.navigationOptions = function (_ref) {
  var navigation = _ref.navigation,
      screenProps = _ref.screenProps;
  return {
    title: '我的银行卡',
    headerRight: navigation.state.params && navigation.state.params.headerRight
  };
};

BankCardBind.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

var mapStateToProps = function mapStateToProps() {
  return {};
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var userActions = (0, _redux.bindActionCreators)(userCreator, dispatch);
  return { userActions: userActions };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(BankCardBind);
}, 650, null, "YuanXC/src/pages/BankCardBind.js");
__d(/* YuanXC/src/pages/BankList.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/BankList.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  margin-top:10;\n  padding-left:15;\n  background-color:#ffffff;\n  height:51;\n  flex-direction:row;\n  align-items:center;\n'], ['\n  margin-top:10;\n  padding-left:15;\n  background-color:#ffffff;\n  height:51;\n  flex-direction:row;\n  align-items:center;\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n   margin-right:10;\n   margin-top:10;\n   align-self:flex-start;\n   width:18;\n   height:18;\n'], ['\n   margin-right:10;\n   margin-top:10;\n   align-self:flex-start;\n   width:18;\n   height:18;\n']),
    _templateObject3 = babelHelpers.taggedTemplateLiteral(['\n\n'], ['\n\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _reactNavigation = require(371               ); // 371 = react-navigation

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _Touchable = require(497                      ); // 497 = ../components/Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var _bankListActions = require(652                         ); // 652 = ../actions/bankListActions

var bankListCreator = babelHelpers.interopRequireWildcard(_bankListActions);


var ItemButton = (0, _native2.default)(_Touchable2.default)(_templateObject);
var Image = _native2.default.Image(_templateObject2);
var View = _native2.default.View(_templateObject3);

var BankList = function (_Component) {
  babelHelpers.inherits(BankList, _Component);

  function BankList(props) {
    babelHelpers.classCallCheck(this, BankList);
    return babelHelpers.possibleConstructorReturn(this, (BankList.__proto__ || Object.getPrototypeOf(BankList)).call(this, props));
  }

  babelHelpers.createClass(BankList, [{
    key: '_selectBank',
    value: function _selectBank(item) {
      var _props$navigation = this.props.navigation,
          state = _props$navigation.state,
          goBack = _props$navigation.goBack;

      if (state.params && state.params.onSelect) {
        state.params.onSelect({ name: item.name, code: item.id });
        goBack();
      }
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      !this.props.list && this.props.bankListActions.getData(true);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          loading = _props.loading,
          list = _props.list;

      return _react2.default.createElement(
        _UtilLib.ScrollLayout,
        { color: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 60
          }
        },
        list && list.map(function (item, i) {
          return _react2.default.createElement(
            ItemButton,
            { key: i, onPress: _this2._selectBank.bind(_this2, item),
              feedback: _this2.props.navigation.state.params && _this2.props.navigation.state.params.onSelect ? true : false, __source: {
                fileName: _jsxFileName,
                lineNumber: 64
              }
            },
            item.icon && _react2.default.createElement(Image, { source: { uri: item.icon }, __source: {
                fileName: _jsxFileName,
                lineNumber: 66
              }
            }),
            _react2.default.createElement(
              View,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 67
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#333333', size: '14', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 68
                  }
                },
                item.name
              ),
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#999999', size: '12', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 69
                  }
                },
                '\u5355\u7B14\u9650\u989D',
                item.singleLimit,
                ',\u65E5\u7D2F\u8BA1\u9650\u989D',
                item.dailyAccumulativeLimit,
                ',\u6708\u7D2F\u8BA1\u9650\u989D',
                item.monthlyAccumulativeLimit
              )
            )
          );
        }),
        _react2.default.createElement(View, { style: { height: 10 }, __source: {
            fileName: _jsxFileName,
            lineNumber: 77
          }
        }),
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 78
          }
        })
      );
    }
  }]);
  return BankList;
}(_react.Component);

BankList.navigationOptions = function (_ref) {
  var navigation = _ref.navigation,
      screenProps = _ref.screenProps;
  return {
    title: navigation.state.params && navigation.state.params.onSelect ? '选择银行' : '限额说明'
  };
};

var mapStateToProps = function mapStateToProps(state) {
  var _state$bankList = state.bankList,
      loading = _state$bankList.loading,
      list = _state$bankList.list;

  return { loading: loading, list: list };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var bankListActions = (0, _redux.bindActionCreators)(bankListCreator, dispatch);
  return { bankListActions: bankListActions };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(BankList);
}, 651, null, "YuanXC/src/pages/BankList.js");
__d(/* YuanXC/src/actions/bankListActions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getData = getData;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);

var _http = require(622               ); // 622 = ../requests/http

function getData(loading) {
  return function (dispatch) {
    dispatch(requestData({ loading: loading }));
    (0, _http.getBankList)().then(function (data) {
      if (data.data.code == 0) {
        dispatch(receiveData({ list: data.data.data.bankDataList }));
      } else {
        dispatch(receiveData({ error: true, msg: data.data.msg }));
      }
    }).catch(function (err) {
      dispatch(receiveData({ error: true, msgStr: 'netWorkError' }));
    });
  };
}

function requestData(data) {
  return babelHelpers.extends({
    type: types.REQUEST_BANK_LIST
  }, data);
}

function receiveData(data) {
  return babelHelpers.extends({
    type: types.RECEIVE_BANK_LIST
  }, data);
}
}, 652, null, "YuanXC/src/actions/bankListActions.js");
__d(/* YuanXC/src/pages/CapitalRecord.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/CapitalRecord.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  background-color:#ffffff;\n  border-top-width:', ';\n  border-color:#eeeeee;\n  padding-left:20;\n  padding-vertical:6;\n'], ['\n  background-color:#ffffff;\n  border-top-width:', ';\n  border-color:#eeeeee;\n  padding-left:20;\n  padding-vertical:6;\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  padding-right:20;\n'], ['\n  padding-right:20;\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _constants = require(434                  ); // 434 = ../config/constants

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _color = require(587              ); // 587 = ../styles/color

var _color2 = babelHelpers.interopRequireDefault(_color);

var _capitalRecordActions = require(654                              ); // 654 = ../actions/capitalRecordActions

var capitalRecordCreator = babelHelpers.interopRequireWildcard(_capitalRecordActions);


var ItemView = _native2.default.View(_templateObject, _constants.BORDER_WIDTH);
var InnerView = _UtilLib.BetweenView.extend(_templateObject2);

var page = 1;

var CapitalRecord = function (_Component) {
  babelHelpers.inherits(CapitalRecord, _Component);

  function CapitalRecord(props) {
    babelHelpers.classCallCheck(this, CapitalRecord);

    var _this = babelHelpers.possibleConstructorReturn(this, (CapitalRecord.__proto__ || Object.getPrototypeOf(CapitalRecord)).call(this, props));

    _this.state = {};
    return _this;
  }

  babelHelpers.createClass(CapitalRecord, [{
    key: '_renderItems',
    value: function _renderItems(item) {
      return _react2.default.createElement(
        ItemView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 43
          }
        },
        _react2.default.createElement(
          InnerView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 44
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 45
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#333333', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 46
                }
              },
              item.type
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#999999', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 47
                }
              },
              item.createdAt
            )
          ),
          _react2.default.createElement(
            _UtilLib.StyledText,
            {
              color: item.cashStr.indexOf("-") > -1 ? "#333333" : _color2.default.font.blue, __source: {
                fileName: _jsxFileName,
                lineNumber: 49
              }
            },
            item.cashStr
          )
        )
      );
    }
  }, {
    key: '_renderNoData',
    value: function _renderNoData(visible) {
      var _this2 = this;

      if (visible) {
        return _react2.default.createElement(
          _UtilLib.CenterView,
          { style: { marginTop: _constants.WINDOW_HEIGHT / 3 - 40 }, __source: {
              fileName: _jsxFileName,
              lineNumber: 57
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#999999', __source: {
                fileName: _jsxFileName,
                lineNumber: 58
              }
            },
            '\u6682\u65E0\u8D44\u91D1\u6D41\u6C34\uFF0C\u5FEB\u53BB\u6295\u8D44\u8D5A\u94B1\u5427\uFF01'
          ),
          _react2.default.createElement(
            _UtilLib.StyledButtom,
            { color: 'transparent', height: '35', radius: '20', top: '30', width: '118',
              style: { borderWidth: 1, borderColor: "#6295fd" },
              onPress: function onPress() {
                _reactNative.DeviceEventEmitter.emit('navigateTab', "FinanceList");
                _this2.props.navigation.goBack();
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 59
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { size: '14', color: '#6295fd', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 65
                }
              },
              '\u53BB\u6295\u8D44'
            )
          )
        );
      } else {
        return null;
      }
    }
  }, {
    key: '_onEndReached',
    value: function _onEndReached() {
      var _props$capitalRecord = this.props.capitalRecord,
          isLoadMore = _props$capitalRecord.isLoadMore,
          noMore = _props$capitalRecord.noMore,
          loading = _props$capitalRecord.loading;

      if (!isLoadMore && !noMore && !loading) {
        var capitalRecordActions = this.props.capitalRecordActions;

        capitalRecordActions.getData(false, true, false, ++page);
      } else {
        console.log("cd-----");
      }
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      page = 1;
      var capitalRecordActions = this.props.capitalRecordActions;

      capitalRecordActions.getData(false, false, true, page);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var _props$capitalRecord2 = this.props.capitalRecord,
          loading = _props$capitalRecord2.loading,
          list = _props$capitalRecord2.list,
          noMore = _props$capitalRecord2.noMore,
          isLoadMore = _props$capitalRecord2.isLoadMore;

      return _react2.default.createElement(
        _UtilLib.FlexView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 91
          }
        },
        _react2.default.createElement(_reactNative.FlatList, { data: list, initialNumToRender: 20,
          getItemLayout: function getItemLayout(data, index) {
            return { length: 94, offset: 94 * index, index: index };
          },
          renderItem: function renderItem(item) {
            return _this3._renderItems(item.item);
          },
          onEndReached: function onEndReached() {
            return _this3._onEndReached();
          },
          ListEmptyComponent: function ListEmptyComponent() {
            return _this3._renderNoData(!loading);
          },
          onEndReachedThreshold: 0.2,
          keyExtractor: function keyExtractor(item, index) {
            return index;
          },
          ListFooterComponent: function ListFooterComponent() {
            return _react2.default.createElement(_UtilLib.Footer, { visible: !noMore && isLoadMore, __source: {
                fileName: _jsxFileName,
                lineNumber: 99
              }
            });
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 92
          }
        }),
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 100
          }
        })
      );
    }
  }]);
  return CapitalRecord;
}(_react.Component);

CapitalRecord.navigationOptions = {
  title: '资金流水'
};


CapitalRecord.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
  var capitalRecord = state.capitalRecord;

  return { capitalRecord: capitalRecord };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var capitalRecordActions = (0, _redux.bindActionCreators)(capitalRecordCreator, dispatch);
  return { capitalRecordActions: capitalRecordActions };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(CapitalRecord);
}, 653, null, "YuanXC/src/pages/CapitalRecord.js");
__d(/* YuanXC/src/actions/capitalRecordActions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getData = getData;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);

var _http = require(622               ); // 622 = ../requests/http

function getData(isRefreshing, isLoadMore, loading) {
  var pageNumber = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
  var ctype = arguments[4];

  return function (dispatch) {
    dispatch(requestData({ isRefreshing: isRefreshing, isLoadMore: isLoadMore, loading: loading, ctype: ctype }));
    (0, _http.capitalRecord)({ pageNumber: pageNumber, cashType: ctype }).then(function (data) {
      if (data.data.code == 0) {
        dispatch(receiveData({ list: data.data.data.list }));
      } else {
        dispatch(receiveData({ error: true, msg: data.data.msg }));
      }
    }).catch(function (err) {
      dispatch(receiveData({ error: true, msgStr: 'netWorkError' }));
    });
  };
}

function requestData(data) {
  return babelHelpers.extends({
    type: types.REQUEST_CAPITAL_RECORD
  }, data);
}

function receiveData(data) {
  return babelHelpers.extends({
    type: types.RECEIVE_CAPITAL_RECORD
  }, data);
}
}, 654, null, "YuanXC/src/actions/capitalRecordActions.js");
__d(/* YuanXC/src/pages/CapitalList.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/CapitalList.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  width:', ';\n  height:44;\n  justify-content:center;\n  align-items:center;\n'], ['\n  width:', ';\n  height:44;\n  justify-content:center;\n  align-items:center;\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  height:3;\n  width:16;\n  border-radius:1;\n  background-color:', ';\n  margin-top:4;\n'], ['\n  height:3;\n  width:16;\n  border-radius:1;\n  background-color:', ';\n  margin-top:4;\n']),
    _templateObject3 = babelHelpers.taggedTemplateLiteral(['\n  padding-vertical:15;\n  width:', ';\n  background-color:#fff;\n'], ['\n  padding-vertical:15;\n  width:', ';\n  background-color:#fff;\n']),
    _templateObject4 = babelHelpers.taggedTemplateLiteral(['\n  padding-vertical:10;\n  width:', ';\n  background-color:#fff;\n'], ['\n  padding-vertical:10;\n  width:', ';\n  background-color:#fff;\n']),
    _templateObject5 = babelHelpers.taggedTemplateLiteral(['\n  padding-left:20;\n  padding-right:26;\n  padding-vertical:15;\n'], ['\n  padding-left:20;\n  padding-right:26;\n  padding-vertical:15;\n']),
    _templateObject6 = babelHelpers.taggedTemplateLiteral(['\n  padding-top:4;\n'], ['\n  padding-top:4;\n']),
    _templateObject7 = babelHelpers.taggedTemplateLiteral(['\n  width:18;\n  height:18;\n  margin-right:5;\n'], ['\n  width:18;\n  height:18;\n  margin-right:5;\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _imgs = require(436                ); // 436 = ../resources/imgs

var _imgs2 = babelHelpers.interopRequireDefault(_imgs);

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _Touchable = require(497                      ); // 497 = ../components/Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var _color = require(587              ); // 587 = ../styles/color

var _color2 = babelHelpers.interopRequireDefault(_color);

var _constants = require(434                  ); // 434 = ../config/constants

var _capitalListActions = require(656                            ); // 656 = ../actions/capitalListActions

var capitalListCreator = babelHelpers.interopRequireWildcard(_capitalListActions);

var _userActions = require(630                     ); // 630 = ../actions/userActions

var userCreator = babelHelpers.interopRequireWildcard(_userActions);

var _Float = require(628             ); // 628 = ../utils/Float

var _Float2 = babelHelpers.interopRequireDefault(_Float);

var _reactNavigation = require(371               ); // 371 = react-navigation

var FilterView2 = (0, _native2.default)(_Touchable2.default)(_templateObject, _constants.WINDOW_WIDTH / 2);
var Line = _native2.default.View.attrs({
  color: function color(props) {
    return props.color || '#F7F7F7';
  }
})(_templateObject2, function (props) {
  return props.color;
});
var ItemView = _UtilLib.CenterView.extend(_templateObject3, function (props) {
  return _constants.WINDOW_WIDTH * props.rate;
});
var ItemView2 = _UtilLib.CenterView.extend(_templateObject4, function (props) {
  return _constants.WINDOW_WIDTH * props.rate;
});
var InnerView = _UtilLib.RowView.extend(_templateObject5);
var TextView = _UtilLib.BetweenView.extend(_templateObject6);
var CarIcon = _native2.default.Image.attrs({
  resizeMode: 'center'
})(_templateObject7);

var page = 1;

var CapitalList = function (_Component) {
  babelHelpers.inherits(CapitalList, _Component);

  function CapitalList(props) {
    babelHelpers.classCallCheck(this, CapitalList);

    var _this = babelHelpers.possibleConstructorReturn(this, (CapitalList.__proto__ || Object.getPrototypeOf(CapitalList)).call(this, props));

    _this.state = {
      type: 1
    };
    return _this;
  }

  babelHelpers.createClass(CapitalList, [{
    key: '_changeType',
    value: function _changeType(type) {
      var _this2 = this;

      this.state.type !== type && this.setState({ type: type }, function () {
        page = 1;
        _this2.props.capitalListActions.getData(false, false, false, type);
      });
    }
  }, {
    key: '_renderItems',
    value: function _renderItems(item) {
      return _react2.default.createElement(
        _UtilLib.RowView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 99
          }
        },
        _react2.default.createElement(
          ItemView,
          { rate: 0.27, __source: {
              fileName: _jsxFileName,
              lineNumber: 100
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#333333', __source: {
                fileName: _jsxFileName,
                lineNumber: 101
              }
            },
            item.estimatePayAt
          )
        ),
        _react2.default.createElement(
          ItemView,
          { rate: 0.19, __source: {
              fileName: _jsxFileName,
              lineNumber: 103
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#333333', __source: {
                fileName: _jsxFileName,
                lineNumber: 104
              }
            },
            item.deadline,
            '\u5929'
          )
        ),
        _react2.default.createElement(
          ItemView,
          { rate: 0.27, __source: {
              fileName: _jsxFileName,
              lineNumber: 106
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#FDA874', size: '16', __source: {
                fileName: _jsxFileName,
                lineNumber: 107
              }
            },
            (0, _Float2.default)(item.interestMoney),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#333333', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 109
                }
              },
              '\u5143'
            )
          )
        ),
        _react2.default.createElement(
          ItemView,
          { rate: 0.27, __source: {
              fileName: _jsxFileName,
              lineNumber: 112
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#333333', size: '16', __source: {
                fileName: _jsxFileName,
                lineNumber: 113
              }
            },
            (0, _Float2.default)(item.investMoney),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#333333', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 115
                }
              },
              '\u5143'
            )
          )
        )
      );
    }
  }, {
    key: '_onEndReached',
    value: function _onEndReached() {
      var _props$capitalList = this.props.capitalList,
          isLoadMore = _props$capitalList.isLoadMore,
          noMore = _props$capitalList.noMore;

      if (!isLoadMore && !noMore) {
        var capitalListActions = this.props.capitalListActions;

        capitalListActions.getData(false, true, false, this.state.type, ++page);
      } else {
        console.log("cd-----");
      }
    }
  }, {
    key: '_complete',
    value: function _complete() {
      var _props$navigation = this.props.navigation,
          goBack = _props$navigation.goBack,
          navigate = _props$navigation.navigate;

      global.financeListoLoaded = false;
      global.userInfoLoaded = false;
      global.initRouter = "FinanceList";
      var navigateAction = _reactNavigation.NavigationActions.reset({
        index: 0,
        actions: [_reactNavigation.NavigationActions.navigate({ routeName: 'Main' })]
      });
      this.props.navigation.dispatch(navigateAction);
    }
  }, {
    key: '_renderNoData',
    value: function _renderNoData(visible) {
      if (visible) {
        return _react2.default.createElement(
          _UtilLib.CenterView,
          { style: { marginTop: _constants.WINDOW_HEIGHT / 3 - 40 }, __source: {
              fileName: _jsxFileName,
              lineNumber: 148
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#999999', __source: {
                fileName: _jsxFileName,
                lineNumber: 149
              }
            },
            '\u6682\u65E0\u9879\u76EE\u8BB0\u5F55\uFF0C\u5FEB\u53BB\u6295\u8D44\u8D5A\u94B1\u5427\uFF01'
          )
        );
      } else {
        return null;
      }
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      page = 1;
      var capitalListActions = this.props.capitalListActions;

      capitalListActions.getData(false, false, true, this.state.type, page);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var _props$capitalList2 = this.props.capitalList,
          loading = _props$capitalList2.loading,
          list = _props$capitalList2.list,
          noMore = _props$capitalList2.noMore,
          isLoadMore = _props$capitalList2.isLoadMore;
      var userInfo = this.props.userInfo;

      return _react2.default.createElement(
        _UtilLib.FlexView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 171
          }
        },
        _react2.default.createElement(
          _UtilLib.BetweenView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 172
            }
          },
          _react2.default.createElement(
            FilterView2,
            { onPress: this._changeType.bind(this, 1), __source: {
                fileName: _jsxFileName,
                lineNumber: 173
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { size: '16', color: this.state.type === 1 ? "#3990FA" : "#4A4A4A", __source: {
                  fileName: _jsxFileName,
                  lineNumber: 174
                }
              },
              '\u5F85\u8FD8\u6B3E'
            ),
            _react2.default.createElement(Line, { color: this.state.type === 1 && "#3990FA", __source: {
                fileName: _jsxFileName,
                lineNumber: 175
              }
            })
          ),
          _react2.default.createElement(
            FilterView2,
            { color: this.state.type === 2 && "#F4F4F4",
              onPress: this._changeType.bind(this, 2), __source: {
                fileName: _jsxFileName,
                lineNumber: 177
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { size: '16', color: this.state.type === 2 ? "#3990FA" : "#4A4A4A", __source: {
                  fileName: _jsxFileName,
                  lineNumber: 179
                }
              },
              '\u5DF2\u8FD8\u6B3E'
            ),
            _react2.default.createElement(Line, { color: this.state.type === 2 && "#3990FA", __source: {
                fileName: _jsxFileName,
                lineNumber: 180
              }
            })
          )
        ),
        _react2.default.createElement(
          _UtilLib.RowView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 183
            }
          },
          _react2.default.createElement(
            ItemView2,
            { rate: 0.27, __source: {
                fileName: _jsxFileName,
                lineNumber: 184
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#999999', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 185
                }
              },
              '\u8FD8\u6B3E\u65E5\u671F'
            )
          ),
          _react2.default.createElement(
            ItemView2,
            { rate: 0.19, __source: {
                fileName: _jsxFileName,
                lineNumber: 187
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#999999', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 188
                }
              },
              '\u671F\u9650'
            )
          ),
          _react2.default.createElement(
            ItemView2,
            { rate: 0.27, __source: {
                fileName: _jsxFileName,
                lineNumber: 190
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#999999', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 191
                }
              },
              '\u9884\u671F\u6536\u76CA'
            )
          ),
          _react2.default.createElement(
            ItemView2,
            { rate: 0.27, __source: {
                fileName: _jsxFileName,
                lineNumber: 193
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#999999', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 194
                }
              },
              '\u6295\u8D44\u672C\u91D1'
            )
          )
        ),
        _react2.default.createElement(_reactNative.FlatList, { data: list, initialNumToRender: 20,
          getItemLayout: function getItemLayout(data, index) {
            return { length: 94, offset: 94 * index, index: index };
          },
          renderItem: function renderItem(item) {
            return _this3._renderItems(item.item);
          },
          onEndReached: function onEndReached() {
            return _this3._onEndReached();
          },
          ListEmptyComponent: function ListEmptyComponent() {
            return _this3._renderNoData(!loading);
          },
          onEndReachedThreshold: 0.2,
          keyExtractor: function keyExtractor(item, index) {
            return index;
          },
          ListFooterComponent: function ListFooterComponent() {
            return _react2.default.createElement(_UtilLib.Footer, { visible: !noMore && isLoadMore, __source: {
                fileName: _jsxFileName,
                lineNumber: 204
              }
            });
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 197
          }
        }),
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 205
          }
        })
      );
    }
  }]);
  return CapitalList;
}(_react.Component);

CapitalList.navigationOptions = {
  title: '我的投资'
};


CapitalList.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
  var capitalList = state.capitalList,
      user = state.user;
  var userInfo = state.user.userInfo;

  return { capitalList: capitalList, userInfo: userInfo };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var capitalListActions = (0, _redux.bindActionCreators)(capitalListCreator, dispatch);
  var userActions = (0, _redux.bindActionCreators)(userCreator, dispatch);
  return { capitalListActions: capitalListActions, userActions: userActions };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(CapitalList);
}, 655, null, "YuanXC/src/pages/CapitalList.js");
__d(/* YuanXC/src/actions/capitalListActions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getData = getData;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);

var _http = require(622               ); // 622 = ../requests/http

function getData(isRefreshing, isLoadMore, loading, status) {
  var pageNumber = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;

  return function (dispatch) {
    dispatch(requestData({ isRefreshing: isRefreshing, isLoadMore: isLoadMore, loading: loading }));
    (0, _http.investList)({ pageNumber: pageNumber, status: status }).then(function (data) {
      if (data.data.code == 0) {
        dispatch(receiveData({ list: data.data.data.investList }));
      } else {
        dispatch(receiveData({ error: true, msg: data.data.msg }));
      }
    }).catch(function (err) {
      dispatch(receiveData({ error: true, msgStr: 'netWorkError' }));
    });
  };
}

function requestData(data) {
  return babelHelpers.extends({
    type: types.REQUEST_CAPITAL_LIST
  }, data);
}

function receiveData(data) {
  return babelHelpers.extends({
    type: types.RECEIVE_CAPITAL_LIST
  }, data);
}
}, 656, null, "YuanXC/src/actions/capitalListActions.js");
__d(/* YuanXC/src/pages/CapitalDetail.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/CapitalDetail.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  padding-horizontal:12;\n  margin-horizontal:15;\n  background-color:#F9F9F9;\n  padding-vertical:10;\n'], ['\n  padding-horizontal:12;\n  margin-horizontal:15;\n  background-color:#F9F9F9;\n  padding-vertical:10;\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  margin-top:10;\n  width:80;\n'], ['\n  margin-top:10;\n  width:80;\n']),
    _templateObject3 = babelHelpers.taggedTemplateLiteral(['\n  padding-left:12;\n  background-color:#F3F3F3;\n  padding-vertical:10;\n  margin-top:10;\n  margin-horizontal:15;\n'], ['\n  padding-left:12;\n  background-color:#F3F3F3;\n  padding-vertical:10;\n  margin-top:10;\n  margin-horizontal:15;\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _constants = require(434                  ); // 434 = ../config/constants

var _http = require(622               ); // 622 = ../requests/http

var _capitalDetailActions = require(658                              ); // 658 = ../actions/capitalDetailActions

var capitalDetailCreator = babelHelpers.interopRequireWildcard(_capitalDetailActions);

var _Float = require(628             ); // 628 = ../utils/Float

var _Float2 = babelHelpers.interopRequireDefault(_Float);

var _Touchable = require(497                      ); // 497 = ../components/Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var DetailView = _native2.default.View(_templateObject);
var ItemView = _UtilLib.CenterView.extend(_templateObject2);
var TitleView = _UtilLib.BetweenView.extend(_templateObject3);

var CapitalDetail = function (_Component) {
  babelHelpers.inherits(CapitalDetail, _Component);

  function CapitalDetail(props) {
    babelHelpers.classCallCheck(this, CapitalDetail);

    var _this = babelHelpers.possibleConstructorReturn(this, (CapitalDetail.__proto__ || Object.getPrototypeOf(CapitalDetail)).call(this, props));

    _this.state = {};
    return _this;
  }

  babelHelpers.createClass(CapitalDetail, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _props = this.props,
          navigation = _props.navigation,
          capitalDetailActions = _props.capitalDetailActions;

      capitalDetailActions.getData(true, navigation.state.params.id);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.props.capitalDetailActions.clearCache();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props$capitalDetail = this.props.capitalDetail,
          loading = _props$capitalDetail.loading,
          detail = _props$capitalDetail.detail;

      var text = "";
      if (detail.couponType === 1) {
        text = '\u4F7F\u7528\u7EA2\u5305\uFF1A' + (0, _Float2.default)(detail.couponMoney) + '\u5143';
      } else if (detail.couponType === 4) {
        text = '\u4F7F\u7528\u52A0\u606F\u5238\uFF1A' + (0, _Float2.default)(detail.couponRate && detail.couponRate * 100) + '%';
      }
      return _react2.default.createElement(
        _UtilLib.ScrollLayout,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 68
          }
        },
        _react2.default.createElement(
          TitleView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 69
            }
          },
          _react2.default.createElement(
            _UtilLib.CommText,
            { color: '#333333', __source: {
                fileName: _jsxFileName,
                lineNumber: 70
              }
            },
            '\u57FA\u672C\u4FE1\u606F'
          ),
          detail.isProtocolShow ? _react2.default.createElement(
            _Touchable2.default,
            { style: { paddingHorizontal: 10 },
              onPress: function onPress() {
                return _this2.props.navigation.navigate("WebView", { url: (0, _http.createApiUrl)('/user/h5/invest-protocol?investId=' + _this2.props.navigation.state.params.id) });
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 73
              }
            },
            _react2.default.createElement(
              _UtilLib.CommText,
              { color: '#6295fd', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 75
                }
              },
              '\u3010\u67E5\u770B\u6295\u8D44\u534F\u8BAE\u3011'
            )
          ) : null
        ),
        _react2.default.createElement(
          DetailView,
          { style: { flexDirection: "row", justifyContent: "space-between" }, __source: {
              fileName: _jsxFileName,
              lineNumber: 79
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 80
              }
            },
            _react2.default.createElement(
              _UtilLib.CommText,
              { color: '#999999', top: '4', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 81
                }
              },
              '\u9884\u671F\u5E74\u5316\uFF1A',
              (0, _Float2.default)(detail.rate && detail.rate * 100),
              '%'
            ),
            _react2.default.createElement(
              _UtilLib.CommText,
              { color: '#999999', top: '4', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 82
                }
              },
              '\u6295\u8D44\u65F6\u95F4\uFF1A',
              detail.investDate
            ),
            _react2.default.createElement(
              _UtilLib.CommText,
              { color: '#999999', top: '4', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 83
                }
              },
              '\u9884\u671F\u6536\u76CA\uFF1A',
              (0, _Float2.default)(detail.interestMoney),
              '\u5143'
            )
          ),
          _react2.default.createElement(
            _reactNative.View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 85
              }
            },
            _react2.default.createElement(
              _UtilLib.CommText,
              { color: '#999999', top: '4', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 86
                }
              },
              '\u9879\u76EE\u671F\u9650\uFF1A',
              detail.deadLine
            ),
            _react2.default.createElement(
              _UtilLib.CommText,
              { color: '#999999', top: '4', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 87
                }
              },
              '\u6295\u8D44\u91D1\u989D\uFF1A',
              (0, _Float2.default)(detail.investMoney),
              '\u5143'
            ),
            _react2.default.createElement(
              _UtilLib.CommText,
              { color: '#999999', top: '4', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 88
                }
              },
              text
            ),
            _react2.default.createElement(_UtilLib.CommText, {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 89
              }
            })
          )
        ),
        _react2.default.createElement(
          TitleView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 92
            }
          },
          _react2.default.createElement(
            _UtilLib.CommText,
            { color: '#333333', __source: {
                fileName: _jsxFileName,
                lineNumber: 93
              }
            },
            '\u8FD8\u6B3E\u660E\u7EC6(',
            detail.repaymentType,
            ')'
          )
        ),
        _react2.default.createElement(
          DetailView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 95
            }
          },
          _react2.default.createElement(
            _UtilLib.RowView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 96
              }
            },
            _react2.default.createElement(
              ItemView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 97
                }
              },
              _react2.default.createElement(
                _UtilLib.CommText,
                { color: '#333333', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 98
                  }
                },
                '\u8FD8\u6B3E\u65F6\u95F4'
              )
            ),
            _react2.default.createElement(
              ItemView,
              { style: { flex: 1 }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 100
                }
              },
              _react2.default.createElement(
                _UtilLib.CommText,
                { color: '#333333', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 101
                  }
                },
                '\u8BF4\u660E'
              )
            ),
            _react2.default.createElement(
              ItemView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 103
                }
              },
              _react2.default.createElement(
                _UtilLib.CommText,
                { color: '#333333', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 104
                  }
                },
                '\u72B6\u6001'
              )
            )
          ),
          detail.incomeList && detail.incomeList.map(function (item, i) {
            var dom = [];
            item.explain && item.explain.split("@").map(function (item, i) {
              dom.push(_react2.default.createElement(
                _UtilLib.CommText,
                { key: i, color: '#999999', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 111
                  }
                },
                item
              ));
            });
            return _react2.default.createElement(
              _UtilLib.RowView,
              { key: i, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 114
                }
              },
              _react2.default.createElement(
                ItemView,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 115
                  }
                },
                _react2.default.createElement(
                  _UtilLib.CommText,
                  { color: '#999999', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 116
                    }
                  },
                  item.estimatePayAt
                )
              ),
              _react2.default.createElement(
                ItemView,
                { style: { flex: 1 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 118
                  }
                },
                dom
              ),
              _react2.default.createElement(
                ItemView,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 121
                  }
                },
                _react2.default.createElement(
                  _UtilLib.CommText,
                  { color: '#999999', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 122
                    }
                  },
                  item.status
                )
              )
            );
          })
        ),
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 129
          }
        })
      );
    }
  }]);
  return CapitalDetail;
}(_react.Component);

CapitalDetail.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
  var capitalDetail = state.capitalDetail;

  return { capitalDetail: capitalDetail };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var capitalDetailActions = (0, _redux.bindActionCreators)(capitalDetailCreator, dispatch);
  return { capitalDetailActions: capitalDetailActions };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(CapitalDetail);
}, 657, null, "YuanXC/src/pages/CapitalDetail.js");
__d(/* YuanXC/src/actions/capitalDetailActions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getData = getData;
exports.clearCache = clearCache;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);

var _http = require(622               ); // 622 = ../requests/http

function getData(loading, id) {
  return function (dispatch) {
    dispatch(requestData({ loading: loading }));
    (0, _http.capitalDetail)({ id: id }).then(function (data) {
      if (data.data.code == 0) {
        dispatch(receiveData({ detail: data.data.data }));
      } else {
        dispatch(receiveData({ error: true, msg: data.data.msg }));
      }
    }).catch(function (err) {
      dispatch(receiveData({ error: true, msgStr: 'netWorkError' }));
    });
  };
}

function clearCache() {
  return {
    type: types.CLEAR_CAPITAL_CACHE
  };
}

function requestData(data) {
  return babelHelpers.extends({
    type: types.REQUEST_CAPITAL_DETAIL
  }, data);
}

function receiveData(data) {
  return babelHelpers.extends({
    type: types.RECEIVE_CAPITAL_DETAIL
  }, data);
}
}, 658, null, "YuanXC/src/actions/capitalDetailActions.js");
__d(/* YuanXC/src/pages/BonusList.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/BonusList.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  width:', ';\n  height:44;\n  justify-content:center;\n  align-items:center;\n'], ['\n  width:', ';\n  height:44;\n  justify-content:center;\n  align-items:center;\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  width:', ';\n  height:40;\n  justify-content:center;\n  align-items:center;\n  background-color:#fff;\n  border-bottom-width:1;\n  border-color:', ';\n'], ['\n  width:', ';\n  height:40;\n  justify-content:center;\n  align-items:center;\n  background-color:#fff;\n  border-bottom-width:1;\n  border-color:', ';\n']),
    _templateObject3 = babelHelpers.taggedTemplateLiteral(['\n  height:3;\n  width:16;\n  border-radius:1;\n  background-color:', ';\n  margin-top:4;\n'], ['\n  height:3;\n  width:16;\n  border-radius:1;\n  background-color:', ';\n  margin-top:4;\n']),
    _templateObject4 = babelHelpers.taggedTemplateLiteral(['\n  margin-bottom:15;\n'], ['\n  margin-bottom:15;\n']),
    _templateObject5 = babelHelpers.taggedTemplateLiteral(['\n  padding-horizontal:16;\n  flex-direction:row;\n  justify-content:center;\n  align-items:center;\n'], ['\n  padding-horizontal:16;\n  flex-direction:row;\n  justify-content:center;\n  align-items:center;\n']),
    _templateObject6 = babelHelpers.taggedTemplateLiteral(['\n  height:', ';\n  width:', ';\n  flex-direction:row;\n  padding-vertical:30;\n  padding-horizontal:14;\n'], ['\n  height:', ';\n  width:', ';\n  flex-direction:row;\n  padding-vertical:30;\n  padding-horizontal:14;\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _imgs = require(436                ); // 436 = ../resources/imgs

var _imgs2 = babelHelpers.interopRequireDefault(_imgs);

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _Touchable = require(497                      ); // 497 = ../components/Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var _color = require(587              ); // 587 = ../styles/color

var _color2 = babelHelpers.interopRequireDefault(_color);

var _constants = require(434                  ); // 434 = ../config/constants

var _http = require(622               ); // 622 = ../requests/http

var _bonusListActions = require(631                          ); // 631 = ../actions/bonusListActions

var bonusListCreator = babelHelpers.interopRequireWildcard(_bonusListActions);

var _Float = require(628             ); // 628 = ../utils/Float

var _Float2 = babelHelpers.interopRequireDefault(_Float);

var width = _constants.WINDOW_WIDTH - 10;
var FilterView2 = (0, _native2.default)(_Touchable2.default)(_templateObject, _constants.WINDOW_WIDTH / 2);
var FilterView = (0, _native2.default)(_Touchable2.default).attrs({
  color: function color(props) {
    return props.color || '#ffffff';
  }
})(_templateObject2, _constants.WINDOW_WIDTH / 3, function (props) {
  return props.color;
});
var Line = _native2.default.View.attrs({
  color: function color(props) {
    return props.color || '#F7F7F7';
  }
})(_templateObject3, function (props) {
  return props.color;
});
var ItemView = _UtilLib.CenterView.extend(_templateObject4);
var RightButton = (0, _native2.default)(_Touchable2.default)(_templateObject5);
var BonusImage = _native2.default.ImageBackground.attrs({
  resizeMode: 'stretch'
})(_templateObject6, width * 0.44, width);

var bonusJxq = require(660                             ); // 660 = ../resources/imgs/discount.png
var bonusHb = require(660                             ); // 660 = ../resources/imgs/discount.png
var bonusJxqUsed = require(660                             ); // 660 = ../resources/imgs/discount.png
var bonusHbUsed = require(660                             ); // 660 = ../resources/imgs/discount.png
var over = require(660                             ); // 660 = ../resources/imgs/discount.png

var pageArr = {};

var BonusList = function (_Component) {
  babelHelpers.inherits(BonusList, _Component);

  function BonusList(props) {
    babelHelpers.classCallCheck(this, BonusList);

    var _this = babelHelpers.possibleConstructorReturn(this, (BonusList.__proto__ || Object.getPrototypeOf(BonusList)).call(this, props));

    var params = _this.props.navigation.state.params;

    _this.state = {
      type: "0",
      list: null,
      onSelect: params && params.onSelect,
      selectedId: params && params.selectedId
    };
    return _this;
  }

  babelHelpers.createClass(BonusList, [{
    key: '_changeType2',
    value: function _changeType2(type) {
      if (this.props.ctype !== type) {
        pageArr[type] = 1;
        this.props.bonusListActions.getData(false, false, true, type, this.state.type, 1);
      }
    }
  }, {
    key: '_changeType',
    value: function _changeType(type) {
      var _this2 = this;

      var ctype = this.props.ctype;
      this.state.type !== type && this.setState({ type: type }, function () {
        pageArr[ctype] = 1;
        _this2.props.bonusListActions.getData(false, false, true, _this2.props.ctype, type, pageArr[ctype]);
      });
    }
  }, {
    key: '_selectBonus',
    value: function _selectBonus(item) {
      var _props$navigation = this.props.navigation,
          state = _props$navigation.state,
          goBack = _props$navigation.goBack;

      if (state.params && state.params.onSelect && !item.cantUse) {
        if (item.id === this.state.selectedId) {
          this.setState({ selectedId: '' }, function () {
            return state.params.onSelect({ money: '', rate: '', name: '', id: '' });
          });
          return;
        }
        state.params.onSelect({ type: item.type, money: item.money, rate: item.rate, name: item.name, id: item.id });
        goBack();
      }
    }
  }, {
    key: '_renderItems',
    value: function _renderItems(item) {
      var _this3 = this;

      var bonusImg = void 0;
      var right = void 0;
      var color = "#FC924D";
      var color2 = "#999999";
      var color3 = "#333333";

      if (item.isUse) {
        bonusImg = item.type === 1 ? bonusHbUsed : bonusJxqUsed;
        right = _react2.default.createElement(
          _UtilLib.StyledText,
          { color: color, lh: '18', size: '16', __source: {
              fileName: _jsxFileName,
              lineNumber: 143
            }
          },
          '\u5DF2\u4F7F\u7528'
        );
      } else if (item.isOverdue === 2) {
        bonusImg = over;
        color = "#BBBBBB";
        right = _react2.default.createElement(
          _UtilLib.StyledText,
          { color: color, lh: '18', size: '16', __source: {
              fileName: _jsxFileName,
              lineNumber: 147
            }
          },
          '\u5DF2\u8FC7\u671F'
        );
      } else {
        if (item.cantUse) {
          bonusImg = over;
          color = "#BBBBBB";
        } else {
          bonusImg = item.type === 1 ? bonusHb : bonusJxq;
          if (this.state.onSelect) {
            if (item.id === this.state.selectedId) {
              right = _imgs2.default.checked({ width: 24, height: 24 });
            } else {
              right = _imgs2.default.unchecked({ width: 24, height: 24 });
            }
          } else {
            right = _react2.default.createElement(
              _Touchable2.default,
              { onPress: function onPress() {
                  _reactNative.DeviceEventEmitter.emit('navigateTab', "FinanceList");
                  _this3.props.navigation.goBack();
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 162
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: color, lh: '18', size: '16', style: { width: 16 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 166
                  }
                },
                '\u7ACB\u5373\u4F7F\u7528'
              )
            );
          }
        }
      }
      var text = void 0;
      if (item.type === 4) {
        text = (0, _Float2.default)(item.rate && item.rate * 100) + '%';
      } else {
        text = '\uFFE5' + item.money;
      }
      var moneyText = void 0;
      var deadText = void 0;
      if (item.minInvestMoney > 0 && item.maxInvestMoney > 0) {
        moneyText = '\u6295\u8D44' + item.minInvestMoney + '~' + item.maxInvestMoney + '\u5143\u53EF\u7528';
      } else if (item.minInvestMoney > 0) {
        moneyText = '\u6295\u8D44' + item.minInvestMoney + '\u5143\u4EE5\u4E0A\u53EF\u7528';
      } else if (item.maxInvestMoney > 0) {
        moneyText = '\u6295\u8D44' + item.minInvestMoney + '\u5143\u4EE5\u4E0B\u53EF\u7528';
      } else {
        moneyText = '无投资金额限制';
      }
      if (item.minDeadline > 0 && item.maxDeadline > 0) {
        deadText = '\u6295\u8D44' + item.minDeadline + '~' + item.maxDeadline + item.deadlineType + '\u6807\u53EF\u7528';
      } else if (item.minDeadline > 0) {
        deadText = '\u6295\u8D44' + item.minDeadline + item.deadlineType + '\u4EE5\u4E0A\u6807\u53EF\u7528';
      } else if (item.maxDeadline > 0) {
        deadText = '\u6295\u8D44' + item.minDeadline + item.deadlineType + '\u4EE5\u4E0B\u6807\u53EF\u7528';
      } else {
        deadText = '无标期限制';
      }
      return _react2.default.createElement(
        _Touchable2.default,
        { onPress: this._selectBonus.bind(this, item),
          feedback: this.state.onSelect && !item.cantUse ? true : false, __source: {
            fileName: _jsxFileName,
            lineNumber: 198
          }
        },
        _react2.default.createElement(
          ItemView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 200
            }
          },
          _react2.default.createElement(
            BonusImage,
            { source: bonusImg, __source: {
                fileName: _jsxFileName,
                lineNumber: 201
              }
            },
            _react2.default.createElement(
              _UtilLib.MiddleView,
              { width: 0.2 * width, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 202
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: color, size: '22', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 203
                  }
                },
                text
              )
            ),
            _react2.default.createElement(
              _UtilLib.MiddleView,
              { width: 0.5 * width, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 205
                }
              },
              _react2.default.createElement(
                _UtilLib.NormalView,
                { style: { justifyContent: "space-between", flex: 1 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 206
                  }
                },
                _react2.default.createElement(
                  _UtilLib.NormalView,
                  {
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 207
                    }
                  },
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { color: color3, size: '15', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 208
                      }
                    },
                    item.name
                  ),
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { color: color3, size: '15', top: '8', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 211
                      }
                    },
                    moneyText
                  )
                ),
                _react2.default.createElement(
                  _UtilLib.NormalView,
                  {
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 215
                    }
                  },
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { color: color2, size: '15', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 217
                      }
                    },
                    deadText
                  ),
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { color: color2, size: '12', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 220
                      }
                    },
                    '\u6709\u6548\u671F\u81F3',
                    item.endAt
                  )
                )
              )
            ),
            _react2.default.createElement(
              _UtilLib.MiddleView,
              { width: 0.2 * width, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 224
                }
              },
              right
            )
          )
        )
      );
    }
  }, {
    key: '_loadMore',
    value: function _loadMore() {
      this.props.bonusListActions.getData(false, true, false, this.state.type, 1, true);
    }
  }, {
    key: '_renderFooter',
    value: function _renderFooter() {
      var _props$bonusList = this.props.bonusList,
          loading = _props$bonusList.loading,
          list = _props$bonusList.list,
          isLoadMore = _props$bonusList.isLoadMore,
          noMore = _props$bonusList.noMore;

      return _react2.default.createElement(_UtilLib.Footer, { visible: isLoadMore && !loading, __source: {
          fileName: _jsxFileName,
          lineNumber: 249
        }
      });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var params = this.props.navigation.state.params;

      if (params && params.onSelect) {
        this.setState({ list: params.list });
      } else {
        var _props = this.props,
            bonusListActions = _props.bonusListActions,
            bonusList = _props.bonusList,
            ctype = _props.ctype;

        pageArr[ctype] = 1;
        var loading = !bonusList[ctype].list || bonusList[ctype].list.length === 0;
        bonusListActions.getData(false, false, loading, this.props.ctype, this.state.type, pageArr[ctype]);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this4 = this;

      var ctype = this.props.ctype;
      var _props$bonusList$ctyp = this.props.bonusList[ctype],
          loading = _props$bonusList$ctyp.loading,
          list = _props$bonusList$ctyp.list;

      this.state.list && (list = this.state.list);
      var text = ctype === "1" ? "红包" : ctype === "4" ? "加息券" : "优惠";
      return _react2.default.createElement(
        _UtilLib.FlexView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 271
          }
        },
        this.state.list ? null : _react2.default.createElement(
          _UtilLib.NormalView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 274
            }
          },
          _react2.default.createElement(
            _UtilLib.BetweenView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 275
              }
            },
            _react2.default.createElement(
              FilterView2,
              { onPress: this._changeType2.bind(this, "1"), __source: {
                  fileName: _jsxFileName,
                  lineNumber: 276
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '16', color: this.props.ctype === "1" ? "#3990FA" : "#4A4A4A", __source: {
                    fileName: _jsxFileName,
                    lineNumber: 277
                  }
                },
                '\u7EA2\u5305'
              ),
              _react2.default.createElement(Line, { color: this.props.ctype === "1" && "#3990FA", __source: {
                  fileName: _jsxFileName,
                  lineNumber: 278
                }
              })
            ),
            _react2.default.createElement(
              FilterView2,
              { color: this.props.ctype === "4" && "#F4F4F4",
                onPress: this._changeType2.bind(this, "4"), __source: {
                  fileName: _jsxFileName,
                  lineNumber: 280
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '16', color: this.props.ctype === "4" ? "#3990FA" : "#4A4A4A", __source: {
                    fileName: _jsxFileName,
                    lineNumber: 282
                  }
                },
                '\u52A0\u606F\u5238'
              ),
              _react2.default.createElement(Line, { color: this.props.ctype === "4" && "#3990FA", __source: {
                  fileName: _jsxFileName,
                  lineNumber: 283
                }
              })
            )
          )
        ),
        _react2.default.createElement(_reactNative.FlatList, { data: list, initialNumToRender: 5,
          renderItem: function renderItem(item) {
            return _this4._renderItems(item.item);
          },
          ListEmptyComponent: function ListEmptyComponent() {
            return _react2.default.createElement(_UtilLib.NoData, { visible: !loading, text: "暂无" + text, __source: {
                fileName: _jsxFileName,
                lineNumber: 305
              }
            });
          },
          keyExtractor: function keyExtractor(item, index) {
            return index;
          },
          ListFooterComponent: function ListFooterComponent() {
            return _this4._renderFooter();
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 303
          }
        }),
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 308
          }
        })
      );
    }
  }]);
  return BonusList;
}(_react.Component);

BonusList.navigationOptions = function (_ref) {
  var navigation = _ref.navigation,
      screenProps = _ref.screenProps;
  return {
    title: '我的福利',
    headerRight: _react2.default.createElement(
      RightButton,
      { onPress: function onPress() {
          return navigation.navigate("WebView", { url: (0, _http.createApiUrl)("/user/h5/coupon-rule") });
        }, __source: {
          fileName: _jsxFileName,
          lineNumber: 90
        }
      },
      _react2.default.createElement(
        _UtilLib.StyledText,
        { size: '16', __source: {
            fileName: _jsxFileName,
            lineNumber: 91
          }
        },
        '\u4F7F\u7528\u8BF4\u660E'
      )
    )
  };
};

BonusList.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
  var bonusList = state.bonusList;

  var ctype = bonusList.ctype;
  return { bonusList: bonusList, ctype: ctype };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var bonusListActions = (0, _redux.bindActionCreators)(bonusListCreator, dispatch);
  return { bonusListActions: bonusListActions };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(BonusList);
}, 659, null, "YuanXC/src/pages/BonusList.js");
__d(/* YuanXC/src/resources/imgs/discount.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":348,"height":153,"scales":[2],"hash":"1236861f70320e575ef83adeee245b6c","name":"discount","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 660, null, "YuanXC/src/resources/imgs/discount.png");
__d(/* YuanXC/src/pages/WebView.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/WebView.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _imgs = require(436                ); // 436 = ../resources/imgs

var _imgs2 = babelHelpers.interopRequireDefault(_imgs);

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _MessageBox = require(625                       ); // 625 = ../components/MessageBox

var _MessageBox2 = babelHelpers.interopRequireDefault(_MessageBox);

var _Share = require(662                  ); // 662 = ../components/Share

var _Share2 = babelHelpers.interopRequireDefault(_Share);

var _constants = require(434                  ); // 434 = ../config/constants

var _reactNavigation = require(371               ); // 371 = react-navigation

var WebView1 = function (_PureComponent) {
  babelHelpers.inherits(WebView1, _PureComponent);

  function WebView1(props) {
    babelHelpers.classCallCheck(this, WebView1);

    var _this = babelHelpers.possibleConstructorReturn(this, (WebView1.__proto__ || Object.getPrototypeOf(WebView1)).call(this, props));

    _this.currentUrl = "";
    _this.twiceBack = false;
    var _this$props$navigatio = _this.props.navigation.state.params,
        url = _this$props$navigatio.url,
        html = _this$props$navigatio.html;

    url = url.replace("@@", "://");
    _this.state = {
      token: global.token,
      url: url,
      html: html,
      messageBox: {
        visible: false,
        content: '',
        button: null
      }
    };
    _this.share = {};
    var patchPostMessageFunction = function patchPostMessageFunction() {
      var originalPostMessage = window.postMessage;

      var patchedPostMessage = function patchedPostMessage(message, targetOrigin, transfer) {
        originalPostMessage(message, targetOrigin, transfer);
      };

      patchedPostMessage.toString = function () {
        return String(Object.hasOwnProperty).replace('hasOwnProperty', 'postMessage');
      };

      window.postMessage = patchedPostMessage;
      setTimeout(function () {
        var meta = document.getElementsByTagName('meta');
        for (i in meta) {
          if (typeof meta[i].name != "undefined" && meta[i].name.toLowerCase() == "description") {
            window.postMessage('{"type":"configDesc","desc":"' + meta[i].content + '"}');
          }
        }
      }, 500);
    };
    _this.patchPostMessageJsCode = '(' + String(patchPostMessageFunction) + ')();';
    return _this;
  }

  babelHelpers.createClass(WebView1, [{
    key: '_onNavigationStateChange',
    value: function _onNavigationStateChange(navState) {
      var _this2 = this;

      if (navState.url && navState.url.indexOf("postMessage") !== -1) {
        return true;
      }
      this.desc = "";
      this.share = {
        webpageUrl: navState.url,
        title: navState.title
      };
      this.currentUrl = navState.url;
      var strRegex = "^((https|http|ftp|rtsp|mms)?://)" + "?(([0-9a-z_!~*'().&=+$%-]+: )?[0-9a-z_!~*'().&=+$%-]+@)?" + "(([0-9]{1,3}\.){3}[0-9]{1,3}" + "|" + "([0-9a-z_!~*'()-]+\.)*" + "([0-9a-z][0-9a-z-]{0,61})?[0-9a-z]\." + "[a-z]{2,6})" + "(:[0-9]{1,4})?" + "((/?)|" + "(/[0-9a-z_!~*'().;?:@&=+$,%#-]+)+/?)$";
      var isUrl = navState.title && new RegExp(strRegex).test(navState.title);

      var title = !isUrl && navState.title || '';
      if (navState.canGoBack) {
        this.props.navigation.setParams({
          headerLeft: _react2.default.createElement(
            _UtilLib.RowView,
            { style: { justifyContent: 'center' }, __source: {
                fileName: _jsxFileName,
                lineNumber: 85
              }
            },
            _react2.default.createElement(
              _UtilLib.HeaderButton,
              { onPress: function onPress() {
                  if (_this2.twiceBack) {
                    _this2.twiceBack = false;
                    _this2.props.navigation.goBack();
                  } else {
                    _this2.refs.webview.goBack();
                  }
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 86
                }
              },
              _imgs2.default.leftArrowWhite()
            ),
            _react2.default.createElement(
              _UtilLib.HeaderButton,
              { onPress: function onPress() {
                  return _this2.props.navigation.goBack();
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 97
                }
              },
              _imgs2.default.close2({ tintColor: "#fff" })
            )
          ),
          title: title.length > 12 ? title.substr(0, 12) + "..." : title
        });
      } else {
        this.props.navigation.setParams({
          headerLeft: null,
          title: title.length > 12 ? title.substr(0, 12) + "..." : title
        });
      }
    }
  }, {
    key: '_showOptionModal',
    value: function _showOptionModal(msg) {
      var _this3 = this;

      this.props.navigation.setParams({
        gesturesEnabled: false
      });
      this.setState({
        messageBox: {
          visible: true,
          content: msg,
          button: {
            text: '确认',
            onPress: function onPress() {
              _this3.props.navigation.setParams({
                gesturesEnabled: true
              });
              _this3.setState({
                messageBox: {
                  visible: false
                }
              });
            }
          }
        }
      });
    }
  }, {
    key: '_showShareButton',
    value: function _showShareButton() {
      var _this4 = this;

      this.props.navigation.setParams({
        headerRight: _react2.default.createElement(
          _UtilLib.HeaderButton,
          { onPress: function onPress() {
              return _this4._openShare();
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 140
            }
          },
          _imgs2.default.share()
        )
      });
    }
  }, {
    key: '_onMessage',
    value: function _onMessage(data) {
      var _this5 = this;

      console.log(data.data);
      var _props$navigation = this.props.navigation,
          goBack = _props$navigation.goBack,
          navigate = _props$navigation.navigate;

      if (data.data && data.data.length > 2) {
        try {
          data = JSON.parse(data.data);
          if (data.type === "openShare") {
            this._openShare();
          } else if (data.type === "configShare") {
            if (data.url) {
              this.share = {
                webpageUrl: data.url,
                title: data.title,
                description: data.desc || this.desc,
                imageUrl: data.img
              };
              this.refs.share.getWrappedInstance().config(this.share);
            }
          } else if (data.type === "configDesc") {
            !this.desc && (this.desc = data.desc);
          } else if (data.type === "navigate") {
            if (data.routeName) {
              var match = /Home|FinanceList|UserInfo/.test(data.routeName);
              if (match) {
                global.financeListoLoaded = false;
                global.userInfoLoaded = false;
                global.initRouter = data.routeName;
                var navigateAction = _reactNavigation.NavigationActions.reset({
                  index: 0,
                  actions: [_reactNavigation.NavigationActions.navigate({ routeName: 'Main' })]
                });
                this.props.navigation.dispatch(navigateAction);
              } else if (data.back && !data.callback) {
                goBack();
                setTimeout(function () {
                  navigate(data.routeName, data.params);
                });
              } else {
                if (data.routeName === "Login") {
                  this.twiceBack = true;
                  navigate(data.routeName, babelHelpers.extends({
                    successCb: function successCb() {
                      if (_this5.currentUrl.indexOf("?t=") > -1) {
                        _this5.setState({ url: _this5.currentUrl + global.token });
                      } else {
                        var str = _this5.currentUrl.indexOf("?") === -1 ? "?" : "&";
                        _this5.setState({ url: _this5.currentUrl + str + "t=" + global.token });
                      }
                    } }, data.params));
                } else {
                  navigate(data.routeName, data.params);
                }
              }
            }
          } else if (data.type === "showShare") {
            this._showShareButton();
          }
        } catch (e) {
          this._showOptionModal("ErrorData:" + data.data);
        }
      }
    }
  }, {
    key: '_openShare',
    value: function _openShare() {
      if (!this.share.description) {
        this.share.description = this.desc || this.share.title;
      }
      this.refs.share.getWrappedInstance().show(this.share);
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {}
  }, {
    key: 'render',
    value: function render() {
      var _this6 = this;

      var source = this.state.url ? {
        uri: this.state.url,
        headers: { token: global.token || '', osname: global.os || '' }
      } : { html: this.state.html };
      return _react2.default.createElement(
        _reactNative.View,
        {
          style: {
            flex: 1,
            backgroundColor: '#fff',
            borderTopWidth: 1,
            borderColor: "#EEEEEE",
            padding: this.state.url ? 0 : 10
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 231
          }
        },
        _react2.default.createElement(_reactNative.WebView, {
          ref: 'webview',
          style: { flex: 1 },
          injectedJavaScript: this.patchPostMessageJsCode,
          source: source,
          javaScriptEnabled: true,
          domStorageEnabled: true,
          scalesPageToFit: _constants.OS === "ios",
          onNavigationStateChange: function onNavigationStateChange(navState) {
            return _this6._onNavigationStateChange(navState);
          },
          renderError: function renderError() {
            return _react2.default.createElement(_UtilLib.NoData, { visible: true, text: '\u52A0\u8F7D\u5931\u8D25', __source: {
                fileName: _jsxFileName,
                lineNumber: 248
              }
            });
          },
          startInLoadingState: false,
          onMessage: function onMessage(event) {
            return _this6._onMessage(event.nativeEvent);
          },
          __source: {
            fileName: _jsxFileName,
            lineNumber: 239
          }
        }),
        _react2.default.createElement(_Share2.default, { ref: 'share', __source: {
            fileName: _jsxFileName,
            lineNumber: 252
          }
        }),
        _react2.default.createElement(_MessageBox2.default, {
          visible: this.state.messageBox.visible,
          content: this.state.messageBox.content,
          button: this.state.messageBox.button, __source: {
            fileName: _jsxFileName,
            lineNumber: 253
          }
        })
      );
    }
  }]);
  return WebView1;
}(_react.PureComponent);

exports.default = WebView1;
}, 661, null, "YuanXC/src/pages/WebView.js");
__d(/* YuanXC/src/components/Share.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/components/Share.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _UtilLib = require(586        ); // 586 = ./UtilLib

var _Touchable = require(497          ); // 497 = ./Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var _modalActions = require(646                      ); // 646 = ../actions/modalActions

var modalCreator = babelHelpers.interopRequireWildcard(_modalActions);

var _reactNativeWechat = require(663                  ); // 663 = react-native-wechat

var WeChat = babelHelpers.interopRequireWildcard(_reactNativeWechat);

var _constants = require(434                  ); // 434 = ../config/constants

var _resolveAssetSource = require(159                 ); // 159 = resolveAssetSource

var _resolveAssetSource2 = babelHelpers.interopRequireDefault(_resolveAssetSource);

var Share = function (_PureComponent) {
  babelHelpers.inherits(Share, _PureComponent);

  function Share(props) {
    babelHelpers.classCallCheck(this, Share);

    var _this = babelHelpers.possibleConstructorReturn(this, (Share.__proto__ || Object.getPrototypeOf(Share)).call(this, props));

    _this.img = _constants.OS === "ios" ? 'http' + global.https + '://s.qianshiwang.com/share.png' : (0, _resolveAssetSource2.default)(require(470                         )).uri; // 470 = ../resources/imgs/logo.png
    return _this;
  }

  babelHelpers.createClass(Share, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      this.view = _react2.default.createElement(
        _UtilLib.IndicatorView,
        { visible: false, style: { height: _constants.WINDOW_HEIGHT }, backPress: function backPress() {
            _this2.close();
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 30
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          { style: styles.container, __source: {
              fileName: _jsxFileName,
              lineNumber: 33
            }
          },
          _react2.default.createElement(
            _Touchable2.default,
            { onPress: function onPress() {
                return _this2._share(1);
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 34
              }
            },
            _react2.default.createElement(
              _reactNative.View,
              { style: styles.content, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 35
                }
              },
              _react2.default.createElement(_reactNative.Image, { source: require(665                       ), style: styles.img, __source: { // 665 = ../resources/imgs/wx.png
                  fileName: _jsxFileName,
                  lineNumber: 36
                }
              }),
              _react2.default.createElement(
                _reactNative.Text,
                { style: styles.label, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 37
                  }
                },
                '\u5FAE\u4FE1\u597D\u53CB'
              )
            )
          ),
          _react2.default.createElement(
            _Touchable2.default,
            { onPress: function onPress() {
                return _this2._share(2);
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 42
              }
            },
            _react2.default.createElement(
              _reactNative.View,
              { style: styles.content, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 43
                }
              },
              _react2.default.createElement(_reactNative.Image, { source: require(666                        ), style: styles.img, __source: { // 666 = ../resources/imgs/wx2.png
                  fileName: _jsxFileName,
                  lineNumber: 44
                }
              }),
              _react2.default.createElement(
                _reactNative.Text,
                { style: styles.label, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 45
                  }
                },
                '\u670B\u53CB\u5708'
              )
            )
          ),
          _react2.default.createElement(
            _Touchable2.default,
            { onPress: function onPress() {
                return _this2._share(3);
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 50
              }
            },
            _react2.default.createElement(
              _reactNative.View,
              { style: styles.content, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 51
                }
              },
              _react2.default.createElement(_reactNative.Image, { source: require(667                         ), style: styles.img, __source: { // 667 = ../resources/imgs/copy.png
                  fileName: _jsxFileName,
                  lineNumber: 52
                }
              }),
              _react2.default.createElement(
                _reactNative.Text,
                { style: styles.label, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 53
                  }
                },
                '\u590D\u5236\u94FE\u63A5'
              )
            )
          )
        )
      );
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(_reactNative.View, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 63
        }
      });
    }
  }, {
    key: '_share',
    value: function _share(i) {
      var _this3 = this;

      this.close();
      !this.share.type && (this.share.type = "news");
      !this.share.description && (this.share.description = this.share.title);
      !this.share.thumbImage && (this.share.thumbImage = this.img);
      if (i === 1) {
        WeChat.isWXAppInstalled().then(function (installed) {
          if (installed) {
            WeChat.shareToSession(_this3.share);
          } else {
            _this3.context.callToast("未安装微信");
          }
        });
      } else if (i === 2) {
        WeChat.isWXAppInstalled().then(function (installed) {
          if (installed) {
            WeChat.shareToTimeline(_this3.share);
          } else {
            _this3.context.callToast("未安装微信");
          }
        });
      } else {
        this.context.callToast("链接复制成功", true);
        _reactNative.Clipboard.setString(this.share.webpageUrl);
      }
    }
  }, {
    key: 'show',
    value: function show(_share) {
      if (!_share.webpageUrl) return;
      this.share = _share;
      this.view && this.props.modalActions.toggleModal(this.view);
    }
  }, {
    key: 'config',
    value: function config(_share) {
      if (!_share.webpageUrl) return;
      this.share = _share;
    }
  }, {
    key: 'close',
    value: function close() {
      this.props.modalActions.toggleModal();
    }
  }]);
  return Share;
}(_react.PureComponent);

var styles = _reactNative.StyleSheet.create({
  container: {
    width: _constants.WINDOW_WIDTH,
    height: 80,
    position: 'absolute',
    bottom: 0,
    left: 0,
    backgroundColor: '#F8F8F8',
    flexDirection: 'row',
    justifyContent: 'space-around',
    alignItems: 'center'
  },
  content: {
    width: _constants.WINDOW_WIDTH / 6,
    alignItems: 'center'
  },
  img: {
    width: _constants.WINDOW_WIDTH / 4 * 0.4,
    height: _constants.WINDOW_WIDTH / 4 * 0.4
  },
  label: {
    marginTop: 10,
    fontSize: 13,
    color: '#6A6A6A'
  }
});

Share.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
  return {};
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var modalActions = (0, _redux.bindActionCreators)(modalCreator, dispatch);
  return { modalActions: modalActions };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps, null, { withRef: true })(Share);
}, 662, null, "YuanXC/src/components/Share.js");
__d(/* react-native-wechat/index.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WechatError = exports.openWXApp = exports.getApiVersion = exports.getWXAppInstallUrl = exports.isWXAppSupportApi = exports.isWXAppInstalled = exports.registerAppWithDescription = exports.registerApp = exports.removeAllListeners = exports.once = exports.addListener = undefined;
exports.sendAuthRequest = sendAuthRequest;
exports.shareToTimeline = shareToTimeline;
exports.shareToSession = shareToSession;
exports.pay = pay;

var _reactNative = require(12            ); // 12 = react-native

var _events = require(664     ); // 664 = events

var isAppRegistered = false;
var WeChat = _reactNative.NativeModules.WeChat;

var emitter = new _events.EventEmitter();

_reactNative.DeviceEventEmitter.addListener('WeChat_Resp', function (resp) {
  emitter.emit(resp.type, resp);
});

function wrapRegisterApp(nativeFunc) {
  if (!nativeFunc) {
    return undefined;
  }
  return function () {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (isAppRegistered) {
      return Promise.resolve(true);
    }
    isAppRegistered = true;
    return new Promise(function (resolve, reject) {
      nativeFunc.apply(null, [].concat(args, [function (error, result) {
        if (!error) {
          return resolve(result);
        }
        if (typeof error === 'string') {
          return reject(new Error(error));
        }
        reject(error);
      }]));
    });
  };
}

function wrapApi(nativeFunc) {
  if (!nativeFunc) {
    return undefined;
  }
  return function () {
    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    if (!isAppRegistered) {
      return Promise.reject(new Error('registerApp required.'));
    }
    return new Promise(function (resolve, reject) {
      nativeFunc.apply(null, [].concat(args, [function (error, result) {
        if (!error) {
          return resolve(result);
        }
        if (typeof error === 'string') {
          return reject(new Error(error));
        }
        reject(error);
      }]));
    });
  };
}

var addListener = exports.addListener = emitter.addListener.bind(emitter);

var once = exports.once = emitter.once.bind(emitter);

var removeAllListeners = exports.removeAllListeners = emitter.removeAllListeners.bind(emitter);

var registerApp = exports.registerApp = wrapRegisterApp(WeChat.registerApp);

var registerAppWithDescription = exports.registerAppWithDescription = wrapRegisterApp(WeChat.registerAppWithDescription);

var isWXAppInstalled = exports.isWXAppInstalled = wrapApi(WeChat.isWXAppInstalled);

var isWXAppSupportApi = exports.isWXAppSupportApi = wrapApi(WeChat.isWXAppSupportApi);

var getWXAppInstallUrl = exports.getWXAppInstallUrl = wrapApi(WeChat.getWXAppInstallUrl);

var getApiVersion = exports.getApiVersion = wrapApi(WeChat.getApiVersion);

var openWXApp = exports.openWXApp = wrapApi(WeChat.openWXApp);

var nativeShareToTimeline = wrapApi(WeChat.shareToTimeline);
var nativeShareToSession = wrapApi(WeChat.shareToSession);
var nativeSendAuthRequest = wrapApi(WeChat.sendAuthRequest);

function sendAuthRequest(scopes, state) {
  return new Promise(function (resolve, reject) {
    WeChat.sendAuthRequest(scopes, state, function () {});
    emitter.once('SendAuth.Resp', function (resp) {
      if (resp.errCode === 0) {
        resolve(resp);
      } else {
        reject(new WechatError(resp));
      }
    });
  });
}

function shareToTimeline(data) {
  return new Promise(function (resolve, reject) {
    nativeShareToTimeline(data);
    emitter.once('SendMessageToWX.Resp', function (resp) {
      if (resp.errCode === 0) {
        resolve(resp);
      } else {
        reject(new WechatError(resp));
      }
    });
  });
}

function shareToSession(data) {
  return new Promise(function (resolve, reject) {
    nativeShareToSession(data);
    emitter.once('SendMessageToWX.Resp', function (resp) {
      if (resp.errCode === 0) {
        resolve(resp);
      } else {
        reject(new WechatError(resp));
      }
    });
  });
}

function pay(data) {
  function correct(actual, fixed) {
    if (!data[fixed] && data[actual]) {
      data[fixed] = data[actual];
      delete data[actual];
    }
  }
  correct('prepayid', 'prepayId');
  correct('noncestr', 'nonceStr');
  correct('partnerid', 'partnerId');
  correct('timestamp', 'timeStamp');

  return new Promise(function (resolve, reject) {
    WeChat.pay(data, function (result) {
      if (result) reject(result);
    });
    emitter.once('PayReq.Resp', function (resp) {
      if (resp.errCode === 0) {
        resolve(resp);
      } else {
        reject(new WechatError(resp));
      }
    });
  });
}

var WechatError = exports.WechatError = function (_Error) {
  babelHelpers.inherits(WechatError, _Error);

  function WechatError(resp) {
    babelHelpers.classCallCheck(this, WechatError);

    var message = resp.errStr || resp.errCode.toString();

    var _this = babelHelpers.possibleConstructorReturn(this, (WechatError.__proto__ || Object.getPrototypeOf(WechatError)).call(this, message));

    _this.name = 'WechatError';
    _this.code = resp.errCode;

    if (typeof Object.setPrototypeOf === 'function') {
      Object.setPrototypeOf(_this, WechatError.prototype);
    } else {
      _this.__proto__ = WechatError.prototype;
    }
    return _this;
  }

  return WechatError;
}(Error);
}, 663, null, "react-native-wechat/index.js");
__d(/* events/events.js */function(global, require, module, exports) {

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

EventEmitter.defaultMaxListeners = 10;

EventEmitter.prototype.setMaxListeners = function (n) {
  if (!isNumber(n) || n < 0 || isNaN(n)) throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function (type) {
  var er, handler, len, args, i, listeners;

  if (!this._events) this._events = {};

  if (type === 'error') {
    if (!this._events.error || isObject(this._events.error) && !this._events.error.length) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er;
      }
      throw TypeError('Uncaught, unspecified "error" event.');
    }
  }

  handler = this._events[type];

  if (isUndefined(handler)) return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;

      default:
        len = arguments.length;
        args = new Array(len - 1);
        for (i = 1; i < len; i++) {
          args[i - 1] = arguments[i];
        }handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    len = arguments.length;
    args = new Array(len - 1);
    for (i = 1; i < len; i++) {
      args[i - 1] = arguments[i];
    }listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++) {
      listeners[i].apply(this, args);
    }
  }

  return true;
};

EventEmitter.prototype.addListener = function (type, listener) {
  var m;

  if (!isFunction(listener)) throw TypeError('listener must be a function');

  if (!this._events) this._events = {};

  if (this._events.newListener) this.emit('newListener', type, isFunction(listener.listener) ? listener.listener : listener);

  if (!this._events[type]) this._events[type] = listener;else if (isObject(this._events[type])) this._events[type].push(listener);else this._events[type] = [this._events[type], listener];

  if (isObject(this._events[type]) && !this._events[type].warned) {
    var m;
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' + 'leak detected. %d listeners added. ' + 'Use emitter.setMaxListeners() to increase limit.', this._events[type].length);
      if (typeof console.trace === 'function') {
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function (type, listener) {
  if (!isFunction(listener)) throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

EventEmitter.prototype.removeListener = function (type, listener) {
  var list, position, length, i;

  if (!isFunction(listener)) throw TypeError('listener must be a function');

  if (!this._events || !this._events[type]) return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener || isFunction(list.listener) && list.listener === listener) {
    delete this._events[type];
    if (this._events.removeListener) this.emit('removeListener', type, listener);
  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener || list[i].listener && list[i].listener === listener) {
        position = i;
        break;
      }
    }

    if (position < 0) return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener) this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function (type) {
  var key, listeners;

  if (!this._events) return this;

  if (!this._events.removeListener) {
    if (arguments.length === 0) this._events = {};else if (this._events[type]) delete this._events[type];
    return this;
  }

  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else {
    while (listeners.length) {
      this.removeListener(type, listeners[listeners.length - 1]);
    }
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function (type) {
  var ret;
  if (!this._events || !this._events[type]) ret = [];else if (isFunction(this._events[type])) ret = [this._events[type]];else ret = this._events[type].slice();
  return ret;
};

EventEmitter.listenerCount = function (emitter, type) {
  var ret;
  if (!emitter._events || !emitter._events[type]) ret = 0;else if (isFunction(emitter._events[type])) ret = 1;else ret = emitter._events[type].length;
  return ret;
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}
}, 664, null, "events/events.js");
__d(/* YuanXC/src/resources/imgs/wx.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":300,"height":300,"scales":[1],"hash":"924892a93363123d676b3a25247a0510","name":"wx","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 665, null, "YuanXC/src/resources/imgs/wx.png");
__d(/* YuanXC/src/resources/imgs/wx2.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":300,"height":300,"scales":[1],"hash":"8704e377f0adfc634d82e956f60bf3b8","name":"wx2","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 666, null, "YuanXC/src/resources/imgs/wx2.png");
__d(/* YuanXC/src/resources/imgs/copy.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":300,"height":300,"scales":[1],"hash":"3a4ab26613619457b1b2790dcc26e045","name":"copy","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 667, null, "YuanXC/src/resources/imgs/copy.png");
__d(/* YuanXC/src/pages/BankCardDetail.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/BankCardDetail.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  background-color:#fff; \n  border-radius:8px;\n  width:', ';\n  margin-top:25;\n  margin-horizontal:20;\n  justify-content:center;\n  padding-vertical:15;\n'], ['\n  background-color:#fff; \n  border-radius:8px;\n  width:', ';\n  margin-top:25;\n  margin-horizontal:20;\n  justify-content:center;\n  padding-vertical:15;\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _imgs = require(436                ); // 436 = ../resources/imgs

var _imgs2 = babelHelpers.interopRequireDefault(_imgs);

var _color = require(587              ); // 587 = ../styles/color

var _color2 = babelHelpers.interopRequireDefault(_color);

var _bankCardDetailActions = require(669                               ); // 669 = ../actions/bankCardDetailActions

var bankCardDetailCreator = babelHelpers.interopRequireWildcard(_bankCardDetailActions);

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _MessageBox = require(625                       ); // 625 = ../components/MessageBox

var _MessageBox2 = babelHelpers.interopRequireDefault(_MessageBox);

var _constants = require(434                  ); // 434 = ../config/constants

var CardView = _UtilLib.CenterRow.extend(_templateObject, _constants.WINDOW_WIDTH - 40);

var BankCardDetail = function (_Component) {
  babelHelpers.inherits(BankCardDetail, _Component);

  function BankCardDetail(props) {
    babelHelpers.classCallCheck(this, BankCardDetail);

    var _this = babelHelpers.possibleConstructorReturn(this, (BankCardDetail.__proto__ || Object.getPrototypeOf(BankCardDetail)).call(this, props));

    _this.state = {
      messageBox: {
        visible: false,
        content: '',
        button: null
      }
    };
    return _this;
  }

  babelHelpers.createClass(BankCardDetail, [{
    key: '_showOptionModal',
    value: function _showOptionModal(msg, onCancel, onConfirm) {
      var _this2 = this;

      this.props.navigation.setParams({
        gesturesEnabled: false
      });
      this.setState({
        messageBox: {
          visible: true,
          content: msg,
          button: {
            text: '确认',
            onPress: function onPress() {
              _this2.props.navigation.setParams({
                gesturesEnabled: true
              });
              _this2.setState({
                messageBox: {
                  visible: false
                }
              });
            }
          }
        }
      });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this3 = this;

      this.props.bankCardDetailActions.getData(!this.props.bankCardDetail);
      this.props.navigation.setParams({
        rightTouch: function rightTouch() {
          return _this3._showOptionModal('1\uFF09\u672A\u5145\u503C\u7684\u7528\u6237\u66F4\u6362\u94F6\u884C\u5361\u8BF7\u62E8\u6253\u5BA2\u670D\u70ED\u7EBF\uFF1B\n2\uFF09\u6709\u4F59\u989D\u548C\u6295\u8D44\u4E2D\u7684\u7528\u6237\u4E0D\u4E88\u66F4\u6362\u94F6\u884C\u5361\uFF1B\n\u5176\u4ED6\u60C5\u51B5\u8BF7\u62E8\u6253\u5BA2\u670D\u70ED\u7EBF400-871-3088');
        }
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props$bankCardDetail = this.props.bankCardDetail,
          loading = _props$bankCardDetail.loading,
          detail = _props$bankCardDetail.detail;

      return _react2.default.createElement(
        _UtilLib.FlexView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 90
          }
        },
        _react2.default.createElement(
          _UtilLib.ScrollLayout,
          { color: 'transparent', __source: {
              fileName: _jsxFileName,
              lineNumber: 91
            }
          },
          detail && _react2.default.createElement(
            CardView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 93
              }
            },
            _imgs2.default.bankCard({ marginRight: 10 }),
            _react2.default.createElement(
              _UtilLib.NormalView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 95
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#333', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 96
                  }
                },
                detail.bankName
              ),
              _react2.default.createElement(
                _UtilLib.StyledText,
                { top: '15', color: '#333', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 97
                  }
                },
                '\uFF0A\uFF0A\uFF0A\uFF0A  \uFF0A\uFF0A\uFF0A\uFF0A  \uFF0A\uFF0A\uFF0A\uFF0A  ',
                detail.number.substr(-4)
              )
            )
          )
        ),
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 104
          }
        }),
        _react2.default.createElement(_MessageBox2.default, {
          style: { height: 190 },
          boxStyle: { height: 145 },
          contentStyle: { textAlign: "left" },
          visible: this.state.messageBox.visible,
          content: this.state.messageBox.content,
          button: this.state.messageBox.button, __source: {
            fileName: _jsxFileName,
            lineNumber: 105
          }
        })
      );
    }
  }]);
  return BankCardDetail;
}(_react.Component);

BankCardDetail.navigationOptions = function (_ref) {
  var navigation = _ref.navigation,
      screenProps = _ref.screenProps;
  return {
    title: '我的银行卡',
    headerRight: _react2.default.createElement(
      _UtilLib.HeaderButton,
      { style: { width: 80 }, onPress: function onPress() {
          return navigation.state.params && navigation.state.params.rightTouch();
        }, __source: {
          fileName: _jsxFileName,
          lineNumber: 38
        }
      },
      _react2.default.createElement(
        _UtilLib.StyledText,
        { color: _color2.default.font.blue, size: '14', __source: {
            fileName: _jsxFileName,
            lineNumber: 39
          }
        },
        '\u66F4\u6362\u5361'
      )
    )
  };
};

BankCardDetail.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
  var bankCardDetail = state.bankCardDetail;

  return { bankCardDetail: bankCardDetail };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var bankCardDetailActions = (0, _redux.bindActionCreators)(bankCardDetailCreator, dispatch);
  return { bankCardDetailActions: bankCardDetailActions };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(BankCardDetail);
}, 668, null, "YuanXC/src/pages/BankCardDetail.js");
__d(/* YuanXC/src/actions/bankCardDetailActions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getData = getData;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);

var _http = require(622               ); // 622 = ../requests/http

function getData(loading) {
  return function (dispatch) {
    dispatch(requestData({ loading: loading }));
    (0, _http.bankCardDetail)().then(function (data) {
      if (data.data.code == 0) {
        dispatch(receiveData({ detail: data.data.data }));
      } else {
        dispatch(receiveData({ error: true, msg: data.data.msg }));
      }
    }).catch(function (err) {
      dispatch(receiveData({ error: true, msgStr: 'netWorkError' }));
    });
  };
}

function requestData(data) {
  return babelHelpers.extends({
    type: types.REQUEST_BANKCARD_DETAIL
  }, data);
}

function receiveData(data) {
  return babelHelpers.extends({
    type: types.RECEIVE_BANKCARD_DETAIL
  }, data);
}
}, 669, null, "YuanXC/src/actions/bankCardDetailActions.js");
__d(/* YuanXC/src/pages/PayPasswordInit.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/PayPasswordInit.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  background-color:#ffffff;\n  padding-left:15;\n  margin-top:10;\n  width:', ';\n'], ['\n  background-color:#ffffff;\n  padding-left:15;\n  margin-top:10;\n  width:', ';\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  border-bottom-width:', ';\n  border-bottom-color:#eeeeee;\n'], ['\n  border-bottom-width:', ';\n  border-bottom-color:#eeeeee;\n']),
    _templateObject3 = babelHelpers.taggedTemplateLiteral(['\n  margin-right:15;\n'], ['\n  margin-right:15;\n']),
    _templateObject4 = babelHelpers.taggedTemplateLiteral(['\n  width:18;\n  height:18;\n'], ['\n  width:18;\n  height:18;\n']),
    _templateObject5 = babelHelpers.taggedTemplateLiteral(['\n  align-self:flex-start;\n  margin-left:15;\n  margin-top:10;\n'], ['\n  align-self:flex-start;\n  margin-left:15;\n  margin-top:10;\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _TextInputCustomized = require(638                                ); // 638 = ../components/TextInputCustomized

var _TextInputCustomized2 = babelHelpers.interopRequireDefault(_TextInputCustomized);

var _GuideMenu = require(641                      ); // 641 = ../components/GuideMenu

var _GuideMenu2 = babelHelpers.interopRequireDefault(_GuideMenu);

var _Touchable = require(497                      ); // 497 = ../components/Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _constants = require(434                  ); // 434 = ../config/constants

var _userActions = require(630                     ); // 630 = ../actions/userActions

var userCreator = babelHelpers.interopRequireWildcard(_userActions);

var _bankCardDetailActions = require(669                               ); // 669 = ../actions/bankCardDetailActions

var bankCardDetailCreator = babelHelpers.interopRequireWildcard(_bankCardDetailActions);

var _http = require(622               ); // 622 = ../requests/http

var View = _native2.default.View(_templateObject, _constants.WINDOW_WIDTH);
var BorderInput = (0, _native2.default)(_TextInputCustomized2.default)(_templateObject2, _constants.BORDER_WIDTH);
var CodeButton = (0, _native2.default)(_Touchable2.default)(_templateObject3);
var Icon = _native2.default.Image(_templateObject4);
var DescView = _native2.default.View(_templateObject5);

var PayPasswordInit = function (_Component) {
  babelHelpers.inherits(PayPasswordInit, _Component);

  function PayPasswordInit(props) {
    babelHelpers.classCallCheck(this, PayPasswordInit);

    var _this = babelHelpers.possibleConstructorReturn(this, (PayPasswordInit.__proto__ || Object.getPrototypeOf(PayPasswordInit)).call(this, props));

    _this.state = {
      mobile: '',
      code: '',
      password: '',
      mode: 1,
      second: '',
      loading: false,
      sending: false,
      canSend: true
    };
    _this.second = 59;
    return _this;
  }

  babelHelpers.createClass(PayPasswordInit, [{
    key: '_sendCode',
    value: function _sendCode() {
      var _this2 = this;

      var detail = this.props.bankCardDetail.detail;

      if (!this.state.sending && this.state.canSend) {
        if (!detail || !detail.mobile) {
          this.context.callToast('请输入手机号');
        } else if (!/^[1][34578][0-9]{9}$/.test(detail.mobile)) {
          this.context.callToast('请输入正确的手机号');
        } else {

          this.setState({ sending: true });
          (0, _http.sendCode)({ mobile: detail.mobile, type: 6 }).then(function (data) {
            if (data.data.code === 0) {
              _this2.context.callToast('验证码发送成功');
              _this2.setState({ second: _this2.second, canSend: false, sending: false }, function () {
                _this2.interval = setInterval(function () {
                  if (_this2.state.second == 1) {
                    clearInterval(_this2.interval);
                    _this2.setState({ canSend: true, second: '' });
                  } else {
                    _this2.setState({ second: --_this2.state.second });
                  }
                }, 900);
              });
            } else {
              _this2.setState({ sending: false });
              _this2.context.callToast(data.data.msg);
            }
          }).catch(function () {
            _this2.setState({ sending: false });
            _this2.context.callToast('发送失败');
          });
        }
      }
    }
  }, {
    key: '_submit',
    value: function _submit() {
      var _this3 = this;

      var detail = this.props.bankCardDetail.detail;

      if (!detail.mobile) {
        this.context.callToast('请输入手机号');
      } else if (!/^[1][34578][0-9]{9}$/.test(detail.mobile)) {
        this.context.callToast('请输入正确的手机号');
      } else if (!this.state.password) {
        this.context.callToast('请输入交易密码');
      } else if (!/^(?=.*?[a-zA-Z])(?=.*?[0-9])[a-zA-Z0-9]{6,20}$/.test(this.state.password)) {
        this.context.callToast('密码格式有误');
      } else if (!this.state.code) {
        this.context.callToast('请输入验证码');
      } else {
        this.setState({ loading: true });
        (0, _http.setPayPassword)({ password: this.state.password, code: this.state.code }).then(function (res) {
          _this3.setState({ loading: false });
          var data = res.data;
          if (0 === data.code) {
            _this3.context.callToast('密码设置成功', 'success');
            _this3.props.userActions.userProfile(false);
            _this3.props.navigation.goBack();
          } else {
            _this3.context.callToast(data.msg);
          }
        }).catch(function (err) {
          _this3.setState({ loading: false });
          _this3.context.callToast("提交失败");
        });
      }
    }
  }, {
    key: '_renderBind',
    value: function _renderBind() {
      var _this4 = this;

      var _props$bankCardDetail = this.props.bankCardDetail,
          detail = _props$bankCardDetail.detail,
          loading = _props$bankCardDetail.loading;

      return _react2.default.createElement(
        _UtilLib.FlexView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 136
          }
        },
        _react2.default.createElement(
          _UtilLib.ScrollLayout,
          { color: 'transparent', __source: {
              fileName: _jsxFileName,
              lineNumber: 137
            }
          },
          _react2.default.createElement(
            View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 138
              }
            },
            _react2.default.createElement(_GuideMenu2.default, {
              style: { paddingRight: 24 },
              feedback: false,
              bottomBorder: true,
              titleWidth: 110,
              title: '银行卡',
              content: detail && detail.number.replace(/^(\d{3})\d{4}(\d+)/, "$1****$2"),
              contentColor: '#333333',
              rightArrow: detail && detail.icon ? _react2.default.createElement(Icon, { source: { uri: detail.icon }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 147
                }
              }) : '',
              __source: {
                fileName: _jsxFileName,
                lineNumber: 139
              }
            }),
            _react2.default.createElement(_GuideMenu2.default, {
              style: { paddingRight: 24 },
              feedback: false,
              bottomBorder: true,
              titleWidth: 100,
              title: '预留手机号',
              content: detail && detail.mobile.replace(/^(\d{3})\d{4}(\d+)/, "$1****$2"),
              contentColor: '#333333',
              hideArrow: true,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 149
              }
            }),
            _react2.default.createElement(BorderInput, {
              label: '\u4EA4\u6613\u5BC6\u7801',
              secureTextEntry: true,
              labelWidth: 90,
              value: this.state.password,
              onChangeText: function onChangeText(text) {
                _this4.setState({ password: text });
              },
              placeholder: '\u8BF7\u8F93\u5165\u4EA4\u6613\u5BC6\u7801',
              onClear: function onClear() {
                _this4.setState({ password: '' });
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 159
              }
            }),
            _react2.default.createElement(BorderInput, {
              label: '\u9A8C\u8BC1\u7801',
              labelWidth: 90,
              value: this.state.code,
              keyboardType: 'numeric',
              onChangeText: function onChangeText(text) {
                _this4.setState({ code: text });
              },
              placeholder: '\u8BF7\u8F93\u5165\u77ED\u4FE1\u9A8C\u8BC1\u7801',
              hideClear: true,
              flag: this.state.canSend + this.state.second + this.state.sending,
              rightLabel: _react2.default.createElement(
                CodeButton,
                { feedback: this.state.canSend && !this.state.sending,
                  onPress: this._sendCode.bind(this), __source: {
                    fileName: _jsxFileName,
                    lineNumber: 184
                  }
                },
                _react2.default.createElement(
                  _UtilLib.StyledText,
                  {
                    color: !this.state.canSend || this.state.sending ? '#979797' : '#EE5C2B', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 186
                    }
                  },
                  this.state.second ? this.state.second + 'S\u540E\u91CD\u53D1' : '获取验证码'
                )
              ),
              __source: {
                fileName: _jsxFileName,
                lineNumber: 172
              }
            })
          ),
          _react2.default.createElement(
            DescView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 192
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#9b9b9b', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 193
                }
              },
              '\u8BF7\u4F7F\u75286\uFF5E20\u4F4D\u7531\u6570\u5B57\u3001\u5B57\u6BCD\u7EC4\u6210\u7684\u5BC6\u7801'
            )
          ),
          _react2.default.createElement(
            _UtilLib.CenterView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 195
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledButtom,
              { color: '#EE5C2B', onPress: this._submit.bind(this), __source: {
                  fileName: _jsxFileName,
                  lineNumber: 196
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '17', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 197
                  }
                },
                '\u5B8C \u6210'
              )
            )
          )
        ),
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: this.state.loading || loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 201
          }
        })
      );
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.props.bankCardDetailActions.getData(!this.props.bankCardDetail.bankCardDetail);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.interval && clearInterval(this.interval);
    }
  }, {
    key: 'render',
    value: function render() {
      return this._renderBind();
    }
  }]);
  return PayPasswordInit;
}(_react.Component);

PayPasswordInit.navigationOptions = function (_ref) {
  var navigation = _ref.navigation,
      screenProps = _ref.screenProps;
  return {
    title: '设置交易密码'
  };
};

PayPasswordInit.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
  var bankCardDetail = state.bankCardDetail;

  return { bankCardDetail: bankCardDetail };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var bankCardDetailActions = (0, _redux.bindActionCreators)(bankCardDetailCreator, dispatch);
  var userActions = (0, _redux.bindActionCreators)(userCreator, dispatch);
  return { bankCardDetailActions: bankCardDetailActions, userActions: userActions };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(PayPasswordInit);
}, 670, null, "YuanXC/src/pages/PayPasswordInit.js");
__d(/* YuanXC/src/pages/PayPasswordModify.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/PayPasswordModify.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  background-color:#ffffff;\n  padding-left:15;\n  margin-top:10;\n  width:', ';\n'], ['\n  background-color:#ffffff;\n  padding-left:15;\n  margin-top:10;\n  width:', ';\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  border-bottom-width:', ';\n  border-bottom-color:#eeeeee;\n'], ['\n  border-bottom-width:', ';\n  border-bottom-color:#eeeeee;\n']),
    _templateObject3 = babelHelpers.taggedTemplateLiteral(['\n  margin-right:15;\n'], ['\n  margin-right:15;\n']),
    _templateObject4 = babelHelpers.taggedTemplateLiteral(['\n  width:18;\n  height:18;\n  margin-right:20;\n'], ['\n  width:18;\n  height:18;\n  margin-right:20;\n']),
    _templateObject5 = babelHelpers.taggedTemplateLiteral(['\n  align-self:flex-start;\n  margin-left:15;\n  margin-top:10;\n'], ['\n  align-self:flex-start;\n  margin-left:15;\n  margin-top:10;\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _TextInputCustomized = require(638                                ); // 638 = ../components/TextInputCustomized

var _TextInputCustomized2 = babelHelpers.interopRequireDefault(_TextInputCustomized);

var _GuideMenu = require(641                      ); // 641 = ../components/GuideMenu

var _GuideMenu2 = babelHelpers.interopRequireDefault(_GuideMenu);

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _constants = require(434                  ); // 434 = ../config/constants

var _Touchable = require(497                      ); // 497 = ../components/Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var _bankCardDetailActions = require(669                               ); // 669 = ../actions/bankCardDetailActions

var bankCardDetailCreator = babelHelpers.interopRequireWildcard(_bankCardDetailActions);

var _http = require(622               ); // 622 = ../requests/http

var View = _native2.default.View(_templateObject, _constants.WINDOW_WIDTH);
var BorderInput = (0, _native2.default)(_TextInputCustomized2.default)(_templateObject2, _constants.BORDER_WIDTH);
var CodeButton = (0, _native2.default)(_Touchable2.default)(_templateObject3);
var Icon = _native2.default.Image(_templateObject4);
var DescView = _native2.default.View(_templateObject5);

var PayPasswordModify = function (_Component) {
  babelHelpers.inherits(PayPasswordModify, _Component);

  function PayPasswordModify(props) {
    babelHelpers.classCallCheck(this, PayPasswordModify);

    var _this = babelHelpers.possibleConstructorReturn(this, (PayPasswordModify.__proto__ || Object.getPrototypeOf(PayPasswordModify)).call(this, props));

    _this.state = {
      mobile: '',
      code: '',
      bankCard: '',
      mode: 1,
      second: '',
      loading: false,
      sending: false,
      canSend: true
    };
    _this.second = 59;
    return _this;
  }

  babelHelpers.createClass(PayPasswordModify, [{
    key: '_sendCode',
    value: function _sendCode() {
      var _this2 = this;

      var detail = this.props.bankCardDetail.detail;

      if (!this.state.sending && this.state.canSend) {
        if (!detail || !detail.mobile) {
          this.context.callToast('请输入手机号');
        } else if (!/^[1][34578][0-9]{9}$/.test(detail.mobile)) {
          this.context.callToast('请输入正确的手机号');
        } else {

          this.setState({ sending: true });
          (0, _http.sendCode)({ mobile: detail.mobile, type: 7 }).then(function (data) {
            if (data.data.code === 0) {
              _this2.context.callToast('验证码发送成功');
              _this2.setState({ second: _this2.second, canSend: false, sending: false }, function () {
                _this2.interval = setInterval(function () {
                  if (_this2.state.second == 1) {
                    clearInterval(_this2.interval);
                    _this2.setState({ canSend: true, second: '' });
                  } else {
                    _this2.setState({ second: --_this2.state.second });
                  }
                }, 900);
              });
            } else {
              _this2.setState({ sending: false });
              _this2.context.callToast(data.data.msg);
            }
          }).catch(function () {
            _this2.setState({ sending: false });
            _this2.context.callToast('发送失败');
          });
        }
      }
    }
  }, {
    key: '_submit',
    value: function _submit() {
      var _this3 = this;

      var detail = this.props.bankCardDetail.detail;

      if (!this.state.bankCard) {
        this.context.callToast('请输入银行卡号');
      } else if (this.state.bankCard !== detail.number) {
        this.context.callToast('银行卡号错误');
      } else if (!detail.mobile) {
        this.context.callToast('请输入手机号');
      } else if (!/^[1][34578][0-9]{9}$/.test(detail.mobile)) {
        this.context.callToast('请输入正确的手机号');
      } else if (!this.state.code) {
        this.context.callToast('请输入验证码');
      } else {
        this.setState({ loading: true });
        (0, _http.checkCode)({ mobile: detail.mobile, code: this.state.code, type: 7 }).then(function (res) {
          _this3.setState({ loading: false });
          var data = res.data;
          if (0 === data.code) {
            _this3.setState({ mode: 2 });
          } else {
            _this3.context.callToast(data.msg);
          }
        }).catch(function (err) {
          _this3.setState({ loading: false });
          _this3.context.callToast("提交失败");
        });
      }
    }
  }, {
    key: '_register',
    value: function _register() {
      var _this4 = this;

      if (!this.state.password) {
        this.context.callToast('请输入交易密码');
      } else if (!this.state.rePassword) {
        this.context.callToast('请输入确认交易密码');
      } else if (!/^(?=.*?[a-zA-Z])(?=.*?[0-9])[a-zA-Z0-9]{6,20}$/.test(this.state.password)) {
        this.context.callToast('密码格式有误');
      } else if (!this.state.rePassword) {
        this.context.callToast('请输入确认交易密码');
      } else if (this.state.password !== this.state.rePassword) {
        this.context.callToast('两次输入不一致');
      } else {
        this.setState({ loading: true });
        (0, _http.modifyPayPassword)({
          cardNo: this.state.bankCard,
          code: this.state.code,
          password: this.state.password
        }).then(function (res) {
          _this4.setState({ loading: false });
          var data = res.data;
          if (0 === data.code) {
            _this4.context.callToast('交易密码设置成功', 'success');
            _this4.props.navigation.goBack();
          } else {
            _this4.context.callToast(data.msg);
          }
        }).catch(function (err) {
          _this4.setState({ loading: false });
          _this4.context.callToast("提交失败");
        });
      }
    }
  }, {
    key: '_renderBind',
    value: function _renderBind() {
      var _this5 = this;

      var _props$bankCardDetail = this.props.bankCardDetail,
          detail = _props$bankCardDetail.detail,
          loading = _props$bankCardDetail.loading;

      return _react2.default.createElement(
        _UtilLib.FlexView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 167
          }
        },
        _react2.default.createElement(
          _UtilLib.ScrollLayout,
          { color: 'transparent', __source: {
              fileName: _jsxFileName,
              lineNumber: 168
            }
          },
          _react2.default.createElement(
            View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 169
              }
            },
            _react2.default.createElement(BorderInput, {
              label: '\u94F6\u884C\u5361',
              labelWidth: 90,
              value: this.state.bankCard,
              keyboardType: 'numeric',
              onChangeText: function onChangeText(text) {
                _this5.setState({ bankCard: text });
              },
              placeholder: '\u8BF7\u8F93\u5165\u5C3E\u53F7' + (detail && detail.number.substr(-4) || '') + '\u5B8C\u6574\u5361\u53F7',
              rightLabel: detail && detail.icon ? _react2.default.createElement(Icon, { source: { uri: detail.icon }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 179
                }
              }) : '',
              hideClear: true,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 170
              }
            }),
            _react2.default.createElement(_GuideMenu2.default, {
              style: { paddingRight: 24 },
              feedback: false,
              bottomBorder: true,
              titleWidth: 100,
              title: '预留手机号',
              content: detail && detail.mobile.replace(/^(\d{3})\d{4}(\d+)/, "$1****$2"),
              contentColor: '#333333',
              hideArrow: true,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 182
              }
            }),
            _react2.default.createElement(BorderInput, {
              label: '\u9A8C\u8BC1\u7801',
              labelWidth: 90,
              value: this.state.code,
              keyboardType: 'numeric',
              onChangeText: function onChangeText(text) {
                _this5.setState({ code: text });
              },
              placeholder: '\u8BF7\u8F93\u5165\u77ED\u4FE1\u9A8C\u8BC1\u7801',
              hideClear: true,
              flag: this.state.canSend + this.state.second + this.state.sending,
              rightLabel: _react2.default.createElement(
                CodeButton,
                { feedback: this.state.canSend && !this.state.sending,
                  onPress: this._sendCode.bind(this), __source: {
                    fileName: _jsxFileName,
                    lineNumber: 204
                  }
                },
                _react2.default.createElement(
                  _UtilLib.StyledText,
                  {
                    color: !this.state.canSend || this.state.sending ? '#979797' : '#EE5C2B', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 206
                    }
                  },
                  this.state.second ? this.state.second + 'S\u540E\u91CD\u53D1' : '获取验证码'
                )
              ),
              __source: {
                fileName: _jsxFileName,
                lineNumber: 192
              }
            })
          ),
          _react2.default.createElement(
            _UtilLib.CenterView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 212
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledButtom,
              { onPress: this._submit.bind(this), __source: {
                  fileName: _jsxFileName,
                  lineNumber: 213
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '17', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 214
                  }
                },
                '\u5B8C \u6210'
              )
            )
          )
        ),
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: this.state.loading || loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 218
          }
        })
      );
    }
  }, {
    key: '_renderPassword',
    value: function _renderPassword() {
      var _this6 = this;

      return _react2.default.createElement(
        _UtilLib.ScrollLayout,
        { color: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 226
          }
        },
        _react2.default.createElement(
          View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 227
            }
          },
          _react2.default.createElement(BorderInput, {
            label: '\u4EA4\u6613\u5BC6\u7801',
            secureTextEntry: true,
            labelWidth: 135,
            value: this.state.password,
            onChangeText: function onChangeText(text) {
              _this6.setState({ password: text });
            },
            placeholder: '\u8BF7\u8F93\u5165\u4EA4\u6613\u5BC6\u7801',
            onClear: function onClear() {
              _this6.setState({ password: '' });
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 228
            }
          }),
          _react2.default.createElement(_TextInputCustomized2.default, {
            label: '\u786E\u8BA4\u4EA4\u6613\u5BC6\u7801',
            secureTextEntry: true,
            labelWidth: 135,
            value: this.state.rePassword,
            onChangeText: function onChangeText(text) {
              _this6.setState({ rePassword: text });
            },
            placeholder: '\u8BF7\u8F93\u5165\u786E\u8BA4\u4EA4\u6613\u5BC6\u7801',
            onClear: function onClear() {
              _this6.setState({ rePassword: '' });
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 241
            }
          })
        ),
        _react2.default.createElement(
          DescView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 255
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#9b9b9b', __source: {
                fileName: _jsxFileName,
                lineNumber: 256
              }
            },
            '\u8BF7\u4F7F\u75286\uFF5E20\u4F4D\u7531\u6570\u5B57\u3001\u5B57\u6BCD\u7EC4\u6210\u7684\u5BC6\u7801'
          )
        ),
        _react2.default.createElement(
          _UtilLib.CenterView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 258
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledButtom,
            { onPress: this._register.bind(this), color: '#EE5C2B', __source: {
                fileName: _jsxFileName,
                lineNumber: 259
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { size: '17', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 260
                }
              },
              '\u786E \u5B9A'
            )
          )
        ),
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: this.state.loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 263
          }
        })
      );
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.props.bankCardDetailActions.getData(!this.props.bankCardDetail.detail);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.interval && clearInterval(this.interval);
    }
  }, {
    key: 'render',
    value: function render() {
      return this.state.mode === 1 ? this._renderBind() : this._renderPassword();
    }
  }]);
  return PayPasswordModify;
}(_react.Component);

PayPasswordModify.navigationOptions = function (_ref) {
  var navigation = _ref.navigation,
      screenProps = _ref.screenProps;
  return {
    title: '修改交易密码'
  };
};

PayPasswordModify.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
  var bankCardDetail = state.bankCardDetail;

  return { bankCardDetail: bankCardDetail };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var bankCardDetailActions = (0, _redux.bindActionCreators)(bankCardDetailCreator, dispatch);
  return { bankCardDetailActions: bankCardDetailActions };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(PayPasswordModify);
}, 671, null, "YuanXC/src/pages/PayPasswordModify.js");
__d(/* YuanXC/src/pages/MessageList.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/MessageList.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  width:', ';\n  height:40;\n  justify-content:center;\n  align-items:center;\n  background-color:#fff;\n  border-bottom-width:2;\n  margin-top:10;\n  border-color:', ';\n'], ['\n  width:', ';\n  height:40;\n  justify-content:center;\n  align-items:center;\n  background-color:#fff;\n  border-bottom-width:2;\n  margin-top:10;\n  border-color:', ';\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  padding-left:12;\n  padding-right:12;\n  background-color:#fff;\n  border-bottom-width:1px;\n  border-color:#eeeeee;\n  padding-vertical:8;\n'], ['\n  padding-left:12;\n  padding-right:12;\n  background-color:#fff;\n  border-bottom-width:1px;\n  border-color:#eeeeee;\n  padding-vertical:8;\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _Touchable = require(497                      ); // 497 = ../components/Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var _color = require(587              ); // 587 = ../styles/color

var _color2 = babelHelpers.interopRequireDefault(_color);

var _imgs = require(436                ); // 436 = ../resources/imgs

var _imgs2 = babelHelpers.interopRequireDefault(_imgs);

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _messageListActions = require(673                            ); // 673 = ../actions/messageListActions

var messageListCreator = babelHelpers.interopRequireWildcard(_messageListActions);

var _notifyListActions = require(674                           ); // 674 = ../actions/notifyListActions

var notifyListCreator = babelHelpers.interopRequireWildcard(_notifyListActions);

var _constants = require(434                  ); // 434 = ../config/constants

var FilterView = (0, _native2.default)(_Touchable2.default).attrs({
  color: function color(props) {
    return props.color || '#ffffff';
  }
})(_templateObject, _constants.WINDOW_WIDTH / 2, function (props) {
  return props.color;
});
var Items = _UtilLib.BetweenView.extend(_templateObject2);

var page = 1;

var MessageList = function (_Component) {
  babelHelpers.inherits(MessageList, _Component);

  function MessageList(props) {
    babelHelpers.classCallCheck(this, MessageList);

    var _this = babelHelpers.possibleConstructorReturn(this, (MessageList.__proto__ || Object.getPrototypeOf(MessageList)).call(this, props));

    _this.state = {
      type: 1
    };
    return _this;
  }

  babelHelpers.createClass(MessageList, [{
    key: '_renderItems',
    value: function _renderItems(item) {
      var _this2 = this;

      return _react2.default.createElement(
        _Touchable2.default,
        {
          onPress: function onPress() {
            return _this2.props.navigation.navigate(_this2.state.type === 1 ? "NotifyDetail" : "MessageDetail", {
              title: item.title.length > 12 ? item.title.substr(0, 12) + "..." : item.title,
              id: item.id
            });
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 66
          }
        },
        _react2.default.createElement(
          Items,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 71
            }
          },
          _react2.default.createElement(
            _UtilLib.NormalView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 72
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#333333', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 73
                }
              },
              item.title
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#999999', size: '12', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 74
                }
              },
              item.createdAt
            )
          ),
          _imgs2.default.rightArrowGary()
        )
      );
    }
  }, {
    key: '_onEndReachedMessage',
    value: function _onEndReachedMessage() {
      var _props$messageList = this.props.messageList,
          isLoadMore = _props$messageList.isLoadMore,
          noMore = _props$messageList.noMore,
          loading = _props$messageList.loading;

      if (!isLoadMore && !noMore && this.state.type === 2 && !loading) {
        var messageListActions = this.props.messageListActions;

        messageListActions.getData(false, true, false, ++page);
      } else {
        console.log("cd-----");
      }
    }
  }, {
    key: '_onEndReachedNotify',
    value: function _onEndReachedNotify() {
      var _props$notifyList = this.props.notifyList,
          isLoadMore = _props$notifyList.isLoadMore,
          noMore = _props$notifyList.noMore,
          loading = _props$notifyList.loading;

      if (!isLoadMore && !noMore && this.state.type === 1 && !loading) {
        var notifyListActions = this.props.notifyListActions;

        notifyListActions.getData(false, true, false, ++page);
      } else {
        console.log("cd-----");
      }
    }
  }, {
    key: '_changeType',
    value: function _changeType(type) {
      var _this3 = this;

      this.state.type !== type && this.setState({ type: type }, function () {
        page = 1;
        var _props = _this3.props,
            notifyListActions = _props.notifyListActions,
            messageListActions = _props.messageListActions;

        var title = "";
        if (type === 1) {
          title = "平台公告";
          notifyListActions.getData(false, false, false, 1);
        } else {
          title = "个人消息";
          messageListActions.getData(false, false, false, 1);
        }
        _this3.props.navigation.setParams({
          title: title
        });
      });
    }
  }, {
    key: '_renderMessage',
    value: function _renderMessage() {
      var _this4 = this;

      var _props$messageList2 = this.props.messageList,
          loading = _props$messageList2.loading,
          list = _props$messageList2.list,
          noMore = _props$messageList2.noMore,
          isLoadMore = _props$messageList2.isLoadMore;

      return _react2.default.createElement(
        _UtilLib.FlexView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 123
          }
        },
        _react2.default.createElement(_reactNative.FlatList, { data: list, initialNumToRender: 20,
          renderItem: function renderItem(item) {
            return _this4._renderItems(item.item);
          },
          onEndReached: function onEndReached() {
            return _this4._onEndReachedMessage();
          },
          ListEmptyComponent: function ListEmptyComponent() {
            return _react2.default.createElement(_UtilLib.NoData, { visible: !loading, text: '\u6682\u65E0\u6D88\u606F', __source: {
                fileName: _jsxFileName,
                lineNumber: 127
              }
            });
          },
          keyExtractor: function keyExtractor(item, index) {
            return index;
          },
          ListFooterComponent: function ListFooterComponent() {
            return _react2.default.createElement(_UtilLib.Footer, { visible: !noMore && isLoadMore, __source: {
                fileName: _jsxFileName,
                lineNumber: 129
              }
            });
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 124
          }
        }),
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 130
          }
        })
      );
    }
  }, {
    key: '_renderNotify',
    value: function _renderNotify() {
      var _this5 = this;

      var _props$notifyList2 = this.props.notifyList,
          loading = _props$notifyList2.loading,
          list = _props$notifyList2.list,
          noMore = _props$notifyList2.noMore,
          isLoadMore = _props$notifyList2.isLoadMore;

      return _react2.default.createElement(
        _UtilLib.FlexView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 136
          }
        },
        _react2.default.createElement(_reactNative.FlatList, { data: list, initialNumToRender: 20,
          renderItem: function renderItem(item) {
            return _this5._renderItems(item.item);
          },
          onEndReached: function onEndReached() {
            return _this5._onEndReachedNotify();
          },
          ListEmptyComponent: function ListEmptyComponent() {
            return _react2.default.createElement(_UtilLib.NoData, { visible: !loading, text: '\u6682\u65E0\u516C\u544A', __source: {
                fileName: _jsxFileName,
                lineNumber: 140
              }
            });
          },
          keyExtractor: function keyExtractor(item, index) {
            return index;
          },
          ListFooterComponent: function ListFooterComponent() {
            return _react2.default.createElement(_UtilLib.Footer, { visible: !noMore && isLoadMore, __source: {
                fileName: _jsxFileName,
                lineNumber: 142
              }
            });
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 137
          }
        }),
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 143
          }
        })
      );
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      page = 1;
      var notifyListActions = this.props.notifyListActions;

      notifyListActions.getData(false, false, true, page);
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _UtilLib.FlexView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 155
          }
        },
        _react2.default.createElement(
          _UtilLib.BetweenView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 156
            }
          },
          _react2.default.createElement(
            FilterView,
            { color: this.state.type === 1 && _color2.default.font.blue, onPress: this._changeType.bind(this, 1), __source: {
                fileName: _jsxFileName,
                lineNumber: 157
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { size: '14', color: this.state.type === 1 ? _color2.default.font.blue : '#999999', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 158
                }
              },
              '\u5E73\u53F0\u516C\u544A'
            )
          ),
          _react2.default.createElement(
            FilterView,
            { color: this.state.type === 2 && _color2.default.font.blue, onPress: this._changeType.bind(this, 2), __source: {
                fileName: _jsxFileName,
                lineNumber: 160
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { size: '14', color: this.state.type === 2 ? _color2.default.font.blue : '#999999', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 161
                }
              },
              '\u4E2A\u4EBA\u6D88\u606F'
            )
          )
        ),
        this.state.type === 1 ? this._renderNotify() : this._renderMessage()
      );
    }
  }]);
  return MessageList;
}(_react.Component);

MessageList.navigationOptions = {
  title: '平台公告'
};


MessageList.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
  var messageList = state.messageList,
      notifyList = state.notifyList;

  return { messageList: messageList, notifyList: notifyList };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var messageListActions = (0, _redux.bindActionCreators)(messageListCreator, dispatch);
  var notifyListActions = (0, _redux.bindActionCreators)(notifyListCreator, dispatch);
  return { messageListActions: messageListActions, notifyListActions: notifyListActions };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(MessageList);
}, 672, null, "YuanXC/src/pages/MessageList.js");
__d(/* YuanXC/src/actions/messageListActions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getData = getData;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);

var _http = require(622               ); // 622 = ../requests/http

function getData(isRefreshing, isLoadMore, loading) {
  var pageNumber = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;

  return function (dispatch) {
    dispatch(requestData({ isRefreshing: isRefreshing, isLoadMore: isLoadMore, loading: loading }));
    (0, _http.messageList)({ pageNumber: pageNumber }).then(function (data) {
      if (data.data.code == 0) {
        dispatch(receiveData({ list: data.data.data.userMessageList }));
      } else {
        dispatch(receiveData({ error: true, msg: data.data.msg }));
      }
    }).catch(function (err) {
      dispatch(receiveData({ error: true, msgStr: 'netWorkError' }));
    });
  };
}

function requestData(data) {
  return babelHelpers.extends({
    type: types.REQUEST_MESSAGE_LIST
  }, data);
}

function receiveData(data) {
  return babelHelpers.extends({
    type: types.RECEIVE_MESSAGE_LIST
  }, data);
}
}, 673, null, "YuanXC/src/actions/messageListActions.js");
__d(/* YuanXC/src/actions/notifyListActions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getData = getData;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);

var _http = require(622               ); // 622 = ../requests/http

function getData(isRefreshing, isLoadMore, loading) {
  var pageNumber = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;

  return function (dispatch) {
    dispatch(requestData({ isRefreshing: isRefreshing, isLoadMore: isLoadMore, loading: loading }));
    (0, _http.getNotification)({ pageNumber: pageNumber }).then(function (data) {
      if (data.data.code == 0) {
        dispatch(receiveData({ list: data.data.data }));
      } else {
        dispatch(receiveData({ error: true, msg: data.data.msg }));
      }
    }).catch(function (err) {
      dispatch(receiveData({ error: true, msgStr: 'netWorkError' }));
    });
  };
}

function requestData(data) {
  return babelHelpers.extends({
    type: types.REQUEST_NOTIFY_LIST
  }, data);
}

function receiveData(data) {
  return babelHelpers.extends({
    type: types.RECEIVE_NOTIFY_LIST
  }, data);
}
}, 674, null, "YuanXC/src/actions/notifyListActions.js");
__d(/* YuanXC/src/pages/MessageDetail.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/MessageDetail.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _http = require(622               ); // 622 = ../requests/http

var _HTML = require(676            ); // 676 = ../utils/HTML

var _HTML2 = babelHelpers.interopRequireDefault(_HTML);

var WebView1 = function (_Component) {
  babelHelpers.inherits(WebView1, _Component);

  function WebView1(props) {
    babelHelpers.classCallCheck(this, WebView1);

    var _this = babelHelpers.possibleConstructorReturn(this, (WebView1.__proto__ || Object.getPrototypeOf(WebView1)).call(this, props));

    _this.state = {
      loading: true,
      detail: {}
    };
    return _this;
  }

  babelHelpers.createClass(WebView1, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      (0, _http.messageDetail)({
        id: this.props.navigation.state.params.id
      }).then(function (data) {
        _this2.setState({ loading: false });
        if (data.data.code === 0) {
          _this2.setState({ detail: data.data.data });
        }
      }).catch(function () {
        _this2.setState({ loading: false });
        _this2.context.callToast('加载失败');
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _UtilLib.FlexView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 36
          }
        },
        this.state.detail.title ? _react2.default.createElement(_reactNative.WebView, {
          style: { flex: 1 },
          scalesPageToFit: false,
          source: { html: (0, _HTML2.default)(this.state.detail.title, this.state.detail.createdAt, this.state.detail.content) },
          javaScriptEnabled: true,
          domStorageEnabled: true,
          renderError: function renderError() {
            return _react2.default.createElement(_UtilLib.NoData, { visible: true, text: '\u52A0\u8F7D\u5931\u8D25', __source: {
                fileName: _jsxFileName,
                lineNumber: 43
              }
            });
          },
          __source: {
            fileName: _jsxFileName,
            lineNumber: 37
          }
        }) : null,
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: this.state.loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 45
          }
        })
      );
    }
  }]);
  return WebView1;
}(_react.Component);

exports.default = WebView1;
}, 675, null, "YuanXC/src/pages/MessageDetail.js");
__d(/* YuanXC/src/utils/HTML.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = HtmlFormatter = function HtmlFormatter(title, date, html) {
  var content = "<!DOCTYPE html><meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"initial-scale=1, maximum-scale=1, user-scalable=no, width=device-width\">\n    <meta content=\"telephone=no\" name=\"format-detection\">\n    <title></title>\n    <style>body{font-family: \"\u5FAE\u8F6F\u96C5\u9ED1\",Arial, Helvetica, sans-serif;margin:0;color:#999999;font-size:13px;padding:10px;padding-top:20px;padding-bottom:50px;}\n    .title{font-size:18px;color:#333333;}\n    .date{font-size:14;line-height:30px;}\n    </style>\n    <body><div class=\"title\">" + title + "</div><div class=\"date\">" + date + "</div>" + html + "</body></html>";
  return content;
};
}, 676, null, "YuanXC/src/utils/HTML.js");
__d(/* YuanXC/src/pages/Recharge.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/Recharge.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  background-color: ', ';\n  padding-top: ', ';\n'], ['\n  background-color: ', ';\n  padding-top: ', ';\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  margin-vertical:10;\n  padding-left:20;\n  background-color:#ffffff;\n  height:51;\n  flex-direction:row;\n  align-items:center;\n'], ['\n  margin-vertical:10;\n  padding-left:20;\n  background-color:#ffffff;\n  height:51;\n  flex-direction:row;\n  align-items:center;\n']),
    _templateObject3 = babelHelpers.taggedTemplateLiteral(['\n   margin-right:10;\n   margin-top:10;\n   align-self:flex-start;\n   width:18;\n   height:18;\n'], ['\n   margin-right:10;\n   margin-top:10;\n   align-self:flex-start;\n   width:18;\n   height:18;\n']),
    _templateObject4 = babelHelpers.taggedTemplateLiteral(['\n  align-self:flex-end;\n  margin-top:8;\n  margin-right:20;\n'], ['\n  align-self:flex-end;\n  margin-top:8;\n  margin-right:20;\n']),
    _templateObject5 = babelHelpers.taggedTemplateLiteral(['\n  background-color:#ffffff;\n  padding-horizontal:20;\n'], ['\n  background-color:#ffffff;\n  padding-horizontal:20;\n']),
    _templateObject6 = babelHelpers.taggedTemplateLiteral(['\n  padding-vertical:4;\n  padding-left:20;\n'], ['\n  padding-vertical:4;\n  padding-left:20;\n']),
    _templateObject7 = babelHelpers.taggedTemplateLiteral(['\n  padding-left:20;\n  background-color:#ffffff;\n'], ['\n  padding-left:20;\n  background-color:#ffffff;\n']),
    _templateObject8 = babelHelpers.taggedTemplateLiteral(['\n  border-bottom-width:', ';\n  border-bottom-color:#eeeeee;\n'], ['\n  border-bottom-width:', ';\n  border-bottom-color:#eeeeee;\n']),
    _templateObject9 = babelHelpers.taggedTemplateLiteral(['\n  margin-right:20;\n'], ['\n  margin-right:20;\n']),
    _templateObject10 = babelHelpers.taggedTemplateLiteral(['\n  background-color:#ffffff;\n  padding-horizontal:20;\n  width:', ';\n  padding-vertical:10;\n  border-bottom-width:', ';\n  border-bottom-color:#eeeeee;\n  margin-top:', ';\n'], ['\n  background-color:#ffffff;\n  padding-horizontal:20;\n  width:', ';\n  padding-vertical:10;\n  border-bottom-width:', ';\n  border-bottom-color:#eeeeee;\n  margin-top:', ';\n']),
    _templateObject11 = babelHelpers.taggedTemplateLiteral(['\n  margin-top:15;\n  margin-bottom:30;\n'], ['\n  margin-top:15;\n  margin-bottom:30;\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _reactNative = require(12            ); // 12 = react-native

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _MessageBox = require(625                       ); // 625 = ../components/MessageBox

var _MessageBox2 = babelHelpers.interopRequireDefault(_MessageBox);

var _Touchable = require(497                      ); // 497 = ../components/Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var _TextInputCustomized = require(638                                ); // 638 = ../components/TextInputCustomized

var _TextInputCustomized2 = babelHelpers.interopRequireDefault(_TextInputCustomized);

var _GuideMenu = require(641                      ); // 641 = ../components/GuideMenu

var _GuideMenu2 = babelHelpers.interopRequireDefault(_GuideMenu);

var _color = require(587              ); // 587 = ../styles/color

var _color2 = babelHelpers.interopRequireDefault(_color);

var _imgs = require(436                ); // 436 = ../resources/imgs

var _imgs2 = babelHelpers.interopRequireDefault(_imgs);

var _constants = require(434                  ); // 434 = ../config/constants

var _bankCardDetailActions = require(669                               ); // 669 = ../actions/bankCardDetailActions

var bankCardDetailCreator = babelHelpers.interopRequireWildcard(_bankCardDetailActions);

var _userActions = require(630                     ); // 630 = ../actions/userActions

var userCreator = babelHelpers.interopRequireWildcard(_userActions);

var _http = require(622               ); // 622 = ../requests/http

var _PayView = require(678                    ); // 678 = ../components/PayView

var _PayView2 = babelHelpers.interopRequireDefault(_PayView);

var _Float = require(628             ); // 628 = ../utils/Float

var _Float2 = babelHelpers.interopRequireDefault(_Float);

var _TD = require(639          ); // 639 = ../utils/TD

var RNTD = babelHelpers.interopRequireWildcard(_TD);

var PayManager = _reactNative.NativeModules.MyViewManager;
var FyPay = _reactNative.NativeModules.FyPay;

var HBgView = _native2.default.View(_templateObject, _color2.default.background.userBlue, _constants.STATUS_HEIGHT || 10);
var ItemView = _native2.default.View(_templateObject2);
var Image = _native2.default.Image(_templateObject3);
var DescButton = (0, _native2.default)(_Touchable2.default)(_templateObject4);
var InputView = _native2.default.View(_templateObject5);
var Info = _native2.default.View(_templateObject6);
var PwdView = _native2.default.View(_templateObject7);
var BorderInput = (0, _native2.default)(_TextInputCustomized2.default)(_templateObject8, _constants.BORDER_WIDTH);
var CodeButton = (0, _native2.default)(_UtilLib.StyledButtom)(_templateObject9);
var RowView1 = _UtilLib.BetweenView.extend.attrs({
  marginTop: function marginTop(props) {
    return props.marginTop || 0;
  }
})(_templateObject10, _constants.WINDOW_WIDTH, _constants.BORDER_WIDTH, function (props) {
  return props.marginTop;
});
var MoneyView = _UtilLib.CenterView.extend(_templateObject11);

var Recharge = function (_Component) {
  babelHelpers.inherits(Recharge, _Component);

  function Recharge(props) {
    babelHelpers.classCallCheck(this, Recharge);

    var _this = babelHelpers.possibleConstructorReturn(this, (Recharge.__proto__ || Object.getPrototypeOf(Recharge)).call(this, props));

    _this.state = _this._initState();
    _this.second = 59;
    return _this;
  }

  babelHelpers.createClass(Recharge, [{
    key: '_initState',
    value: function _initState(flag) {
      flag && this.props.navigation.setParams({
        title: "快捷充值"
      });
      return {
        money: '',
        mobile: '',
        code: '',
        password: '',
        msg: '',
        mode: 1,
        canTouch: false,
        second: '',
        loading: false,
        sending: false,
        canSend: true,
        messageBox: {
          visible: false,
          content: '',
          button: null
        }
      };
    }
  }, {
    key: '_showOptionModal',
    value: function _showOptionModal(msg, onCancel, onConfirm) {
      var _this2 = this;

      this.props.navigation.setParams({
        gesturesEnabled: false
      });
      this.setState({
        messageBox: {
          visible: true,
          content: msg,
          button: {
            text: '确认',
            onPress: function onPress() {
              _this2.props.navigation.setParams({
                gesturesEnabled: true
              });
              _this2.setState({
                messageBox: {
                  visible: false
                }
              });
            }
          }
        }
      });
    }
  }, {
    key: '_next',
    value: function _next() {
      var _this3 = this;

      if (isNaN(this.state.money) && this.state.money > 0) {
        this.context.callToast('请输入合法金额');
      } else if (!/^[0-9]+$/.test(this.state.money)) {
        this.context.callToast('充值金额为整数');
      } else {
        this.setState({ loading: true });
        (0, _http.deposit)({ money: this.state.money, clientType: _constants.OS === "ios" ? 3 : 2 }).then(function (rdata) {
          if (rdata.data.code === 0) {
            if (_constants.OS === "ios") {
              setTimeout(function () {
                _this3.setState({ loading: false });
              }, 2000);
              PayManager && PayManager.pay((0, _reactNative.findNodeHandle)(_this3.refs.payView), rdata.data.data.requestParamList[0], function (err, data) {
                _this3.setState({ loading: false });
                if (data) {
                  if (data.RESPONSECODE === '0000') {
                    _this3.context.callToast('充值成功', true);
                    _this3.props.userActions.userProfile(false, 2000);
                    _this3.setState({ mode: 3, createdAt: rdata.data.data.createdAt, number: rdata.data.data.number });
                    _this3.props.navigation.setParams({
                      title: "充值成功",
                      hideHeader: false
                    });
                    RNTD.onPay(_this3.props.user.userInfo.mobile, _this3.state.number, _this3.state.money * 100, '富友支付');
                  } else if (data.RESPONSECODE !== "-2") {
                    _this3._showOptionModal('\u5145\u503C\u5931\u8D25\uFF0CM' + data.RESPONSEMSG + 'C' + data.RESPONSECODE);
                  }
                } else {
                  _this3._showOptionModal(data.RESPONSEMSG + '\uFF0CC' + data.RESPONSECODE);
                }
              });
            } else {
              setTimeout(function () {
                _this3.setState({ loading: false });
              }, 2000);
              FyPay && FyPay.pay(rdata.data.data.requestParamList[0], function (data) {
                _this3.setState({ loading: false });
                if (data.indexOf("xml") > -1) {
                  data = {
                    RESPONSECODE: data.substring(data.indexOf("<RESPONSECODE>") + 14, data.indexOf("</RESPONSECODE>")),
                    RESPONSEMSG: data.substring(data.indexOf("<RESPONSEMSG>") + 13, data.indexOf("</RESPONSEMSG>"))
                  };
                  if (data.RESPONSECODE === '0000') {
                    _this3.context.callToast('充值成功', true);
                    _this3.props.userActions.userProfile(false, 2000);
                    _this3.setState({ mode: 3, createdAt: rdata.data.data.createdAt, number: rdata.data.data.number });
                    _this3.props.navigation.setParams({
                      title: "充值成功",
                      hideHeader: false
                    });
                    RNTD.onPay(_this3.props.user.userInfo.mobile, _this3.state.number, _this3.state.money * 100, '富友支付');
                  } else if (data.RESPONSECODE !== "-2") {
                    _this3._showOptionModal('\u5145\u503C\u5931\u8D25\uFF0CM' + data.RESPONSEMSG + 'C' + data.RESPONSECODE);
                  }
                } else if (data) {
                  _this3._showOptionModal("FYPay: " + data);
                }
              });
            }
          } else {
            _this3.setState({ loading: false });
            _this3.context.callToast(rdata.data.msg);
          }
        }).catch(function (e) {
          _this3.setState({ loading: false });
          _this3.context.callToast('提交失败,请检查网络');
          console.log(e);
        });
      }
    }
  }, {
    key: '_submit',
    value: function _submit() {
      var _this4 = this;

      return;
      if (!this.state.mobile) {
        this.context.callToast('请输入手机号');
      } else if (!/^[1][34578][0-9]{9}$/.test(this.state.mobile)) {
        this.context.callToast('请输入正确的手机号');
      } else if (!this.state.code) {
        this.context.callToast('请输入验证码');
      } else if (!this.state.password) {
        this.context.callToast('请输入交易密码');
      } else {
        this.setState({ loading: true });
        (0, _http.recharge)().then(function (data) {
          _this4.setState({ loading: false });
          if (data.data.code === 0) {
            _this4.setState({ mode: 3 }, function () {
              _this4.props.navigation.setParams({
                title: "充值成功"
              });
            });
          } else {
            _this4.setState({ mode: 4, msg: data.data.msg }, function () {
              _this4.props.navigation.setParams({
                title: "充值失败"
              });
            });
          }
        }).catch(function () {
          _this4.setState({ loading: false });
          _this4.context.callToast('提交失败');
        });
      }
    }
  }, {
    key: '_sendCode',
    value: function _sendCode() {
      var _this5 = this;

      if (!this.state.mobile) {
        this.context.callToast('请输入手机号');
      } else if (!/^[1][34578][0-9]{9}$/.test(this.state.mobile)) {
        this.context.callToast('请输入正确的手机号');
      } else {
        if (!this.state.sending && this.state.canSend) {
          this.setState({ sending: true });
          (0, _http.sendCode)({ mobile: this.state.mobile }).then(function (data) {
            if (data.data.code === 0) {
              _this5.context.callToast('验证码发送成功');
              _this5.setState({ second: _this5.second, canSend: false, sending: false }, function () {
                _this5.interval = setInterval(function () {
                  if (_this5.state.second == 1) {
                    clearInterval(_this5.interval);
                    _this5.setState({ canSend: true, second: '' });
                  } else {
                    _this5.setState({ second: --_this5.state.second });
                  }
                }, 1000);
              });
            } else {
              _this5.setState({ sending: false });
              _this5.context.callToast(data.data.msg);
            }
          }).catch(function () {
            _this5.setState({ sending: false });
            _this5.context.callToast('发送失败');
          });
        }
      }
    }
  }, {
    key: '_renderRecharge',
    value: function _renderRecharge() {
      var _this6 = this;

      var detail = this.props.bankCardDetail.detail;

      return _react2.default.createElement(
        _UtilLib.ScrollLayout,
        { color: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 300
          }
        },
        _react2.default.createElement(
          _UtilLib.FlexView,
          { style: { height: _constants.WINDOW_HEIGHT }, __source: {
              fileName: _jsxFileName,
              lineNumber: 301
            }
          },
          _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: this.state.loading, __source: {
              fileName: _jsxFileName,
              lineNumber: 302
            }
          }),
          _react2.default.createElement(
            HBgView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 303
              }
            },
            _react2.default.createElement(
              _UtilLib.NormalView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 304
                }
              },
              _react2.default.createElement(
                _UtilLib.HeaderButton,
                { onPress: function onPress() {
                    return _this6.props.navigation.goBack();
                  }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 305
                  }
                },
                _imgs2.default.leftArrowWhite({ marginRight: 20 })
              ),
              _react2.default.createElement(
                _UtilLib.CenterView,
                {
                  style: { width: _constants.WINDOW_WIDTH / 2, position: "absolute", bottom: 15, left: _constants.WINDOW_WIDTH / 4 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 308
                  }
                },
                _react2.default.createElement(
                  _UtilLib.StyledText,
                  { size: '17', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 310
                    }
                  },
                  '\u5FEB\u6377\u5145\u503C'
                )
              )
            ),
            _react2.default.createElement(
              MoneyView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 313
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '30', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 314
                  }
                },
                (0, _Float2.default)(this.props.user.userInfo.balance)
              ),
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#F0DCCE', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 315
                  }
                },
                '\u53EF\u7528\u4F59\u989D(\u5143)'
              )
            )
          ),
          detail && _react2.default.createElement(
            ItemView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 319
              }
            },
            detail.icon && _react2.default.createElement(Image, { source: { uri: detail.icon }, __source: {
                fileName: _jsxFileName,
                lineNumber: 320
              }
            }),
            _react2.default.createElement(
              _reactNative.View,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 321
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#333333', size: '14', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 322
                  }
                },
                detail.bankName,
                '\uFF08\u5C3E\u53F7',
                detail.number.substr(-4),
                '\uFF09'
              ),
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#999999', size: '12', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 323
                  }
                },
                '\u5355\u7B14\u9650\u989D',
                detail.singleLimit,
                ',\u65E5\u7D2F\u8BA1\u9650\u989D',
                detail.dailyAccumulativeLimit,
                ',\u6708\u7D2F\u8BA1\u9650\u989D',
                detail.monthlyAccumulativeLimit
              )
            )
          ),
          _react2.default.createElement(
            InputView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 329
              }
            },
            _react2.default.createElement(_TextInputCustomized2.default, { label: '\u5145\u503C\u91D1\u989D',
              labelWidth: 90,
              value: this.state.money,
              placeholder: '\u8BF7\u8F93\u5165\u5145\u503C\u91D1\u989D(\u5143)',
              keyboardType: 'numeric',
              hideClear: true,
              onChangeText: function onChangeText(text) {
                if (text) {
                  if (!isNaN(text)) {
                    _this6.setState({ money: text, canTouch: text > 0 ? true : false });
                  } else {
                    _this6.setState({ money: '', canTouch: false });
                  }
                } else {
                  _this6.setState({ money: text, canTouch: false });
                }
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 330
              }
            })
          ),
          _react2.default.createElement(
            DescButton,
            { onPress: function onPress() {
                return _this6.props.navigation.navigate("BankList");
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 348
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: _color2.default.font.blue, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 349
                }
              },
              '\u9650\u989D\u8BF4\u660E'
            )
          ),
          _react2.default.createElement(
            _UtilLib.CenterView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 351
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledButtom,
              { feedback: this.state.canTouch, top: '40', radius: '5', width: _constants.WINDOW_WIDTH - 40, height: '45',
                color: this.state.canTouch ? "#EC5D35" : '#dddddd',
                onPress: function onPress() {
                  return _this6.state.canTouch && _this6._next();
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 352
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '17', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 355
                  }
                },
                '\u786E \u5B9A'
              )
            )
          ),
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#999999', lh: '20', top: '15', left: '15', size: '12', style: { paddingRight: 15 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 358
              }
            },
            '\u6E29\u99A8\u63D0\u793A\uFF1A',
            '\n',
            '1.\u5145\u503C\u5B9E\u65F6\u5230\u8D26\uFF0C\u5982\u6709\u7591\u95EE\u8BF7\u8054\u7CFB\u5BA2\u670D\u70ED\u7EBF400-871-3088\uFF1B',
            '\n',
            '2.\u8BF7\u6CE8\u610F\u60A8\u7684\u94F6\u884C\u5361\u5145\u503C\u9650\u989D\uFF0C\u4EE5\u514D\u9020\u6210\u4E0D\u4FBF\uFF1B',
            '\n',
            '3.\u5982\u9700\u4F7F\u7528\u5927\u989D\u5145\u503C\uFF0C\u8BF7\u767B\u5F55\u5229\u7FA4\u7406\u8D22\u5B98\u7F51(www.liqun888.com)\u4F7F\u7528\u7F51\u94F6\u5145\u503C\uFF1B',
            '\n'
          )
        ),
        _react2.default.createElement(_PayView2.default, { ref: 'payView', value: 0, num: 0, isTest1: false, infoDict: {}, __source: {
            fileName: _jsxFileName,
            lineNumber: 372
          }
        }),
        _react2.default.createElement(_MessageBox2.default, {
          visible: this.state.messageBox.visible,
          content: this.state.messageBox.content,
          button: this.state.messageBox.button, __source: {
            fileName: _jsxFileName,
            lineNumber: 373
          }
        })
      );
    }
  }, {
    key: '_renderPwd',
    value: function _renderPwd() {
      var _this7 = this;

      var canSubmit = this.state.mobile && this.state.password && this.state.code ? true : false;
      return _react2.default.createElement(
        _UtilLib.ScrollLayout,
        { color: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 384
          }
        },
        _react2.default.createElement(
          ItemView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 385
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 386
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#333333', size: '14', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 387
                }
              },
              this.state.money,
              '\u5143'
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#999999', size: '10', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 388
                }
              },
              '\u5355\u7B14\u9650\u989D20\u4E07\uFF0C\u5355\u65E5\u9650\u989D50\u4E07'
            )
          )
        ),
        _react2.default.createElement(
          Info,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 391
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#999999', __source: {
                fileName: _jsxFileName,
                lineNumber: 392
              }
            },
            '\u8BA2\u5355\u53F7\uFF1AB71544887412554411',
            '\n',
            '\u59D3\u540D\uFF1A\u5F20\u56DB\u5FB7',
            '\n',
            '\u6240\u5C5E\u5E73\u53F0\uFF1A\u94B1\u5E02\u7F51',
            '\n',
            '\u5E73\u53F0\u516C\u53F8\u540D\u79F0\uFF1A\u676D\u5DDE\u4E7E\u5E02\u7535\u5B50\u5546\u52A1\u6709\u9650\u516C\u53F8'
          )
        ),
        _react2.default.createElement(
          PwdView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 399
            }
          },
          _react2.default.createElement(_GuideMenu2.default, {
            style: { paddingRight: 24 },
            feedback: false,
            bottomBorder: true,
            titleWidth: 112,
            title: '银行卡',
            content: '建行银行（尾号9897）',
            contentColor: '#333333',
            hideArrow: true,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 400
            }
          }),
          _react2.default.createElement(BorderInput, {
            label: '\u9884\u7559\u624B\u673A\u53F7',
            labelWidth: 100,
            value: this.state.mobile,
            keyboardType: 'numeric',
            onChangeText: function onChangeText(text) {
              _this7.setState({ mobile: text });
            },
            placeholder: '\u8BF7\u8F93\u5165\u94F6\u884C\u9884\u7559\u624B\u673A\u53F7',
            onClear: function onClear() {
              _this7.setState({ mobile: '' });
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 410
            }
          }),
          _react2.default.createElement(BorderInput, {
            label: '\u9A8C\u8BC1\u7801',
            labelWidth: 100,
            value: this.state.code,
            keyboardType: 'numeric',
            onChangeText: function onChangeText(text) {
              _this7.setState({ code: text });
            },
            placeholder: '\u8BF7\u8F93\u5165\u77ED\u4FE1\u9A8C\u8BC1\u7801',
            hideClear: true,
            rightLabel: _react2.default.createElement(
              CodeButton,
              { top: '0', radius: '6', width: '70', height: '28',
                color: (!this.state.canSend || this.state.sending) && '#979797',
                feedback: this.state.canSend || this.state.sending,
                onPress: this._sendCode.bind(this), __source: {
                  fileName: _jsxFileName,
                  lineNumber: 434
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 438
                  }
                },
                this.state.second ? this.state.second + 'S\u540E\u91CD\u53D1' : '获取验证码'
              )
            ),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 423
            }
          }),
          _react2.default.createElement(BorderInput, {
            label: '\u4EA4\u6613\u5BC6\u7801',
            secureTextEntry: true,
            labelWidth: 100,
            value: this.state.password,
            onChangeText: function onChangeText(text) {
              _this7.setState({ password: text });
            },
            placeholder: '\u8BF7\u8F93\u5165\u4EA4\u6613\u5BC6\u7801',
            onClear: function onClear() {
              _this7.setState({ password: '' });
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 442
            }
          })
        ),
        _react2.default.createElement(
          _UtilLib.CenterView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 456
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledButtom,
            { feedback: canSubmit, height: '38', radius: '19',
              color: canSubmit ? _color2.default.background.blue : '#dddddd', top: '40', width: '153',
              onPress: function onPress() {
                return canSubmit && _this7._submit();
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 457
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { size: '13', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 460
                }
              },
              '\u4E0B\u4E00\u6B65'
            )
          )
        )
      );
    }
  }, {
    key: '_renderSuccess',
    value: function _renderSuccess() {
      var _this8 = this;

      return _react2.default.createElement(
        _UtilLib.CenterView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 469
          }
        },
        _react2.default.createElement(_reactNative.StatusBar, { barStyle: 'dark-content', hidden: false, showHideTransition: 'fade',
          animated: true, __source: {
            fileName: _jsxFileName,
            lineNumber: 470
          }
        }),
        _imgs2.default.operSuccess({ margin: 18 }),
        _react2.default.createElement(
          _UtilLib.StyledText,
          { color: '#333333', __source: {
              fileName: _jsxFileName,
              lineNumber: 473
            }
          },
          '\u5145\u503C\u6210\u529F'
        ),
        _react2.default.createElement(
          RowView1,
          { marginTop: 20, __source: {
              fileName: _jsxFileName,
              lineNumber: 474
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#333333', __source: {
                fileName: _jsxFileName,
                lineNumber: 475
              }
            },
            '\u5145\u503C\u91D1\u989D'
          ),
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#333333', __source: {
                fileName: _jsxFileName,
                lineNumber: 476
              }
            },
            (0, _Float2.default)(this.state.money),
            '\u5143'
          )
        ),
        _react2.default.createElement(
          RowView1,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 478
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#333333', __source: {
                fileName: _jsxFileName,
                lineNumber: 479
              }
            },
            '\u5145\u503C\u65F6\u95F4'
          ),
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#333333', __source: {
                fileName: _jsxFileName,
                lineNumber: 480
              }
            },
            this.state.createdAt
          )
        ),
        _react2.default.createElement(
          RowView1,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 482
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#333333', __source: {
                fileName: _jsxFileName,
                lineNumber: 483
              }
            },
            '\u8D44\u91D1\u6D41\u6C34\u53F7'
          ),
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#333333', __source: {
                fileName: _jsxFileName,
                lineNumber: 484
              }
            },
            this.state.number
          )
        ),
        _react2.default.createElement(
          _UtilLib.StyledButtom,
          { height: '38', radius: '19', top: '40', width: '153',
            onPress: function onPress() {
              return _this8.props.navigation.goBack();
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 486
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { size: '14', __source: {
                fileName: _jsxFileName,
                lineNumber: 488
              }
            },
            '\u6211\u77E5\u9053\u4E86'
          )
        )
      );
    }
  }, {
    key: '_renderError',
    value: function _renderError() {
      var _this9 = this;

      return _react2.default.createElement(
        _UtilLib.CenterView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 496
          }
        },
        _imgs2.default.operSuccess({ marginTop: 40, marginBottom: 18 }),
        _react2.default.createElement(
          _UtilLib.StyledText,
          { color: '#333333', __source: {
              fileName: _jsxFileName,
              lineNumber: 498
            }
          },
          '\u4EA4\u6613\u5DF2\u5173\u95ED'
        ),
        _react2.default.createElement(
          _UtilLib.StyledText,
          { color: '#999999', height: '28', __source: {
              fileName: _jsxFileName,
              lineNumber: 499
            }
          },
          this.state.msg
        ),
        _react2.default.createElement(
          _UtilLib.StyledButtom,
          { height: '38', radius: '19', top: '40', width: '153',
            onPress: function onPress() {
              return _this9.setState(_this9._initState(true));
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 500
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { size: '13', __source: {
                fileName: _jsxFileName,
                lineNumber: 502
              }
            },
            '\u91CD\u8BD5\u5145\u503C'
          )
        )
      );
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.props.bankCardDetailActions.getData(!this.props.bankCardDetail);
    }
  }, {
    key: 'render',
    value: function render() {
      if (this.state.mode === 1) {
        return this._renderRecharge();
      } else if (this.state.mode === 2) {
        return this._renderPwd();
      } else if (this.state.mode === 3) {
        return this._renderSuccess();
      } else if (this.state.mode === 4) {
        return this._renderError();
      }
    }
  }]);
  return Recharge;
}(_react.Component);

Recharge.navigationOptions = function (_ref) {
  var navigation = _ref.navigation,
      screenProps = _ref.screenProps;
  return {
    title: '快捷充值',
    hideHeader: navigation.state.params.hideHeader
  };
};

Recharge.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
  var bankCardDetail = state.bankCardDetail,
      user = state.user;

  return { bankCardDetail: bankCardDetail, user: user };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var bankCardDetailActions = (0, _redux.bindActionCreators)(bankCardDetailCreator, dispatch);
  var userActions = (0, _redux.bindActionCreators)(userCreator, dispatch);
  return { bankCardDetailActions: bankCardDetailActions, userActions: userActions };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Recharge);
}, 677, null, "YuanXC/src/pages/Recharge.js");
__d(/* YuanXC/src/components/PayView.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/components/PayView.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _constants = require(434                  ); // 434 = ../config/constants

var RCTMyView = _constants.OS === "ios" ? (0, _reactNative.requireNativeComponent)('RCTMyView', MyView) : function () {
  return _react2.default.createElement(_reactNative.View, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 6
    }
  });
};

var MyView = function (_Component) {
  babelHelpers.inherits(MyView, _Component);

  function MyView() {
    babelHelpers.classCallCheck(this, MyView);
    return babelHelpers.possibleConstructorReturn(this, (MyView.__proto__ || Object.getPrototypeOf(MyView)).apply(this, arguments));
  }

  babelHelpers.createClass(MyView, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(RCTMyView, babelHelpers.extends({}, this.props, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 18
        }
      }));
    }
  }]);
  return MyView;
}(_react.Component);

MyView.propTypes = {
  value: _propTypes2.default.number,
  isTest1: _propTypes2.default.bool,
  num: _propTypes2.default.number,
  infoDict: _propTypes2.default.object
};
exports.default = MyView;
}, 678, null, "YuanXC/src/components/PayView.js");
__d(/* YuanXC/src/pages/Cash.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/Cash.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  background-color: ', ';\n  padding-top: ', ';\n'], ['\n  background-color: ', ';\n  padding-top: ', ';\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  align-self:flex-end;\n  margin-top:8;\n  margin-right:20;\n'], ['\n  align-self:flex-end;\n  margin-top:8;\n  margin-right:20;\n']),
    _templateObject3 = babelHelpers.taggedTemplateLiteral(['\n  background-color:#ffffff;\n  padding-horizontal:20;\n'], ['\n  background-color:#ffffff;\n  padding-horizontal:20;\n']),
    _templateObject4 = babelHelpers.taggedTemplateLiteral(['\n  margin-vertical:10;\n  padding-left:20;\n  background-color:#ffffff;\n'], ['\n  margin-vertical:10;\n  padding-left:20;\n  background-color:#ffffff;\n']),
    _templateObject5 = babelHelpers.taggedTemplateLiteral(['\n  border-bottom-width:', ';\n  border-bottom-color:#eeeeee;\n'], ['\n  border-bottom-width:', ';\n  border-bottom-color:#eeeeee;\n']),
    _templateObject6 = babelHelpers.taggedTemplateLiteral(['\n  margin-right:20;\n'], ['\n  margin-right:20;\n']),
    _templateObject7 = babelHelpers.taggedTemplateLiteral(['\n  background-color:#ffffff;\n  padding-horizontal:20;\n  width:', ';\n  padding-vertical:10;\n  border-bottom-width:', ';\n  border-bottom-color:#eeeeee;\n  margin-top:', ';\n'], ['\n  background-color:#ffffff;\n  padding-horizontal:20;\n  width:', ';\n  padding-vertical:10;\n  border-bottom-width:', ';\n  border-bottom-color:#eeeeee;\n  margin-top:', ';\n']),
    _templateObject8 = babelHelpers.taggedTemplateLiteral(['\n  margin-top:15;\n  margin-bottom:30;\n'], ['\n  margin-top:15;\n  margin-bottom:30;\n']),
    _templateObject9 = babelHelpers.taggedTemplateLiteral(['\n  height:32;\n  justify-content:center;\n  padding-left:20;\n'], ['\n  height:32;\n  justify-content:center;\n  padding-left:20;\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _reactNative = require(12            ); // 12 = react-native

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _constants = require(434                  ); // 434 = ../config/constants

var _Touchable = require(497                      ); // 497 = ../components/Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var _TextInputCustomized = require(638                                ); // 638 = ../components/TextInputCustomized

var _TextInputCustomized2 = babelHelpers.interopRequireDefault(_TextInputCustomized);

var _GuideMenu = require(641                      ); // 641 = ../components/GuideMenu

var _GuideMenu2 = babelHelpers.interopRequireDefault(_GuideMenu);

var _color = require(587              ); // 587 = ../styles/color

var _color2 = babelHelpers.interopRequireDefault(_color);

var _imgs = require(436                ); // 436 = ../resources/imgs

var _imgs2 = babelHelpers.interopRequireDefault(_imgs);

var _Float = require(628             ); // 628 = ../utils/Float

var _Float2 = babelHelpers.interopRequireDefault(_Float);

var _http = require(622               ); // 622 = ../requests/http

var _userActions = require(630                     ); // 630 = ../actions/userActions

var userCreator = babelHelpers.interopRequireWildcard(_userActions);

var _bankCardDetailActions = require(669                               ); // 669 = ../actions/bankCardDetailActions

var bankCardDetailCreator = babelHelpers.interopRequireWildcard(_bankCardDetailActions);


var HBgView = _native2.default.View(_templateObject, _color2.default.background.userBlue, _constants.STATUS_HEIGHT || 10);
var DescButton = (0, _native2.default)(_Touchable2.default)(_templateObject2);
var InputView = _native2.default.View(_templateObject3);
var PwdView = _native2.default.View(_templateObject4);
var BorderInput = (0, _native2.default)(_TextInputCustomized2.default)(_templateObject5, _constants.BORDER_WIDTH);
var CodeButton = (0, _native2.default)(_UtilLib.StyledButtom)(_templateObject6);
var RowView = _UtilLib.BetweenView.extend.attrs({
  marginTop: function marginTop(props) {
    return props.marginTop || 0;
  }
})(_templateObject7, _constants.WINDOW_WIDTH, _constants.BORDER_WIDTH, function (props) {
  return props.marginTop;
});
var MoneyView = _UtilLib.CenterView.extend(_templateObject8);
var DescView = _native2.default.View(_templateObject9);
var icon = { width: 28, height: 28, resizeMode: 'center' };

var Cash = function (_Component) {
  babelHelpers.inherits(Cash, _Component);

  function Cash(props) {
    babelHelpers.classCallCheck(this, Cash);

    var _this = babelHelpers.possibleConstructorReturn(this, (Cash.__proto__ || Object.getPrototypeOf(Cash)).call(this, props));

    _this.state = _this._initState();
    _this.second = 59;
    return _this;
  }

  babelHelpers.createClass(Cash, [{
    key: '_initState',
    value: function _initState(flag) {
      flag && this.props.navigation.setParams({
        hideHeader: true,
        title: ''
      });
      return {
        money: '',
        code: '',
        password: '',
        msg: '',
        handleFee: '',
        mode: 1,
        canTouch: false,
        second: '',
        loading: false,
        sending: false,
        canSend: true
      };
    }
  }, {
    key: '_next',
    value: function _next() {
      var _this2 = this;

      if (isNaN(this.state.money)) {
        this.context.callToast('请输入合法金额');
      } else if (!this.props.userInfo.balance || this.props.userInfo.balance < this.state.money) {
        this.context.callToast('提现金额超出余额');
      } else {
        (0, _http.cashRequest)({ amount: this.state.money }).then(function (data) {
          _this2.setState({ loading: false });
          if (data.data.code === 0) {
            _this2.setState({ mode: 2, handleFee: data.data.data.handleFee });
            _this2.props.navigation.setParams({
              hideHeader: false,
              title: '提现'
            });
          } else {
            _this2.context.callToast(data.data.msg);
          }
        }).catch(function () {
          _this2.setState({ loading: false });
          _this2.context.callToast('提交失败');
        });
      }
    }
  }, {
    key: '_submit',
    value: function _submit() {
      var _this3 = this;

      if (!this.state.code) {
        this.context.callToast('请输入验证码');
      } else if (!this.state.password) {
        this.context.callToast('请输入交易密码');
      } else {
        this.setState({ loading: true });
        (0, _http.cash)({
          amount: this.state.money,
          code: this.state.code,
          tradingPassword: this.state.password,
          clientType: _constants.OS === 'ios' ? 3 : 2
        }).then(function (data) {
          _this3.setState({ loading: false });
          if (data.data.code === 0) {
            _this3.context.callToast("提现成功", true);
            _this3.props.userActions.userProfile(false);
            _this3.setState({ mode: 3 }, function () {
              _this3.props.navigation.setParams({
                title: "提现成功"
              });
            });
          } else {
            _this3.context.callToast(data.data.msg);
          }
        }).catch(function () {
          _this3.setState({ loading: false });
          _this3.context.callToast('提交失败');
        });
      }
    }
  }, {
    key: '_sendCode',
    value: function _sendCode() {
      var _this4 = this;

      if (!this.state.sending && this.state.canSend || !this.props.userInfo.mobile) {
        this.setState({ sending: true });
        (0, _http.sendCode)({ mobile: this.props.userInfo.mobile, type: 5 }).then(function (data) {
          if (data.data.code === 0) {
            _this4.context.callToast('验证码发送成功');
            _this4.setState({ second: _this4.second, canSend: false, sending: false }, function () {
              _this4.interval = setInterval(function () {
                if (_this4.state.second == 1) {
                  clearInterval(_this4.interval);
                  _this4.setState({ canSend: true, second: '' });
                } else {
                  _this4.setState({ second: --_this4.state.second });
                }
              }, 1000);
            });
          } else {
            _this4.setState({ sending: false });
            _this4.context.callToast(data.data.msg);
          }
        }).catch(function () {
          _this4.setState({ sending: false });
          _this4.context.callToast('发送失败');
        });
      }
    }
  }, {
    key: '_renderCash',
    value: function _renderCash() {
      var _this5 = this;

      var userInfo = this.props.userInfo;
      var _props$bankCardDetail = this.props.bankCardDetail,
          detail = _props$bankCardDetail.detail,
          loading = _props$bankCardDetail.loading;

      return _react2.default.createElement(
        _UtilLib.ScrollLayout,
        { color: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 203
          }
        },
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 204
          }
        }),
        _react2.default.createElement(
          HBgView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 205
            }
          },
          _react2.default.createElement(
            _UtilLib.NormalView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 206
              }
            },
            _react2.default.createElement(
              _UtilLib.HeaderButton,
              { onPress: function onPress() {
                  return _this5.props.navigation.goBack();
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 207
                }
              },
              _imgs2.default.leftArrowWhite({ marginRight: 20 })
            ),
            _react2.default.createElement(
              _UtilLib.CenterView,
              {
                style: { width: _constants.WINDOW_WIDTH / 2, position: "absolute", bottom: 15, left: _constants.WINDOW_WIDTH / 4 }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 210
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '17', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 212
                  }
                },
                '\u63D0\u73B0'
              )
            )
          ),
          _react2.default.createElement(
            MoneyView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 215
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { size: '30', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 216
                }
              },
              (0, _Float2.default)(userInfo.balance)
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#F0DCCE', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 217
                }
              },
              '\u53EF\u7528\u4F59\u989D(\u5143)'
            )
          )
        ),
        _react2.default.createElement(_GuideMenu2.default, {
          style: { marginTop: 10, paddingLeft: 20 },
          feedback: false,
          bottomBorder: true,
          title: (detail && detail.bankName || '') + '\uFF08\u5C3E\u53F7' + (detail && detail.number.substr(-4) || '') + '\uFF09',
          hideArrow: true,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 220
          }
        }),
        _react2.default.createElement(
          DescView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 227
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#999999', __source: {
                fileName: _jsxFileName,
                lineNumber: 228
              }
            },
            '\u8BE5\u5361\u672C\u6B21\u6700\u9AD8\u53EF\u63D0\u73B0\u91D1\u989D',
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#FDA12D', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 230
                }
              },
              (0, _Float2.default)(userInfo.balance),
              '\u5143'
            )
          )
        ),
        _react2.default.createElement(
          InputView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 233
            }
          },
          _react2.default.createElement(_TextInputCustomized2.default, { label: '\u91D1\u989D',
            labelWidth: 40,
            value: this.state.money,
            rightLabel: _react2.default.createElement(
              _Touchable2.default,
              { onPress: function onPress() {
                  return _this5.setState({ money: userInfo.balance, canTouch: userInfo.balance > 0 ? true : false });
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 238
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '15', color: '#EE5C2B', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 239
                  }
                },
                '\u5168\u90E8'
              )
            ),
            placeholder: '\u8BF7\u8F93\u5165\u63D0\u73B0\u91D1\u989D',
            keyboardType: 'numeric',
            hideClear: true,
            onChangeText: function onChangeText(text) {
              if (text) {
                if (!isNaN(text)) {
                  _this5.setState({ money: text, canTouch: text > 0 ? true : false });
                } else {
                  _this5.setState({ money: '', canTouch: false });
                }
              } else {
                _this5.setState({ money: text, canTouch: false });
              }
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 234
            }
          })
        ),
        _react2.default.createElement(
          DescButton,
          {
            onPress: function onPress() {
              return _this5.props.navigation.navigate("WebView", { url: (0, _http.createApiUrl)('/user/h5/withdraw-rule') });
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 257
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: _color2.default.font.blue, size: '12', __source: {
                fileName: _jsxFileName,
                lineNumber: 259
              }
            },
            '\u63D0\u73B0\u89C4\u5219\u8BF4\u660E'
          )
        ),
        _react2.default.createElement(
          _UtilLib.CenterView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 261
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledButtom,
            { feedback: this.state.canTouch,
              color: this.state.canTouch ? "#EE5C2B" : '#dddddd',
              onPress: function onPress() {
                return _this5.state.canTouch && _this5._next();
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 262
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { size: '17', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 265
                }
              },
              '\u786E  \u5B9A'
            )
          )
        ),
        _react2.default.createElement(
          _UtilLib.StyledText,
          { color: '#999999', lh: '20', top: '15', left: '15', size: '12', style: { paddingRight: 15 }, __source: {
              fileName: _jsxFileName,
              lineNumber: 268
            }
          },
          '\u6E29\u99A8\u63D0\u793A\uFF1A',
          '\n',
          '1.\u63D0\u73B0\u9650\u989D\u5355\u7B145\u4E07\u5143\uFF0C\u5DE5\u4F5C\u65E5\u63D0\u73B0\u624B\u7EED\u8D39\u4E3A1\u5143/\u7B14\uFF0C\u6CD5\u5B9A\u8282\u5047\u65E5\u624B\u7EED\u8D39\u4E3A\uFF1A\u63D0\u73B0\u91D1\u989D\xD70.005\u5143/\u7B14\uFF0C\u63D0\u73B0\u624B\u7EED\u8D39\u4EE5\u5B9E\u9645\u5230\u8D26\u65E5\u4E3A\u51C6\uFF1B',
          '\n',
          '2.\u63D0\u73B0\u5230\u8D26\u65F6\u95F4\u4E3AT\uFF0B1\uFF0C\u53CC\u4F11\u65E5\u6216\u6CD5\u5B9A\u8282\u5047\u65E5\u987A\u5EF6\uFF0C\u5B9E\u9645\u5230\u8D26\u65F6\u95F4\u53EF\u80FD\u4F1A\u53D7\u5404\u94F6\u884C\u5DE5\u4F5C\u65F6\u95F4\u5F71\u54CD\uFF0C\u8BF7\u6839\u636E\u94F6\u884C\u5B9E\u9645\u5230\u8D26\u4E3A\u51C6\uFF1B',
          '\n',
          '3.\u5982\u4F53\u73B0\u8D44\u91D1\u572848\u5C0F\u65F6\u540E\u8FD8\u672A\u5230\u8D26\uFF0C\u8BF7\u8054\u7CFB\u5728\u7EBF\u5BA2\u670D\u6216\u8054\u7CFB\u5BA2\u670D\u70ED\u7EBF\uFF1A400-871-3088\uFF1B',
          '\n'
        )
      );
    }
  }, {
    key: '_renderPwd',
    value: function _renderPwd() {
      var _this6 = this;

      var detail = this.props.bankCardDetail.detail;

      var canSubmit = this.state.password && this.state.code ? true : false;
      return _react2.default.createElement(
        _UtilLib.ScrollLayout,
        { color: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 282
          }
        },
        _react2.default.createElement(
          PwdView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 283
            }
          },
          _react2.default.createElement(_GuideMenu2.default, {
            feedback: false,
            bottomBorder: true,
            titleWidth: 112,
            title: '提现银行',
            content: (detail && detail.bankName) + '\uFF08\u5C3E\u53F7' + (detail && detail.number.substr(-4) || '') + '\uFF09',
            contentColor: '#333333',
            hideArrow: true,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 284
            }
          }),
          _react2.default.createElement(_GuideMenu2.default, {
            feedback: false,
            bottomBorder: true,
            titleWidth: 112,
            title: '提现金额',
            content: (0, _Float2.default)(this.state.money) + '\u5143',
            contentColor: '#333333',
            hideArrow: true,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 293
            }
          }),
          _react2.default.createElement(_GuideMenu2.default, {
            style: { marginLeft: -20, paddingLeft: 20 },
            feedback: false,
            bottomBorder: true,
            titleWidth: 112,
            title: '手续费',
            content: (0, _Float2.default)(this.state.handleFee) + '\u5143' + (this.state.handleFee == 0 ? '（每日首次免提现费）' : ''),
            contentColor: '#333333',
            hideArrow: true,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 302
            }
          }),
          _react2.default.createElement(_GuideMenu2.default, {
            style: { borderBottomColor: '#fff' },
            feedback: false,
            bottomBorder: true,
            titleWidth: 112,
            title: '实际到账',
            content: (0, _Float2.default)(this.state.money - this.state.handleFee || 0) + '\u5143',
            contentColor: '#ffa30f',
            hideArrow: true,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 312
            }
          })
        ),
        _react2.default.createElement(
          PwdView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 323
            }
          },
          _react2.default.createElement(BorderInput, {
            icon: _imgs2.default.keyboard(icon),
            labelWidth: 100,
            value: this.state.code,
            keyboardType: 'numeric',
            flag: this.state.canSend + this.state.second + this.state.sending,
            onChangeText: function onChangeText(text) {
              _this6.setState({ code: text });
            },
            placeholder: '\u9A8C\u8BC1\u7801',
            hideClear: true,
            rightLabel: _react2.default.createElement(
              CodeButton,
              { top: '0', radius: '6', width: '80', height: '28',
                color: (!this.state.canSend || this.state.sending) && '#979797',
                feedback: this.state.canSend || this.state.sending,
                onPress: this._sendCode.bind(this), __source: {
                  fileName: _jsxFileName,
                  lineNumber: 336
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 340
                  }
                },
                this.state.second ? this.state.second + 'S\u540E\u91CD\u53D1' : '获取验证码'
              )
            ),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 324
            }
          }),
          _react2.default.createElement(BorderInput, {
            style: { borderBottomColor: '#fff' },
            icon: _imgs2.default.loginPwd(icon),
            secureTextEntry: true,
            labelWidth: 100,
            value: this.state.password,
            onChangeText: function onChangeText(text) {
              _this6.setState({ password: text });
            },
            placeholder: '\u8BF7\u8F93\u5165\u4EA4\u6613\u5BC6\u7801',
            onClear: function onClear() {
              _this6.setState({ password: '' });
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 344
            }
          })
        ),
        _react2.default.createElement(
          DescButton,
          { onPress: function onPress() {
              return _this6.props.navigation.navigate("PayPasswordModify");
            }, style: { marginTop: -2 }, __source: {
              fileName: _jsxFileName,
              lineNumber: 359
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: _color2.default.font.blue, size: '10', __source: {
                fileName: _jsxFileName,
                lineNumber: 360
              }
            },
            '\u5FD8\u8BB0\u4EA4\u6613\u5BC6\u7801'
          )
        ),
        _react2.default.createElement(
          _UtilLib.CenterView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 362
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledButtom,
            { feedback: canSubmit, height: '38', radius: '19',
              color: canSubmit ? _color2.default.background.blue : '#dddddd', top: '40', width: '153',
              onPress: function onPress() {
                return canSubmit && _this6._submit();
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 363
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { size: '13', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 366
                }
              },
              '\u786E\u8BA4\u63D0\u73B0'
            )
          )
        )
      );
    }
  }, {
    key: '_renderSuccess',
    value: function _renderSuccess() {
      var _this7 = this;

      return _react2.default.createElement(
        _UtilLib.CenterView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 375
          }
        },
        _imgs2.default.operSuccess({ margin: 18 }),
        _react2.default.createElement(
          _UtilLib.StyledText,
          { color: '#333333', __source: {
              fileName: _jsxFileName,
              lineNumber: 377
            }
          },
          '\u63D0\u73B0\u6210\u529F'
        ),
        _react2.default.createElement(
          _UtilLib.StyledText,
          { size: '11', color: '#999999', __source: {
              fileName: _jsxFileName,
              lineNumber: 378
            }
          },
          '\u9884\u8BA1\u5230\u8D26\u65F6\u95F4',
          _react2.default.createElement(
            _UtilLib.StyledText,
            { size: '11', color: '#FCBE63', height: '28', __source: {
                fileName: _jsxFileName,
                lineNumber: 380
              }
            },
            '1-3\u4E2A\u5DE5\u4F5C\u65E5'
          )
        ),
        _react2.default.createElement(
          RowView,
          { marginTop: 20, __source: {
              fileName: _jsxFileName,
              lineNumber: 382
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#333333', __source: {
                fileName: _jsxFileName,
                lineNumber: 383
              }
            },
            '\u63D0\u73B0\u91D1\u989D'
          ),
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#333333', __source: {
                fileName: _jsxFileName,
                lineNumber: 384
              }
            },
            (0, _Float2.default)(this.state.money),
            '\u5143'
          )
        ),
        _react2.default.createElement(
          RowView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 386
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#333333', __source: {
                fileName: _jsxFileName,
                lineNumber: 387
              }
            },
            '\u624B\u7EED\u8D39'
          ),
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#333333', __source: {
                fileName: _jsxFileName,
                lineNumber: 388
              }
            },
            (0, _Float2.default)(this.state.handleFee),
            '\u5143'
          )
        ),
        _react2.default.createElement(
          RowView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 390
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#333333', __source: {
                fileName: _jsxFileName,
                lineNumber: 391
              }
            },
            '\u5B9E\u9645\u5230\u8D26'
          ),
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#333333', __source: {
                fileName: _jsxFileName,
                lineNumber: 392
              }
            },
            (0, _Float2.default)(this.state.money - this.state.handleFee || 0),
            '\u5143'
          )
        ),
        _react2.default.createElement(
          _UtilLib.StyledButtom,
          { height: '38', radius: '19', top: '40', width: '153',
            onPress: function onPress() {
              return _this7.props.navigation.goBack();
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 394
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { size: '14', __source: {
                fileName: _jsxFileName,
                lineNumber: 396
              }
            },
            '\u6211\u77E5\u9053\u4E86'
          )
        )
      );
    }
  }, {
    key: '_renderError',
    value: function _renderError() {
      var _this8 = this;

      return _react2.default.createElement(
        _UtilLib.CenterView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 404
          }
        },
        _imgs2.default.operSuccess({ marginTop: 40, marginBottom: 18 }),
        _react2.default.createElement(
          _UtilLib.StyledText,
          { color: '#333333', __source: {
              fileName: _jsxFileName,
              lineNumber: 406
            }
          },
          '\u4EA4\u6613\u5DF2\u5173\u95ED'
        ),
        _react2.default.createElement(
          _UtilLib.StyledText,
          { color: '#999999', height: '26', __source: {
              fileName: _jsxFileName,
              lineNumber: 407
            }
          },
          this.state.msg
        ),
        _react2.default.createElement(
          _UtilLib.StyledButtom,
          { height: '38', radius: '19', top: '40', width: '153',
            onPress: function onPress() {
              return _this8.setState(_this8._initState(true));
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 408
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { size: '14', __source: {
                fileName: _jsxFileName,
                lineNumber: 410
              }
            },
            '\u91CD\u8BD5\u63D0\u73B0'
          )
        )
      );
    }
  }, {
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.props.navigation.setParams({
        hideHeader: true
      });
      this.interval && clearInterval(this.interval);
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var userActions = this.props.userActions;

      userActions.userProfile(false);
      this.props.bankCardDetailActions.getData(!this.props.bankCardDetail.detail);
    }
  }, {
    key: 'render',
    value: function render() {
      if (this.state.mode === 1) {
        return this._renderCash();
      } else if (this.state.mode === 2) {
        return this._renderPwd();
      } else if (this.state.mode === 3) {
        return this._renderSuccess();
      } else if (this.state.mode === 4) {
        return this._renderError();
      }
    }
  }]);
  return Cash;
}(_react.Component);

Cash.navigationOptions = function (_ref) {
  var navigation = _ref.navigation;
  return {
    hideHeader: navigation.state.params.hideHeader
  };
};

Cash.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
  var userInfo = state.user.userInfo;
  var bankCardDetail = state.bankCardDetail;
  return { userInfo: userInfo, bankCardDetail: bankCardDetail };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var userActions = (0, _redux.bindActionCreators)(userCreator, dispatch);
  var bankCardDetailActions = (0, _redux.bindActionCreators)(bankCardDetailCreator, dispatch);
  return { userActions: userActions, bankCardDetailActions: bankCardDetailActions };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Cash);
}, 679, null, "YuanXC/src/pages/Cash.js");
__d(/* YuanXC/src/pages/Experience.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/Experience.js';

var _templateObject = babelHelpers.taggedTemplateLiteral([''], ['']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  background-color: ', ';\n  padding-top: ', ';\n  padding-bottom: 15;\n  padding-horizontal:15;\n'], ['\n  background-color: ', ';\n  padding-top: ', ';\n  padding-bottom: 15;\n  padding-horizontal:15;\n']),
    _templateObject3 = babelHelpers.taggedTemplateLiteral(['\n  margin-top:30;\n  margin-bottom:10;\n'], ['\n  margin-top:30;\n  margin-bottom:10;\n']),
    _templateObject4 = babelHelpers.taggedTemplateLiteral(['\n  flex-direction:row;\n  justify-content:space-around;\n  background-color:#9ECBFC;\n  padding-top:6;\n'], ['\n  flex-direction:row;\n  justify-content:space-around;\n  background-color:#9ECBFC;\n  padding-top:6;\n']),
    _templateObject5 = babelHelpers.taggedTemplateLiteral(['\n  width:', ';\n  alignSelf:flex-end;\n  margin-top:31;\n  border-left-width:8;\n  border-top-left-radius:5;\n  border-bottom-left-radius:5;\n  border-color:', ';\n  background-color:#ffffff;\n  flex-direction:row;\n  justify-content:space-between;\n  align-items:center;\n  padding-horizontal:15;\n'], ['\n  width:', ';\n  alignSelf:flex-end;\n  margin-top:31;\n  border-left-width:8;\n  border-top-left-radius:5;\n  border-bottom-left-radius:5;\n  border-color:', ';\n  background-color:#ffffff;\n  flex-direction:row;\n  justify-content:space-between;\n  align-items:center;\n  padding-horizontal:15;\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _imgs = require(436                ); // 436 = ../resources/imgs

var _imgs2 = babelHelpers.interopRequireDefault(_imgs);

var _color = require(587              ); // 587 = ../styles/color

var _color2 = babelHelpers.interopRequireDefault(_color);

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _Touchable = require(497                      ); // 497 = ../components/Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var _constants = require(434                  ); // 434 = ../config/constants

var View = _native2.default.View(_templateObject);
var HBgView = _native2.default.View(_templateObject2, _color2.default.background.userBlue, 12 + _constants.STATUS_HEIGHT);
var MoneyView = _UtilLib.CenterView.extend(_templateObject3);
var MiddleView = _native2.default.View(_templateObject4);
var RightView = (0, _native2.default)(_Touchable2.default)(_templateObject5, _constants.WINDOW_WIDTH * 0.86, _color2.default.border.blue);

var Experience = function (_Component) {
  babelHelpers.inherits(Experience, _Component);

  function Experience(props) {
    babelHelpers.classCallCheck(this, Experience);

    var _this = babelHelpers.possibleConstructorReturn(this, (Experience.__proto__ || Object.getPrototypeOf(Experience)).call(this, props));

    _this.state = {
      loading: false
    };
    return _this;
  }

  babelHelpers.createClass(Experience, [{
    key: 'componentDidMount',
    value: function componentDidMount() {}
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        _UtilLib.ScrollLayout,
        { color: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 59
          }
        },
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: this.state.loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 60
          }
        }),
        _react2.default.createElement(
          HBgView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 61
            }
          },
          _react2.default.createElement(
            _UtilLib.BetweenView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 62
              }
            },
            _react2.default.createElement(
              _Touchable2.default,
              { onPress: function onPress() {
                  return _this2.props.navigation.goBack();
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 63
                }
              },
              _imgs2.default.leftArrowWhite({ marginRight: 20 })
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { size: '16', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 66
                }
              },
              '\u6211\u7684\u4F53\u9A8C\u91D1'
            ),
            _react2.default.createElement(
              _Touchable2.default,
              { onPress: function onPress() {
                  return _this2.props.navigation.navigate("WebView", { url: 'http://www.baidu.com' });
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 67
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '14', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 68
                  }
                },
                '\u8BF4\u660E'
              )
            )
          ),
          _react2.default.createElement(
            MoneyView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 71
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { size: '14', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 72
                }
              },
              '\u5F53\u524D\u4F53\u9A8C\u91D1'
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { height: '70', size: '44', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 73
                }
              },
              '1,000.00'
            )
          )
        ),
        _react2.default.createElement(
          MiddleView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 76
            }
          },
          _react2.default.createElement(
            _UtilLib.CenterView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 77
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { height: '30', size: '11', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 78
                }
              },
              '\u7D2F\u8BA1\u6536\u76CA'
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { height: '24', size: '18', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 79
                }
              },
              '0.00'
            )
          ),
          _react2.default.createElement(
            _UtilLib.CenterView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 81
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { height: '30', size: '11', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 82
                }
              },
              '\u5386\u53F2\u5E74\u5316\u6536\u76CA\u7387'
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { height: '28', size: '18', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 83
                }
              },
              '6.60%'
            )
          )
        ),
        _react2.default.createElement(
          RightView,
          { onPress: function onPress() {
              return _this2.props.navigation.navigate("ExperienceDetail");
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 86
            }
          },
          _react2.default.createElement(
            View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 87
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { height: '30', size: '11', color: '#333333', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 88
                }
              },
              '\u7D2F\u8BA1\u83B7\u5F97\u4F53\u9A8C\u91D1'
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { height: '28', size: '16', color: '#333333', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 89
                }
              },
              '1,000.00'
            )
          ),
          _imgs2.default.rightArrowGary({ height: 15, width: 8 })
        )
      );
    }
  }]);
  return Experience;
}(_react.Component);

exports.default = Experience;


Experience.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};
}, 680, null, "YuanXC/src/pages/Experience.js");
__d(/* YuanXC/src/pages/ExperienceDetail.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/ExperienceDetail.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  width:', ';\n  height:40;\n  justify-content:center;\n  align-items:center;\n  background-color:#fff;\n  border-bottom-width:2;\n  margin-top:10;\n  border-color:', ';\n'], ['\n  width:', ';\n  height:40;\n  justify-content:center;\n  align-items:center;\n  background-color:#fff;\n  border-bottom-width:2;\n  margin-top:10;\n  border-color:', ';\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  padding-horizontal:20;\n  background-color:#fff;\n  border-bottom-width:', ';\n  border-bottom-color:#eeeeee;\n  padding-vertical:6;\n'], ['\n  padding-horizontal:20;\n  background-color:#fff;\n  border-bottom-width:', ';\n  border-bottom-color:#eeeeee;\n  padding-vertical:6;\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _Touchable = require(497                      ); // 497 = ../components/Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var _color = require(587              ); // 587 = ../styles/color

var _color2 = babelHelpers.interopRequireDefault(_color);

var _constants = require(434                  ); // 434 = ../config/constants

var FilterView = (0, _native2.default)(_Touchable2.default).attrs({
  color: function color(props) {
    return props.color || '#ffffff';
  }
})(_templateObject, _constants.WINDOW_WIDTH / 2, function (props) {
  return props.color;
});
var ItemView = _UtilLib.BetweenView.extend(_templateObject2, _constants.BORDER_WIDTH);

var ExperienceDetail = function (_Component) {
  babelHelpers.inherits(ExperienceDetail, _Component);

  function ExperienceDetail(props) {
    babelHelpers.classCallCheck(this, ExperienceDetail);

    var _this = babelHelpers.possibleConstructorReturn(this, (ExperienceDetail.__proto__ || Object.getPrototypeOf(ExperienceDetail)).call(this, props));

    _this.state = {
      loading: false,
      type: 1
    };
    return _this;
  }

  babelHelpers.createClass(ExperienceDetail, [{
    key: '_changeType',
    value: function _changeType(type) {
      this.state.type !== type && this.setState({ type: type }, function () {});
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {}
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _UtilLib.ScrollLayout,
        { color: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 63
          }
        },
        _react2.default.createElement(
          _UtilLib.BetweenView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 64
            }
          },
          _react2.default.createElement(
            FilterView,
            { color: this.state.type === 1 && _color2.default.font.blue, onPress: this._changeType.bind(this, 1), __source: {
                fileName: _jsxFileName,
                lineNumber: 65
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { size: '14', color: this.state.type === 1 ? _color2.default.font.blue : '#999999', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 66
                }
              },
              '\u751F\u6548\u4E2D'
            )
          ),
          _react2.default.createElement(
            FilterView,
            { color: this.state.type === 2 && _color2.default.font.blue, onPress: this._changeType.bind(this, 2), __source: {
                fileName: _jsxFileName,
                lineNumber: 68
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { size: '14', color: this.state.type === 2 ? _color2.default.font.blue : '#999999', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 69
                }
              },
              '\u5DF2\u8FC7\u671F'
            )
          )
        ),
        [1, 2].map(function (item, i) {
          return _react2.default.createElement(
            ItemView,
            { key: i, __source: {
                fileName: _jsxFileName,
                lineNumber: 75
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#333333', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 76
                }
              },
              '\u6CE8\u518C\u8D60\u9001\u4F53\u9A8C\u91D1'
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#999999', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 77
                }
              },
              '\u65F6\u95F4xxxxx-\u751F\u6548',
              '\n',
              '\u65F6\u95F4yYYYY\u8FC7\u671F'
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#333333', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 81
                }
              },
              '100.00'
            )
          );
        }),
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: this.state.loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 86
          }
        })
      );
    }
  }]);
  return ExperienceDetail;
}(_react.Component);

ExperienceDetail.navigationOptions = function (_ref) {
  var navigation = _ref.navigation,
      screenProps = _ref.screenProps;
  return {
    title: '体验金明细'
  };
};

exports.default = ExperienceDetail;


ExperienceDetail.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};
}, 681, null, "YuanXC/src/pages/ExperienceDetail.js");
__d(/* YuanXC/src/pages/Asset.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/Asset.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  margin-top:10;\n  padding-vertical:30;\n  background-color:#ffffff;\n'], ['\n  margin-top:10;\n  padding-vertical:30;\n  background-color:#ffffff;\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral([''], ['']),
    _templateObject3 = babelHelpers.taggedTemplateLiteral(['\n  position:absolute;\n  top:10;\n  left:0;\n  height:200;\n  width:167;\n  justify-content:center;\n'], ['\n  position:absolute;\n  top:10;\n  left:0;\n  height:200;\n  width:167;\n  justify-content:center;\n']),
    _templateObject4 = babelHelpers.taggedTemplateLiteral(['\n  background-color:#ffffff;\n  padding-left:16;\n  margin-top:13;\n'], ['\n  background-color:#ffffff;\n  padding-left:16;\n  margin-top:13;\n']),
    _templateObject5 = babelHelpers.taggedTemplateLiteral(['\n  border-bottom-width:', ';\n  border-bottom-color:#eeeeee;\n  padding-vertical:', ';\n  padding-right:15;\n  padding-left:', ';\n'], ['\n  border-bottom-width:', ';\n  border-bottom-color:#eeeeee;\n  padding-vertical:', ';\n  padding-right:15;\n  padding-left:', ';\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _userActions = require(630                     ); // 630 = ../actions/userActions

var userCreator = babelHelpers.interopRequireWildcard(_userActions);

var _color = require(587              ); // 587 = ../styles/color

var _color2 = babelHelpers.interopRequireDefault(_color);

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _constants = require(434                  ); // 434 = ../config/constants

var _Pie = require(683                ); // 683 = ../components/Pie

var _Pie2 = babelHelpers.interopRequireDefault(_Pie);

var _Float = require(628             ); // 628 = ../utils/Float

var _Float2 = babelHelpers.interopRequireDefault(_Float);

var Container = _UtilLib.CenterView.extend(_templateObject);
var ChartView = _native2.default.View(_templateObject2);
var MoneyView = _UtilLib.CenterView.extend(_templateObject3);
var BottomView = _native2.default.View(_templateObject4);
var ItemView = _UtilLib.BetweenView.extend.attrs({
  border: function border(props) {
    return props.border ? _constants.BORDER_WIDTH : 0;
  },
  pleft: function pleft(props) {
    return props.pleft || 0;
  }
})(_templateObject5, function (props) {
  return props.border;
}, function (props) {
  return props.pleft ? 5 : 10;
}, function (props) {
  return props.pleft;
});

var Asset = function (_Component) {
  babelHelpers.inherits(Asset, _Component);

  function Asset(props) {
    babelHelpers.classCallCheck(this, Asset);
    return babelHelpers.possibleConstructorReturn(this, (Asset.__proto__ || Object.getPrototypeOf(Asset)).call(this, props));
  }

  babelHelpers.createClass(Asset, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _props = this.props,
          userActions = _props.userActions,
          user = _props.user;

      userActions.userProfile(user.userInfo.mobile ? false : true);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props$user = this.props.user,
          loading = _props$user.loading,
          userInfo = _props$user.userInfo;

      var arr = void 0;
      if (userInfo.totleProperty > 0) {
        arr = [userInfo.freeze / userInfo.totleProperty * 100, userInfo.balance / userInfo.totleProperty * 100, (userInfo.receivableInvestMoney + userInfo.receivableInterestMoney) / userInfo.totleProperty * 100];
      }
      return _react2.default.createElement(
        _UtilLib.ScrollLayout,
        { color: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 79
          }
        },
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 80
          }
        }),
        arr ? _react2.default.createElement(
          Container,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 82
            }
          },
          _react2.default.createElement(
            ChartView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 83
              }
            },
            _react2.default.createElement(_Pie2.default, {
              radius: 84,
              series: arr,
              colors: ['#73ACFC', '#ff6262', '#ffb846'], __source: {
                fileName: _jsxFileName,
                lineNumber: 84
              }
            }),
            _react2.default.createElement(
              MoneyView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 88
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '16', height: '30', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 89
                  }
                },
                (0, _Float2.default)(userInfo.totleProperty)
              ),
              _react2.default.createElement(
                _UtilLib.StyledText,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 90
                  }
                },
                '\u603B\u8D44\u4EA7(\u5143)'
              )
            )
          )
        ) : null,
        _react2.default.createElement(
          BottomView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 95
            }
          },
          _react2.default.createElement(
            ItemView,
            { border: true, __source: {
                fileName: _jsxFileName,
                lineNumber: 96
              }
            },
            _react2.default.createElement(
              _UtilLib.RowView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 97
                }
              },
              _react2.default.createElement(_UtilLib.IconView, { text: '\uFFE5', color: '#ff6262', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 98
                }
              }),
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#333333', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 99
                  }
                },
                ' \u8D26\u6237\u4F59\u989D'
              )
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#333333', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 101
                }
              },
              (0, _Float2.default)(userInfo.balance)
            )
          ),
          _react2.default.createElement(
            ItemView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 103
              }
            },
            _react2.default.createElement(
              _UtilLib.RowView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 104
                }
              },
              _react2.default.createElement(_UtilLib.IconView, { text: '\u4EE3', color: '#ffb846', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 105
                }
              }),
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#333333', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 106
                  }
                },
                ' \u5F85\u6536\u603B\u989D'
              )
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#333333', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 108
                }
              },
              (0, _Float2.default)((userInfo.receivableInvestMoney || 0) + (userInfo.receivableInterestMoney || 0))
            )
          ),
          _react2.default.createElement(
            ItemView,
            { pleft: 35, __source: {
                fileName: _jsxFileName,
                lineNumber: 112
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#333333', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 113
                }
              },
              ' \u5F85\u6536\u672C\u91D1'
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#333333', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 114
                }
              },
              (0, _Float2.default)(userInfo.receivableInvestMoney)
            )
          ),
          _react2.default.createElement(
            ItemView,
            { pleft: 35, border: true, __source: {
                fileName: _jsxFileName,
                lineNumber: 116
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#333333', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 117
                }
              },
              ' \u5F85\u6536\u6536\u76CA'
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#333333', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 118
                }
              },
              (0, _Float2.default)(userInfo.receivableInterestMoney)
            )
          ),
          _react2.default.createElement(
            ItemView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 120
              }
            },
            _react2.default.createElement(
              _UtilLib.RowView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 121
                }
              },
              _react2.default.createElement(_UtilLib.IconView, { text: '\u51BB', color: '#73ACFC', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 122
                }
              }),
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#333333', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 123
                  }
                },
                ' \u51BB\u7ED3\u8D44\u91D1'
              )
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#333333', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 125
                }
              },
              (0, _Float2.default)(userInfo.freeze)
            )
          )
        )
      );
    }
  }]);
  return Asset;
}(_react.Component);

Asset.navigationOptions = function (_ref) {
  var navigation = _ref.navigation,
      screenProps = _ref.screenProps;
  return {
    title: '总资产'
  };
};

Asset.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
  var user = state.user;

  return { user: user };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var userActions = (0, _redux.bindActionCreators)(userCreator, dispatch);
  return { userActions: userActions };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Asset);
}, 682, null, "YuanXC/src/pages/Asset.js");
__d(/* YuanXC/src/components/Pie.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/components/Pie.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var Surface = _reactNative.ART.Surface,
    Shape = _reactNative.ART.Shape,
    Path = _reactNative.ART.Path,
    Group = _reactNative.ART.Group;


function createPath(cx, cy, r, startAngle, arcAngle) {
  var p = new Path();
  p.path.push(0, cx + r * Math.cos(startAngle), cy + r * Math.sin(startAngle));
  p.path.push(4, cx, cy, r, startAngle, startAngle + arcAngle, 1);
  return p;
}

var ArcShape = function ArcShape(_ref) {
  var radius = _ref.radius,
      width = _ref.width,
      color = _ref.color,
      startAngle = _ref.startAngle,
      arcAngle = _ref.arcAngle;

  var path = createPath(radius, radius, radius - width / 2, startAngle / 180 * Math.PI, arcAngle / 180 * Math.PI);
  return _react2.default.createElement(Shape, { d: path, stroke: color, strokeWidth: width, strokeCap: 'butt', __source: {
      fileName: _jsxFileName,
      lineNumber: 22
    }
  });
};

var RingShape = function RingShape(props) {
  return _reactNative.Platform.OS === 'ios' ? _react2.default.createElement(ArcShape, babelHelpers.extends({}, props, { startAngle: 0, arcAngle: 360, __source: {
      fileName: _jsxFileName,
      lineNumber: 27
    }
  })) : _react2.default.createElement(
    Group,
    {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 28
      }
    },
    _react2.default.createElement(ArcShape, babelHelpers.extends({}, props, { startAngle: 0, arcAngle: 180, __source: {
        fileName: _jsxFileName,
        lineNumber: 29
      }
    })),
    _react2.default.createElement(ArcShape, babelHelpers.extends({}, props, { startAngle: 180, arcAngle: 180, __source: {
        fileName: _jsxFileName,
        lineNumber: 30
      }
    }))
  );
};

var Pie = function Pie(_ref2) {
  var series = _ref2.series,
      colors = _ref2.colors,
      radius = _ref2.radius,
      innerRadius = _ref2.innerRadius,
      backgroundColor = _ref2.backgroundColor;

  var width = radius - innerRadius;
  var backgroundPath = createPath(radius, radius, radius - width / 2, 0, 360);
  var startValue = 0;
  return _react2.default.createElement(
    Surface,
    { width: radius * 2, height: radius * 2, __source: {
        fileName: _jsxFileName,
        lineNumber: 38
      }
    },
    _react2.default.createElement(
      Group,
      { rotation: -90, originX: radius, originY: radius, __source: {
          fileName: _jsxFileName,
          lineNumber: 39
        }
      },
      _react2.default.createElement(Shape, {
        d: backgroundPath,
        stroke: backgroundColor,
        strokeWidth: width,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 40
        }
      }),
      _react2.default.createElement(RingShape, { radius: radius, width: width, color: backgroundColor, __source: {
          fileName: _jsxFileName,
          lineNumber: 45
        }
      }),
      series.map(function (item, idx) {
        var startAngle = startValue / 100 * 360;
        var arcAngle = item / 100 * 360;
        startValue += item;
        var color = colors[idx];
        return arcAngle >= 360 ? _react2.default.createElement(RingShape, {
          key: idx,
          radius: radius,
          width: width,
          color: color,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 52
          }
        }) : _react2.default.createElement(ArcShape, {
          key: idx,
          radius: radius,
          width: width,
          color: color,
          startAngle: startAngle,
          arcAngle: arcAngle,
          strokeCap: 'butt',
          __source: {
            fileName: _jsxFileName,
            lineNumber: 58
          }
        });
      })
    )
  );
};

exports.default = Pie;


Pie.propTypes = {
  series: _propTypes2.default.arrayOf(_propTypes2.default.number).isRequired,
  colors: _propTypes2.default.arrayOf(_propTypes2.default.string).isRequired,
  radius: _propTypes2.default.number.isRequired,
  innerRadius: _propTypes2.default.number,
  backgroundColor: _propTypes2.default.string
};

Pie.defaultProps = {
  innerRadius: 0,
  backgroundColor: '#fff'
};
}, 683, null, "YuanXC/src/components/Pie.js");
__d(/* YuanXC/src/pages/Income.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/Income.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  margin-top:10;\n  padding-vertical:30;\n  background-color:#ffffff;\n'], ['\n  margin-top:10;\n  padding-vertical:30;\n  background-color:#ffffff;\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral([''], ['']),
    _templateObject3 = babelHelpers.taggedTemplateLiteral(['\n  position:absolute;\n  top:10;\n  left:0;\n  height:200;\n  width:167;\n  justify-content:center;\n'], ['\n  position:absolute;\n  top:10;\n  left:0;\n  height:200;\n  width:167;\n  justify-content:center;\n']),
    _templateObject4 = babelHelpers.taggedTemplateLiteral(['\n  background-color:#ffffff;\n  padding-left:16;\n  margin-top:13;\n'], ['\n  background-color:#ffffff;\n  padding-left:16;\n  margin-top:13;\n']),
    _templateObject5 = babelHelpers.taggedTemplateLiteral(['\n  border-bottom-width:', ';\n  border-bottom-color:#eeeeee;\n  padding-vertical:', ';\n  padding-right:15;\n  padding-left:', ';\n'], ['\n  border-bottom-width:', ';\n  border-bottom-color:#eeeeee;\n  padding-vertical:', ';\n  padding-right:15;\n  padding-left:', ';\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _userActions = require(630                     ); // 630 = ../actions/userActions

var userCreator = babelHelpers.interopRequireWildcard(_userActions);

var _color = require(587              ); // 587 = ../styles/color

var _color2 = babelHelpers.interopRequireDefault(_color);

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _constants = require(434                  ); // 434 = ../config/constants

var _Pie = require(683                ); // 683 = ../components/Pie

var _Pie2 = babelHelpers.interopRequireDefault(_Pie);

var _Float = require(628             ); // 628 = ../utils/Float

var _Float2 = babelHelpers.interopRequireDefault(_Float);

var Container = _UtilLib.CenterView.extend(_templateObject);
var ChartView = _native2.default.View(_templateObject2);
var MoneyView = _UtilLib.CenterView.extend(_templateObject3);
var BottomView = _native2.default.View(_templateObject4);
var ItemView = _UtilLib.BetweenView.extend.attrs({
  border: function border(props) {
    return props.border ? _constants.BORDER_WIDTH : 0;
  },
  pleft: function pleft(props) {
    return props.pleft || 0;
  }
})(_templateObject5, function (props) {
  return props.border;
}, function (props) {
  return props.pleft ? 5 : 10;
}, function (props) {
  return props.pleft;
});

var Income = function (_Component) {
  babelHelpers.inherits(Income, _Component);

  function Income(props) {
    babelHelpers.classCallCheck(this, Income);

    var _this = babelHelpers.possibleConstructorReturn(this, (Income.__proto__ || Object.getPrototypeOf(Income)).call(this, props));

    _this.state = {};
    return _this;
  }

  babelHelpers.createClass(Income, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _props = this.props,
          userActions = _props.userActions,
          user = _props.user;

      userActions.userProfile(user.userInfo.mobile ? false : true);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props$user = this.props.user,
          loading = _props$user.loading,
          userInfo = _props$user.userInfo;

      var arr = void 0;
      if (userInfo.total > 0) {
        arr = [userInfo.totleInterestMoney / userInfo.total * 100, userInfo.redPacketMoney / userInfo.total * 100, userInfo.inviteRewards / userInfo.total * 100, userInfo.platformRewards / userInfo.total * 100];
      }
      return _react2.default.createElement(
        _UtilLib.ScrollLayout,
        { color: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 82
          }
        },
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 83
          }
        }),
        arr ? _react2.default.createElement(
          Container,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 85
            }
          },
          _react2.default.createElement(
            ChartView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 86
              }
            },
            _react2.default.createElement(_Pie2.default, {
              radius: 84,
              series: arr,
              colors: ['#73ACFC', '#ff6262', '#ffb846', '#6ad1ff'], __source: {
                fileName: _jsxFileName,
                lineNumber: 87
              }
            }),
            _react2.default.createElement(
              MoneyView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 91
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '16', height: '30', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 92
                  }
                },
                userInfo.total || '0.00'
              ),
              _react2.default.createElement(
                _UtilLib.StyledText,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 93
                  }
                },
                '\u7D2F\u8BA1\u6536\u76CA(\u5143)'
              )
            )
          )
        ) : null,
        _react2.default.createElement(
          BottomView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 98
            }
          },
          _react2.default.createElement(
            ItemView,
            { border: true, __source: {
                fileName: _jsxFileName,
                lineNumber: 99
              }
            },
            _react2.default.createElement(
              _UtilLib.RowView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 100
                }
              },
              _react2.default.createElement(_UtilLib.IconView, { text: '\u7EA2', color: '#ff6262', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 101
                }
              }),
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#333333', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 102
                  }
                },
                ' \u7EA2\u5305\u6536\u76CA'
              )
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#333333', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 104
                }
              },
              (0, _Float2.default)(userInfo.redPacketMoney)
            )
          ),
          _react2.default.createElement(
            ItemView,
            { border: true, __source: {
                fileName: _jsxFileName,
                lineNumber: 106
              }
            },
            _react2.default.createElement(
              _UtilLib.RowView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 107
                }
              },
              _react2.default.createElement(_UtilLib.IconView, { text: '\u9080', color: '#ffb846', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 108
                }
              }),
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#333333', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 109
                  }
                },
                ' \u9080\u8BF7\u5956\u52B1'
              )
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#333333', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 111
                }
              },
              (0, _Float2.default)(userInfo.inviteRewards)
            )
          ),
          _react2.default.createElement(
            ItemView,
            { border: true, __source: {
                fileName: _jsxFileName,
                lineNumber: 113
              }
            },
            _react2.default.createElement(
              _UtilLib.RowView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 114
                }
              },
              _react2.default.createElement(_UtilLib.IconView, { text: '\u5956', color: '#6ad1ff', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 115
                }
              }),
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#333333', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 116
                  }
                },
                ' \u5E73\u53F0\u5956\u52B1'
              )
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#333333', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 118
                }
              },
              (0, _Float2.default)(userInfo.platformRewards)
            )
          ),
          _react2.default.createElement(
            ItemView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 120
              }
            },
            _react2.default.createElement(
              _UtilLib.RowView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 121
                }
              },
              _react2.default.createElement(_UtilLib.IconView, { text: '\u6295', color: '#73ACFC', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 122
                }
              }),
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#333333', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 123
                  }
                },
                ' \u6295\u8D44\u6536\u76CA'
              )
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#333333', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 125
                }
              },
              (0, _Float2.default)(userInfo.totleInterestMoney)
            )
          )
        )
      );
    }
  }]);
  return Income;
}(_react.Component);

Income.navigationOptions = function (_ref) {
  var navigation = _ref.navigation,
      screenProps = _ref.screenProps;
  return {
    title: '累计收益'
  };
};

Income.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
  var user = state.user;

  return { user: user };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var userActions = (0, _redux.bindActionCreators)(userCreator, dispatch);
  return { userActions: userActions };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Income);
}, 684, null, "YuanXC/src/pages/Income.js");
__d(/* YuanXC/src/pages/FinanceDetail.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/FinanceDetail.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  padding-vertical:15;\n  padding-horizontal:10;\n'], ['\n  padding-vertical:15;\n  padding-horizontal:10;\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  justify-content:center;\n  padding-top:20;\n  padding-bottom:10;\n  background-color:#fff;\n  border-radius:5;\n'], ['\n  justify-content:center;\n  padding-top:20;\n  padding-bottom:10;\n  background-color:#fff;\n  border-radius:5;\n']),
    _templateObject3 = babelHelpers.taggedTemplateLiteral(['\n  padding-vertical:25;\n  padding-horizontal:10;\n'], ['\n  padding-vertical:25;\n  padding-horizontal:10;\n']),
    _templateObject4 = babelHelpers.taggedTemplateLiteral(['\n'], ['\n']),
    _templateObject5 = babelHelpers.taggedTemplateLiteral(['\n  height:8;\n  background-color:#F0F0F0;\n  border-radius:4;\n  width:', ';\n'], ['\n  height:8;\n  background-color:#F0F0F0;\n  border-radius:4;\n  width:', ';\n']),
    _templateObject6 = babelHelpers.taggedTemplateLiteral(['\n  height:8;\n  background-color:#FBA558;\n  width:', ';\n  border-radius:4;\n'], ['\n  height:8;\n  background-color:#FBA558;\n  width:', ';\n  border-radius:4;\n']),
    _templateObject7 = babelHelpers.taggedTemplateLiteral(['\n  margin-top:10;\n  width:', ';\n  height:40;\n  justify-content:center;\n  align-items:center;\n  background-color:#fff;\n  border-top-width:1;\n  border-top-color:#F0F0F0;\n  border-bottom-width:1;\n  border-bottom-color:#F0F0F0;\n'], ['\n  margin-top:10;\n  width:', ';\n  height:40;\n  justify-content:center;\n  align-items:center;\n  background-color:#fff;\n  border-top-width:1;\n  border-top-color:#F0F0F0;\n  border-bottom-width:1;\n  border-bottom-color:#F0F0F0;\n']),
    _templateObject8 = babelHelpers.taggedTemplateLiteral(['\n  padding-horizontal:15;\n  padding-vertical:20;\n  background-color:#fff;\n  margin-bottom:15;\n'], ['\n  padding-horizontal:15;\n  padding-vertical:20;\n  background-color:#fff;\n  margin-bottom:15;\n']),
    _templateObject9 = babelHelpers.taggedTemplateLiteral(['\n  padding-left:15;\n  padding-vertical:20;\n  background-color:#fff;\n  margin-bottom:15;\n  flex-wrap:wrap;\n'], ['\n  padding-left:15;\n  padding-vertical:20;\n  background-color:#fff;\n  margin-bottom:15;\n  flex-wrap:wrap;\n']),
    _templateObject10 = babelHelpers.taggedTemplateLiteral(['\n  margin-top:15;\n'], ['\n  margin-top:15;\n']),
    _templateObject11 = babelHelpers.taggedTemplateLiteral(['\n  border-top-width:1;\n  border-top-color:#F0F0F0;\n  padding-top:16;\n  background-color:#fff;\n  margin-top:20;\n'], ['\n  border-top-width:1;\n  border-top-color:#F0F0F0;\n  padding-top:16;\n  background-color:#fff;\n  margin-top:20;\n']),
    _templateObject12 = babelHelpers.taggedTemplateLiteral(['\n  width:', ';\n  height:', ';\n  margin-bottom:15;\n  margin-right:15;\n'], ['\n  width:', ';\n  height:', ';\n  margin-bottom:15;\n  margin-right:15;\n']),
    _templateObject13 = babelHelpers.taggedTemplateLiteral(['\n  border-top-width:1;\n  border-bottom-width:1;\n  border-color:#F0F0F0;\n  background-color:#fff;\n  margin-bottom:15;\n'], ['\n  border-top-width:1;\n  border-bottom-width:1;\n  border-color:#F0F0F0;\n  background-color:#fff;\n  margin-bottom:15;\n']),
    _templateObject14 = babelHelpers.taggedTemplateLiteral(['\n  padding-vertical:10;\n  padding-horizontal:15;\n  border-bottom-width:1;\n  border-color:#F0F0F0;\n'], ['\n  padding-vertical:10;\n  padding-horizontal:15;\n  border-bottom-width:1;\n  border-color:#F0F0F0;\n']),
    _templateObject15 = babelHelpers.taggedTemplateLiteral(['\n  padding-vertical:10;\n  padding-horizontal:15;\n  background-color:#fff;\n'], ['\n  padding-vertical:10;\n  padding-horizontal:15;\n  background-color:#fff;\n']),
    _templateObject16 = babelHelpers.taggedTemplateLiteral(['\n  padding-vertical:10;\n  padding-horizontal:15;\n  background-color:#fff;\n  border-top-width:1;\n  border-color:#F0F0F0;\n  border-bottom-width:1;\n  margin-top:10;\n'], ['\n  padding-vertical:10;\n  padding-horizontal:15;\n  background-color:#fff;\n  border-top-width:1;\n  border-color:#F0F0F0;\n  border-bottom-width:1;\n  margin-top:10;\n']),
    _templateObject17 = babelHelpers.taggedTemplateLiteral(['\n  padding-left:4.5;\n'], ['\n  padding-left:4.5;\n']),
    _templateObject18 = babelHelpers.taggedTemplateLiteral(['\n  border-left-width:1;\n  border-color:', ';\n  padding-left:15;\n  justify-content:space-between;\n'], ['\n  border-left-width:1;\n  border-color:', ';\n  padding-left:15;\n  justify-content:space-between;\n']),
    _templateObject19 = babelHelpers.taggedTemplateLiteral(['\n  width:10;\n  height:10;\n  border-radius:5;\n  position:absolute;\n  top:', ';\n  left:0;\n  background-color:', ';\n'], ['\n  width:10;\n  height:10;\n  border-radius:5;\n  position:absolute;\n  top:', ';\n  left:0;\n  background-color:', ';\n']),
    _templateObject20 = babelHelpers.taggedTemplateLiteral(['\n  line-height:13;\n'], ['\n  line-height:13;\n']),
    _templateObject21 = babelHelpers.taggedTemplateLiteral(['\n  padding-horizontal:20;\n  padding-bottom:15;\n'], ['\n  padding-horizontal:20;\n  padding-bottom:15;\n']),
    _templateObject22 = babelHelpers.taggedTemplateLiteral(['\n  background-color:', ';\n  height:10;\n  width:10;\n  border-radius:5;\n  margin-horizontal:2;\n  margin-top:4;\n'], ['\n  background-color:', ';\n  height:10;\n  width:10;\n  border-radius:5;\n  margin-horizontal:2;\n  margin-top:4;\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _reactNativeImageZoomViewer = require(686                             ); // 686 = react-native-image-zoom-viewer

var _reactNativeImageZoomViewer2 = babelHelpers.interopRequireDefault(_reactNativeImageZoomViewer);

var _GuideMenu = require(641                      ); // 641 = ../components/GuideMenu

var _GuideMenu2 = babelHelpers.interopRequireDefault(_GuideMenu);

var _color = require(587              ); // 587 = ../styles/color

var _color2 = babelHelpers.interopRequireDefault(_color);

var _imgs = require(436                ); // 436 = ../resources/imgs

var _imgs2 = babelHelpers.interopRequireDefault(_imgs);

var _reactNative = require(12            ); // 12 = react-native

var _financeDetailActions = require(698                              ); // 698 = ../actions/financeDetailActions

var financeDetailCreator = babelHelpers.interopRequireWildcard(_financeDetailActions);

var _userActions = require(630                     ); // 630 = ../actions/userActions

var userCreator = babelHelpers.interopRequireWildcard(_userActions);

var _http = require(622               ); // 622 = ../requests/http

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _Touchable = require(497                      ); // 497 = ../components/Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var _reactNativeModalbox = require(699                    ); // 699 = react-native-modalbox

var _reactNativeModalbox2 = babelHelpers.interopRequireDefault(_reactNativeModalbox);

var _constants = require(434                  ); // 434 = ../config/constants

var _Float = require(628             ); // 628 = ../utils/Float

var _Float2 = babelHelpers.interopRequireDefault(_Float);

var _Check = require(632             ); // 632 = ../utils/Check

var _Check2 = babelHelpers.interopRequireDefault(_Check);

var _TextInputCustomized = require(638                                ); // 638 = ../components/TextInputCustomized

var _TextInputCustomized2 = babelHelpers.interopRequireDefault(_TextInputCustomized);

var _HTML = require(700             ); // 700 = ../utils/HTML2

var _HTML2 = babelHelpers.interopRequireDefault(_HTML);

var progressWidth = _constants.WINDOW_WIDTH / 2 - 40;
var itemWidth = (_constants.WINDOW_WIDTH - 45) / 2;
var HBgView = _native2.default.View(_templateObject);
var DetailView = _UtilLib.CenterView.extend(_templateObject2);
var CellView = _UtilLib.NormalView.extend(_templateObject3);
var SubmitButton = (0, _native2.default)(_UtilLib.StyledButtom).attrs({
  radius: '0',
  width: _constants.WINDOW_WIDTH,
  height: 49,
  top: '0'
})(_templateObject4);
var ProgressBg = _native2.default.View(_templateObject5, progressWidth);
var ProgressView = _native2.default.View.attrs({
  progress: function progress(props) {
    return props.progress || 0;
  }
})(_templateObject6, function (props) {
  return props.progress * progressWidth;
});
var FilterView = (0, _native2.default)(_Touchable2.default).attrs({})(_templateObject7, _constants.WINDOW_WIDTH / 3);
var Content = _native2.default.View(_templateObject8);
var Content3 = _UtilLib.RowView.extend(_templateObject9);
var ItemView = _UtilLib.BetweenView.extend(_templateObject10);
var BottomView = _native2.default.View(_templateObject11);
var ItemImg = _native2.default.Image(_templateObject12, itemWidth, itemWidth * 1.35);
var Content2 = _native2.default.View(_templateObject13);
var JLItem = _UtilLib.BetweenView.extend(_templateObject14);
var SubTitle = _UtilLib.BetweenView.extend(_templateObject15);
var SubTitle2 = _UtilLib.BetweenView.extend(_templateObject16);
var Bar = _native2.default.View(_templateObject17);
var BarView = _native2.default.View(_templateObject18, function (props) {
  return props.color || "#999999";
});
var Cicle = _native2.default.View(_templateObject19, function (props) {
  return (props.idx - 1) * 34.2;
}, function (props) {
  return props.color || "#999999";
});
var BarText = _UtilLib.StyledText.extend.attrs({
  color: function color(props) {
    return props.color || "#999999";
  }
})(_templateObject20);
var StatusView = _UtilLib.BetweenView.extend(_templateObject21);
var StatusCirle = _native2.default.View(_templateObject22, function (props) {
  return props.complete ? '#FBA558' : "#D8D8D8";
});

var FinanceDetail = function (_Component) {
  babelHelpers.inherits(FinanceDetail, _Component);

  function FinanceDetail(props) {
    babelHelpers.classCallCheck(this, FinanceDetail);

    var _this = babelHelpers.possibleConstructorReturn(this, (FinanceDetail.__proto__ || Object.getPrototypeOf(FinanceDetail)).call(this, props));

    _this.state = {
      income: 0,
      webHeight: 10,
      type: 1
    };
    var patchPostMessageFunction = function patchPostMessageFunction() {
      var originalPostMessage = window.postMessage;

      var patchedPostMessage = function patchedPostMessage(message, targetOrigin, transfer) {
        originalPostMessage(message, targetOrigin, transfer);
      };

      patchedPostMessage.toString = function () {
        return String(Object.hasOwnProperty).replace('hasOwnProperty', 'postMessage');
      };
      setTimeout(function () {
        window.postMessage(document.body.scrollHeight);
      }, 500);

      window.postMessage = patchedPostMessage;
    };
    _this.patchPostMessageJsCode = '(' + String(patchPostMessageFunction) + ')();';
    return _this;
  }

  babelHelpers.createClass(FinanceDetail, [{
    key: '_navigateCheck',
    value: function _navigateCheck(level, route, params) {
      var routers = (0, _Check2.default)(this.props.check, level, route, params);
      if (routers[0]) {
        this.props.navigation.navigate(routers[0], routers[1]);
      }
    }
  }, {
    key: '_onRefresh',
    value: function _onRefresh() {
      if (!this.props.financeDetail.isRefreshing) {
        var _props = this.props,
            financeDetailActions = _props.financeDetailActions,
            navigation = _props.navigation,
            userActions = _props.userActions;

        global.token && userActions.userProfile(false);
        navigation.state.params && navigation.state.params.id && financeDetailActions.getData(false, true, navigation.state.params.id);
      }
    }
  }, {
    key: '_changeType',
    value: function _changeType(type) {
      this.state.type !== type && this.setState({ type: type }, function () {});
    }
  }, {
    key: '_changeHeight',
    value: function _changeHeight(data) {
      if (data && data.data > 0) {
        var height = parseInt(data.data);
        if (this.state.webHeight != height) {
          this.setState({ webHeight: height });
        }
      }
    }
  }, {
    key: '_renderDetail',
    value: function _renderDetail() {
      var _this2 = this;

      var detail = this.props.financeDetail.detail || {};
      var isRefreshing = this.props.financeDetail.isRefreshing;
      var progress = detail && detail.investedMoney / detail.financeMoney || 0;
      var residueMoney = detail.financeMoney && detail.financeMoney - detail.investedMoney || 0;
      var investedProgress = void 0;
      if (progress < 0.9) {
        investedProgress = Math.ceil(progress * 100);
      } else {
        investedProgress = Math.floor(progress * 100);
      }
      return _react2.default.createElement(
        _UtilLib.ScrollLayout,
        { color: 'transparent',
          refreshControl: _react2.default.createElement(_reactNative.RefreshControl, {
            refreshing: isRefreshing,
            onRefresh: function onRefresh() {
              return _this2._onRefresh();
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 261
            }
          }), __source: {
            fileName: _jsxFileName,
            lineNumber: 259
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 266
            }
          },
          _react2.default.createElement(
            HBgView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 267
              }
            },
            _react2.default.createElement(
              _UtilLib.CenterView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 268
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '16', color: '#4A4A4A', bottom: '20', top: '5', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 269
                  }
                },
                detail.title
              )
            ),
            _react2.default.createElement(
              DetailView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 271
                }
              },
              _react2.default.createElement(
                _UtilLib.BetweenView,
                { style: { width: _constants.WINDOW_WIDTH - 40, alignItems: 'flex-end' }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 272
                  }
                },
                _react2.default.createElement(
                  _UtilLib.NormalView,
                  { style: { marginLeft: 20 }, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 273
                    }
                  },
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { size: '30', color: '#FBA558', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 274
                      }
                    },
                    ((detail.rate - detail.rateExt) * 100).toFixed(1),
                    '%'
                  ),
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { size: '12', color: '#333333', top: '4', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 277
                      }
                    },
                    '\u9884\u671F\u5E74\u5316\u7387'
                  )
                ),
                _react2.default.createElement(
                  _UtilLib.CenterView,
                  {
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 279
                    }
                  },
                  _react2.default.createElement(
                    ProgressBg,
                    {
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 280
                      }
                    },
                    _react2.default.createElement(ProgressView, { progress: progress, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 281
                      }
                    })
                  ),
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { color: '#999999', top: '10', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 283
                      }
                    },
                    '\u6295\u8D44\u8FDB\u5EA6',
                    investedProgress + "%"
                  )
                )
              ),
              _react2.default.createElement(
                _UtilLib.RowView,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 286
                  }
                },
                _react2.default.createElement(
                  CellView,
                  {
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 287
                    }
                  },
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { size: '15', color: '#333333', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 288
                      }
                    },
                    (0, _Float2.default)(detail.financeMoney && detail.financeMoney)
                  ),
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { color: '#999999', top: '7', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 291
                      }
                    },
                    '\u9879\u76EE\u603B\u989D(\u5143)'
                  )
                ),
                _react2.default.createElement(
                  CellView,
                  { style: { flex: 1, alignItems: "center" }, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 293
                    }
                  },
                  _react2.default.createElement(
                    _UtilLib.NormalView,
                    {
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 294
                      }
                    },
                    _react2.default.createElement(
                      _UtilLib.StyledText,
                      { size: '15', color: '#333333', __source: {
                          fileName: _jsxFileName,
                          lineNumber: 295
                        }
                      },
                      detail.isEnd ? "募集结束" : residueMoney > 100 ? (0, _Float2.default)(residueMoney / 10000) + '\u4E07' : (0, _Float2.default)(residueMoney) + '\u5143'
                    ),
                    _react2.default.createElement(
                      _UtilLib.StyledText,
                      { color: '#999999', top: '7', __source: {
                          fileName: _jsxFileName,
                          lineNumber: 298
                        }
                      },
                      '\u5269\u4F59\u53EF\u6295(\u5143)'
                    )
                  )
                ),
                _react2.default.createElement(
                  CellView,
                  {
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 301
                    }
                  },
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { size: '15', color: '#333333', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 302
                      }
                    },
                    detail.deadLine
                  ),
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { color: '#999999', top: '7', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 303
                      }
                    },
                    '\u9879\u76EE\u671F\u9650(\u5929)'
                  )
                )
              ),
              _react2.default.createElement(
                _UtilLib.BetweenView,
                { style: { width: _constants.WINDOW_WIDTH - 40 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 306
                  }
                },
                _react2.default.createElement(
                  _UtilLib.StyledText,
                  { color: '#999999', size: '10', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 307
                    }
                  },
                  '\u8D77\u6295\u91D1\u989D:\uFFE5',
                  detail.minInvestMoney
                ),
                _react2.default.createElement(
                  _UtilLib.StyledText,
                  { color: '#999999', size: '10', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 308
                    }
                  },
                  '\u8D77\u606F\u65B9\u5F0F:',
                  detail.beginInterestType
                ),
                _react2.default.createElement(
                  _UtilLib.StyledText,
                  { color: '#999999', size: '10', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 309
                    }
                  },
                  '\u8FD8\u6B3E\u65B9\u5F0F:',
                  detail.repaymentType
                )
              )
            )
          ),
          _react2.default.createElement(
            StatusView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 313
              }
            },
            _react2.default.createElement(
              _UtilLib.RowView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 314
                }
              },
              _react2.default.createElement(StatusCirle, { complete: true, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 315
                }
              }),
              _react2.default.createElement(
                _UtilLib.NormalView,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 316
                  }
                },
                _react2.default.createElement(
                  _UtilLib.StyledText,
                  { color: '#333333', size: '14', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 317
                    }
                  },
                  '\u52DF\u96C6\u5F00\u59CB'
                ),
                _react2.default.createElement(
                  _UtilLib.StyledText,
                  { color: '#999999', size: '11', top: '4', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 318
                    }
                  },
                  detail.beginAtStr
                )
              )
            ),
            _react2.default.createElement(
              _UtilLib.RowView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 321
                }
              },
              _react2.default.createElement(StatusCirle, { complete: detail.showStatus > 1, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 322
                }
              }),
              _react2.default.createElement(
                _UtilLib.NormalView,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 323
                  }
                },
                _react2.default.createElement(
                  _UtilLib.StyledText,
                  { color: '#333333', size: '14', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 324
                    }
                  },
                  '\u5F00\u59CB\u8BA1\u606F'
                ),
                _react2.default.createElement(
                  _UtilLib.StyledText,
                  { color: '#999999', size: '11', top: '4', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 325
                    }
                  },
                  detail.beginInterestAtStr
                )
              )
            ),
            _react2.default.createElement(
              _UtilLib.RowView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 328
                }
              },
              _react2.default.createElement(StatusCirle, { complete: detail.showStatus > 2, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 329
                }
              }),
              _react2.default.createElement(
                _UtilLib.NormalView,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 330
                  }
                },
                _react2.default.createElement(
                  _UtilLib.StyledText,
                  { color: '#333333', size: '14', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 331
                    }
                  },
                  '\u5230\u671F\u56DE\u6B3E'
                ),
                _react2.default.createElement(
                  _UtilLib.StyledText,
                  { color: '#999999', size: '11', top: '4', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 332
                    }
                  },
                  detail.endAtStr
                )
              )
            )
          ),
          _react2.default.createElement(
            _UtilLib.BetweenView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 336
              }
            },
            _react2.default.createElement(
              FilterView,
              { color: this.state.type === 1 && _color2.default.font.blue, onPress: this._changeType.bind(this, 1), __source: {
                  fileName: _jsxFileName,
                  lineNumber: 337
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '15', color: this.state.type === 1 ? _color2.default.font.blue : '#333333', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 338
                  }
                },
                '\u9879\u76EE\u4FE1\u606F'
              )
            ),
            _react2.default.createElement(
              FilterView,
              { color: this.state.type === 2 && _color2.default.font.blue, onPress: this._changeType.bind(this, 2), __source: {
                  fileName: _jsxFileName,
                  lineNumber: 340
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '15', color: this.state.type === 2 ? _color2.default.font.blue : '#333333', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 341
                  }
                },
                '\u5B89\u5168\u4FDD\u969C'
              )
            ),
            _react2.default.createElement(
              FilterView,
              { color: this.state.type === 3 && _color2.default.font.blue, onPress: this._changeType.bind(this, 3), __source: {
                  fileName: _jsxFileName,
                  lineNumber: 343
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '15', color: this.state.type === 3 ? _color2.default.font.blue : '#333333', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 344
                  }
                },
                '\u8D2D\u4E70\u8BB0\u5F55'
              )
            )
          ),
          this._renderMore(this.state.type)
        )
      );
    }
  }, {
    key: '_renderMore',
    value: function _renderMore(i) {
      var _this3 = this;

      var detail = this.props.financeDetail.detail;

      if (!detail) {
        return null;
      }
      switch (i) {
        case 1:
          return _react2.default.createElement(
            Content,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 361
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#333333', size: '15', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 362
                }
              },
              '\u501F\u6B3E\u4EBA\u4FE1\u606F'
            ),
            _react2.default.createElement(
              ItemView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 363
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#9B9B9B', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 364
                  }
                },
                '\u501F\u6B3E\u4EBA\u59D3\u540D'
              ),
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#404040', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 365
                  }
                },
                detail.borrowerName
              )
            ),
            _react2.default.createElement(
              ItemView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 367
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#9B9B9B', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 368
                  }
                },
                '\u501F\u6B3E\u4EBA\u8EAB\u4EFD\u8BC1\u53F7'
              ),
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#404040', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 369
                  }
                },
                detail.borrowerIdCardNo
              )
            ),
            _react2.default.createElement(
              ItemView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 371
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#9B9B9B', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 372
                  }
                },
                '\u501F\u6B3E\u4EBA\u6027\u522B'
              ),
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#404040', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 373
                  }
                },
                detail.borrowerGender
              )
            ),
            _react2.default.createElement(
              ItemView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 375
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#9B9B9B', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 376
                  }
                },
                '\u501F\u6B3E\u4EBA\u4F4F\u6240\u5730'
              ),
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#404040', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 377
                  }
                },
                detail.borrowerLocation
              )
            ),
            _react2.default.createElement(
              ItemView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 379
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#9B9B9B', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 380
                  }
                },
                '\u501F\u6B3E\u4EBA\u5E74\u9F84'
              ),
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#404040', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 381
                  }
                },
                detail.borrowerAge
              )
            ),
            _react2.default.createElement(
              ItemView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 383
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#9B9B9B', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 384
                  }
                },
                '\u501F\u6B3E\u7528\u9014'
              ),
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#404040', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 385
                  }
                },
                detail.borrowerPurposeDesc
              )
            ),
            _react2.default.createElement(
              BottomView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 387
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#333333', size: '15', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 388
                  }
                },
                '\u501F\u6B3E\u63CF\u8FF0'
              ),
              _react2.default.createElement(
                _UtilLib.NormalView,
                { style: { height: this.state.webHeight }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 389
                  }
                },
                _react2.default.createElement(_reactNative.WebView, {
                  style: { flex: 1 },
                  bounces: false,
                  onMessage: function onMessage(event) {
                    return _this3._changeHeight(event.nativeEvent);
                  },
                  injectedJavaScript: this.patchPostMessageJsCode,
                  source: { html: detail.contentStr ? (0, _HTML2.default)(detail.contentStr) : '' },
                  domStorageEnabled: true,
                  javaScriptEnabled: true,
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 390
                  }
                })
              )
            )
          );
        case 2:
          return _react2.default.createElement(
            Content3,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 405
              }
            },
            detail && detail.financePicList && detail.financePicList.map(function (item, i) {
              return _react2.default.createElement(
                _Touchable2.default,
                { key: i, onPress: function onPress() {
                    return _this3.modal.open();
                  }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 408
                  }
                },
                _react2.default.createElement(ItemImg, { source: { uri: item.picPath }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 409
                  }
                })
              );
            })
          );
        case 3:
          return _react2.default.createElement(
            _UtilLib.NormalView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 417
              }
            },
            _react2.default.createElement(
              SubTitle,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 418
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#999999', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 419
                  }
                },
                '\u6295\u8D44\u4EBA'
              ),
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#999999', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 420
                  }
                },
                '\u6295\u8D44\u91D1\u989D(\u5143)'
              )
            ),
            _react2.default.createElement(
              Content2,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 422
                }
              },
              detail.investList && detail.investList.map(function (item, i) {
                return _react2.default.createElement(
                  JLItem,
                  { key: i, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 425
                    }
                  },
                  _react2.default.createElement(
                    _UtilLib.NormalView,
                    {
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 426
                      }
                    },
                    _react2.default.createElement(
                      _UtilLib.StyledText,
                      { color: '#333333', __source: {
                          fileName: _jsxFileName,
                          lineNumber: 427
                        }
                      },
                      item.investerName
                    ),
                    _react2.default.createElement(
                      _UtilLib.StyledText,
                      { color: '#999999', top: '4', __source: {
                          fileName: _jsxFileName,
                          lineNumber: 428
                        }
                      },
                      item.investAt
                    )
                  ),
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { color: '#EE5C2B', size: '17', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 430
                      }
                    },
                    item.investMoney
                  )
                );
              })
            )
          );
        case 4:
          var status = detail.showStatus + 1;
          return _react2.default.createElement(
            Content,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 440
              }
            },
            _react2.default.createElement(
              Bar,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 441
                }
              },
              _react2.default.createElement(
                BarView,
                { color: status > 1 && "#2574CA", __source: {
                    fileName: _jsxFileName,
                    lineNumber: 442
                  }
                },
                _react2.default.createElement(
                  BarText,
                  { color: '#2574CA', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 443
                    }
                  },
                  detail.beginAtStr
                ),
                _react2.default.createElement(
                  BarText,
                  { color: status > 1 && "#2574CA", top: '20', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 444
                    }
                  },
                  detail.beginInterestAtStr
                )
              ),
              _react2.default.createElement(
                BarView,
                { color: status > 2 && "#2574CA", __source: {
                    fileName: _jsxFileName,
                    lineNumber: 446
                  }
                },
                _react2.default.createElement(
                  BarText,
                  { color: status > 2 && "#2574CA", top: '20', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 447
                    }
                  },
                  detail.descStr
                ),
                _react2.default.createElement(
                  BarText,
                  { color: status > 2 && "#2574CA", top: '20', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 448
                    }
                  },
                  detail.endAtStr
                )
              ),
              _react2.default.createElement(Cicle, { idx: '1', color: '#2574CA', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 450
                }
              }),
              _react2.default.createElement(Cicle, { idx: '2', color: status > 1 && "#2574CA", __source: {
                  fileName: _jsxFileName,
                  lineNumber: 451
                }
              }),
              _react2.default.createElement(Cicle, { idx: '4', color: status > 2 && "#2574CA", __source: {
                  fileName: _jsxFileName,
                  lineNumber: 452
                }
              })
            )
          );
      }
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _props2 = this.props,
          financeDetailActions = _props2.financeDetailActions,
          navigation = _props2.navigation,
          userActions = _props2.userActions;

      global.token && userActions.userProfile(false);
      navigation.state.params && navigation.state.params.id && financeDetailActions.getData(true, false, navigation.state.params.id);
      !navigation.state.params && financeDetailActions.getData(true, false, 73);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this4 = this;

      var _props$financeDetail = this.props.financeDetail,
          loading = _props$financeDetail.loading,
          detail = _props$financeDetail.detail;

      var btn = void 0;
      if (detail) {
        if (detail.isEnd) {
          btn = "已售罄";
        } else if (detail.isForeshow) {
          btn = "暂未开标";
        } else {
          btn = "立即投资";
        }
      }
      var canTouch = detail && !detail.isEnd && !detail.isForeshow ? true : false;
      return _react2.default.createElement(
        _UtilLib.FlexView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 480
          }
        },
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 481
          }
        }),
        this._renderDetail(),
        detail && _react2.default.createElement(
          SubmitButton,
          { color: !canTouch ? "#B6B6B6" : "#FBA558", feedback: canTouch,
            onPress: function onPress() {
              return canTouch && _this4._navigateCheck(2, "FinanceBuy");
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 484
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { size: '19', __source: {
                fileName: _jsxFileName,
                lineNumber: 486
              }
            },
            btn
          )
        ),
        detail && detail.financePicList && detail.financePicList.length > 0 && _react2.default.createElement(
          _reactNativeModalbox2.default,
          { ref: function ref(_ref) {
              return _this4.modal = _ref;
            }, backButtonClose: true, __source: {
              fileName: _jsxFileName,
              lineNumber: 489
            }
          },
          _react2.default.createElement(_reactNativeImageZoomViewer2.default, { saveToLocalByLongPress: false, imageUrls: detail.financePicList || [], __source: {
              fileName: _jsxFileName,
              lineNumber: 490
            }
          }),
          _react2.default.createElement(
            _Touchable2.default,
            { style: { position: 'absolute', top: 32, right: 15, padding: 10 },
              onPress: function onPress(e) {
                return _this4.modal.close();
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 491
              }
            },
            _imgs2.default.guan()
          )
        )
      );
    }
  }]);
  return FinanceDetail;
}(_react.Component);

FinanceDetail.navigationOptions = function (_ref2) {
  var navigation = _ref2.navigation,
      screenProps = _ref2.screenProps;
  return {
    title: "详情"
  };
};

FinanceDetail.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
  var financeDetail = state.financeDetail;

  var check = state.user.check;
  var userInfo = state.user.userInfo;
  return { financeDetail: financeDetail, check: check, userInfo: userInfo };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var userActions = (0, _redux.bindActionCreators)(userCreator, dispatch);
  var financeDetailActions = (0, _redux.bindActionCreators)(financeDetailCreator, dispatch);
  return { financeDetailActions: financeDetailActions, userActions: userActions };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(FinanceDetail);
}, 685, null, "YuanXC/src/pages/FinanceDetail.js");
__d(/* react-native-image-zoom-viewer/built/index.js */function(global, require, module, exports) {"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var image_viewer_component_1 = require(687                           ); // 687 = ./src/image-viewer.component
exports.ImageViewer = image_viewer_component_1.default;
exports.default = image_viewer_component_1.default;
}, 686, null, "react-native-image-zoom-viewer/built/index.js");
__d(/* react-native-image-zoom-viewer/built/src/image-viewer.component.js */function(global, require, module, exports) {"use strict";

var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
    var c = arguments.length,
        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
        d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    }return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require(35     ); // 35 = react
var react_native_1 = require(12            ); // 12 = react-native
var typings = require(688                  ); // 688 = ./image-viewer.type
var nt_transmit_transparently_1 = require(690                        ); // 690 = nt-transmit-transparently
var react_native_image_pan_zoom_1 = require(694                          ); // 694 = react-native-image-pan-zoom
var image_viewer_style_1 = require(689                   ); // 689 = ./image-viewer.style
var ImageViewer = function (_React$Component) {
    babelHelpers.inherits(ImageViewer, _React$Component);

    function ImageViewer() {
        babelHelpers.classCallCheck(this, ImageViewer);

        var _this = babelHelpers.possibleConstructorReturn(this, (ImageViewer.__proto__ || Object.getPrototypeOf(ImageViewer)).apply(this, arguments));

        _this.state = new typings.State();
        _this.fadeAnim = new react_native_1.Animated.Value(0);
        _this.standardPositionX = 0;
        _this.positionXNumber = 0;
        _this.positionX = new react_native_1.Animated.Value(0);
        _this.width = 0;
        _this.height = 0;
        _this.styles = image_viewer_style_1.default(0, 0);
        _this.hasLayout = false;
        _this.loadedIndex = new Map();
        return _this;
    }

    babelHelpers.createClass(ImageViewer, [{
        key: "componentWillMount",
        value: function componentWillMount() {
            this.init(this.props);
        }
    }, {
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {
            var _this2 = this;

            if (nextProps.index !== this.state.currentShowIndex) {
                this.setState({
                    currentShowIndex: nextProps.index
                }, function () {
                    _this2.loadImage(nextProps.index);
                    _this2.jumpToCurrentImage();
                    react_native_1.Animated.timing(_this2.fadeAnim, {
                        toValue: 1,
                        duration: 200
                    }).start();
                });
            }
        }
    }, {
        key: "init",
        value: function init(nextProps) {
            var _this3 = this;

            if (nextProps.imageUrls.length === 0) {
                this.fadeAnim.setValue(0);
                return this.setState(new typings.State());
            }
            var imageSizes = [];
            nextProps.imageUrls.forEach(function (imageUrl) {
                imageSizes.push({
                    width: imageUrl.width || 0,
                    height: imageUrl.height || 0,
                    status: 'loading'
                });
            });
            this.setState({
                currentShowIndex: nextProps.index,
                imageSizes: imageSizes
            }, function () {
                _this3.loadImage(nextProps.index);
                _this3.jumpToCurrentImage();
                react_native_1.Animated.timing(_this3.fadeAnim, {
                    toValue: 1,
                    duration: 200
                }).start();
            });
        }
    }, {
        key: "jumpToCurrentImage",
        value: function jumpToCurrentImage() {
            this.positionXNumber = -this.width * this.state.currentShowIndex;
            this.standardPositionX = this.positionXNumber;
            this.positionX.setValue(this.positionXNumber);
        }
    }, {
        key: "loadImage",
        value: function loadImage(index) {
            var _this4 = this;

            if (this.loadedIndex.has(index)) {
                return;
            }
            this.loadedIndex.set(index, true);
            var image = this.props.imageUrls[index];
            var imageStatus = babelHelpers.extends({}, this.state.imageSizes[index]);
            var saveImageSize = function saveImageSize() {
                if (_this4.state.imageSizes[index] && _this4.state.imageSizes[index].status !== 'loading') {
                    return;
                }
                var imageSizes = _this4.state.imageSizes.slice();
                imageSizes[index] = imageStatus;
                _this4.setState({
                    imageSizes: imageSizes
                });
            };
            if (this.state.imageSizes[index].status === 'success') {
                return;
            }
            if (this.state.imageSizes[index].width > 0 && this.state.imageSizes[index].height > 0) {
                imageStatus.status = 'success';
                saveImageSize();
                return;
            }
            var sizeLoaded = false;
            var imageLoaded = false;
            if (image.url.startsWith("file:")) {
                imageLoaded = true;
            }
            if (react_native_1.Platform.OS !== 'web') {
                var prefetchImagePromise = react_native_1.Image.prefetch(image.url);
                if (image.url.match(/^(http|https):\/\//)) {
                    prefetchImagePromise.then(function () {
                        imageLoaded = true;
                        if (sizeLoaded) {
                            imageStatus.status = 'success';
                            saveImageSize();
                        }
                    }, function () {
                        imageStatus.status = 'fail';
                        saveImageSize();
                    });
                } else {
                    imageLoaded = true;
                    prefetchImagePromise.then(function () {}).catch(function () {});
                    if (sizeLoaded) {
                        imageStatus.status = 'success';
                        saveImageSize();
                    }
                }
                if (image.width && image.height) {
                    sizeLoaded = true;
                    imageStatus.width = image.width;
                    imageStatus.height = image.height;
                    if (imageLoaded) {
                        imageStatus.status = 'success';
                        saveImageSize();
                    }
                } else {
                    react_native_1.Image.getSize(image.url, function (width, height) {
                        sizeLoaded = true;
                        imageStatus.width = width;
                        imageStatus.height = height;
                        if (imageLoaded) {
                            imageStatus.status = 'success';
                            saveImageSize();
                        }
                    }, function (_error) {
                        imageStatus.status = 'fail';
                        saveImageSize();
                    });
                }
            } else {
                var imageFetch = new window.Image();
                imageFetch.src = image.url;
                imageFetch.onload = function () {
                    imageStatus.width = imageFetch.width;
                    imageStatus.height = imageFetch.height;
                    imageStatus.status = 'success';
                    saveImageSize();
                };
                imageFetch.onerror = function () {
                    imageStatus.status = 'fail';
                    saveImageSize();
                };
            }
        }
    }, {
        key: "handleHorizontalOuterRangeOffset",
        value: function handleHorizontalOuterRangeOffset(offsetX) {
            this.positionXNumber = this.standardPositionX + offsetX;
            this.positionX.setValue(this.positionXNumber);
            if (offsetX < 0) {
                if (this.state.currentShowIndex < this.props.imageUrls.length - 1) {
                    this.loadImage(this.state.currentShowIndex + 1);
                }
            } else if (offsetX > 0) {
                if (this.state.currentShowIndex > 0) {
                    this.loadImage(this.state.currentShowIndex - 1);
                }
            }
        }
    }, {
        key: "handleResponderRelease",
        value: function handleResponderRelease(vx) {
            if (vx > 0.7) {
                this.goBack.call(this);
                if (this.state.currentShowIndex > 0) {
                    this.loadImage(this.state.currentShowIndex - 1);
                }
            } else if (vx < -0.7) {
                this.goNext.call(this);
                if (this.state.currentShowIndex < this.props.imageUrls.length - 1) {
                    this.loadImage(this.state.currentShowIndex + 1);
                }
            }
            if (this.positionXNumber - this.standardPositionX > this.props.flipThreshold) {
                this.goBack.call(this);
            } else if (this.positionXNumber - this.standardPositionX < -this.props.flipThreshold) {
                this.goNext.call(this);
            } else {
                this.resetPosition.call(this);
            }
        }
    }, {
        key: "goBack",
        value: function goBack() {
            var _this5 = this;

            if (this.state.currentShowIndex === 0) {
                this.resetPosition.call(this);
                return;
            }
            this.positionXNumber = this.standardPositionX + this.width;
            this.standardPositionX = this.positionXNumber;
            react_native_1.Animated.timing(this.positionX, {
                toValue: this.positionXNumber,
                duration: 100
            }).start();
            this.setState({
                currentShowIndex: this.state.currentShowIndex - 1
            }, function () {
                _this5.props.onChange(_this5.state.currentShowIndex);
            });
        }
    }, {
        key: "goNext",
        value: function goNext() {
            var _this6 = this;

            if (this.state.currentShowIndex === this.props.imageUrls.length - 1) {
                this.resetPosition.call(this);
                return;
            }
            this.positionXNumber = this.standardPositionX - this.width;
            this.standardPositionX = this.positionXNumber;
            react_native_1.Animated.timing(this.positionX, {
                toValue: this.positionXNumber,
                duration: 100
            }).start();
            this.setState({
                currentShowIndex: this.state.currentShowIndex + 1
            }, function () {
                _this6.props.onChange(_this6.state.currentShowIndex);
            });
        }
    }, {
        key: "resetPosition",
        value: function resetPosition() {
            this.positionXNumber = this.standardPositionX;
            react_native_1.Animated.timing(this.positionX, {
                toValue: this.standardPositionX,
                duration: 150
            }).start();
        }
    }, {
        key: "handleLongPress",
        value: function handleLongPress(_image) {
            if (this.props.saveToLocalByLongPress) {
                this.setState({
                    isShowMenu: true
                });
            }
            if (this.props.onLongPress) {
                this.props.onLongPress(_image);
            }
        }
    }, {
        key: "handleClick",
        value: function handleClick() {
            this.props.onClick(this.handleCancel.bind(this));
        }
    }, {
        key: "handleDoubleClick",
        value: function handleDoubleClick() {
            this.props.onDoubleClick(this.handleCancel.bind(this));
        }
    }, {
        key: "handleCancel",
        value: function handleCancel() {
            this.hasLayout = false;
            this.props.onCancel();
        }
    }, {
        key: "handleLayout",
        value: function handleLayout(event) {
            if (this.hasLayout) {
                return;
            }
            this.hasLayout = true;
            this.width = event.nativeEvent.layout.width;
            this.height = event.nativeEvent.layout.height;
            this.styles = image_viewer_style_1.default(this.width, this.height);
            this.forceUpdate();
            this.jumpToCurrentImage();
        }
    }, {
        key: "getContent",
        value: function getContent() {
            var _this7 = this;

            var screenWidth = this.width;
            var screenHeight = this.height;
            var ImageElements = this.props.imageUrls.map(function (image, index) {
                var width = _this7.state.imageSizes[index] && _this7.state.imageSizes[index].width;
                var height = _this7.state.imageSizes[index] && _this7.state.imageSizes[index].height;
                var imageInfo = _this7.state.imageSizes[index];
                if (width > screenWidth) {
                    var widthPixel = screenWidth / width;
                    width *= widthPixel;
                    height *= widthPixel;
                }
                if (height > screenHeight) {
                    var HeightPixel = screenHeight / height;
                    width *= HeightPixel;
                    height *= HeightPixel;
                }
                if (imageInfo.status === 'success' && _this7.props.enableImageZoom) {
                    return React.createElement(react_native_image_pan_zoom_1.default, { key: index, style: _this7.styles.modalContainer, cropWidth: _this7.width, cropHeight: _this7.height, imageWidth: width, imageHeight: height, maxOverflow: _this7.props.maxOverflow, horizontalOuterRangeOffset: _this7.handleHorizontalOuterRangeOffset.bind(_this7), responderRelease: _this7.handleResponderRelease.bind(_this7), onLongPress: _this7.handleLongPress.bind(_this7, image), onClick: _this7.handleClick.bind(_this7), onDoubleClick: _this7.handleDoubleClick.bind(_this7) }, React.createElement(react_native_1.Image, { style: babelHelpers.extends({}, _this7.styles.imageStyle, { width: width, height: height }), source: { uri: image.url } }));
                } else {
                    switch (imageInfo.status) {
                        case 'loading':
                            return React.createElement(react_native_1.TouchableHighlight, { key: index, onPress: _this7.handleClick.bind(_this7), style: _this7.styles.loadingTouchable }, React.createElement(react_native_1.View, { style: _this7.styles.loadingContainer }, _this7.props.loadingRender()));
                        case 'success':
                            return React.createElement(react_native_1.Image, { key: index, style: babelHelpers.extends({}, _this7.styles.imageStyle, { width: width, height: height }), source: { uri: image.url } });
                        case 'fail':
                            return React.createElement(react_native_image_pan_zoom_1.default, { key: index, style: _this7.styles.modalContainer, cropWidth: _this7.width, cropHeight: _this7.height, imageWidth: width, imageHeight: height, maxOverflow: _this7.props.maxOverflow, horizontalOuterRangeOffset: _this7.handleHorizontalOuterRangeOffset.bind(_this7), responderRelease: _this7.handleResponderRelease.bind(_this7), onLongPress: _this7.handleLongPress.bind(_this7, image), onClick: _this7.handleClick.bind(_this7), onDoubleClick: _this7.handleDoubleClick.bind(_this7) }, React.createElement(react_native_1.TouchableOpacity, { key: index, style: _this7.styles.failContainer }, React.createElement(react_native_1.Image, { source: _this7.props.failImageSource, style: _this7.styles.failImage })));
                    }
                }
            });
            return React.createElement(react_native_1.Animated.View, { style: babelHelpers.extends({}, this.styles.container, { opacity: this.fadeAnim }) }, this.props.renderHeader(this.state.currentShowIndex), React.createElement(react_native_1.View, { style: this.styles.arrowLeftContainer }, React.createElement(react_native_1.TouchableWithoutFeedback, { onPress: this.goBack.bind(this) }, React.createElement(react_native_1.View, null, this.props.renderArrowLeft()))), React.createElement(react_native_1.View, { style: this.styles.arrowRightContainer }, React.createElement(react_native_1.TouchableWithoutFeedback, { onPress: this.goNext.bind(this) }, React.createElement(react_native_1.View, null, this.props.renderArrowRight()))), React.createElement(react_native_1.Animated.View, { style: babelHelpers.extends({}, this.styles.moveBox, { transform: [{ translateX: this.positionX }] }, { width: this.width * this.props.imageUrls.length }) }, ImageElements), this.props.imageUrls.length > 1 && this.props.renderIndicator(this.state.currentShowIndex + 1, this.props.imageUrls.length), this.props.imageUrls[this.state.currentShowIndex].originSizeKb && this.props.imageUrls[this.state.currentShowIndex].originUrl && React.createElement(react_native_1.View, { style: this.styles.watchOrigin }, React.createElement(react_native_1.TouchableOpacity, { style: this.styles.watchOriginTouchable }, React.createElement(react_native_1.Text, { style: this.styles.watchOriginText }, "\u67E5\u770B\u539F\u56FE(2M)"))), this.props.renderFooter(this.state.currentShowIndex));
        }
    }, {
        key: "saveToLocal",
        value: function saveToLocal() {
            if (!this.props.onSave) {
                react_native_1.CameraRoll.saveToCameraRoll(this.props.imageUrls[this.state.currentShowIndex].url);
                this.props.onSaveToCamera(this.state.currentShowIndex);
            } else {
                this.props.onSave(this.props.imageUrls[this.state.currentShowIndex].url);
            }
            this.setState({
                isShowMenu: false
            });
        }
    }, {
        key: "getMenu",
        value: function getMenu() {
            if (!this.state.isShowMenu) {
                return null;
            }
            return React.createElement(react_native_1.View, { style: this.styles.menuContainer }, React.createElement(react_native_1.View, { style: this.styles.menuShadow }), React.createElement(react_native_1.View, { style: this.styles.menuContent }, React.createElement(react_native_1.TouchableHighlight, { underlayColor: "#F2F2F2", onPress: this.saveToLocal.bind(this), style: this.styles.operateContainer }, React.createElement(react_native_1.Text, { style: this.styles.operateText }, this.props.menuContext.saveToLocal)), React.createElement(react_native_1.TouchableHighlight, { underlayColor: "#F2F2F2", onPress: this.handleLeaveMenu.bind(this), style: this.styles.operateContainer }, React.createElement(react_native_1.Text, { style: this.styles.operateText }, this.props.menuContext.cancel))));
        }
    }, {
        key: "handleLeaveMenu",
        value: function handleLeaveMenu() {
            this.setState({
                isShowMenu: false
            });
        }
    }, {
        key: "render",
        value: function render() {
            var childs = null;
            childs = React.createElement(react_native_1.View, null, this.getContent(), this.getMenu());
            return React.createElement(react_native_1.View, babelHelpers.extends({ onLayout: this.handleLayout.bind(this), style: babelHelpers.extends({ flex: 1, overflow: 'hidden' }, this.props.style) }, this.props.others), childs);
        }
    }]);
    return ImageViewer;
}(React.Component);
ImageViewer.defaultProps = new typings.Props();
ImageViewer = __decorate([nt_transmit_transparently_1.TransmitTransparently('style')], ImageViewer);
exports.default = ImageViewer;
}, 687, null, "react-native-image-zoom-viewer/built/src/image-viewer.component.js");
__d(/* react-native-image-zoom-viewer/built/src/image-viewer.type.js */function(global, require, module, exports) {"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var React = require(35     ); // 35 = react
var ReactNative = require(12            ); // 12 = react-native
var image_viewer_style_1 = require(689                   ); // 689 = ./image-viewer.style

var PropsGaea = function PropsGaea() {
    babelHelpers.classCallCheck(this, PropsGaea);

    this.gaeaName = '大图浏览';
    this.gaeaIcon = 'square-o';
    this.gaeaUniqueKey = 'nt-image-viewer';
};

exports.PropsGaea = PropsGaea;

var Props = function (_PropsGaea) {
    babelHelpers.inherits(Props, _PropsGaea);

    function Props() {
        babelHelpers.classCallCheck(this, Props);

        var _this = babelHelpers.possibleConstructorReturn(this, (Props.__proto__ || Object.getPrototypeOf(Props)).apply(this, arguments));

        _this.show = false;
        _this.imageUrls = [];
        _this.enableImageZoom = true;
        _this.visible = false;
        _this.flipThreshold = 80;
        _this.maxOverflow = 300;
        _this.failImageSource = {};
        _this.index = 0;
        _this.saveToLocalByLongPress = true;
        _this.menuContext = {
            saveToLocal: '保存到相册',
            cancel: '取消'
        };
        _this.onShowModal = function () {};
        _this.onCancel = function () {};
        _this.loadingRender = function () {
            return null;
        };
        _this.onSaveToCamera = function () {};
        _this.onChange = function () {};
        _this.onClick = function (close) {
            close();
        };
        _this.onDoubleClick = function (_close) {};
        _this.renderHeader = function () {
            return null;
        };
        _this.renderFooter = function () {
            return null;
        };
        _this.renderIndicator = function (currentIndex, allSize) {
            return React.createElement(ReactNative.View, { style: image_viewer_style_1.simpleStyle.count }, React.createElement(ReactNative.Text, { style: image_viewer_style_1.simpleStyle.countText }, currentIndex + '/' + allSize));
        };
        _this.renderArrowLeft = function () {
            return null;
        };
        _this.renderArrowRight = function () {
            return null;
        };
        return _this;
    }

    return Props;
}(PropsGaea);

exports.Props = Props;

var State = function State() {
    babelHelpers.classCallCheck(this, State);

    this.show = false;
    this.currentShowIndex = 0;
    this.imageSizes = [];
    this.isShowMenu = false;
};

exports.State = State;
}, 688, null, "react-native-image-zoom-viewer/built/src/image-viewer.type.js");
__d(/* react-native-image-zoom-viewer/built/src/image-viewer.style.js */function(global, require, module, exports) {"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.default = function (width, height) {
    return {
        modalContainer: {
            backgroundColor: '#000',
            justifyContent: 'center',
            alignItems: 'center',
            overflow: 'hidden'
        },
        watchOrigin: {
            position: 'absolute',
            width: width,
            bottom: 20,
            justifyContent: 'center',
            alignItems: 'center'
        },
        watchOriginTouchable: {
            paddingLeft: 10,
            paddingRight: 10,
            paddingTop: 5,
            paddingBottom: 5,
            borderRadius: 30,
            borderColor: 'white',
            borderWidth: 0.5,
            backgroundColor: 'rgba(0, 0, 0, 0.1)'
        },
        watchOriginText: {
            color: 'white',
            backgroundColor: 'transparent'
        },
        imageStyle: {},
        container: {
            backgroundColor: 'black'
        },
        moveBox: {
            flexDirection: 'row',
            alignItems: 'center'
        },
        menuContainer: {
            position: 'absolute',
            width: width,
            height: height,
            left: 0,
            bottom: 0
        },
        menuShadow: {
            position: 'absolute',
            width: width,
            height: height,
            backgroundColor: 'black',
            left: 0,
            bottom: 0,
            opacity: 0.2,
            zIndex: 10
        },
        menuContent: {
            position: 'absolute',
            width: width,
            left: 0,
            bottom: 0,
            zIndex: 11
        },
        operateContainer: {
            justifyContent: 'center',
            alignItems: 'center',
            backgroundColor: 'white',
            height: 40,
            borderBottomColor: '#ccc',
            borderBottomWidth: 1
        },
        operateText: {
            color: '#333'
        },
        loadingTouchable: {
            width: width,
            height: height
        },
        loadingContainer: {
            justifyContent: 'center',
            alignItems: 'center',
            width: width,
            height: height
        },
        failContainer: {
            justifyContent: 'center',
            alignItems: 'center',
            width: width,
            height: height
        },
        failImage: {
            width: 90,
            height: 60
        },
        arrowLeftContainer: {
            position: 'absolute',
            top: 0,
            bottom: 0,
            left: 0,
            justifyContent: 'center'
        },
        arrowRightContainer: {
            position: 'absolute',
            top: 0,
            bottom: 0,
            right: 0,
            justifyContent: 'center'
        }
    };
};
exports.simpleStyle = {
    count: {
        position: 'absolute',
        left: 0,
        right: 0,
        top: 38,
        justifyContent: 'center',
        alignItems: 'center',
        backgroundColor: 'transparent'
    },
    countText: {
        color: 'white',
        fontSize: 16,
        backgroundColor: 'transparent',
        textShadowColor: 'rgba(0, 0, 0, 0.3)',
        textShadowOffset: {
            width: 0, height: 0.5
        },
        textShadowRadius: 0
    }
};
}, 689, null, "react-native-image-zoom-viewer/built/src/image-viewer.style.js");
__d(/* nt-transmit-transparently/lib/index.js */function(global, require, module, exports) {"use strict";

var transmit_transparently_component_1 = require(691                                                        ); // 691 = ./transmit-transparently/transmit-transparently.component
exports.TransmitTransparently = transmit_transparently_component_1.default;
var others_1 = require(693              ); // 693 = ./others/others
exports.others = others_1.default;
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = transmit_transparently_component_1.default;
}, 690, null, "nt-transmit-transparently/lib/index.js");
__d(/* nt-transmit-transparently/lib/transmit-transparently/transmit-transparently.component.js */function(global, require, module, exports) {"use strict";

var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
            }
        }
    }return target;
};

var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

function _possibleConstructorReturn(self, call) {
    if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var React = require(35     ); // 35 = react
var typings = require(692                            ); // 692 = ./transmit-transparently.type
var others_1 = require(693               ); // 693 = ../others/others
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = function () {
    for (var _len = arguments.length, ignore = Array(_len), _key = 0; _key < _len; _key++) {
        ignore[_key] = arguments[_key];
    }

    return function (Target) {
        var Transmit = function (_React$Component) {
            _inherits(Transmit, _React$Component);

            function Transmit() {
                var _ref;

                _classCallCheck(this, Transmit);

                for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                    args[_key2] = arguments[_key2];
                }

                var _this = _possibleConstructorReturn(this, (_ref = Transmit.__proto__ || Object.getPrototypeOf(Transmit)).call.apply(_ref, [this].concat(args)));

                _this.state = new typings.State();
                _this.displayName = 'TransmitTransparently';
                return _this;
            }

            _createClass(Transmit, [{
                key: 'render',
                value: function render() {
                    var _this2 = this;

                    var newProps = _extends({}, this.props);
                    newProps.others = others_1.default(Target.defaultProps, newProps, ignore);
                    newProps.ref = function (ref) {
                        _this2.wrappedInstance = ref;
                    };
                    return React.createElement(Target, newProps, this.props.children);
                }
            }]);

            return Transmit;
        }(React.Component);

        Transmit.defaultProps = new typings.Props();
        var func = function func() {
            return Transmit;
        };
        return func();
    };
};
}, 691, null, "nt-transmit-transparently/lib/transmit-transparently/transmit-transparently.component.js");
__d(/* nt-transmit-transparently/lib/transmit-transparently/transmit-transparently.type.js */function(global, require, module, exports) {"use strict";

function _possibleConstructorReturn(self, call) {
    if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var PropsGaea = function PropsGaea() {
    _classCallCheck(this, PropsGaea);
};

exports.PropsGaea = PropsGaea;

var Props = function (_PropsGaea) {
    _inherits(Props, _PropsGaea);

    function Props() {
        _classCallCheck(this, Props);

        return _possibleConstructorReturn(this, (Props.__proto__ || Object.getPrototypeOf(Props)).apply(this, arguments));
    }

    return Props;
}(PropsGaea);

exports.Props = Props;

var State = function State() {
    _classCallCheck(this, State);

    this.others = {};
};

exports.State = State;
}, 692, null, "nt-transmit-transparently/lib/transmit-transparently/transmit-transparently.type.js");
__d(/* nt-transmit-transparently/lib/others/others.js */function(global, require, module, exports) {"use strict";

var domAttributes = ['children', 'dangerouslySetInnerHTML', 'onCopy', 'onCut', 'onPaste', 'onCompositionEnd', 'onCompositionStart', 'onCompositionUpdate', 'onFocus', 'onBlur', 'onChange', 'onInput', 'onSubmit', 'onLoad', 'onError', 'onKeyDown', 'onKeyPress', 'onKeyUp', 'onAbort', 'onCanPlay', 'onCanPlayThrough', 'onDurationChange', 'onEmptied', 'onEncrypted', 'onEnded', 'onLoadedData', 'onLoadedMetadata', 'onLoadStart', 'onPause', 'onPlay', 'onPlaying', 'onProgress', 'onRateChange', 'onSeeked', 'onSeeking', 'onStalled', 'onSuspend', 'onTimeUpdate', 'onVolumeChange', 'onWaiting', 'onClick', 'onContextMenu', 'onDoubleClick', 'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave', 'onDragOver', 'onDragStart', 'onDrop', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp', 'onSelect', 'onTouchCancel', 'onTouchEnd', 'onTouchMove', 'onTouchStart', 'onScroll', 'onWheel', 'onAnimationStart', 'onAnimationEnd', 'onAnimationIteration', 'onTransitionEnd'];
var htmlExtraAttributes = ['defaultChecked', 'defaultValue', 'accept', 'acceptCharset', 'accessKey', 'action', 'allowFullScreen', 'allowTransparency', 'alt', 'async', 'autoComplete', 'autoFocus', 'autoPlay', 'capture', 'cellPadding', 'cellSpacing', 'charSet', 'challenge', 'checked', 'classID', 'className', 'cols', 'colSpan', 'content', 'contentEditable', 'contextMenu', 'controls', 'coords', 'crossOrigin', 'data', 'dateTime', 'default', 'defer', 'dir', 'disabled', 'download', 'draggable', 'encType', 'form', 'formAction', 'formEncType', 'formMethod', 'formNoValidate', 'formTarget', 'frameBorder', 'headers', 'height', 'hidden', 'high', 'href', 'hrefLang', 'htmlFor', 'httpEquiv', 'icon', 'id', 'inputMode', 'integrity', 'is', 'keyParams', 'keyType', 'kind', 'label', 'lang', 'list', 'loop', 'low', 'manifest', 'marginHeight', 'marginWidth', 'max', 'maxLength', 'media', 'mediaGroup', 'method', 'min', 'minLength', 'multiple', 'muted', 'name', 'nonce', 'noValidate', 'open', 'optimum', 'pattern', 'placeholder', 'poster', 'preload', 'radioGroup', 'readOnly', 'rel', 'required', 'reversed', 'role', 'rows', 'rowSpan', 'sandbox', 'scope', 'scoped', 'scrolling', 'seamless', 'selected', 'shape', 'size', 'sizes', 'span', 'spellCheck', 'src', 'srcDoc', 'srcLang', 'srcSet', 'start', 'step', 'style', 'summary', 'tabIndex', 'target', 'title', 'type', 'useMap', 'value', 'width', 'wmode', 'wrap', 'about', 'datatype', 'inlist', 'prefix', 'property', 'resource', 'typeof', 'vocab', 'autoCapitalize', 'autoCorrect', 'autoSave', 'color', 'itemProp', 'itemScope', 'itemType', 'itemID', 'itemRef', 'results', 'security', 'unselectable'];
var htmlAttributes = domAttributes.concat(htmlExtraAttributes);
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = function () {
    var defaultProps = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
    var props = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
    var ignore = arguments[2];

    var defaultPropsKeys = Object.keys(defaultProps);
    var others = {};
    ignore = ignore || [];
    Object.keys(props).forEach(function (key) {
        if (ignore.findIndex(function (item) {
            return item === key;
        }) > -1) {
            return;
        }
        if (defaultPropsKeys.findIndex(function (item) {
            return item === key;
        }) === -1 && htmlAttributes.findIndex(function (item) {
            return item === key;
        }) > -1) {
            others[key] = props[key];
        }
    });
    return others;
};
}, 693, null, "nt-transmit-transparently/lib/others/others.js");
__d(/* react-native-image-pan-zoom/built/index.js */function(global, require, module, exports) {"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var image_zoom_component_1 = require(695                                ); // 695 = ./image-zoom/image-zoom.component
exports.ImageZoom = image_zoom_component_1.default;
exports.default = image_zoom_component_1.default;
}, 694, null, "react-native-image-pan-zoom/built/index.js");
__d(/* react-native-image-pan-zoom/built/image-zoom/image-zoom.component.js */function(global, require, module, exports) {"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var React = require(35     ); // 35 = react
var react_native_1 = require(12            ); // 12 = react-native
var typings = require(696                ); // 696 = ./image-zoom.type
var image_zoom_style_1 = require(697                 ); // 697 = ./image-zoom.style
var isMobile = function isMobile() {
    if (react_native_1.Platform.OS === 'web') {
        return (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)
        );
    } else {
        return true;
    }
};

var ImageViewer = function (_React$Component) {
    babelHelpers.inherits(ImageViewer, _React$Component);

    function ImageViewer() {
        babelHelpers.classCallCheck(this, ImageViewer);

        var _this = babelHelpers.possibleConstructorReturn(this, (ImageViewer.__proto__ || Object.getPrototypeOf(ImageViewer)).apply(this, arguments));

        _this.state = new typings.State();
        _this.lastPositionX = null;
        _this.positionX = 0;
        _this.animatedPositionX = new react_native_1.Animated.Value(0);
        _this.lastPositionY = null;
        _this.positionY = 0;
        _this.animatedPositionY = new react_native_1.Animated.Value(0);
        _this.scale = 1;
        _this.animatedScale = new react_native_1.Animated.Value(1);
        _this.zoomLastDistance = null;
        _this.zoomCurrentDistance = 0;
        _this.horizontalWholeOuterCounter = 0;
        _this.horizontalWholeCounter = 0;
        _this.verticalWholeCounter = 0;
        _this.centerDiffX = 0;
        _this.centerDiffY = 0;
        _this.lastClickTime = 0;
        _this.doubleClickX = 0;
        _this.doubleClickY = 0;
        _this.isDoubleClickScale = false;
        return _this;
    }

    babelHelpers.createClass(ImageViewer, [{
        key: "componentWillMount",
        value: function componentWillMount() {
            var _this2 = this;

            var setResponder = isMobile();
            this.imagePanResponder = react_native_1.PanResponder.create({
                onStartShouldSetPanResponder: function onStartShouldSetPanResponder(_evt, _gestureState) {
                    return setResponder;
                },
                onPanResponderTerminationRequest: function onPanResponderTerminationRequest(_evt, _gestureState) {
                    return false;
                },
                onPanResponderGrant: function onPanResponderGrant(evt, _gestureState) {
                    _this2.lastPositionX = null;
                    _this2.lastPositionY = null;
                    _this2.zoomLastDistance = null;
                    _this2.horizontalWholeCounter = 0;
                    _this2.verticalWholeCounter = 0;
                    _this2.lastTouchStartTime = new Date().getTime();
                    _this2.isDoubleClickScale = false;
                    if (evt.nativeEvent.changedTouches.length > 1) {
                        _this2.centerDiffX = (evt.nativeEvent.changedTouches[0].pageX + evt.nativeEvent.changedTouches[1].pageX) / 2 - _this2.props.cropWidth / 2;
                        _this2.centerDiffY = (evt.nativeEvent.changedTouches[0].pageY + evt.nativeEvent.changedTouches[1].pageY) / 2 - _this2.props.cropHeight / 2;
                    }
                    if (_this2.longPressTimeout) {
                        clearTimeout(_this2.longPressTimeout);
                    }
                    _this2.longPressTimeout = setTimeout(function () {
                        if (_this2.props.onLongPress) {
                            _this2.props.onLongPress();
                        }
                    }, _this2.props.longPressTime);
                    if (evt.nativeEvent.changedTouches.length <= 1) {
                        if (new Date().getTime() - _this2.lastClickTime < (_this2.props.doubleClickInterval || 0)) {
                            _this2.lastClickTime = 0;
                            if (_this2.props.onDoubleClick) {
                                _this2.props.onDoubleClick();
                            }
                            clearTimeout(_this2.longPressTimeout);
                            _this2.doubleClickX = evt.nativeEvent.changedTouches[0].pageX;
                            _this2.doubleClickY = evt.nativeEvent.changedTouches[0].pageY;
                            _this2.isDoubleClickScale = true;
                            if (_this2.scale > 1 || _this2.scale < 1) {
                                _this2.scale = 1;
                                _this2.positionX = 0;
                                _this2.positionY = 0;
                            } else {
                                var beforeScale = _this2.scale;
                                _this2.scale = 2;
                                var diffScale = _this2.scale - beforeScale;
                                _this2.positionX = (_this2.props.cropWidth / 2 - _this2.doubleClickX) * diffScale / _this2.scale;
                                _this2.positionY = (_this2.props.cropHeight / 2 - _this2.doubleClickY) * diffScale / _this2.scale;
                            }
                            react_native_1.Animated.parallel([react_native_1.Animated.timing(_this2.animatedScale, {
                                toValue: _this2.scale,
                                duration: 100
                            }), react_native_1.Animated.timing(_this2.animatedPositionX, {
                                toValue: _this2.positionX,
                                duration: 100
                            }), react_native_1.Animated.timing(_this2.animatedPositionY, {
                                toValue: _this2.positionY,
                                duration: 100
                            })]).start();
                        } else {
                            _this2.lastClickTime = new Date().getTime();
                        }
                    }
                },
                onPanResponderMove: function onPanResponderMove(evt, gestureState) {
                    if (evt.nativeEvent.changedTouches.length <= 1) {
                        var diffX = gestureState.dx - (_this2.lastPositionX || 0);
                        if (_this2.lastPositionX === null) {
                            diffX = 0;
                        }
                        var diffY = gestureState.dy - (_this2.lastPositionY || 0);
                        if (_this2.lastPositionY === null) {
                            diffY = 0;
                        }
                        _this2.lastPositionX = gestureState.dx;
                        _this2.lastPositionY = gestureState.dy;
                        _this2.horizontalWholeCounter += diffX;
                        _this2.verticalWholeCounter += diffY;
                        if (Math.abs(_this2.horizontalWholeCounter) > 5 || Math.abs(_this2.verticalWholeCounter) > 5) {
                            clearTimeout(_this2.longPressTimeout);
                        }
                        if (_this2.props.panToMove) {
                            if (_this2.props.imageWidth * _this2.scale > _this2.props.cropWidth) {
                                if (_this2.horizontalWholeOuterCounter > 0) {
                                    if (diffX < 0) {
                                        if (_this2.horizontalWholeOuterCounter > Math.abs(diffX)) {
                                            _this2.horizontalWholeOuterCounter += diffX;
                                            diffX = 0;
                                        } else {
                                            diffX += _this2.horizontalWholeOuterCounter;
                                            _this2.horizontalWholeOuterCounter = 0;
                                            if (_this2.props.horizontalOuterRangeOffset) {
                                                _this2.props.horizontalOuterRangeOffset(0);
                                            }
                                        }
                                    } else {
                                        _this2.horizontalWholeOuterCounter += diffX;
                                    }
                                } else if (_this2.horizontalWholeOuterCounter < 0) {
                                    if (diffX > 0) {
                                        if (Math.abs(_this2.horizontalWholeOuterCounter) > diffX) {
                                            _this2.horizontalWholeOuterCounter += diffX;
                                            diffX = 0;
                                        } else {
                                            diffX += _this2.horizontalWholeOuterCounter;
                                            _this2.horizontalWholeOuterCounter = 0;
                                            if (_this2.props.horizontalOuterRangeOffset) {
                                                _this2.props.horizontalOuterRangeOffset(0);
                                            }
                                        }
                                    } else {
                                        _this2.horizontalWholeOuterCounter += diffX;
                                    }
                                } else {}
                                _this2.positionX += diffX / _this2.scale;
                                var horizontalMax = (_this2.props.imageWidth * _this2.scale - _this2.props.cropWidth) / 2 / _this2.scale;
                                if (_this2.positionX < -horizontalMax) {
                                    _this2.positionX = -horizontalMax;
                                    _this2.horizontalWholeOuterCounter += -1 / 1e10;
                                } else if (_this2.positionX > horizontalMax) {
                                    _this2.positionX = horizontalMax;
                                    _this2.horizontalWholeOuterCounter += 1 / 1e10;
                                }
                                _this2.animatedPositionX.setValue(_this2.positionX);
                            } else {
                                _this2.horizontalWholeOuterCounter += diffX;
                            }
                            if (_this2.horizontalWholeOuterCounter > (_this2.props.maxOverflow || 0)) {
                                _this2.horizontalWholeOuterCounter = _this2.props.maxOverflow || 0;
                            } else if (_this2.horizontalWholeOuterCounter < -(_this2.props.maxOverflow || 0)) {
                                _this2.horizontalWholeOuterCounter = -(_this2.props.maxOverflow || 0);
                            }
                            if (_this2.horizontalWholeOuterCounter !== 0) {
                                if (_this2.props.horizontalOuterRangeOffset) {
                                    _this2.props.horizontalOuterRangeOffset(_this2.horizontalWholeOuterCounter);
                                }
                            }
                            if (_this2.props.imageHeight * _this2.scale > _this2.props.cropHeight) {
                                _this2.positionY += diffY / _this2.scale;
                                _this2.animatedPositionY.setValue(_this2.positionY);
                            }
                        }
                    } else {
                        if (_this2.longPressTimeout) {
                            clearTimeout(_this2.longPressTimeout);
                        }
                        if (_this2.props.pinchToZoom) {
                            var minX = void 0;
                            var maxX = void 0;
                            if (evt.nativeEvent.changedTouches[0].locationX > evt.nativeEvent.changedTouches[1].locationX) {
                                minX = evt.nativeEvent.changedTouches[1].pageX;
                                maxX = evt.nativeEvent.changedTouches[0].pageX;
                            } else {
                                minX = evt.nativeEvent.changedTouches[0].pageX;
                                maxX = evt.nativeEvent.changedTouches[1].pageX;
                            }
                            var minY = void 0;
                            var maxY = void 0;
                            if (evt.nativeEvent.changedTouches[0].locationY > evt.nativeEvent.changedTouches[1].locationY) {
                                minY = evt.nativeEvent.changedTouches[1].pageY;
                                maxY = evt.nativeEvent.changedTouches[0].pageY;
                            } else {
                                minY = evt.nativeEvent.changedTouches[0].pageY;
                                maxY = evt.nativeEvent.changedTouches[1].pageY;
                            }
                            var widthDistance = maxX - minX;
                            var heightDistance = maxY - minY;
                            var diagonalDistance = Math.sqrt(widthDistance * widthDistance + heightDistance * heightDistance);
                            _this2.zoomCurrentDistance = Number(diagonalDistance.toFixed(1));
                            if (_this2.zoomLastDistance !== null) {
                                var distanceDiff = (_this2.zoomCurrentDistance - _this2.zoomLastDistance) / 200;
                                var zoom = _this2.scale + distanceDiff;
                                if (zoom < 0.6) {
                                    zoom = 0.6;
                                }
                                if (zoom > 10) {
                                    zoom = 10;
                                }
                                var beforeScale = _this2.scale;
                                _this2.scale = zoom;
                                _this2.animatedScale.setValue(_this2.scale);
                                var diffScale = _this2.scale - beforeScale;
                                _this2.positionX -= _this2.centerDiffX * diffScale / _this2.scale;
                                _this2.positionY -= _this2.centerDiffY * diffScale / _this2.scale;
                                _this2.animatedPositionX.setValue(_this2.positionX);
                                _this2.animatedPositionY.setValue(_this2.positionY);
                            }
                            _this2.zoomLastDistance = _this2.zoomCurrentDistance;
                        }
                    }
                    if (_this2.props.onMove) {
                        _this2.props.onMove({
                            type: 'onPanResponderMove',
                            positionX: _this2.positionX,
                            positionY: _this2.positionY,
                            scale: _this2.scale,
                            zoomCurrentDistance: _this2.zoomCurrentDistance
                        });
                    }
                },
                onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {
                    if (_this2.isDoubleClickScale) {
                        return;
                    }
                    if (_this2.scale < 1) {
                        _this2.scale = 1;
                        react_native_1.Animated.timing(_this2.animatedScale, {
                            toValue: _this2.scale,
                            duration: 100
                        }).start();
                    }
                    if (_this2.props.imageWidth * _this2.scale <= _this2.props.cropWidth) {
                        _this2.positionX = 0;
                        react_native_1.Animated.timing(_this2.animatedPositionX, {
                            toValue: _this2.positionX,
                            duration: 100
                        }).start();
                    }
                    if (_this2.props.imageHeight * _this2.scale <= _this2.props.cropHeight) {
                        _this2.positionY = 0;
                        react_native_1.Animated.timing(_this2.animatedPositionY, {
                            toValue: _this2.positionY,
                            duration: 100
                        }).start();
                    }
                    if (_this2.props.imageHeight * _this2.scale > _this2.props.cropHeight) {
                        var verticalMax = (_this2.props.imageHeight * _this2.scale - _this2.props.cropHeight) / 2 / _this2.scale;
                        if (_this2.positionY < -verticalMax) {
                            _this2.positionY = -verticalMax;
                        } else if (_this2.positionY > verticalMax) {
                            _this2.positionY = verticalMax;
                        }
                        react_native_1.Animated.timing(_this2.animatedPositionY, {
                            toValue: _this2.positionY,
                            duration: 100
                        }).start();
                    }
                    if (_this2.scale === 1) {
                        _this2.positionX = 0;
                        _this2.positionY = 0;
                        react_native_1.Animated.timing(_this2.animatedPositionX, {
                            toValue: _this2.positionX,
                            duration: 100
                        }).start();
                        react_native_1.Animated.timing(_this2.animatedPositionY, {
                            toValue: _this2.positionY,
                            duration: 100
                        }).start();
                    }
                    _this2.horizontalWholeOuterCounter = 0;
                    if (_this2.longPressTimeout) {
                        clearTimeout(_this2.longPressTimeout);
                    }
                    var stayTime = new Date().getTime() - _this2.lastTouchStartTime;
                    var moveDistance = Math.sqrt(gestureState.dx * gestureState.dx + gestureState.dy * gestureState.dy);
                    if (evt.nativeEvent.changedTouches.length === 1 && stayTime < (_this2.props.leaveStayTime || 0) && moveDistance < (_this2.props.leaveDistance || 0)) {
                        var onClick = function onClick() {
                            if (_this2.lastClickTime > 0) {
                                if (_this2.props.onClick) {
                                    _this2.props.onClick();
                                }
                            }
                        };
                        setTimeout(onClick, _this2.props.doubleClickInterval);
                    } else {
                        if (_this2.props.responderRelease) {
                            _this2.props.responderRelease(gestureState.vx, _this2.scale);
                        }
                    }
                    if (_this2.props.onMove) {
                        _this2.props.onMove({
                            type: 'onPanResponderRelease',
                            positionX: _this2.positionX,
                            positionY: _this2.positionY,
                            scale: _this2.scale,
                            zoomCurrentDistance: _this2.zoomCurrentDistance
                        });
                    }
                },
                onPanResponderTerminate: function onPanResponderTerminate(_evt, _gestureState) {}
            });
        }
    }, {
        key: "handleLayout",
        value: function handleLayout(_event) {
            if (this.props.layoutChange) {
                this.props.layoutChange(_event);
            }
        }
    }, {
        key: "reset",
        value: function reset() {
            this.scale = 1;
            this.animatedScale.setValue(this.scale);
            this.positionX = 0;
            this.animatedPositionX.setValue(this.positionX);
            this.positionY = 0;
            this.animatedPositionY.setValue(this.positionY);
        }
    }, {
        key: "render",
        value: function render() {
            var animateConf = {
                transform: [{
                    scale: this.animatedScale
                }, {
                    translateX: this.animatedPositionX
                }, {
                    translateY: this.animatedPositionY
                }]
            };
            return React.createElement(react_native_1.View, babelHelpers.extends({ style: babelHelpers.extends({}, image_zoom_style_1.default.container, { width: this.props.cropWidth, height: this.props.cropHeight }) }, this.imagePanResponder.panHandlers), React.createElement(react_native_1.Animated.View, { style: animateConf }, React.createElement(react_native_1.View, { onLayout: this.handleLayout.bind(this), style: { width: this.props.imageWidth, height: this.props.imageHeight } }, this.props.children)));
        }
    }]);
    return ImageViewer;
}(React.Component);

ImageViewer.defaultProps = new typings.Props();
exports.default = ImageViewer;
}, 695, null, "react-native-image-pan-zoom/built/image-zoom/image-zoom.component.js");
__d(/* react-native-image-pan-zoom/built/image-zoom/image-zoom.type.js */function(global, require, module, exports) {"use strict";

Object.defineProperty(exports, "__esModule", { value: true });

var PropsGaea = function PropsGaea() {
    babelHelpers.classCallCheck(this, PropsGaea);

    this.gaeaName = '图片手势操作';
    this.gaeaIcon = 'square-o';
    this.gaeaUniqueKey = 'nt-image-zoom';
};

exports.PropsGaea = PropsGaea;

var Props = function (_PropsGaea) {
    babelHelpers.inherits(Props, _PropsGaea);

    function Props() {
        babelHelpers.classCallCheck(this, Props);

        var _this = babelHelpers.possibleConstructorReturn(this, (Props.__proto__ || Object.getPrototypeOf(Props)).apply(this, arguments));

        _this.onClick = function () {};
        _this.onLongPress = function () {};
        _this.panToMove = true;
        _this.pinchToZoom = true;
        _this.cropWidth = 100;
        _this.cropHeight = 100;
        _this.imageWidth = 100;
        _this.imageHeight = 100;
        _this.source = '';
        _this.longPressTime = 800;
        _this.leaveStayTime = 100;
        _this.leaveDistance = 10;
        _this.maxOverflow = 100;
        _this.horizontalOuterRangeOffset = function () {};
        _this.responderRelease = function () {};
        _this.onDoubleClick = function () {};
        _this.doubleClickInterval = 175;
        return _this;
    }

    return Props;
}(PropsGaea);

exports.Props = Props;

var State = function State() {
    babelHelpers.classCallCheck(this, State);

    this.centerX = 0.5;
    this.centerY = 0.5;
};

exports.State = State;
}, 696, null, "react-native-image-pan-zoom/built/image-zoom/image-zoom.type.js");
__d(/* react-native-image-pan-zoom/built/image-zoom/image-zoom.style.js */function(global, require, module, exports) {"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.default = {
    container: {
        justifyContent: 'center',
        alignItems: 'center',
        overflow: 'hidden',
        backgroundColor: 'transparent'
    }
};
}, 697, null, "react-native-image-pan-zoom/built/image-zoom/image-zoom.style.js");
__d(/* YuanXC/src/actions/financeDetailActions.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getData = getData;
exports.clearCache = clearCache;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);

var _http = require(622               ); // 622 = ../requests/http

function getData(loading, isRefreshing, id) {
  return function (dispatch) {
    dispatch(requestData({ loading: loading, isRefreshing: isRefreshing }));
    (0, _http.financeDetail)({ id: id }).then(function (data) {
      if (data.data.code == 0) {
        if (data.data.data.financePicList) {
          data.data.data.financePicList = data.data.data.financePicList.map(function (item) {
            item.url = item.picPath;
            return item;
          });
        }
        dispatch(receiveData({ detail: data.data.data }));
      } else {
        dispatch(receiveData({ error: true, msg: data.data.msg }));
      }
    }).catch(function (err) {
      dispatch(receiveData({ error: true, msgStr: 'netWorkError' }));
    });
  };
}

function clearCache() {
  return {
    type: types.CLEAR_FINANCE_CACHE
  };
}

function requestData(data) {
  return babelHelpers.extends({
    type: types.REQUEST_FINANCE_DETAIL
  }, data);
}

function receiveData(data) {
  return babelHelpers.extends({
    type: types.RECEIVE_FINANCE_DETAIL
  }, data);
}
}, 698, null, "YuanXC/src/actions/financeDetailActions.js");
__d(/* react-native-modalbox/index.js */function(global, require, module, exports) {'use strict';

var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/node_modules/react-native-modalbox/index.js';
var React = require(35     ); // 35 = react
var PropTypes = require(126         ); // 126 = prop-types

var _require = require(12            ), // 12 = react-native
    View = _require.View,
    StyleSheet = _require.StyleSheet,
    PanResponder = _require.PanResponder,
    Animated = _require.Animated,
    TouchableWithoutFeedback = _require.TouchableWithoutFeedback,
    Dimensions = _require.Dimensions,
    Easing = _require.Easing,
    BackAndroid = _require.BackAndroid,
    BackHandler = _require.BackHandler,
    Platform = _require.Platform,
    Modal = _require.Modal,
    Keyboard = _require.Keyboard;

var createReactClass = require(171                 ); // 171 = create-react-class

var BackButton = BackHandler || BackAndroid;

var screen = Dimensions.get('window');

var styles = StyleSheet.create({

  wrapper: {
    backgroundColor: "white"
  },

  transparent: {
    zIndex: 2,
    backgroundColor: 'rgba(0,0,0,0)'
  },

  absolute: {
    position: "absolute",
    top: 0,
    bottom: 0,
    left: 0,
    right: 0
  }

});

var ModalBox = createReactClass({
  displayName: 'ModalBox',


  propTypes: {
    isOpen: PropTypes.bool,
    isDisabled: PropTypes.bool,
    startOpen: PropTypes.bool,
    backdropPressToClose: PropTypes.bool,
    swipeToClose: PropTypes.bool,
    swipeThreshold: PropTypes.number,
    swipeArea: PropTypes.number,
    position: PropTypes.string,
    entry: PropTypes.string,
    backdrop: PropTypes.bool,
    backdropOpacity: PropTypes.number,
    backdropColor: PropTypes.string,
    backdropContent: PropTypes.element,
    animationDuration: PropTypes.number,
    backButtonClose: PropTypes.bool,
    easing: PropTypes.func,
    coverScreen: PropTypes.bool,
    keyboardTopOffset: PropTypes.number,

    onClosed: PropTypes.func,
    onOpened: PropTypes.func,
    onClosingState: PropTypes.func
  },

  getDefaultProps: function getDefaultProps() {
    return {
      startOpen: false,
      backdropPressToClose: true,
      swipeToClose: true,
      swipeThreshold: 50,
      position: "center",
      backdrop: true,
      backdropOpacity: 0.5,
      backdropColor: "black",
      backdropContent: null,
      animationDuration: 400,
      backButtonClose: false,
      easing: Easing.elastic(0.8),
      coverScreen: false,
      keyboardTopOffset: Platform.OS == 'ios' ? 22 : 0
    };
  },

  getInitialState: function getInitialState() {
    var position = this.props.entry === 'top' ? -screen.height : screen.height;
    return {
      position: this.props.startOpen ? new Animated.Value(0) : new Animated.Value(position),
      backdropOpacity: new Animated.Value(0),
      isOpen: this.props.startOpen,
      isAnimateClose: false,
      isAnimateOpen: false,
      swipeToClose: false,
      height: screen.height,
      width: screen.width,
      containerHeight: screen.height,
      containerWidth: screen.width,
      isInitialized: false,
      keyboardOffset: 0
    };
  },

  onBackPress: function onBackPress() {
    this.close();
    return true;
  },


  componentWillMount: function componentWillMount() {
    this.createPanResponder();
    this.handleOpenning(this.props);

    if (Platform.OS === 'ios') {
      this.subscriptions = [Keyboard.addListener('keyboardWillChangeFrame', this.onKeyboardChange), Keyboard.addListener('keyboardDidHide', this.onKeyboardHide)];
    }
  },

  componentWillUnmount: function componentWillUnmount() {
    if (this.subscriptions) this.subscriptions.forEach(function (sub) {
      return sub.remove();
    });
  },

  componentWillReceiveProps: function componentWillReceiveProps(props) {
    if (this.props.isOpen != props.isOpen) {
      this.handleOpenning(props);
    }
  },

  handleOpenning: function handleOpenning(props) {
    if (typeof props.isOpen == "undefined") return;
    if (props.isOpen) this.open();else this.close();
  },

  onKeyboardHide: function onKeyboardHide(evt) {
    this.state.keyboardOffset = 0;
  },

  onKeyboardChange: function onKeyboardChange(evt) {
    if (!evt) return;
    if (!this.state.isOpen) return;
    var keyboardFrame = evt.endCoordinates;
    var keyboardHeight = this.state.containerHeight - keyboardFrame.screenY;

    this.state.keyboardOffset = keyboardHeight;
    this.animateOpen();
  },

  animateBackdropOpen: function animateBackdropOpen() {
    var _this = this;

    if (this.state.isAnimateBackdrop) {
      this.state.animBackdrop.stop();
      this.state.isAnimateBackdrop = false;
    }

    this.state.isAnimateBackdrop = true;
    this.state.animBackdrop = Animated.timing(this.state.backdropOpacity, {
      toValue: 1,
      duration: this.props.animationDuration
    });
    this.state.animBackdrop.start(function () {
      _this.state.isAnimateBackdrop = false;
    });
  },

  animateBackdropClose: function animateBackdropClose() {
    var _this2 = this;

    if (this.state.isAnimateBackdrop) {
      this.state.animBackdrop.stop();
      this.state.isAnimateBackdrop = false;
    }

    this.state.isAnimateBackdrop = true;
    this.state.animBackdrop = Animated.timing(this.state.backdropOpacity, {
      toValue: 0,
      duration: this.props.animationDuration
    });
    this.state.animBackdrop.start(function () {
      _this2.state.isAnimateBackdrop = false;
    });
  },

  stopAnimateOpen: function stopAnimateOpen() {
    if (this.state.isAnimateOpen) {
      if (this.state.animOpen) this.state.animOpen.stop();
      this.state.isAnimateOpen = false;
    }
  },

  animateOpen: function animateOpen() {
    var _this3 = this;

    this.stopAnimateClose();

    if (this.props.backdrop) this.animateBackdropOpen();

    this.state.isAnimateOpen = true;

    requestAnimationFrame(function () {
      _this3.state.positionDest = _this3.calculateModalPosition(_this3.state.containerHeight - _this3.state.keyboardOffset, _this3.state.containerWidth);
      if (_this3.state.keyboardOffset && _this3.state.positionDest < _this3.props.keyboardTopOffset) {
        _this3.state.positionDest = _this3.props.keyboardTopOffset;
      }
      _this3.state.animOpen = Animated.timing(_this3.state.position, {
        toValue: _this3.state.positionDest,
        duration: _this3.props.animationDuration,
        easing: _this3.props.easing
      });
      _this3.state.animOpen.start(function () {
        if (!_this3.state.isOpen && _this3.props.onOpened) _this3.props.onOpened();
        _this3.state.isAnimateOpen = false;
        _this3.state.isOpen = true;
      });
    });
  },

  stopAnimateClose: function stopAnimateClose() {
    if (this.state.isAnimateClose) {
      if (this.state.animClose) this.state.animClose.stop();
      this.state.isAnimateClose = false;
    }
  },

  animateClose: function animateClose() {
    var _this4 = this;

    this.stopAnimateOpen();

    if (this.props.backdrop) this.animateBackdropClose();

    this.state.isAnimateClose = true;
    this.state.animClose = Animated.timing(this.state.position, {
      toValue: this.props.entry === 'top' ? -this.state.containerHeight : this.state.containerHeight,
      duration: this.props.animationDuration
    });
    this.state.animClose.start(function () {
      Keyboard.dismiss();
      _this4.state.isAnimateClose = false;
      _this4.state.isOpen = false;
      _this4.setState({});
      if (_this4.props.onClosed) _this4.props.onClosed();
    });
  },

  calculateModalPosition: function calculateModalPosition(containerHeight, containerWidth) {
    var position = 0;

    if (this.props.position == "bottom") {
      position = containerHeight - this.state.height;
    } else if (this.props.position == "center") {
      position = containerHeight / 2 - this.state.height / 2;
    }

    if (position < 0) position = 0;
    return position;
  },

  createPanResponder: function createPanResponder() {
    var _this5 = this;

    var closingState = false;
    var inSwipeArea = false;

    var onPanRelease = function onPanRelease(evt, state) {
      if (!inSwipeArea) return;
      inSwipeArea = false;
      if (_this5.props.entry === 'top' ? -state.dy > _this5.props.swipeThreshold : state.dy > _this5.props.swipeThreshold) _this5.animateClose();else _this5.animateOpen();
    };

    var animEvt = Animated.event([null, { customY: this.state.position }]);

    var onPanMove = function onPanMove(evt, state) {
      var newClosingState = _this5.props.entry === 'top' ? -state.dy > _this5.props.swipeThreshold : state.dy > _this5.props.swipeThreshold;
      if (_this5.props.entry === 'top' ? state.dy > 0 : state.dy < 0) return;
      if (newClosingState != closingState && _this5.props.onClosingState) _this5.props.onClosingState(newClosingState);
      closingState = newClosingState;
      state.customY = state.dy + _this5.state.positionDest;

      animEvt(evt, state);
    };

    var onPanStart = function onPanStart(evt, state) {
      if (!_this5.props.swipeToClose || _this5.props.isDisabled || _this5.props.swipeArea && evt.nativeEvent.pageY - _this5.state.positionDest > _this5.props.swipeArea) {
        inSwipeArea = false;
        return false;
      }
      inSwipeArea = true;
      return true;
    };

    this.state.pan = PanResponder.create({
      onStartShouldSetPanResponder: onPanStart,
      onPanResponderMove: onPanMove,
      onPanResponderRelease: onPanRelease,
      onPanResponderTerminate: onPanRelease
    });
  },

  onViewLayout: function onViewLayout(evt) {
    var height = evt.nativeEvent.layout.height;
    var width = evt.nativeEvent.layout.width;

    var newState = {};
    if (height !== this.state.height) newState.height = height;
    if (width !== this.state.width) newState.width = width;
    this.setState(newState);

    if (this.onViewLayoutCalculated) this.onViewLayoutCalculated();
  },

  onContainerLayout: function onContainerLayout(evt) {
    var height = evt.nativeEvent.layout.height;
    var width = evt.nativeEvent.layout.width;

    if (height == this.state.containerHeight && width == this.state.containerWidth) {
      this.setState({ isInitialized: true });
      return;
    }

    if (this.state.isOpen || this.state.isAnimateOpen) {
      this.animateOpen();
    }

    if (this.props.onLayout) this.props.onLayout(evt);
    this.setState({
      isInitialized: true,
      containerHeight: height,
      containerWidth: width
    });
  },

  renderBackdrop: function renderBackdrop() {
    var backdrop = null;

    if (this.props.backdrop) {
      backdrop = React.createElement(
        TouchableWithoutFeedback,
        { onPress: this.props.backdropPressToClose ? this.close : null, __source: {
            fileName: _jsxFileName,
            lineNumber: 407
          }
        },
        React.createElement(
          Animated.View,
          { style: [styles.absolute, { opacity: this.state.backdropOpacity }], __source: {
              fileName: _jsxFileName,
              lineNumber: 408
            }
          },
          React.createElement(View, { style: [styles.absolute, { backgroundColor: this.props.backdropColor, opacity: this.props.backdropOpacity }], __source: {
              fileName: _jsxFileName,
              lineNumber: 409
            }
          }),
          this.props.backdropContent || []
        )
      );
    }

    return backdrop;
  },

  renderContent: function renderContent() {
    var size = { height: this.state.containerHeight, width: this.state.containerWidth };
    var offsetX = (this.state.containerWidth - this.state.width) / 2;

    return React.createElement(
      Animated.View,
      babelHelpers.extends({
        onLayout: this.onViewLayout,
        style: [styles.wrapper, size, this.props.style, { transform: [{ translateY: this.state.position }, { translateX: offsetX }] }]
      }, this.state.pan.panHandlers, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 424
        }
      }),
      this.props.children
    );
  },

  render: function render() {
    var _this6 = this;

    var visible = this.state.isOpen || this.state.isAnimateOpen || this.state.isAnimateClose;

    if (!visible) return React.createElement(View, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 439
      }
    });

    var content = React.createElement(
      View,
      { style: [styles.transparent, styles.absolute], pointerEvents: 'box-none', __source: {
          fileName: _jsxFileName,
          lineNumber: 442
        }
      },
      React.createElement(
        View,
        { style: { flex: 1 }, pointerEvents: 'box-none', onLayout: this.onContainerLayout, __source: {
            fileName: _jsxFileName,
            lineNumber: 443
          }
        },
        visible && this.renderBackdrop(),
        visible && this.renderContent()
      )
    );

    if (!this.props.coverScreen) return content;

    return React.createElement(
      Modal,
      { onRequestClose: function onRequestClose() {
          return _this6.close();
        }, supportedOrientations: ['landscape', 'portrait'], transparent: true, visible: visible, __source: {
          fileName: _jsxFileName,
          lineNumber: 453
        }
      },
      content
    );
  },

  open: function open() {
    var _this7 = this;

    if (this.props.isDisabled) return;
    if (!this.state.isAnimateOpen && (!this.state.isOpen || this.state.isAnimateClose)) {
      this.onViewLayoutCalculated = function () {
        _this7.setState({});
        _this7.animateOpen();
        if (_this7.props.backButtonClose && Platform.OS === 'android') BackButton.addEventListener('hardwareBackPress', _this7.onBackPress);
        delete _this7.onViewLayoutCalculated;
      };
      this.setState({ isAnimateOpen: true });
    }
  },

  close: function close() {
    if (this.props.isDisabled) return;
    if (!this.state.isAnimateClose && (this.state.isOpen || this.state.isAnimateOpen)) {
      this.animateClose();
      if (this.props.backButtonClose && Platform.OS === 'android') BackButton.removeEventListener('hardwareBackPress', this.onBackPress);
    }
  }

});

module.exports = ModalBox;
}, 699, null, "react-native-modalbox/index.js");
__d(/* YuanXC/src/utils/HTML2.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = HtmlFormatter = function HtmlFormatter(html) {
  var content = "<!DOCTYPE html><meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"initial-scale=1, maximum-scale=1, user-scalable=no, width=device-width\">\n    <meta content=\"telephone=no\" name=\"format-detection\">\n    <title></title>\n    <style>body{font-family: \"\u5FAE\u8F6F\u96C5\u9ED1\",Arial, Helvetica, sans-serif;padding:0;margin:0;color:#9B9B9B;font-size:13px;}\n    </style>\n    <body>" + html + "</body></html>";
  return content;
};
}, 700, null, "YuanXC/src/utils/HTML2.js");
__d(/* YuanXC/src/pages/FinanceBuy.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/FinanceBuy.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  padding-left:15;\n  padding-right:20;\n  padding-top:8;\n  padding-bottom:25;\n  margin-top:10;\n  background-color:#ffffff;\n'], ['\n  padding-left:15;\n  padding-right:20;\n  padding-top:8;\n  padding-bottom:25;\n  margin-top:10;\n  background-color:#ffffff;\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  border-bottom-width:1;\n  border-bottom-color:#eeeeee;\n  width:', ';\n  margin-horizontal:10;\n  margin-top:26;\n  align-self:flex-end;\n'], ['\n  border-bottom-width:1;\n  border-bottom-color:#eeeeee;\n  width:', ';\n  margin-horizontal:10;\n  margin-top:26;\n  align-self:flex-end;\n']),
    _templateObject3 = babelHelpers.taggedTemplateLiteral(['\n  padding-horizontal:14;\n  padding-vertical:10;\n  background-color:#ffffff;\n  margin-top:10;\n'], ['\n  padding-horizontal:14;\n  padding-vertical:10;\n  background-color:#ffffff;\n  margin-top:10;\n']),
    _templateObject4 = babelHelpers.taggedTemplateLiteral(['\n  height:50;\n  border-bottom-width:', ';\n  border-color:#eeeeee;\n'], ['\n  height:50;\n  border-bottom-width:', ';\n  border-color:#eeeeee;\n']),
    _templateObject5 = babelHelpers.taggedTemplateLiteral(['\n  padding-horizontal:12;\n  padding-top:15;\n'], ['\n  padding-horizontal:12;\n  padding-top:15;\n']),
    _templateObject6 = babelHelpers.taggedTemplateLiteral(['\n  width:', ';\n  margin-top:10;\n  margin-bottom:15;\n'], ['\n  width:', ';\n  margin-top:10;\n  margin-bottom:15;\n']),
    _templateObject7 = babelHelpers.taggedTemplateLiteral(['\n  padding-top:4;\n  border-bottom-width:', ';\n  border-bottom-color:#eeeeee;\n'], ['\n  padding-top:4;\n  border-bottom-width:', ';\n  border-bottom-color:#eeeeee;\n']),
    _templateObject8 = babelHelpers.taggedTemplateLiteral(['\n  width:', ';\n  padding-right:14;\n  justify-content:flex-end;\n'], ['\n  width:', ';\n  padding-right:14;\n  justify-content:flex-end;\n']),
    _templateObject9 = babelHelpers.taggedTemplateLiteral(['\n  margin-vertical:40;\n  padding-horizontal:40;\n'], ['\n  margin-vertical:40;\n  padding-horizontal:40;\n']),
    _templateObject10 = babelHelpers.taggedTemplateLiteral(['\n  padding-top:48;\n  padding-bottom:30;\n  background-color:#fff;\n  margin-top:10;\n'], ['\n  padding-top:48;\n  padding-bottom:30;\n  background-color:#fff;\n  margin-top:10;\n']),
    _templateObject11 = babelHelpers.taggedTemplateLiteral(['\n  width:', ';\n  height:', ';\n  margin-top:10;\n  padding-bottom:10;\n  padding-top:6;\n  align-items:center;\n'], ['\n  width:', ';\n  height:', ';\n  margin-top:10;\n  padding-bottom:10;\n  padding-top:6;\n  align-items:center;\n']),
    _templateObject12 = babelHelpers.taggedTemplateLiteral(['\n  flex:1;\n  justify-content:center;\n  padding-bottom\uFF1A10;\n'], ['\n  flex:1;\n  justify-content:center;\n  padding-bottom\uFF1A10;\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _reactNavigation = require(371               ); // 371 = react-navigation

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _reactNativeModalbox = require(699                    ); // 699 = react-native-modalbox

var _reactNativeModalbox2 = babelHelpers.interopRequireDefault(_reactNativeModalbox);

var _MessageBox = require(625                       ); // 625 = ../components/MessageBox

var _MessageBox2 = babelHelpers.interopRequireDefault(_MessageBox);

var _imgs = require(436                ); // 436 = ../resources/imgs

var _imgs2 = babelHelpers.interopRequireDefault(_imgs);

var _reactNative = require(12            ); // 12 = react-native

var _financeDetailActions = require(698                              ); // 698 = ../actions/financeDetailActions

var financeDetailCreator = babelHelpers.interopRequireWildcard(_financeDetailActions);

var _userActions = require(630                     ); // 630 = ../actions/userActions

var userCreator = babelHelpers.interopRequireWildcard(_userActions);

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _Touchable = require(497                      ); // 497 = ../components/Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var _TextInputCustomized = require(638                                ); // 638 = ../components/TextInputCustomized

var _TextInputCustomized2 = babelHelpers.interopRequireDefault(_TextInputCustomized);

var _GuideMenu = require(641                      ); // 641 = ../components/GuideMenu

var _GuideMenu2 = babelHelpers.interopRequireDefault(_GuideMenu);

var _constants = require(434                  ); // 434 = ../config/constants

var _color = require(587              ); // 587 = ../styles/color

var _color2 = babelHelpers.interopRequireDefault(_color);

var _Float = require(628             ); // 628 = ../utils/Float

var _Float2 = babelHelpers.interopRequireDefault(_Float);

var _http = require(622               ); // 622 = ../requests/http

var dismissKeyboard = require(228              ); // 228 = dismissKeyboard

var Container = _native2.default.View(_templateObject);
var Input = (0, _native2.default)(_TextInputCustomized2.default).attrs({
  labelStyle: {
    color: "#999999",
    fontSize: 20
  }
})(_templateObject2, _constants.WINDOW_WIDTH - 110);
var ItemView = _UtilLib.BetweenView.extend(_templateObject3);
var Bar = _UtilLib.BetweenView.extend(_templateObject4, _constants.BORDER_WIDTH);
var PayView = _UtilLib.CenterView.extend(_templateObject5);
var InfoView = _UtilLib.BetweenView.extend(_templateObject6, _constants.WINDOW_WIDTH - 24);
var BorderInput = (0, _native2.default)(_TextInputCustomized2.default)(_templateObject7, _constants.BORDER_WIDTH);
var BDescView = _UtilLib.BetweenView.extend(_templateObject8, _constants.WINDOW_WIDTH);
var Content = _native2.default.View(_templateObject9);
var SuccessContent = _UtilLib.CenterView.extend(_templateObject10);
var Bg = _native2.default.ImageBackground.attrs({
  source: require(702                            ) // 702 = ../resources/imgs/beijing.png
})(_templateObject11, _constants.WINDOW_WIDTH, _constants.WINDOW_WIDTH * 0.32);
var BonusView = _UtilLib.CenterView.extend(_templateObject12);

var FinanceBuy = function (_Component) {
  babelHelpers.inherits(FinanceBuy, _Component);

  function FinanceBuy(props) {
    babelHelpers.classCallCheck(this, FinanceBuy);

    var _this = babelHelpers.possibleConstructorReturn(this, (FinanceBuy.__proto__ || Object.getPrototypeOf(FinanceBuy)).call(this, props));

    var detail = _this.props.detail;
    _this.state = {
      money: '',
      min: detail && detail.minInvestMoney || 0,
      residueMoney: detail && detail.financeMoney && detail.financeMoney - detail.investedMoney || 0,
      code: '',
      pwd: '',
      bonusCount: 0,
      mode: 1,
      loading: false,
      enabled: true,
      second: '',
      sending: false,
      canSend: true,
      messageBox: {
        visible: false,
        content: '',
        button: null
      },
      success: {}
    };
    _this.second = 59;
    return _this;
  }

  babelHelpers.createClass(FinanceBuy, [{
    key: '_showOptionModal',
    value: function _showOptionModal(msg) {
      var _this2 = this;

      this.setState({
        messageBox: {
          visible: true,
          content: msg,
          button: {
            text: '确认',
            onPress: function onPress() {
              _this2.setState({
                messageBox: {
                  visible: false
                }
              }, function () {
                _this2.props.navigation.setParams({
                  gesturesEnabled: true
                });
              });
            }
          }
        }
      }, function () {
        _this2.props.navigation.setParams({
          gesturesEnabled: false
        });
      });
    }
  }, {
    key: '_showOptionModal2',
    value: function _showOptionModal2(msg, onCancel, onConfirm) {
      var _this3 = this;

      this.setState({
        messageBox: {
          visible: true,
          content: msg,
          button: [{
            text: '取消',
            onPress: onCancel
          }, {
            text: '确定',
            onPress: onConfirm
          }]
        }
      }, function () {
        _this3.props.navigation.setParams({
          gesturesEnabled: false
        });
      });
    }
  }, {
    key: '_counter',
    value: function _counter(count) {
      var _this4 = this;

      if (count < 0) {
        if (!isNaN(this.state.money) && this.state.money > 10000) {
          this.setState({
            bonusMoney: '',
            bonusId: '',
            bonusName: '',
            money: parseFloat(this.state.money) - 10000
          }, function () {
            _this4._getBonusList();
          });
        }
      } else {
        if (!isNaN(this.state.money)) {
          this.setState({
            bonusMoney: '',
            bonusId: '',
            bonusName: '',
            money: parseFloat(this.state.money || 0) + 10000
          }, function () {
            _this4._getBonusList();
          });
        }
      }
    }
  }, {
    key: '_submit',
    value: function _submit() {
      var _this5 = this;

      if (!isNaN(this.state.money) && this.state.money > 0) {
        if (this.state.money < this.state.min) {
          this.context.callToast("起投金额最低" + this.state.min);
        } else if (this.state.money > this.props.userInfo.balance) {
          this._showOptionModal2('余额不足是否快捷支付？', function () {
            _this5.setState({ messageBox: { visible: false } }, function () {
              _this5.props.navigation.setParams({
                gesturesEnabled: true
              });
            });
          }, function () {
            _this5.setState({ messageBox: { visible: false } }, function () {
              _this5.props.navigation.setParams({
                gesturesEnabled: true
              });
              setTimeout(function () {
                return _this5.props.navigation.navigate("Recharge", { hideHeader: true });
              });
            });
          });
        } else {
          this.refs.modal.open();
          this.props.navigation.setParams({
            gesturesEnabled: false
          });
        }
      }
    }
  }, {
    key: '_sendCode',
    value: function _sendCode() {
      var _this6 = this;

      if (!this.state.sending && this.state.canSend) {
        this.setState({ sending: true });
        (0, _http.sendCode)({ mobile: this.props.userInfo.mobile, type: 4 }).then(function (data) {
          if (data.data.code === 0) {
            _this6.context.callToast('验证码发送成功');
            _this6.setState({ second: _this6.second, canSend: false, sending: false }, function () {
              _this6.interval = setInterval(function () {
                if (_this6.state.second <= 1) {
                  clearInterval(_this6.interval);
                  _this6.setState({ canSend: true, second: '' });
                } else {
                  _this6.setState({ second: --_this6.state.second });
                }
              }, 1000);
            });
          } else {
            _this6.setState({ sending: false });
            _this6.context.callToast(data.data.msg);
          }
        }).catch(function () {
          _this6.setState({ sending: false });
          _this6.context.callToast('发送失败');
        });
      }
    }
  }, {
    key: '_pay',
    value: function _pay() {
      var _this7 = this;

      var detail = this.props.detail;

      if (!this.state.pwd) {
        this.context.callToast('请输入交易密码');
      } else {
        this.indicator.show();
        (0, _http.invest)({
          fid: detail.id,
          investMoney: this.state.money,
          couponId: this.state.bonusId || '',
          code: this.state.code,
          tradingPassword: this.state.pwd,
          clientType: _constants.OS === "ios" ? 3 : 2
        }).then(function (data) {
          _this7.indicator.hide();
          if (data.data.code === 0) {
            _this7._closeModal();
            _this7.context.callToast('投资成功', true);
            _this7.props.userActions.userProfile(false);
            _this7.props.financeDetailActions.getData(false, false, _this7.props.detail.id);
            _this7.setState({ mode: 2, success: data.data.data }, function () {
              _this7.props.navigation.setParams({
                title: "投资成功"
              });
            });
          } else {
            _this7._showOptionModal(data.data.msg, function () {
              _this7.props.navigation.setParams({
                gesturesEnabled: true
              });
            });
          }
        }).catch(function () {
          _this7.indicator.hide();
          _this7.context.callToast('提交失败');
        });
      }
    }
  }, {
    key: '_closeModal',
    value: function _closeModal() {
      var _this8 = this;

      this.setState({ code: '', pwd: '' }, function () {
        _this8.props.navigation.setParams({
          gesturesEnabled: true
        });
      });
      this.refs.modal.close();
    }
  }, {
    key: '_selectBonus',
    value: function _selectBonus(bonus) {
      var data = {
        bonusMoney: bonus.money,
        bonusType: bonus.type,
        bonusRate: bonus.rate,
        bonusId: bonus.id,
        bonusName: bonus.name
      };
      var _props$detail = this.props.detail,
          rate = _props$detail.rate,
          deadLine = _props$detail.deadLine;

      if (bonus.type && bonus.rate) {
        data.income = this.state.money * (rate + bonus.rate) / 365 * parseInt(deadLine);
      } else {
        data.income = this.state.money * rate / 365 * parseInt(deadLine);
      }
      this.setState(data);
    }
  }, {
    key: '_getBonusList',
    value: function _getBonusList() {
      var _this9 = this;

      if (!isNaN(this.state.money) && this.state.money >= this.state.min) {
        (0, _http.getBonusListForBuy)({ investMoney: this.state.money, fid: this.props.detail.id }).then(function (data) {
          if (data.data.code === 0) {
            var bonusList = data.data.data.memberCouponList;
            var cantList = data.data.data.notUseCouponList;
            cantList.map(function (item) {
              return item.cantUse = true;
            });
            bonusList = bonusList.concat(cantList);
            _this9.setState({
              bonusCount: data.data.data.memberCouponList.length,
              bonusList: bonusList,
              cantCount: cantList.length
            });
          } else {
            _this9.context.callToast(data.data.msg);
          }
        }).catch(function () {
          _this9.context.callToast('红包获取失败');
        });
      }
    }
  }, {
    key: '_buyAll',
    value: function _buyAll() {
      var _this10 = this;

      if (this.state.min > this.props.userInfo.balance) {
        this.context.callToast('账户余额小于起投金额');
      } else {
        var money = void 0;
        if (this.state.min > this.props.userInfo.balance) {
          money = this.state.min;
        } else if (this.state.residueMoney < this.props.userInfo.balance) {
          money = this.state.residueMoney;
        } else {
          money = this.props.userInfo.balance;
        }
        this.setState({
          bonusMoney: '',
          bonusType: '',
          bonusRate: '',
          bonusId: '',
          cantCount: 0,
          cantList: [],
          bonusList: [],
          bonusName: '',
          money: (0, _Float2.default)(money),
          income: money * this.props.detail.rate / 365 * parseInt(this.props.detail.deadLine)
        }, function () {
          _this10._getBonusList();
        });
      }
    }
  }, {
    key: '_renderBuy',
    value: function _renderBuy() {
      var _this11 = this;

      var navigate = this.props.navigation.navigate;
      var _props = this.props,
          userInfo = _props.userInfo,
          detail = _props.detail;

      var residueMoney = detail && detail.financeMoney && detail.financeMoney - detail.investedMoney || 0;
      if (residueMoney !== this.state.residueMoney) {
        this.setState({ residueMoney: residueMoney });
      }
      var canTouch = !isNaN(this.state.money) && this.state.money >= this.state.min ? true : false;
      var desc = "暂无可用福利";
      if (this.state.bonusMoney && this.state.bonusType === 1) {
        desc = this.state.bonusMoney + '\u5143 ' + this.state.bonusName;
      } else if (this.state.bonusRate && this.state.bonusType === 4) {
        desc = (0, _Float2.default)(this.state.bonusRate && this.state.bonusRate * 100) + '% ' + this.state.bonusName;
      } else if (this.state.bonusCount > 0) {
        desc = this.state.bonusCount + '\u4E2A\u53EF\u7528\u798F\u5229';
      } else if (this.state.cantCount > 0) {
        desc = this.state.cantCount + '\u4E2A\u4E0D\u53EF\u7528\u798F\u5229';
      }

      return _react2.default.createElement(
        _UtilLib.InputView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 424
          }
        },
        _react2.default.createElement(
          _UtilLib.FlexView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 425
            }
          },
          _react2.default.createElement(
            _reactNative.KeyboardAvoidingView,
            { behavior: 'position', style: { zIndex: 1, backgroundColor: "#F9F9F9" }, __source: {
                fileName: _jsxFileName,
                lineNumber: 426
              }
            },
            _react2.default.createElement(
              ItemView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 427
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#333333', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 428
                  }
                },
                '\u5269\u4F59\u53EF\u6295 \uFF1A ',
                (0, _Float2.default)(this.state.residueMoney),
                '\u5143'
              )
            ),
            _react2.default.createElement(
              ItemView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 430
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#333333', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 431
                  }
                },
                '\u8D26\u6237\u4F59\u989D \uFF1A ',
                (0, _Float2.default)(userInfo.balance),
                '\u5143'
              ),
              _react2.default.createElement(
                _Touchable2.default,
                { onPress: function onPress() {
                    return navigate("Recharge");
                  }, style: { paddingHorizontal: 10 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 432
                  }
                },
                _react2.default.createElement(
                  _UtilLib.StyledText,
                  { color: '#6195ff', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 433
                    }
                  },
                  '\u5145\u503C'
                )
              )
            ),
            _react2.default.createElement(
              Container,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 436
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#333333', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 437
                  }
                },
                '\u9884\u671F\u6536\u76CA\uFF1A',
                _react2.default.createElement(
                  _UtilLib.StyledText,
                  { color: '#FD8E5A', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 439
                    }
                  },
                  (0, _Float2.default)(this.state.income)
                ),
                '\u5143'
              ),
              _react2.default.createElement(Input, {
                label: '\uFFE5',
                value: this.state.money || 0,
                onChangeText: function onChangeText(text) {
                  if (detail.rate && !isNaN(text) && text > 0) {
                    _this11.setState({
                      money: text,
                      bonusMoney: '',
                      bonusType: '',
                      bonusRate: '',
                      bonusId: '',
                      bonusName: '',
                      bonusCount: 0,
                      cantCount: 0,
                      cantList: [],
                      bonusList: [],
                      income: text * detail.rate / 365 * parseInt(detail.deadLine)
                    }, function () {
                      _this11._getBonusList();
                    });
                  } else {
                    _this11.setState({ money: text, income: 0 });
                  }
                },
                placeholder: '\u8BF7\u8F93\u5165\u91D1\u989D\uFF0C100\u5143\u8D77\u6295',
                hideClear: true,
                keyboardType: 'numeric',
                textInputStyle: {
                  height: 30,
                  textAlign: 'center',
                  fontSize: !isNaN(this.state.money) && this.state.money !== '' ? 24 : 13,
                  color: '#ff8e53'
                },
                textInputWrapper: { paddingRight: 12 },
                onClear: function onClear() {
                  _this11.setState({ money: '' });
                },
                rightLabel: _react2.default.createElement(
                  _Touchable2.default,
                  { onPress: function onPress() {
                      return _this11._buyAll();
                    }, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 479
                    }
                  },
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { color: '#6195ff', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 480
                      }
                    },
                    '\u4F59\u989D\u5168\u6295'
                  )
                ),
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 441
                }
              })
            ),
            _react2.default.createElement(_GuideMenu2.default, {
              style: { paddingHorizontal: 14, marginTop: 10 },
              titleStyle: { fontSize: 13 },
              title: '使用福利',
              iconComment: desc,
              feedback: this.state.bonusCount > 0,
              onPress: function onPress() {
                (_this11.state.bonusCount > 0 || _this11.state.cantCount > 0) && navigate("BonusList", {
                  title: "选择福利",
                  onSelect: _this11._selectBonus.bind(_this11),
                  list: _this11.state.bonusList,
                  selectedId: _this11.state.bonusId
                });
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 485
              }
            })
          ),
          _react2.default.createElement(
            _UtilLib.CenterView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 500
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledButtom,
              { top: '45', radius: '19', width: '153', height: '38', feedback: canTouch,
                onPress: function onPress() {
                  return canTouch && _this11._submit();
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 501
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '14', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 503
                  }
                },
                '\u786E\u8BA4'
              )
            )
          ),
          _react2.default.createElement(
            Content,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 506
              }
            },
            detail && detail.showActivityInvestInfoList && detail.showActivityInvestInfoList.length > 0 && _imgs2.default.qb2(),
            detail && detail.showActivityInvestInfoList.map(function (item, i) {
              var dom = [];
              var arr = item.split("@");
              dom.push(_react2.default.createElement(
                _UtilLib.StyledText,
                { key: 'lb1' + i, color: '#999999', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 512
                  }
                },
                arr[0]
              ));
              if (arr.length > 1) {
                dom.push(_react2.default.createElement(
                  _UtilLib.StyledText,
                  { key: 'lb2' + i, color: '#FCA834', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 514
                    }
                  },
                  arr[1]
                ));
                arr[2] && dom.push(_react2.default.createElement(
                  _UtilLib.StyledText,
                  { key: 'lb3' + i, color: '#999999', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 515
                    }
                  },
                  arr[2]
                ));
              }
              return _react2.default.createElement(
                _UtilLib.CenterRow,
                { key: i, style: { marginTop: 4, flexWrap: "wrap" }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 517
                  }
                },
                dom
              );
            })
          ),
          _react2.default.createElement(
            _reactNativeModalbox2.default,
            { swipeToClose: false, backdropPressToClose: false, style: styles.modal,
              position: "bottom", ref: 'modal', __source: {
                fileName: _jsxFileName,
                lineNumber: 524
              }
            },
            _react2.default.createElement(
              Bar,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 526
                }
              },
              _react2.default.createElement(
                _Touchable2.default,
                { onPress: function onPress() {
                    return _this11._closeModal();
                  }, style: { padding: 15 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 527
                  }
                },
                _imgs2.default.close()
              ),
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '16', color: '#333333', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 530
                  }
                },
                '\u6295\u8D44\u786E\u8BA4'
              ),
              _react2.default.createElement(_UtilLib.CenterView, { style: { width: 27 }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 531
                }
              })
            ),
            _react2.default.createElement(
              PayView,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 533
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '18', color: '#333333', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 534
                  }
                },
                '\xA5',
                (0, _Float2.default)(this.state.money)
              ),
              _react2.default.createElement(
                InfoView,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 535
                  }
                },
                _react2.default.createElement(
                  _UtilLib.StyledText,
                  { color: '#333333', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 536
                    }
                  },
                  '\u652F\u4ED8\u65B9\u5F0F'
                ),
                _react2.default.createElement(
                  _UtilLib.StyledText,
                  { color: '#333333', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 537
                    }
                  },
                  '\u4F59\u989D\u652F\u4ED8\uFF08',
                  userInfo.mobile && userInfo.mobile.replace(/^(\d{3})\d{4}(\d+)/, "$1****$2"),
                  '\uFF09'
                )
              ),
              _react2.default.createElement(BorderInput, {
                label: '\u4EA4\u6613\u5BC6\u7801',
                labelWidth: 100,
                secureTextEntry: true,
                value: this.state.pwd,
                onChangeText: function onChangeText(text) {
                  _this11.setState({ pwd: text });
                },
                placeholder: '\u8BF7\u8F93\u5165\u4EA4\u6613\u5BC6\u7801',
                textInputStyle: { height: 40 },
                onClear: function onClear() {
                  _this11.setState({ pwd: '' });
                },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 541
                }
              }),
              _react2.default.createElement(
                BDescView,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 555
                  }
                },
                _react2.default.createElement(
                  _Touchable2.default,
                  { onPress: function onPress() {
                      return navigate("PayPasswordModify");
                    }, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 556
                    }
                  },
                  _react2.default.createElement(
                    _UtilLib.StyledText,
                    { color: _color2.default.font.blue, size: '12', __source: {
                        fileName: _jsxFileName,
                        lineNumber: 557
                      }
                    },
                    '\u5FD8\u8BB0\u4EA4\u6613\u5BC6\u7801\uFF1F'
                  )
                )
              ),
              _react2.default.createElement(
                _UtilLib.StyledButtom,
                { top: '60', width: '300', height: '40', radius: '8', onPress: function onPress() {
                    return _this11._pay();
                  }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 560
                  }
                },
                _react2.default.createElement(
                  _UtilLib.StyledText,
                  { size: '14', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 561
                    }
                  },
                  '\u5B8C\u6210\u652F\u4ED8'
                )
              )
            ),
            _react2.default.createElement(_UtilLib.ActivityIndicatorModal2, { height: _constants.WINDOW_HEIGHT - 180, ref: function ref(_ref) {
                return _this11.indicator = _ref;
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 564
              }
            })
          ),
          _react2.default.createElement(_MessageBox2.default, {
            visible: this.state.messageBox.visible,
            content: this.state.messageBox.content,
            button: this.state.messageBox.button, __source: {
              fileName: _jsxFileName,
              lineNumber: 566
            }
          })
        )
      );
    }
  }, {
    key: '_complete',
    value: function _complete(type) {
      global.financeListoLoaded = false;
      global.userInfoLoaded = false;
      global.initRouter = "FinanceList";
      if (type === 1) {
        var navigateAction = _reactNavigation.NavigationActions.reset({
          index: 0,
          actions: [_reactNavigation.NavigationActions.navigate({ routeName: 'Main' })]
        });
        this.props.navigation.dispatch(navigateAction);
      } else {
        var _navigateAction = _reactNavigation.NavigationActions.reset({
          index: 1,
          actions: [_reactNavigation.NavigationActions.navigate({ routeName: 'Main' }), _reactNavigation.NavigationActions.navigate({ routeName: 'CapitalList' })]
        });
        this.props.navigation.dispatch(_navigateAction);
      }
    }
  }, {
    key: '_renderSuccess',
    value: function _renderSuccess() {
      var _this12 = this;

      return _react2.default.createElement(
        _UtilLib.FlexView,
        { style: { backgroundColor: "#fff" }, __source: {
            fileName: _jsxFileName,
            lineNumber: 601
          }
        },
        _react2.default.createElement(
          SuccessContent,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 602
            }
          },
          _imgs2.default.operSuccess2({ marginBottom: 18 }),
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#333333', __source: {
                fileName: _jsxFileName,
                lineNumber: 604
              }
            },
            '\u60A8\u5DF2\u6210\u529F\u6295\u8D44\u3010',
            this.state.success.title,
            '\u3011'
          ),
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#333333', top: '10', __source: {
                fileName: _jsxFileName,
                lineNumber: 605
              }
            },
            '\u6295\u8D44\u672C\u91D1',
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#FDA22D', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 607
                }
              },
              ' ',
              (0, _Float2.default)(this.state.success.investMoney),
              ' '
            ),
            '\u5143\uFF0C\u9884\u671F\u6536\u76CA',
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#FDA22D', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 609
                }
              },
              ' ',
              (0, _Float2.default)(this.state.success.interestMoney),
              ' '
            ),
            '\u5143'
          ),
          _react2.default.createElement(
            _UtilLib.RowView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 611
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledButtom,
              { color: '#6295fd', height: '33', radius: '20', top: '40', width: '115',
                style: { borderWidth: 1, borderColor: "#6295fd" },
                onPress: function onPress() {
                  return _this12._complete(1);
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 612
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '14', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 615
                  }
                },
                '\u518D\u6295\u4E00\u7B14'
              )
            ),
            _react2.default.createElement(
              _UtilLib.StyledButtom,
              { color: '#fff', height: '33', radius: '20', top: '40', width: '115',
                style: { borderWidth: 1, borderColor: "#6295fd", marginLeft: 30 },
                onPress: function onPress() {
                  return _this12._complete(2);
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 617
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '14', color: '#6295fd', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 620
                  }
                },
                '\u67E5\u770B\u8BE6\u60C5'
              )
            )
          )
        ),
        this.state.success.showActivityInvestInfoList && this.state.success.showActivityInvestInfoList.length > 0 && this._renderBonus()
      );
    }
  }, {
    key: '_renderBonus',
    value: function _renderBonus() {
      var _this13 = this;

      return _react2.default.createElement(
        _UtilLib.NormalView,
        { style: { backgroundColor: "#F9F9F9" }, __source: {
            fileName: _jsxFileName,
            lineNumber: 630
          }
        },
        _react2.default.createElement(
          Bg,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 631
            }
          },
          _react2.default.createElement(
            BonusView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 632
              }
            },
            this.state.success.showActivityInvestInfoList.map(function (item, i) {
              return _react2.default.createElement(
                _UtilLib.StyledText,
                { key: i, size: '14', top: '4', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 635
                  }
                },
                item
              );
            })
          ),
          _react2.default.createElement(
            _UtilLib.StyledButtom,
            { color: 'transparent', height: '23', radius: '4', top: '6', width: '76',
              style: { borderWidth: 1, borderColor: "#fff" },
              onPress: function onPress() {
                return _this13.props.navigation.navigate("BonusList");
              }, __source: {
                fileName: _jsxFileName,
                lineNumber: 639
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 642
                }
              },
              '\u67E5\u770B\u7EA2\u5305'
            )
          )
        )
      );
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _props2 = this.props,
          userActions = _props2.userActions,
          financeDetailActions = _props2.financeDetailActions,
          navigation = _props2.navigation;

      userActions.userProfile(false);
      navigation.state.params && financeDetailActions.getData(false, false, navigation.state.params.id);
    }
  }, {
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      var params = this.props.navigation.state.params;
      var _params = nextProps.navigation.state.params;
      if (_params && (!params || params.gesturesEnabled != _params.gesturesEnabled)) {
        return false;
      } else {
        return true;
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.interval && clearInterval(this.interval);
    }
  }, {
    key: 'render',
    value: function render() {
      return this.state.mode === 1 ? this._renderBuy() : this._renderSuccess();
    }
  }]);
  return FinanceBuy;
}(_react.Component);

FinanceBuy.navigationOptions = function (_ref2) {
  var navigation = _ref2.navigation,
      screenProps = _ref2.screenProps;
  return {
    title: '投资信息'
  };
};

FinanceBuy.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
  var userInfo = state.user.userInfo;
  var detail = state.financeDetail.detail;
  return { userInfo: userInfo, detail: detail };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var userActions = (0, _redux.bindActionCreators)(userCreator, dispatch);
  var financeDetailActions = (0, _redux.bindActionCreators)(financeDetailCreator, dispatch);
  return { userActions: userActions, financeDetailActions: financeDetailActions };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(FinanceBuy);


var styles = _reactNative.StyleSheet.create({
  modal: {
    width: _constants.WINDOW_WIDTH,
    height: _constants.WINDOW_HEIGHT - 180
  }
});
}, 701, null, "YuanXC/src/pages/FinanceBuy.js");
__d(/* YuanXC/src/resources/imgs/beijing.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":1125,"height":360,"scales":[1],"hash":"747d2c1508f687219899efa58f1c854a","name":"beijing","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 702, null, "YuanXC/src/resources/imgs/beijing.png");
__d(/* YuanXC/src/pages/AboutUs.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/AboutUs.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  margin-top:40;\n  margin-bottom:10;\n'], ['\n  margin-top:40;\n  margin-bottom:10;\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  background-color:#ffffff;\n  padding-horizontal:20;\n  width:', ';\n  padding-vertical:10;\n  border-bottom-width:', ';\n  border-bottom-color:#eeeeee;\n  margin-top:', ';\n'], ['\n  background-color:#ffffff;\n  padding-horizontal:20;\n  width:', ';\n  padding-vertical:10;\n  border-bottom-width:', ';\n  border-bottom-color:#eeeeee;\n  margin-top:', ';\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _reactNativeDeviceInfo = require(435                       ); // 435 = react-native-device-info

var _reactNativeDeviceInfo2 = babelHelpers.interopRequireDefault(_reactNativeDeviceInfo);

var _constants = require(434                  ); // 434 = ../config/constants

var _Touchable = require(497                      ); // 497 = ../components/Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var Image = _native2.default.Image(_templateObject);
var Items = _UtilLib.BetweenView.extend.attrs({
  marginTop: function marginTop(props) {
    return props.marginTop || 0;
  }
})(_templateObject2, _constants.WINDOW_WIDTH, _constants.BORDER_WIDTH, function (props) {
  return props.marginTop;
});

var AboutUs = function (_Component) {
  babelHelpers.inherits(AboutUs, _Component);

  function AboutUs(props) {
    babelHelpers.classCallCheck(this, AboutUs);

    var _this = babelHelpers.possibleConstructorReturn(this, (AboutUs.__proto__ || Object.getPrototypeOf(AboutUs)).call(this, props));

    _this.count = 0;
    _this.state = { Channel: '' };
    return _this;
  }

  babelHelpers.createClass(AboutUs, [{
    key: '_click',
    value: function _click() {
      this.count++;
      if (this.count > 3) {
        this.setState({ Channel: _constants.Channel });
      }
    }
  }, {
    key: '_tel',
    value: function _tel(url) {
      _reactNative.Linking.canOpenURL(url).then(function (supported) {
        if (!supported) {
          console.log('Can\'t handle url: ' + url);
        } else {
          return _reactNative.Linking.openURL(url);
        }
      }).catch(function (err) {
        return console.log('call tel error', err);
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        _UtilLib.CenterView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 61
          }
        },
        _react2.default.createElement(
          _Touchable2.default,
          { feedback: false, onPress: function onPress() {
              return _this2._click();
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 62
            }
          },
          _react2.default.createElement(Image, { source: require(470                         ), __source: { // 470 = ../resources/imgs/logo.png
              fileName: _jsxFileName,
              lineNumber: 63
            }
          })
        ),
        _react2.default.createElement(
          _UtilLib.StyledText,
          { color: '#999999',
            size: '14', __source: {
              fileName: _jsxFileName,
              lineNumber: 65
            }
          },
          global.codePushVersion ? global.codePushVersion + "_" : "v",
          _reactNativeDeviceInfo2.default.getVersion(),
          ' ',
          this.state.Channel
        ),
        _react2.default.createElement(
          _Touchable2.default,
          { onPress: function onPress() {
              return _this2._tel("http://www.liqun888.com");
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 67
            }
          },
          _react2.default.createElement(
            Items,
            { marginTop: 35, __source: {
                fileName: _jsxFileName,
                lineNumber: 68
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#333333', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 69
                }
              },
              '\u7F51\u5740'
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#999999', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 70
                }
              },
              'www.liqun888.com'
            )
          )
        ),
        _react2.default.createElement(
          _Touchable2.default,
          { onPress: function onPress() {
              _this2.context.callToast("复制成功", true);
              _reactNative.Clipboard.setString("liqun88d");
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 73
            }
          },
          _react2.default.createElement(
            Items,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 77
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#333333', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 78
                }
              },
              '\u5B98\u65B9\u5FAE\u4FE1'
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#999999', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 79
                }
              },
              'liqun88d'
            )
          )
        ),
        _react2.default.createElement(
          Items,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 82
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#333333', __source: {
                fileName: _jsxFileName,
                lineNumber: 83
              }
            },
            '\u5BA2\u670D\u90AE\u7BB1'
          ),
          _react2.default.createElement(
            _UtilLib.StyledText,
            { color: '#999999', __source: {
                fileName: _jsxFileName,
                lineNumber: 84
              }
            },
            'postmaster@xinyijinf.com'
          )
        ),
        _react2.default.createElement(
          _Touchable2.default,
          { onPress: function onPress() {
              return _this2._tel("tel:400-871-3088");
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 86
            }
          },
          _react2.default.createElement(
            Items,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 87
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#333333', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 88
                }
              },
              '\u5BA2\u670D\u70ED\u7EBF'
            ),
            _react2.default.createElement(
              _UtilLib.StyledText,
              { color: '#999999', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 89
                }
              },
              '400-871-3088'
            )
          )
        )
      );
    }
  }]);
  return AboutUs;
}(_react.Component);

AboutUs.navigationOptions = function (_ref) {
  var navigation = _ref.navigation,
      screenProps = _ref.screenProps;
  return {
    title: '关于我们'
  };
};

AboutUs.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

exports.default = AboutUs;
}, 703, null, "YuanXC/src/pages/AboutUs.js");
__d(/* YuanXC/src/pages/NotifyDetail.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/NotifyDetail.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _http = require(622               ); // 622 = ../requests/http

var _HTML = require(676            ); // 676 = ../utils/HTML

var _HTML2 = babelHelpers.interopRequireDefault(_HTML);

var WebView1 = function (_Component) {
  babelHelpers.inherits(WebView1, _Component);

  function WebView1(props) {
    babelHelpers.classCallCheck(this, WebView1);

    var _this = babelHelpers.possibleConstructorReturn(this, (WebView1.__proto__ || Object.getPrototypeOf(WebView1)).call(this, props));

    _this.state = {
      loading: true,
      detail: {}
    };
    return _this;
  }

  babelHelpers.createClass(WebView1, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      (0, _http.getNotifiyDetail)({
        id: this.props.navigation.state.params.id
      }).then(function (data) {
        _this2.setState({ loading: false });
        if (data.data.code === 0) {
          _this2.setState({ detail: data.data.data });
        }
      }).catch(function () {
        _this2.setState({ loading: false });
        _this2.context.callToast('加载失败');
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _UtilLib.FlexView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 36
          }
        },
        this.state.detail.title ? _react2.default.createElement(_reactNative.WebView, {
          style: { flex: 1 },
          source: { html: (0, _HTML2.default)(this.state.detail.title, this.state.detail.createdAt, this.state.detail.content) },
          javaScriptEnabled: true,
          domStorageEnabled: true,
          renderError: function renderError() {
            return _react2.default.createElement(_UtilLib.NoData, { visible: true, text: '\u52A0\u8F7D\u5931\u8D25', __source: {
                fileName: _jsxFileName,
                lineNumber: 42
              }
            });
          },
          __source: {
            fileName: _jsxFileName,
            lineNumber: 37
          }
        }) : null,
        _react2.default.createElement(_UtilLib.ActivityIndicatorModal, { visible: this.state.loading, __source: {
            fileName: _jsxFileName,
            lineNumber: 44
          }
        })
      );
    }
  }]);
  return WebView1;
}(_react.Component);

exports.default = WebView1;
}, 704, null, "YuanXC/src/pages/NotifyDetail.js");
__d(/* YuanXC/src/pages/PhoneBind.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/PhoneBind.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  border-bottom-color:#F6F6F6;\n  border-bottom-width:1;\n  padding-left:15;\n'], ['\n  border-bottom-color:#F6F6F6;\n  border-bottom-width:1;\n  padding-left:15;\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  width:', ';\n  margin-top:10;\n  background-color:#fff;\n'], ['\n  width:', ';\n  margin-top:10;\n  background-color:#fff;\n']),
    _templateObject3 = babelHelpers.taggedTemplateLiteral(['\n  width:100;\n  height:38;\n  align-items:center;\n  justify-content:center;\n'], ['\n  width:100;\n  height:38;\n  align-items:center;\n  justify-content:center;\n']),
    _templateObject4 = babelHelpers.taggedTemplateLiteral(['\n  width:', ';\n  height:28;\n'], ['\n  width:', ';\n  height:28;\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _imgs = require(436                ); // 436 = ../resources/imgs

var _imgs2 = babelHelpers.interopRequireDefault(_imgs);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _reactNavigation = require(371               ); // 371 = react-navigation

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _formStyles = require(637                   ); // 637 = ../styles/formStyles

var _formStyles2 = babelHelpers.interopRequireDefault(_formStyles);

var _TextInputCustomized = require(638                                ); // 638 = ../components/TextInputCustomized

var _TextInputCustomized2 = babelHelpers.interopRequireDefault(_TextInputCustomized);

var _Touchable = require(497                      ); // 497 = ../components/Touchable

var _Touchable2 = babelHelpers.interopRequireDefault(_Touchable);

var _constants = require(434                  ); // 434 = ../config/constants

var _userActions = require(630                     ); // 630 = ../actions/userActions

var userCreator = babelHelpers.interopRequireWildcard(_userActions);

var _http = require(622               ); // 622 = ../requests/http

var Input = (0, _native2.default)(_TextInputCustomized2.default)(_templateObject);
var LInputView = _UtilLib.CenterView.extend(_templateObject2, _constants.WINDOW_WIDTH);
var RightButton = (0, _native2.default)(_Touchable2.default)(_templateObject3);
var ImageCode = _native2.default.Image.attrs({
  resizeMode: "contain"
})(_templateObject4, 28 * 3);

var PhoneBind = function (_Component) {
  babelHelpers.inherits(PhoneBind, _Component);

  function PhoneBind(props) {
    babelHelpers.classCallCheck(this, PhoneBind);

    var _this = babelHelpers.possibleConstructorReturn(this, (PhoneBind.__proto__ || Object.getPrototypeOf(PhoneBind)).call(this, props));

    _this._getImageCode = function () {
      if (!_this.sending) {
        _this.sending = true;
        (0, _http.getImageCode)().then(function (data) {
          _this.sending = false;
          if (data.data.code === 0) {
            _this.setState({
              codeUrl: "data:image/gif;base64," + data.data.data.picCode,
              ticketId: data.data.data.ticketId
            });
          } else {
            _this.setState({ loading: false });
            _this.context.callToast(data.data.msg);
          }
        }).catch(function () {
          _this.sending = false;
          _this.setState({ loading: false });
          _this.context.callToast('提交失败');
        });
      }
    };

    _this._next = function () {
      if (!_this.state.mobile) {
        _this.context.callToast('请输入原手机号');
      } else if (!/^[1][345678][0-9]{9}$/.test(_this.state.mobile)) {
        _this.context.callToast('请输入正确的手机号');
      } else if (!_this.state.imageCode) {
        _this.context.callToast('请输入图形验证码');
      } else if (!_this.state.code) {
        _this.context.callToast('请输入短信验证码');
      } else {
        _this.setState({ loading: true });
        (0, _http.checkPhone)({
          mobile: _this.state.mobile,
          code: _this.state.code
        }).then(function (data) {
          if (data.data.code === 0) {
            _this.setState({
              mode: 2,
              mobile: '',
              imageCode: '',
              code: '',
              loading: false,
              sending: false,
              canSend: true,
              second: ''
            }, function () {
              _this.interval && clearInterval(_this.interval);
              _this._getImageCode();
            });
          } else {
            _this.setState({ loading: false });
            _this.context.callToast(data.data.msg);
          }
        }).catch(function () {
          _this.setState({ loading: false });
          _this.context.callToast('提交失败');
        });
      }
    };

    _this._submit = function () {
      if (!_this.state.mobile) {
        _this.context.callToast('请输入新手机号');
      } else if (!/^[1][345678][0-9]{9}$/.test(_this.state.mobile)) {
        _this.context.callToast('请输入正确的手机号');
      } else if (!_this.state.imageCode) {
        _this.context.callToast('请输入图形验证码');
      } else if (!_this.state.code) {
        _this.context.callToast('请输入短信验证码');
      } else {
        _this.setState({ loading: true });
        (0, _http.modifyPhone)({ mobile: _this.state.mobile, code: _this.state.code }).then(function (data) {
          _this.setState({ loading: false });
          if (data.data.code === 0) {
            _this.context.callToast('修改成功', true);
            setTimeout(function () {
              var navigateAction = _reactNavigation.NavigationActions.reset({
                index: 1,
                actions: [_reactNavigation.NavigationActions.navigate({ routeName: 'Main' }), _reactNavigation.NavigationActions.navigate({ routeName: 'Login' })]
              });
              _this.props.navigation.dispatch(navigateAction);
            }, 300);
          } else {
            _this.context.callToast(data.data.msg);
          }
        }).catch(function () {
          _this.setState({ loading: false });
          _this.context.callToast('提交失败');
        });
      }
    };

    _this._sendCode = function () {
      if (!_this.state.mobile) {
        _this.context.callToast('\u8BF7\u8F93\u5165' + (_this.state.mode === 1 ? "原" : "新") + '\u624B\u673A\u53F7');
      } else if (!/^[1][345678][0-9]{9}$/.test(_this.state.mobile)) {
        _this.context.callToast('请输入正确的手机号');
      } else if (!_this.state.imageCode) {
        _this.context.callToast('请输入图形验证码');
      } else {
        if (!_this.state.sending && _this.state.canSend) {
          _this.setState({ sending: true });
          (0, _http.sendCode)({
            mobile: _this.state.mobile,
            type: _this.state.mode === 1 ? 9 : 10,
            ticketId: _this.state.ticketId,
            picCode: _this.state.imageCode,
            clientType: _constants.OS === "ios" ? 3 : 2
          }).then(function (data) {
            if (data.data.code === 0) {
              _this.context.callToast('验证码发送成功');
              _this._getImageCode();
              _this.setState({ second: _this.second, canSend: false, sending: false }, function () {
                _this.interval = setInterval(function () {
                  if (_this.state.second == 1) {
                    clearInterval(_this.interval);
                    _this.setState({ canSend: true, second: '' });
                  } else {
                    _this.setState({ second: --_this.state.second });
                  }
                }, 1000);
              });
            } else {
              _this.setState({ sending: false });
              _this.context.callToast(data.data.msg);
            }
          }).catch(function () {
            _this.setState({ sending: false });
            _this.context.callToast('发送失败');
          });
        }
      }
    };

    _this.state = {
      mode: 2,
      second: '',
      loading: false,
      sending: false,
      canSend: true
    };
    _this.second = 59;
    _this.sending = false;
    return _this;
  }

  babelHelpers.createClass(PhoneBind, [{
    key: '_renderOld',
    value: function _renderOld() {
      var _this2 = this;

      return _react2.default.createElement(
        _UtilLib.NormalView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 206
          }
        },
        _react2.default.createElement(
          LInputView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 207
            }
          },
          _react2.default.createElement(Input, {
            value: this.state.mobile,
            onChangeText: function onChangeText(text) {
              _this2.setState({ mobile: text });
            },
            borderBottom: true,
            keyboardType: 'numeric',
            placeholder: '\u8BF7\u8F93\u5165\u539F\u624B\u673A\u53F7',
            textInputStyle: { height: 44 },
            onClear: function onClear() {
              _this2.setState({ mobile: '' });
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 208
            }
          }),
          _react2.default.createElement(Input, {
            value: this.state.imageCode,
            onChangeText: function onChangeText(text) {
              _this2.setState({ imageCode: text });
            },
            borderBottom: true,
            hideClear: true,
            placeholder: '\u8BF7\u8F93\u5165\u56FE\u5F62\u9A8C\u8BC1\u7801',
            textInputWrapper: { paddingRight: 0 },
            textInputStyle: { height: 44 },
            onClear: function onClear() {
              _this2.setState({ imageCode: '' });
            },
            flag: this.state.codeUrl,
            rightLabel: _react2.default.createElement(
              RightButton,
              { onPress: this._getImageCode, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 236
                }
              },
              _react2.default.createElement(ImageCode, { source: this.state.codeUrl && { uri: this.state.codeUrl }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 237
                }
              })
            ),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 221
            }
          }),
          _react2.default.createElement(Input, {
            value: this.state.code,
            onChangeText: function onChangeText(text) {
              _this2.setState({ code: text });
            },
            borderBottom: true,
            hideClear: true,
            placeholder: '\u8BF7\u8F93\u5165\u624B\u673A\u9A8C\u8BC1\u7801',
            textInputWrapper: { paddingRight: 0 },
            textInputStyle: { height: 44 },
            onClear: function onClear() {
              _this2.setState({ code: '' });
            },
            flag: this.state.canSend + this.state.second + this.state.sending,
            rightLabel: _react2.default.createElement(
              RightButton,
              { feedback: this.state.canSend && !this.state.sending, onPress: this._sendCode, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 256
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: !this.state.canSend || this.state.sending ? '#979797' : "#4FCAD2",
                  height: '24', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 257
                  }
                },
                this.state.second ? this.state.second + 'S\u540E\u91CD\u53D1' : '获取验证码'
              )
            ),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 241
            }
          })
        ),
        _react2.default.createElement(
          _UtilLib.CenterView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 263
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledButtom,
            { onPress: this._next, radius: '5', __source: {
                fileName: _jsxFileName,
                lineNumber: 264
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { size: '14', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 265
                }
              },
              '\u4E0B\u4E00\u6B65'
            )
          )
        )
      );
    }
  }, {
    key: '_renderNew',
    value: function _renderNew() {
      var _this3 = this;

      return _react2.default.createElement(
        _UtilLib.NormalView,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 274
          }
        },
        _react2.default.createElement(
          LInputView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 275
            }
          },
          _react2.default.createElement(Input, {
            icon: _imgs2.default.phoneshouji(_formStyles2.default.textInputIcon),
            value: this.state.mobile,
            onChangeText: function onChangeText(text) {
              _this3.setState({ mobile: text });
            },
            borderBottom: true,
            keyboardType: 'numeric',
            placeholder: '\u8BF7\u8F93\u5165\u65B0\u624B\u673A\u53F7',
            textInputStyle: { height: 38 },
            onClear: function onClear() {
              _this3.setState({ mobile: '' });
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 276
            }
          }),
          _react2.default.createElement(Input, {
            icon: _imgs2.default.phoneanquan(_formStyles2.default.textInputIcon),
            value: this.state.imageCode,
            onChangeText: function onChangeText(text) {
              _this3.setState({ imageCode: text });
            },
            borderBottom: true,
            hideClear: true,
            placeholder: '\u8BF7\u8F93\u5165\u56FE\u5F62\u9A8C\u8BC1\u7801',
            textInputStyle: { height: 38 },
            onClear: function onClear() {
              _this3.setState({ imageCode: '' });
            },
            flag: this.state.codeUrl,
            rightLabel: _react2.default.createElement(
              RightButton,
              { onPress: this._getImageCode, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 305
                }
              },
              _react2.default.createElement(ImageCode, { source: this.state.codeUrl && { uri: this.state.codeUrl }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 306
                }
              })
            ),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 290
            }
          }),
          _react2.default.createElement(Input, {
            icon: _imgs2.default.phoneanquan(_formStyles2.default.textInputIcon),
            value: this.state.code,
            onChangeText: function onChangeText(text) {
              _this3.setState({ code: text });
            },
            borderBottom: true,
            hideClear: true,
            placeholder: '\u8BF7\u8F93\u5165\u624B\u673A\u9A8C\u8BC1\u7801',
            textInputWrapper: { paddingRight: 0 },
            textInputStyle: { height: 38 },
            onClear: function onClear() {
              _this3.setState({ code: '' });
            },
            flag: this.state.canSend + this.state.second + this.state.sending,
            rightLabel: _react2.default.createElement(
              RightButton,
              { feedback: this.state.canSend || this.state.sending, onPress: this._sendCode, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 326
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { color: '#4FCAD2',
                  height: '24', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 327
                  }
                },
                this.state.second ? this.state.second + 'S\u540E\u91CD\u53D1' : '获取验证码'
              )
            ),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 310
            }
          })
        ),
        _react2.default.createElement(
          _UtilLib.CenterView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 333
            }
          },
          _react2.default.createElement(
            _UtilLib.StyledButtom,
            { onPress: this._submit, radius: '5', __source: {
                fileName: _jsxFileName,
                lineNumber: 334
              }
            },
            _react2.default.createElement(
              _UtilLib.StyledText,
              { size: '14', __source: {
                  fileName: _jsxFileName,
                  lineNumber: 335
                }
              },
              '\u4E0B\u4E00\u6B65'
            )
          )
        )
      );
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._getImageCode();
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _UtilLib.ScrollLayout,
        { color: 'transparent', __source: {
            fileName: _jsxFileName,
            lineNumber: 348
          }
        },
        _react2.default.createElement(
          _UtilLib.CenterView,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 349
            }
          },
          this.state.mode === 1 ? this._renderOld() : this._renderNew()
        )
      );
    }
  }]);
  return PhoneBind;
}(_react.Component);

PhoneBind.navigationOptions = function (_ref) {
  var navigation = _ref.navigation;
  return {
    title: '更改手机号码'
  };
};

PhoneBind.contextTypes = {
  callToast: _propTypes2.default.func.isRequired
};

var mapStateToProps = function mapStateToProps(state) {
  var user = state.user;

  return { user: user };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var userActions = (0, _redux.bindActionCreators)(userCreator, dispatch);
  return { userActions: userActions };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(PhoneBind);
}, 705, null, "YuanXC/src/pages/PhoneBind.js");
__d(/* YuanXC/src/components/Modal.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/components/Modal.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require(12            ); // 12 = react-native

var _reactRedux = require(333          ); // 333 = react-redux

var _redux = require(344    ); // 344 = redux

var _global = require(433               ); // 433 = ../styles/global

var _global2 = babelHelpers.interopRequireDefault(_global);

var _modalActions = require(646                      ); // 646 = ../actions/modalActions

var modalCreator = babelHelpers.interopRequireWildcard(_modalActions);

var _reactNativeModalbox = require(699                    ); // 699 = react-native-modalbox

var _reactNativeModalbox2 = babelHelpers.interopRequireDefault(_reactNativeModalbox);

var Modal = function (_Component) {
  babelHelpers.inherits(Modal, _Component);

  function Modal(props) {
    babelHelpers.classCallCheck(this, Modal);
    return babelHelpers.possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this, props));
  }

  babelHelpers.createClass(Modal, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          modalActions = _props.modalActions,
          modal = _props.modal;

      return _react2.default.createElement(
        _reactNativeModalbox2.default,
        {
          style: _global2.default.modalBox,
          ref: function ref(_ref) {
            _this2.modal = _ref;
          },
          backButtonClose: true,
          onClosed: function onClosed() {
            modal.visible && modalActions.toggleModal();
          },
          swipeToClose: modal.swipeClose, __source: {
            fileName: _jsxFileName,
            lineNumber: 22
          }
        },
        modal.children
      );
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var modal = nextProps.modal;

      if (modal.visible) {
        this.modal && this.modal.open();
      } else {
        this.modal && this.modal.close();
      }
    }
  }]);
  return Modal;
}(_react.Component);

var mapStateToProps = function mapStateToProps(state) {
  var modal = state.modal;

  return { modal: modal };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  var modalActions = (0, _redux.bindActionCreators)(modalCreator, dispatch);
  return { modalActions: modalActions };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Modal);
}, 706, null, "YuanXC/src/components/Modal.js");
__d(/* YuanXC/src/components/ToastWrapper.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TOAST_TYPES = undefined;
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/components/ToastWrapper.js';

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _propTypes = require(126         ); // 126 = prop-types

var _propTypes2 = babelHelpers.interopRequireDefault(_propTypes);

var _reactNative = require(12            ); // 12 = react-native

var _imgs = require(436                ); // 436 = ../resources/imgs

var _imgs2 = babelHelpers.interopRequireDefault(_imgs);

var _constants = require(434                  ); // 434 = ../config/constants

var TOAST_TYPES = exports.TOAST_TYPES = {
  SUCCESS: 'success',
  TIP: 'tip'
};

var ToastWrapper = function (_Component) {
  babelHelpers.inherits(ToastWrapper, _Component);

  function ToastWrapper(props) {
    babelHelpers.classCallCheck(this, ToastWrapper);

    var _this = babelHelpers.possibleConstructorReturn(this, (ToastWrapper.__proto__ || Object.getPrototypeOf(ToastWrapper)).call(this, props));

    _this.animatedXValue = new _reactNative.Animated.Value(-_constants.WINDOW_WIDTH);
    _this.animatedOpacityValue = new _reactNative.Animated.Value(0);
    _this.state = {
      toastAlreadyShow: false,
      toastText: "",
      toastType: TOAST_TYPES.TIP
    };
    return _this;
  }

  babelHelpers.createClass(ToastWrapper, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        callToast: this.callToast.bind(this),
        closeToast: this.closeToast.bind(this)
      };
    }
  }, {
    key: 'callToast',
    value: function callToast(text, type) {
      if (this.state.toastAlreadyShow) return void 0;
      this.setState({
        toastAlreadyShow: true,
        toastText: text,
        toastType: type || TOAST_TYPES.TIP
      });
      _reactNative.Animated.sequence([_reactNative.Animated.timing(this.animatedXValue, {
        toValue: 0,
        duration: 0
      }), _reactNative.Animated.timing(this.animatedOpacityValue, {
        toValue: 1,
        duration: 0
      })]).start(this.closeToast.bind(this));
    }
  }, {
    key: 'closeToast',
    value: function closeToast() {
      var _this2 = this;

      this.timer = setTimeout(function () {
        _this2.setState({ toastAlreadyShow: false });
        _reactNative.Animated.sequence([_reactNative.Animated.timing(_this2.animatedOpacityValue, {
          toValue: 0,
          duration: 300
        }), _reactNative.Animated.timing(_this2.animatedXValue, {
          toValue: -_constants.WINDOW_WIDTH,
          duration: 0
        })]).start();
      }, 1000);
    }
  }, {
    key: '_getToastPosition',
    value: function _getToastPosition(type) {
      switch (type) {
        case 'top':
          return 70;
        case 'bottom':
          return _constants.WINDOW_HEIGHT - 70;
        default:
          return Math.floor((_constants.WINDOW_HEIGHT - 130) / 2);
      }
    }
  }, {
    key: '_getSuccessToastContent',
    value: function _getSuccessToastContent(text) {
      return _react2.default.createElement(
        _reactNative.View,
        { style: {
            width: 120,
            height: 120,
            borderRadius: 10,
            backgroundColor: 'rgba(0,0,0,0.65)',
            justifyContent: 'center',
            alignItems: 'center'
          }, __source: {
            fileName: _jsxFileName,
            lineNumber: 88
          }
        },
        _imgs2.default.successTip({ width: 45, height: 45, marginBottom: 5 }),
        _react2.default.createElement(
          _reactNative.Text,
          { style: { color: '#FFF' }, __source: {
              fileName: _jsxFileName,
              lineNumber: 97
            }
          },
          text
        )
      );
    }
  }, {
    key: '_getTipToastContent',
    value: function _getTipToastContent(text) {
      return _react2.default.createElement(
        _reactNative.View,
        { style: {
            paddingVertical: 10,
            paddingHorizontal: 15,
            justifyContent: 'center',
            alignItems: 'center',
            borderRadius: 5,
            backgroundColor: 'rgba(0,0,0,0.65)' }, __source: {
            fileName: _jsxFileName,
            lineNumber: 104
          }
        },
        _react2.default.createElement(
          _reactNative.Text,
          { style: { color: '#FFF' }, __source: {
              fileName: _jsxFileName,
              lineNumber: 111
            }
          },
          text
        )
      );
    }
  }, {
    key: '_getToastContent',
    value: function _getToastContent() {
      return this.state.toastType === TOAST_TYPES.TIP ? this._getTipToastContent(this.state.toastText) : this._getSuccessToastContent(this.state.toastText);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.timer && clearTimeout(this.timer);
    }
  }, {
    key: 'render',
    value: function render() {
      var top = this._getToastPosition(this.props.positionType);
      return _react2.default.createElement(
        _reactNative.View,
        { style: { flex: 1, position: 'relative' }, __source: {
            fileName: _jsxFileName,
            lineNumber: 129
          }
        },
        this.props.children,
        _react2.default.createElement(
          _reactNative.Animated.View,
          { style: {
              transform: [{ translateX: this.animatedXValue }],
              opacity: this.animatedOpacityValue,
              position: 'absolute',
              left: 0,
              height: 130,
              top: top,
              width: _constants.WINDOW_WIDTH,
              justifyContent: 'center',
              alignItems: 'center'
            }, __source: {
              fileName: _jsxFileName,
              lineNumber: 131
            }
          },
          this._getToastContent()
        )
      );
    }
  }]);
  return ToastWrapper;
}(_react.Component);

exports.default = ToastWrapper;


ToastWrapper.propTypes = {
  positionType: _propTypes2.default.oneOf(['top', 'bottom', 'middle'])
};

ToastWrapper.defaultProps = {
  positionType: 'middle'
};

ToastWrapper.childContextTypes = {
  callToast: _propTypes2.default.func.isRequired,
  closeToast: _propTypes2.default.func.isRequired
};
}, 707, null, "YuanXC/src/components/ToastWrapper.js");
__d(/* YuanXC/src/pages/Splash.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/Users/mac/Documents/YuanXiaoCai/src/pages/Splash.js';

var _templateObject = babelHelpers.taggedTemplateLiteral(['\n  background-color:#ffffff;\n  position:absolute;\n  top:0;\n  justify-content:center;\n  width:', ';\n  height:', ';\n'], ['\n  background-color:#ffffff;\n  position:absolute;\n  top:0;\n  justify-content:center;\n  width:', ';\n  height:', ';\n']),
    _templateObject2 = babelHelpers.taggedTemplateLiteral(['\n  width:', ';\n  height:', ';\n  position:absolute;\n  top:0;\n'], ['\n  width:', ';\n  height:', ';\n  position:absolute;\n  top:0;\n']),
    _templateObject3 = babelHelpers.taggedTemplateLiteral(['\n  justify-content:center;\n  height:', ';\n  background-color:#000;\n'], ['\n  justify-content:center;\n  height:', ';\n  background-color:#000;\n']),
    _templateObject4 = babelHelpers.taggedTemplateLiteral(['\n   width:', ';\n  height:', ';\n'], ['\n   width:', ';\n  height:', ';\n']),
    _templateObject5 = babelHelpers.taggedTemplateLiteral(['\n  padding-bottom:80;\n  margin-top:40;\n  justify-content:flex-start;\n'], ['\n  padding-bottom:80;\n  margin-top:40;\n  justify-content:flex-start;\n']),
    _templateObject6 = babelHelpers.taggedTemplateLiteral(['\n  position:absolute;\n  bottom:72;\n  opacity:0;\n'], ['\n  position:absolute;\n  bottom:72;\n  opacity:0;\n']);

var _react = require(35     ); // 35 = react

var _react2 = babelHelpers.interopRequireDefault(_react);

var _native = require(509                       ); // 509 = styled-components/native

var _native2 = babelHelpers.interopRequireDefault(_native);

var _reactNativeSwiper = require(583                  ); // 583 = react-native-swiper

var _reactNativeSwiper2 = babelHelpers.interopRequireDefault(_reactNativeSwiper);

var _reactNative = require(12            ); // 12 = react-native

var _UtilLib = require(586                    ); // 586 = ../components/UtilLib

var _constants = require(434                  ); // 434 = ../config/constants

var _LocalStorage = require(620                    ); // 620 = ../utils/LocalStorage

var _LocalStorage2 = babelHelpers.interopRequireDefault(_LocalStorage);

var _XStatusBar = require(709                  ); // 709 = ../utils/XStatusBar

var XStatusBar = babelHelpers.interopRequireWildcard(_XStatusBar);


var Container = _native2.default.View(_templateObject, _constants.WINDOW_WIDTH, _constants.WINDOW_HEIGHT + 30);
var SplashImage = _native2.default.Image.attrs({
  resizeMode: "stretch"
})(_templateObject2, _constants.WINDOW_WIDTH, _constants.WINDOW_HEIGHT);
var SwiperView = _UtilLib.CenterView.extend(_templateObject3, _constants.WINDOW_HEIGHT);
var Image = _native2.default.Image.attrs({
  resizeMode: 'contain'
})(_templateObject4, _constants.WINDOW_WIDTH, _constants.WINDOW_HEIGHT);
var BottomView = _UtilLib.CenterView.extend(_templateObject5);
var EnterButton = _UtilLib.StyledButtom.extend(_templateObject6);

var Splash = function (_Component) {
  babelHelpers.inherits(Splash, _Component);

  function Splash(props) {
    babelHelpers.classCallCheck(this, Splash);

    var _this = babelHelpers.possibleConstructorReturn(this, (Splash.__proto__ || Object.getPrototypeOf(Splash)).call(this, props));

    _this.state = { visible: false, loaded: false };
    return _this;
  }

  babelHelpers.createClass(Splash, [{
    key: '_enter',
    value: function _enter() {
      this.setState({ visible: false, loaded: true });
      XStatusBar.setDark();
    }
  }, {
    key: 'componentWillMount',
    value: function componentWillMount() {
      var _this2 = this;

      _LocalStorage2.default.getItem(global.splashInit, function (data) {
        if (data) {
          var deley = __DEV__ ? 500 : 3000;
          setTimeout(function () {
            _this2.setState({ loaded: true });
            XStatusBar.setDark();
          }, deley);
        } else {
          setTimeout(function () {
            _this2.setState({ visible: true }, function () {
              _LocalStorage2.default.setItem(global.splashInit, true);
            });
          }, 1000);
        }
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      return this.state.visible ? _react2.default.createElement(
        Container,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 81
          }
        },
        _react2.default.createElement(_reactNative.StatusBar, { hidden: true, __source: {
            fileName: _jsxFileName,
            lineNumber: 82
          }
        }),
        _react2.default.createElement(
          _reactNativeSwiper2.default,
          { showsPagination: false, loop: false, __source: {
              fileName: _jsxFileName,
              lineNumber: 83
            }
          },
          _react2.default.createElement(
            SwiperView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 84
              }
            },
            _react2.default.createElement(Image, { source: require(710                            ), __source: { // 710 = ../resources/imgs/swiper1.png
                fileName: _jsxFileName,
                lineNumber: 85
              }
            })
          ),
          _react2.default.createElement(
            SwiperView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 87
              }
            },
            _react2.default.createElement(Image, { source: require(711                            ), __source: { // 711 = ../resources/imgs/swiper2.png
                fileName: _jsxFileName,
                lineNumber: 88
              }
            })
          ),
          _react2.default.createElement(
            SwiperView,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 90
              }
            },
            _react2.default.createElement(Image, { source: require(712                            ), __source: { // 712 = ../resources/imgs/swiper3.png
                fileName: _jsxFileName,
                lineNumber: 91
              }
            }),
            _react2.default.createElement(
              EnterButton,
              { color: '#5698DA', feedback: false, width: '160', height: '80', radius: '4', onPress: function onPress() {
                  return _this3._enter();
                }, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 92
                }
              },
              _react2.default.createElement(
                _UtilLib.StyledText,
                { size: '16', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 93
                  }
                },
                '\u7ACB\u5373\u542F\u7528'
              )
            )
          )
        )
      ) : this.state.loaded ? _react2.default.createElement(_reactNative.StatusBar, { barStyle: 'dark-content', translucent: true, backgroundColor: 'transparent', hidden: false,
        showHideTransition: 'fade',
        animated: true, __source: {
          fileName: _jsxFileName,
          lineNumber: 100
        }
      }) : _react2.default.createElement(
        Container,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 104
          }
        },
        _react2.default.createElement(_reactNative.StatusBar, { hidden: true, __source: {
            fileName: _jsxFileName,
            lineNumber: 105
          }
        }),
        _react2.default.createElement(SplashImage, { source: require(713                           ), __source: { // 713 = ../resources/imgs/splash.png
            fileName: _jsxFileName,
            lineNumber: 106
          }
        })
      );
    }
  }]);
  return Splash;
}(_react.Component);

exports.default = Splash;
}, 708, null, "YuanXC/src/pages/Splash.js");
__d(/* YuanXC/src/utils/XStatusBar.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setDark = setDark;

var _reactNative = require(12            ); // 12 = react-native

var RNStatusBar = _reactNative.NativeModules.RNStatusBar;

function setDark() {
  RNStatusBar && RNStatusBar.setDark();
}
}, 709, null, "YuanXC/src/utils/XStatusBar.js");
__d(/* YuanXC/src/resources/imgs/swiper1.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":750,"height":1334,"scales":[1],"hash":"c113ff2a5f0a23053726ef96a357eef2","name":"swiper1","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 710, null, "YuanXC/src/resources/imgs/swiper1.png");
__d(/* YuanXC/src/resources/imgs/swiper2.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":750,"height":1334,"scales":[1],"hash":"434cfea6329314851c5359fc738d197e","name":"swiper2","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 711, null, "YuanXC/src/resources/imgs/swiper2.png");
__d(/* YuanXC/src/resources/imgs/swiper3.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":750,"height":1334,"scales":[1],"hash":"0668ba1fcf37ad318e78a8427a1cbd35","name":"swiper3","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 712, null, "YuanXC/src/resources/imgs/swiper3.png");
__d(/* YuanXC/src/resources/imgs/splash.png */function(global, require, module, exports) {module.exports=require(160                                         ).registerAsset({"__packager_asset":true,"httpServerLocation":"/assets/src/resources/imgs","width":750,"height":1334,"scales":[1],"hash":"255b68865c0c7d03860b9805321f5881","name":"splash","type":"png"}); // 160 = react-native/Libraries/Image/AssetRegistry
}, 713, null, "YuanXC/src/resources/imgs/splash.png");
__d(/* YuanXC/src/config/store.js */function(global, require, module, exports) {'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = configureStore;

var _redux = require(344    ); // 344 = redux

var _reduxThunk = require(715          ); // 715 = redux-thunk

var _reduxThunk2 = babelHelpers.interopRequireDefault(_reduxThunk);

var _reducers = require(716          ); // 716 = ../reducers

var reducers = babelHelpers.interopRequireWildcard(_reducers);

var middlewares = [_reduxThunk2.default];

var createSoreWithMiddleware = _redux.applyMiddleware.apply(undefined, middlewares)(_redux.createStore);

function configureStore(initialState) {
    var reducer = (0, _redux.combineReducers)(reducers);

    var store = createSoreWithMiddleware(reducer, initialState);

    return store;
}
}, 714, null, "YuanXC/src/config/store.js");
__d(/* redux-thunk/lib/index.js */function(global, require, module, exports) {'use strict';

exports.__esModule = true;
function createThunkMiddleware(extraArgument) {
  return function (_ref) {
    var dispatch = _ref.dispatch,
        getState = _ref.getState;
    return function (next) {
      return function (action) {
        if (typeof action === 'function') {
          return action(dispatch, getState, extraArgument);
        }

        return next(action);
      };
    };
  };
}

var thunk = createThunkMiddleware();
thunk.withExtraArgument = createThunkMiddleware;

exports['default'] = thunk;
}, 715, null, "redux-thunk/lib/index.js");
__d(/* YuanXC/src/reducers/index.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.notifyList = exports.financeDetail = exports.financeList = exports.messageList = exports.bankCardDetail = exports.bonusList = exports.capitalDetail = exports.capitalList = exports.capitalRecord = exports.bankList = exports.forgetPassword = exports.passwordEdit = exports.register = exports.loanAdd = exports.user = exports.modal = exports.workingTable = undefined;

var _workingTableReducers = require(717                     ); // 717 = ./workingTableReducers

var _workingTableReducers2 = babelHelpers.interopRequireDefault(_workingTableReducers);

var _modalReducers = require(718              ); // 718 = ./modalReducers

var _modalReducers2 = babelHelpers.interopRequireDefault(_modalReducers);

var _userReducers = require(719             ); // 719 = ./userReducers

var _userReducers2 = babelHelpers.interopRequireDefault(_userReducers);

var _loadAddReducers = require(720                ); // 720 = ./loadAddReducers

var _loadAddReducers2 = babelHelpers.interopRequireDefault(_loadAddReducers);

var _registerReducers = require(721                 ); // 721 = ./registerReducers

var _registerReducers2 = babelHelpers.interopRequireDefault(_registerReducers);

var _forgetPasswordReducers = require(722                       ); // 722 = ./forgetPasswordReducers

var _forgetPasswordReducers2 = babelHelpers.interopRequireDefault(_forgetPasswordReducers);

var _bankListReducers = require(723                 ); // 723 = ./bankListReducers

var _bankListReducers2 = babelHelpers.interopRequireDefault(_bankListReducers);

var _capitalRecordReducers = require(724                      ); // 724 = ./capitalRecordReducers

var _capitalRecordReducers2 = babelHelpers.interopRequireDefault(_capitalRecordReducers);

var _capitalListReducers = require(725                    ); // 725 = ./capitalListReducers

var _capitalListReducers2 = babelHelpers.interopRequireDefault(_capitalListReducers);

var _capitalDetailReducers = require(726                      ); // 726 = ./capitalDetailReducers

var _capitalDetailReducers2 = babelHelpers.interopRequireDefault(_capitalDetailReducers);

var _bonusListReducers = require(727                  ); // 727 = ./bonusListReducers

var _bonusListReducers2 = babelHelpers.interopRequireDefault(_bonusListReducers);

var _bankCardDetailReducers = require(728                       ); // 728 = ./bankCardDetailReducers

var _bankCardDetailReducers2 = babelHelpers.interopRequireDefault(_bankCardDetailReducers);

var _messageListReducers = require(729                    ); // 729 = ./messageListReducers

var _messageListReducers2 = babelHelpers.interopRequireDefault(_messageListReducers);

var _financeListReducers = require(730                    ); // 730 = ./financeListReducers

var _financeListReducers2 = babelHelpers.interopRequireDefault(_financeListReducers);

var _financeDetailReducers = require(731                      ); // 731 = ./financeDetailReducers

var _financeDetailReducers2 = babelHelpers.interopRequireDefault(_financeDetailReducers);

var _notifyListReducers = require(732                   ); // 732 = ./notifyListReducers

var _notifyListReducers2 = babelHelpers.interopRequireDefault(_notifyListReducers);

exports.workingTable = _workingTableReducers2.default;
exports.modal = _modalReducers2.default;
exports.user = _userReducers2.default;
exports.loanAdd = _loadAddReducers2.default;
exports.register = _registerReducers2.default;
exports.passwordEdit = _forgetPasswordReducers2.default;
exports.forgetPassword = _forgetPasswordReducers2.default;
exports.bankList = _bankListReducers2.default;
exports.capitalRecord = _capitalRecordReducers2.default;
exports.capitalList = _capitalListReducers2.default;
exports.capitalDetail = _capitalDetailReducers2.default;
exports.bonusList = _bonusListReducers2.default;
exports.bankCardDetail = _bankCardDetailReducers2.default;
exports.messageList = _messageListReducers2.default;
exports.financeList = _financeListReducers2.default;
exports.financeDetail = _financeDetailReducers2.default;
exports.notifyList = _notifyListReducers2.default;
}, 716, null, "YuanXC/src/reducers/index.js");
__d(/* YuanXC/src/reducers/workingTableReducers.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = workingTable;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);


var initialState = {
  loading: false,
  error: false,
  home: {},
  ads: null,
  list: null,
  banner: null,
  notification: null
};

function workingTable() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  switch (action.type) {
    case types.REQUEST_WORKINGTABLE:
      return babelHelpers.extends({}, state, action);
    case types.RECEIVE_WORKINGTABLE_INFO:
      if (action.error) {
        return babelHelpers.extends({}, state, {
          error: action.error,
          msg: action.msg,
          loading: false
        });
      }
      return babelHelpers.extends({}, state, {
        error: false,
        list: action.list,
        loading: false
      });
    case types.RECEIVE_BANNER:
      if (!action.error) {
        return babelHelpers.extends({}, state, {
          banner: action.banner
        });
      }
    case types.RECEIVE_ADS:
      if (!action.error) {
        return babelHelpers.extends({}, state, {
          ads: action.ads
        });
      }
    case types.RECEIVE_NOTIFICATION:
      if (!action.error) {
        return babelHelpers.extends({}, state, {
          notification: action.notification
        });
      }
    default:
      return state;
  }
}
}, 717, null, "YuanXC/src/reducers/workingTableReducers.js");
__d(/* YuanXC/src/reducers/modalReducers.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = modal;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);


var initialState = {
  visible: false,
  children: null,
  swipeClose: false
};

function modal() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  switch (action.type) {
    case types.TOGGLE_MODAL:
      return babelHelpers.extends({}, state, action);
    default:
      return state;
  }
}
}, 718, null, "YuanXC/src/reducers/modalReducers.js");
__d(/* YuanXC/src/reducers/userReducers.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = user;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);


var initialState = {
  logining: false,
  loading: false,
  signing: false,
  userInfo: {},
  check: [{}, {}, {}],
  error: false
};

function user() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  switch (action.type) {
    case types.REQUEST_USER_LOGIN:
      return babelHelpers.extends({}, state, action);
    case types.RECEIVE_USER_INFO:
      if (action.error) {
        return babelHelpers.extends({}, state, {
          loading: false,
          error: action.error,
          msg: action.msg
        });
      }
      return babelHelpers.extends({}, state, {
        loading: false,
        userInfo: action.userInfo,
        check: action.check,
        error: false
      });
    default:
      return state;
  }
}
}, 719, null, "YuanXC/src/reducers/userReducers.js");
__d(/* YuanXC/src/reducers/loadAddReducers.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = register;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);


var initialState = {
  loading: false,
  error: false
};

function register() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  switch (action.type) {
    case types.REQUEST_LOAN:
      return babelHelpers.extends({}, state, action);
    case types.RECEIVE_LOAN_ADD:
      if (action.error) {
        return babelHelpers.extends({}, state, {
          loading: false,
          error: action.error,
          msg: action.msg
        });
      }
      return babelHelpers.extends({}, state, {
        loading: false,
        error: false
      });
    default:
      return state;
  }
}
}, 720, null, "YuanXC/src/reducers/loadAddReducers.js");
__d(/* YuanXC/src/reducers/registerReducers.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = register;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);


var initialState = {
  loading: false,
  error: false
};

function register() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  switch (action.type) {
    case types.REQUEST_USER_REGISTER:
      return babelHelpers.extends({}, state, action);
    case types.RECEIVE_USER_REGISTER:
      if (action.error) {
        return babelHelpers.extends({}, state, {
          loading: false,
          error: action.error,
          msg: action.msg
        });
      }
      return babelHelpers.extends({}, state, {
        loading: false,
        error: false
      });
    default:
      return state;
  }
}
}, 721, null, "YuanXC/src/reducers/registerReducers.js");
__d(/* YuanXC/src/reducers/forgetPasswordReducers.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = passwordEdit;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);


var initialState = {
  registing: false,
  sending: false,
  error: false
};

function passwordEdit() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  switch (action.type) {
    case types.REQUEST_FORGET:
      return babelHelpers.extends({}, state, action);
    case types.RECEIVE_FORGET_PASSWORD:
      if (action.error) {
        return babelHelpers.extends({}, state, {
          registing: false,
          error: action.error,
          msg: action.msg
        });
      }
      return babelHelpers.extends({}, state, {
        registing: false,
        error: false
      });
    case types.RECEIVE_SEND_CODE:
      if (action.error) {
        return babelHelpers.extends({}, state, {
          sending: false,
          error: action.error,
          msg: action.msg
        });
      }
      return babelHelpers.extends({}, state, {
        sending: false,
        error: false
      });
    default:
      return state;
  }
}
}, 722, null, "YuanXC/src/reducers/forgetPasswordReducers.js");
__d(/* YuanXC/src/reducers/bankListReducers.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = bankList;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);


var initialState = {
  loading: false,
  list: null,
  error: false
};

function bankList() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  switch (action.type) {
    case types.REQUEST_BANK_LIST:
      return babelHelpers.extends({}, state, action);
    case types.RECEIVE_BANK_LIST:
      if (action.error) {
        return babelHelpers.extends({}, state, {
          loading: false,
          error: action.error,
          msg: action.msg
        });
      }
      return babelHelpers.extends({}, state, {
        loading: false,
        list: action.list,
        error: false
      });
    default:
      return state;
  }
}
}, 723, null, "YuanXC/src/reducers/bankListReducers.js");
__d(/* YuanXC/src/reducers/capitalRecordReducers.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = capitalRecord;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);

var _moment = require(626     ); // 626 = moment

var _moment2 = babelHelpers.interopRequireDefault(_moment);

var initialState = {
  isRefreshing: false,
  isLoadMore: false,
  loading: false,
  noMore: false,
  error: false,
  ctype: "1",
  "1": {
    isRefreshing: false,
    isLoadMore: false,
    loading: false,
    noMore: false,
    loaded: false,
    list: {},
    monthList: []
  },
  "21": {
    isRefreshing: false,
    isLoadMore: false,
    loading: false,
    noMore: false,
    loaded: false,
    list: {},
    monthList: []
  },
  "3": {
    isRefreshing: false,
    isLoadMore: false,
    loading: false,
    noMore: false,
    loaded: false,
    list: {},
    monthList: []
  },
  "7": {
    isRefreshing: false,
    isLoadMore: false,
    loading: false,
    noMore: false,
    loaded: false,
    list: {},
    monthList: []
  },
  "41": {
    isRefreshing: false,
    isLoadMore: false,
    loading: false,
    noMore: false,
    loaded: false,
    list: {},
    monthList: []
  }
};

function capitalRecord() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  switch (action.type) {
    case types.REQUEST_CAPITAL_RECORD:
      var _state_ = { ctype: action.ctype };
      _state_[action.ctype] = babelHelpers.extends({}, state[action.ctype], action);
      return babelHelpers.extends({}, state, _state_);
    case types.RECEIVE_CAPITAL_RECORD:
      console.log(action);
      var _state = {};
      if (action.error) {
        _state[state.ctype] = {
          isRefreshing: false,
          isLoadMore: false,
          error: action.error,
          loading: false
        };
        return babelHelpers.extends({}, state, _state);
      }
      var data = state[state.ctype].isLoadMore ? loadMore(state, action) : combine(state, action);
      _state[state.ctype] = babelHelpers.extends({
        isRefreshing: false,
        isLoadMore: false,
        loaded: true,
        error: false,
        noMore: action.list.length < 10,
        loading: false
      }, data);
      return babelHelpers.extends({}, state, _state);
    default:
      return state;
  }
}

function combine(state, action) {
  state[state.ctype].list = {};
  state[state.ctype].monthList = [];
  action.list && action.list.map(function (item) {
    var month = (0, _moment2.default)(item.createdAt, "YYYY-MM-DD").format("YYYY年M月");
    if (state[state.ctype].monthList.indexOf(month) < 0) {
      state[state.ctype].monthList.push(month);
      state[state.ctype].list[month] = [item];
    } else {
      state[state.ctype].list[month].push(item);
    }
  });
  return { list: state[state.ctype].list, monthList: state[state.ctype].monthList };
}

function loadMore(state, action) {
  action.list && action.list.map(function (item) {
    var month = (0, _moment2.default)(item.createdAt, "YYYY-MM-DD").format("YYYY年M月");
    if (state[state.ctype].monthList.indexOf(month) < 0) {
      state[state.ctype].monthList.push(month);
      state[state.ctype].list[month] = [item];
    } else {
      state[state.ctype].list[month].push(item);
    }
  });
  return { list: state[state.ctype].list, monthList: state[state.ctype].monthList };
}
}, 724, null, "YuanXC/src/reducers/capitalRecordReducers.js");
__d(/* YuanXC/src/reducers/capitalListReducers.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = capitalList;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);


var initialState = {
  isRefreshing: false,
  isLoadMore: false,
  loading: false,
  noMore: false,
  error: false,
  list: []
};

function capitalList() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  switch (action.type) {
    case types.REQUEST_CAPITAL_LIST:
      return babelHelpers.extends({}, state, action);
    case types.RECEIVE_CAPITAL_LIST:
      if (action.error) {
        return babelHelpers.extends({}, state, {
          isRefreshing: false,
          isLoadMore: false,
          error: action.error,
          loading: false
        });
      }
      return babelHelpers.extends({}, state, {
        isRefreshing: false,
        isLoadMore: false,
        error: false,
        noMore: action.list.length < 10,
        list: state.isLoadMore ? loadMore(state, action) : combine(state, action),
        loading: false
      });
    default:
      return state;
  }
}

function combine(state, action) {
  state.list = action.list;
  return state.list;
}

function loadMore(state, action) {
  state.list = state.list.concat(action.list);
  return state.list;
}
}, 725, null, "YuanXC/src/reducers/capitalListReducers.js");
__d(/* YuanXC/src/reducers/capitalDetailReducers.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = capitalDetail;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);


var initialState = {
  loading: false,
  error: false,
  detail: {}
};

function capitalDetail() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  switch (action.type) {
    case types.REQUEST_CAPITAL_DETAIL:
      return babelHelpers.extends({}, state, action);
    case types.RECEIVE_CAPITAL_DETAIL:
      if (action.error) {
        return babelHelpers.extends({}, state, {
          loading: false,
          error: action.error,
          msg: action.msg
        });
      }
      return babelHelpers.extends({}, state, {
        loading: false,
        error: false,
        detail: action.detail
      });
    case types.CLEAR_CAPITAL_CACHE:
      return babelHelpers.extends({}, state, { detail: {} });
    default:
      return state;
  }
}
}, 726, null, "YuanXC/src/reducers/capitalDetailReducers.js");
__d(/* YuanXC/src/reducers/bonusListReducers.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = bonusList;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);


var initialState = {
  ctype: '1',
  "1": {
    isRefreshing: false,
    isLoadMore: false,
    loading: false,
    noMore: false,
    list: []
  },
  "4": {
    isRefreshing: false,
    isLoadMore: false,
    loading: false,
    noMore: false,
    list: []
  }
};

function bonusList() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  switch (action.type) {
    case types.REQUEST_BONUS_LIST:
      var _state_ = { ctype: action.ctype };
      _state_[action.ctype] = babelHelpers.extends({}, state[action.ctype], action);
      return babelHelpers.extends({}, state, _state_);
    case types.RECEIVE_BONUS_LIST:
      var _state = {};
      if (action.error) {
        _state[state.ctype] = {
          isRefreshing: false,
          isLoadMore: false,
          error: action.error,
          loading: false
        };
        return babelHelpers.extends({}, state, _state);
      }
      _state[state.ctype] = {
        isRefreshing: false,
        isLoadMore: false,
        error: false,
        noMore: action.list.length < 10,
        list: state[state.ctype].isLoadMore ? loadMore(state, action) : combine(state, action),
        loading: false
      };
      return babelHelpers.extends({}, state, _state);
    default:
      return state;
  }
}

function combine(state, action) {
  state[state.ctype].list = action.list;
  return state[state.ctype].list;
}

function loadMore(state, action) {
  state[state.ctype].list = state[state.ctype].list.concat(action.list);
  return state[state.ctype].list;
}
}, 727, null, "YuanXC/src/reducers/bonusListReducers.js");
__d(/* YuanXC/src/reducers/bankCardDetailReducers.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = bankCardDetail;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);


var initialState = {
  loading: false,
  error: false,
  detail: null
};

function bankCardDetail() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  switch (action.type) {
    case types.REQUEST_BANKCARD_DETAIL:
      return babelHelpers.extends({}, state, action);
    case types.RECEIVE_BANKCARD_DETAIL:
      if (action.error) {
        return babelHelpers.extends({}, state, {
          loading: false,
          error: action.error,
          msg: action.msg
        });
      }
      return babelHelpers.extends({}, state, {
        loading: false,
        error: false,
        detail: action.detail
      });
    case types.CLEAR_BANKCARD_CACHE:
      return babelHelpers.extends({}, state, { detail: null });
    default:
      return state;
  }
}
}, 728, null, "YuanXC/src/reducers/bankCardDetailReducers.js");
__d(/* YuanXC/src/reducers/messageListReducers.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = messageList;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);


var initialState = {
  isRefreshing: false,
  isLoadMore: false,
  loading: false,
  noMore: false,
  error: false,
  list: []
};

function messageList() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  switch (action.type) {
    case types.REQUEST_MESSAGE_LIST:
      return babelHelpers.extends({}, state, action);
    case types.RECEIVE_MESSAGE_LIST:
      if (action.error) {
        return babelHelpers.extends({}, state, {
          isRefreshing: false,
          isLoadMore: false,
          error: action.error,
          loading: false
        });
      }
      return babelHelpers.extends({}, state, {
        isRefreshing: false,
        isLoadMore: false,
        error: false,
        noMore: action.list.length < 10,
        list: state.isLoadMore ? loadMore(state, action) : combine(state, action),
        loading: false
      });
    default:
      return state;
  }
}

function combine(state, action) {
  state.list = action.list;
  return state.list;
}

function loadMore(state, action) {
  state.list = state.list.concat(action.list);
  return state.list;
}
}, 729, null, "YuanXC/src/reducers/messageListReducers.js");
__d(/* YuanXC/src/reducers/financeListReducers.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = financeList;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);


var initialState = {
  isRefreshing: false,
  isLoadMore: false,
  loading: false,
  noMore: false,
  error: false,
  initLen: 0,
  list: []
};

function financeList() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  switch (action.type) {
    case types.REQUEST_FINANCE_LIST:
      return babelHelpers.extends({}, state, action);
    case types.RECEIVE_FINANCE_LIST:
      if (action.error) {
        return babelHelpers.extends({}, state, {
          isRefreshing: false,
          isLoadMore: false,
          error: action.error,
          loading: false
        });
      }
      return babelHelpers.extends({}, state, {
        isRefreshing: false,
        isLoadMore: false,
        error: false,
        initLen: !state.isLoadMore ? action.list.length : state.initLen,
        noMore: state.isLoadMore && action.list.length < 10,
        list: state.isLoadMore ? loadMore(state, action) : combine(state, action),
        loading: false
      });
    case types.REFRESH_FINANCE_LIST:
      var _list = state.list;
      _list.splice(0, state.initLen);
      var list = action.list;
      list = list.concat(_list);
      return babelHelpers.extends({}, state, {
        initLen: action.list.length,
        list: list
      });
    default:
      return state;
  }
}

function combine(state, action) {
  state.list = action.list;
  return state.list;
}

function loadMore(state, action) {
  state.list = state.list.concat(action.list);
  return state.list;
}
}, 730, null, "YuanXC/src/reducers/financeListReducers.js");
__d(/* YuanXC/src/reducers/financeDetailReducers.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = financeDetail;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);


var initialState = {
  loading: false,
  isRefreshing: false,
  error: false,
  detail: null
};

function financeDetail() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  switch (action.type) {
    case types.REQUEST_FINANCE_DETAIL:
      return babelHelpers.extends({}, state, action);
    case types.RECEIVE_FINANCE_DETAIL:
      if (action.error) {
        return babelHelpers.extends({}, state, {
          loading: false,
          isRefreshing: false,
          error: action.error,
          msg: action.msg
        });
      }
      return babelHelpers.extends({}, state, {
        loading: false,
        isRefreshing: false,
        error: false,
        detail: action.detail
      });
    case types.CLEAR_FINANCE_CACHE:
      return babelHelpers.extends({}, state, { detail: null });
    default:
      return state;
  }
}
}, 731, null, "YuanXC/src/reducers/financeDetailReducers.js");
__d(/* YuanXC/src/reducers/notifyListReducers.js */function(global, require, module, exports) {Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = notifyList;

var _actionTypes = require(624                     ); // 624 = ../actions/actionTypes

var types = babelHelpers.interopRequireWildcard(_actionTypes);


var initialState = {
  isRefreshing: false,
  isLoadMore: false,
  loading: false,
  noMore: false,
  error: false,
  list: []
};

function notifyList() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  switch (action.type) {
    case types.REQUEST_NOTIFY_LIST:
      return babelHelpers.extends({}, state, action);
    case types.RECEIVE_NOTIFY_LIST:
      if (action.error) {
        return babelHelpers.extends({}, state, {
          isRefreshing: false,
          isLoadMore: false,
          error: action.error,
          loading: false
        });
      }
      return babelHelpers.extends({}, state, {
        isRefreshing: false,
        isLoadMore: false,
        error: false,
        noMore: action.list.length < 10,
        list: state.isLoadMore ? loadMore(state, action) : combine(state, action),
        loading: false
      });
    default:
      return state;
  }
}

function combine(state, action) {
  state.list = action.list;
  return state.list;
}

function loadMore(state, action) {
  state.list = state.list.concat(action.list);
  return state.list;
}
}, 732, null, "YuanXC/src/reducers/notifyListReducers.js");
;require(50);
;require(0);